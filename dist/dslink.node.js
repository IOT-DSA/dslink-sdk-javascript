global.location = { href: "file://" + process.cwd() + "/" };
global.scheduleImmediate = setImmediate;
global.self = global;
global.require = require;
global.process = process;

global.dartMainRunner = function(main, args) {
  main(args.slice(Math.min(args.length, 2)));
};

// Support for deferred loading.
global.dartDeferredLibraryLoader = function(uri, successCallback, errorCallback) {
  try {
    load(uri);
    successCallback();
  } catch (error) {
    errorCallback(error);
  }
};
    
// Generated by dart2js, the Dart to JavaScript compiler version: 1.11.0-dev.5.5.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback):
//    if this function is defined, it will be called when a deferered library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error.
(function() {
  // /* ::norenaming:: */
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    return object.__proto__ && object.__proto__.p === cls.prototype.p;
  }();
  function map(x) {
    x = Object.create(null);
    x.x = 0;
    delete x.x;
    return x;
  }
  // The global objects start as so-called "slow objects". For V8, this
  // means that it won't try to make map transitions as we add properties
  // to these objects. Later on, we attempt to turn these objects into
  // fast objects by calling "convertToFastObject" (see
  // [emitConvertToFastObjectFunction]).
  var A = map();
  var B = map();
  var C = map();
  var D = map();
  var E = map();
  var F = map();
  var G = map();
  var H = map();
  var J = map();
  var K = map();
  var L = map();
  var M = map();
  var N = map();
  var O = map();
  var P = map();
  var Q = map();
  var R = map();
  var S = map();
  var T = map();
  var U = map();
  var V = map();
  var W = map();
  var X = map();
  var Y = map();
  var Z = map();
  function Isolate() {
  }
  init();
  init.mangledNames = {get$_authError: "_authError", get$_basePath: "_basePath", get$_beforeSendListener: "_beforeSendListener", get$_cachedColumns: "_cachedColumns", get$_cachedLevel: "_cachedLevel", get$_changedPaths: "_changedPaths", get$_client$_conn: "_client$_conn", get$_client$_onDisconnectedCompleter: "_client$_onDisconnectedCompleter", get$_client$_ready: "_client$_ready", get$_client$_requesterChannel: "_client$_requesterChannel", get$_client$_responderChannel: "_client$_responderChannel", get$_closed: "_closed", get$_columns: "_columns", get$_common$_dataReceiveCount: "_common$_dataReceiveCount", get$_configured: "_configured", get$_conn: "_conn", get$_connDelay: "_connDelay", get$_connListener: "_connListener", get$_connectOnReady: "_connectOnReady", get$_connected: "_connected", get$_connectedCompleter: "_connectedCompleter", get$_connectedOnce: "_connectedOnce", get$_dataSent: "_dataSent", get$_disconnectSent: "_disconnectSent", get$_discoverBroker: "_discoverBroker", get$_done: "_done", get$_err: "_err", get$_httpConnection: "_httpConnection", get$_httpUpdateUri: "_httpUpdateUri", get$_initialized: "_initialized", get$_isReady: "_isReady", get$_json: "_json", get$_lastRequestS: "_lastRequestS", get$_lastUpdate: "_lastUpdate", get$_lastValueUpdate: "_lastValueUpdate", get$_listChangeController: "_listChangeController", get$_listController: "_listController", get$_listReqListener: "_listReqListener", get$_listener: "_listener", get$_loaded: "_loaded", get$_needRetryL: "_needRetryL", get$_needRetryS: "_needRetryS", get$_nodeChangeListener: "_nodeChangeListener", get$_nodes: "_nodes", get$_nodesFile: "_nodesFile", get$_nonce: "_nonce", get$_onConnectedCompleter: "_onConnectedCompleter", get$_onDisconnectedCompleter: "_onDisconnectedCompleter", get$_onRequestReadyCompleter: "_onRequestReadyCompleter", get$_onRequesterReadyCompleter: "_onRequesterReadyCompleter", get$_pendingCheck: "_pendingCheck", get$_pendingInitializeLength: "_pendingInitializeLength", get$_pendingRemoveDef: "_pendingRemoveDef", get$_pendingSend: "_pendingSend", get$_pendingSendS: "_pendingSendS", get$_permission: "_permission", get$_permitted: "_permitted", get$_processors: "_processors", get$_profileFactories: "_profileFactories", get$_profileLoader: "_profileLoader", get$_ready: "_ready", get$_reconnecting: "_reconnecting", get$_request: "_request", get$_requester$_controller: "_requester$_controller", get$_requester$_isClosed: "_requester$_isClosed", get$_requester$_stream: "_requester$_stream", get$_requesterChannel: "_requesterChannel", get$_requests: "_requests", get$_responder$_subscription: "_responder$_subscription", get$_responderChannel: "_responderChannel", get$_responses: "_responses", get$_rows: "_rows", get$_sending: "_sending", get$_sendingS: "_sendingS", get$_sendingStreamStatus: "_sendingStreamStatus", get$_sentStreamStatus: "_sentStreamStatus", get$_serverCommand: "_serverCommand", get$_subsciption: "_subsciption", get$_subscribeController: "_subscribeController", get$_toSendList: "_toSendList", get$_updates: "_updates", get$_wsConnection: "_wsConnection", get$_wsDelay: "_wsDelay", get$_wsUpdateUri: "_wsUpdateUri", get$adapter: "adapter", get$args: "args", get$attributes: "attributes", get$brokerUrl: "brokerUrl", get$callback: "callback", get$callbacks: "callbacks", get$changed: "changed", get$changes: "changes", get$children: "children", get$clientLink: "clientLink", get$columns: "columns", get$command: "command", get$completer: "completer", get$configs: "configs", get$conn: "conn", get$connected: "connected", get$count: "count", get$data: "data", get$defaultLogLevel: "defaultLogLevel", get$defaultNodes: "defaultNodes", get$defaultPermission: "defaultPermission", get$defaultValue: "defaultValue", get$description: "description", get$detail: "detail", get$disconnectTs: "disconnectTs", get$dsId: "dsId", get$dslinkJson: "dslinkJson", get$duration: "duration", get$ecPrivateKey: "ecPrivateKey", get$ecPublicKey: "ecPublicKey", get$enableHttp: "enableHttp", get$encodePrettyJson: "encodePrettyJson", get$engines: "engines", get$error: "error", get$exitOnFailure: "exitOnFailure", get$future: "future", get$getData: "getData", get$getDependencies: "getDependencies", get$groupMatchs: "groupMatchs", get$groups: "groups", get$idMatchs: "idMatchs", get$initialResponse: "initialResponse", get$isRequester: "isRequester", get$isResponder: "isResponder", get$lastSentId: "lastSentId", get$lastValues: "lastValues", get$link: "link", get$listed: "listed", get$listener: "listener", get$loadNodesJson: "loadNodesJson", get$main: "main", get$max: "max", get$maxCache: "maxCache", get$min: "min", get$msg: "msg", get$name: "name", get$nextRid: "nextRid", get$nextSid: "nextSid", get$node: "node", get$nodeCache: "nodeCache", get$nodeProvider: "nodeProvider", get$nodes: "nodes", get$onClose: "onClose", get$onConnectController: "onConnectController", get$onDisconnectController: "onDisconnectController", get$onReceiveController: "onReceiveController", get$onRequestReadyCompleter: "onRequestReadyCompleter", get$parentNode: "parentNode", get$parentPath: "parentPath", get$path: "path", get$permissions: "permissions", get$phase: "phase", get$pingCount: "pingCount", get$pingTimer: "pingTimer", get$prefix: "prefix", get$privateKey: "privateKey", get$profile: "profile", get$profiles: "profiles", get$provider: "provider", get$publicKey: "publicKey", get$rawColumns: "rawColumns", get$ready: "ready", get$remotePath: "remotePath", get$removed: "removed", get$reqId: "reqId", get$request: "request", get$requester: "requester", get$responder: "responder", get$response: "response", get$retryDelay: "retryDelay", get$rid: "rid", get$rows: "rows", get$saltL: "saltL", get$saltS: "saltS", get$salts: "salts", get$sid: "sid", get$status: "status", get$streamStatus: "streamStatus", get$strictOptions: "strictOptions", get$subsriptionids: "subsriptionids", get$subsriptions: "subsriptions", get$sum: "sum", get$toRemove: "toRemove", get$ts: "ts", get$type: "type", get$updater: "updater", get$updates: "updates", get$url: "url", get$valid: "valid", get$value: "value", get$version: "version"};
  init.mangledGlobalNames = {Configs__globalConfigs: "_globalConfigs", Configs_defaultConfig: "defaultConfig", Configs_global: "global", DSError_DISCONNECTED: "DISCONNECTED", DSError_INVALID_METHOD: "INVALID_METHOD", DSError_INVALID_PATH: "INVALID_PATH", DSError_INVALID_PATHS: "INVALID_PATHS", DSError_INVALID_VALUE: "INVALID_VALUE", DSError_PERMISSION_DENIED: "PERMISSION_DENIED", DefaultDefNodes__defaultDefs: "_defaultDefs", DefaultDefNodes_nameMap: "nameMap", DefaultDefNodes_pathMap: "pathMap", ErrorPhase_request: "request", ErrorPhase_response: "response", Future__nullFuture: "_nullFuture", HttpClientConnection__fixedLongPollData: "_fixedLongPollData", HttpClientLink_saltNameMap: "saltNameMap", Interval_EIGHT_MILLISECONDS: "EIGHT_MILLISECONDS", Interval_FIFTY_MILLISECONDS: "FIFTY_MILLISECONDS", Interval_FIVE_SECONDS: "FIVE_SECONDS", Interval_FOUR_MILLISECONDS: "FOUR_MILLISECONDS", Interval_FOUR_SECONDS: "FOUR_SECONDS", Interval_HALF_SECOND: "HALF_SECOND", Interval_ONE_HUNDRED_MILLISECONDS: "ONE_HUNDRED_MILLISECONDS", Interval_ONE_MILLISECOND: "ONE_MILLISECOND", Interval_ONE_MINUTE: "ONE_MINUTE", Interval_ONE_SECOND: "ONE_SECOND", Interval_QUARTER_SECOND: "QUARTER_SECOND", Interval_SIXTEEN_MILLISECONDS: "SIXTEEN_MILLISECONDS", Interval_THIRTY_MILLISECONDS: "THIRTY_MILLISECONDS", Interval_THREE_HUNDRED_MILLISECONDS: "THREE_HUNDRED_MILLISECONDS", Interval_THREE_SECONDS: "THREE_SECONDS", Interval_TWO_HUNDRED_MILLISECONDS: "TWO_HUNDRED_MILLISECONDS", Interval_TWO_MILLISECONDS: "TWO_MILLISECONDS", Interval_TWO_SECONDS: "TWO_SECONDS", ListController__ignoreProfileProps: "_ignoreProfileProps", Path_invalidChar: "invalidChar", Permission_CONFIG: "CONFIG", Permission_NEVER: "NEVER", Permission_NONE: "NONE", Permission_READ: "READ", Permission_WRITE: "WRITE", Permission_nameParser: "nameParser", Permission_names: "names", StreamStatus_closed: "closed", StreamStatus_initialize: "initialize", StreamStatus_open: "open", ValueUpdate_TIME_ZONE: "TIME_ZONE", fixedBlankData: "fixedBlankData", unspecified: "unspecified"};
  // Constructors are generated at runtime.
  function setupProgram(programData, typesOffset) {
    "use strict";
    function generateAccessor(fieldDescriptor, accessors, cls) {
      var fieldInformation = fieldDescriptor.split("-");
      var field = fieldInformation[0];
      var len = field.length;
      var code = field.charCodeAt(len - 1);
      var reflectable;
      if (fieldInformation.length > 1)
        reflectable = true;
      else
        reflectable = false;
      code = code >= 60 && code <= 64 ? code - 59 : code >= 123 && code <= 126 ? code - 117 : code >= 37 && code <= 43 ? code - 27 : 0;
      if (code) {
        var getterCode = code & 3;
        var setterCode = code >> 2;
        var accessorName = field = field.substring(0, len - 1);
        var divider = field.indexOf(":");
        if (divider > 0) {
          accessorName = field.substring(0, divider);
          field = field.substring(divider + 1);
        }
        if (getterCode) {
          var args = getterCode & 2 ? "receiver" : "";
          var receiver = getterCode & 1 ? "this" : "receiver";
          var body = "return " + receiver + "." + field;
          var property = cls + ".prototype.get$" + accessorName + "=";
          var fn = "function(" + args + "){" + body + "}";
          if (reflectable)
            accessors.push(property + "$reflectable(" + fn + ");\n");
          else
            accessors.push(property + fn + ";\n");
        }
        if (setterCode) {
          var args = setterCode & 2 ? "receiver, value" : "value";
          var receiver = setterCode & 1 ? "this" : "receiver";
          var body = receiver + "." + field + " = value";
          var property = cls + ".prototype.set$" + accessorName + "=";
          var fn = "function(" + args + "){" + body + "}";
          if (reflectable)
            accessors.push(property + "$reflectable(" + fn + ");\n");
          else
            accessors.push(property + fn + ";\n");
        }
      }
      return field;
    }
    function defineClass(name, fields) {
      var accessors = [];
      var str = "function " + name + "(";
      var body = "";
      var fieldNames = "";
      for (var i = 0; i < fields.length; i++) {
        if (i != 0)
          str += ", ";
        var field = generateAccessor(fields[i], accessors, name);
        fieldNames += "'" + field + "',";
        var parameter = "p_" + field;
        str += parameter;
        body += "this." + field + " = " + parameter + ";\n";
      }
      if (supportsDirectProtoAccess)
        body += "this." + "$deferredAction" + "();";
      str += ") {\n" + body + "}\n";
      str += name + ".builtin$cls=\"" + name + "\";\n";
      str += "$desc=$collectedClasses." + name + "[1];\n";
      str += name + ".prototype = $desc;\n";
      if (typeof defineClass.name != "string")
        str += name + ".name=\"" + name + "\";\n";
      str += name + "." + "$__fields__" + "=[" + fieldNames + "];\n";
      str += accessors.join("");
      return str;
    }
    init.createNewIsolate = function() {
      return new Isolate();
    };
    init.classIdExtractor = function(o) {
      return o.constructor.name;
    };
    init.classFieldsExtractor = function(o) {
      var fieldNames = o.constructor.$__fields__;
      if (!fieldNames)
        return [];
      var result = [];
      result.length = fieldNames.length;
      for (var i = 0; i < fieldNames.length; i++)
        result[i] = o[fieldNames[i]];
      return result;
    };
    init.instanceFromClassId = function(name) {
      return new init.allClasses[name]();
    };
    init.initializeEmptyInstance = function(name, o, fields) {
      init.allClasses[name].apply(o, fields);
      return o;
    };
    var inheritFrom = supportsDirectProtoAccess ? function(constructor, superConstructor) {
      var prototype = constructor.prototype;
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
      prototype["$is" + constructor.name] = constructor;
      return convertToFastObject(prototype);
    } : function() {
      function tmp() {
      }
      return function(constructor, superConstructor) {
        tmp.prototype = superConstructor.prototype;
        var object = new tmp();
        convertToSlowObject(object);
        var properties = constructor.prototype;
        var members = Object.keys(properties);
        for (var i = 0; i < members.length; i++) {
          var member = members[i];
          object[member] = properties[member];
        }
        object["$is" + constructor.name] = constructor;
        object.constructor = constructor;
        constructor.prototype = object;
        return object;
      };
    }();
    function finishClasses(processedClasses) {
      var allClasses = init.allClasses;
      processedClasses.combinedConstructorFunction += "return [\n" + processedClasses.constructorsList.join(",\n  ") + "\n]";
      var constructors = new Function("$collectedClasses", processedClasses.combinedConstructorFunction)(processedClasses.collected);
      processedClasses.combinedConstructorFunction = null;
      for (var i = 0; i < constructors.length; i++) {
        var constructor = constructors[i];
        var cls = constructor.name;
        var desc = processedClasses.collected[cls];
        var globalObject = desc[0];
        desc = desc[1];
        constructor["@"] = desc;
        allClasses[cls] = constructor;
        globalObject[cls] = constructor;
      }
      constructors = null;
      var finishedClasses = init.finishedClasses;
      function finishClass(cls) {
        if (finishedClasses[cls])
          return;
        finishedClasses[cls] = true;
        var superclass = processedClasses.pending[cls];
        if (superclass && superclass.indexOf("+") > 0) {
          var s = superclass.split("+");
          superclass = s[0];
          var mixinClass = s[1];
          finishClass(mixinClass);
          var mixin = allClasses[mixinClass];
          var mixinPrototype = mixin.prototype;
          var clsPrototype = allClasses[cls].prototype;
          var properties = Object.keys(mixinPrototype);
          for (var i = 0; i < properties.length; i++) {
            var d = properties[i];
            if (!hasOwnProperty.call(clsPrototype, d))
              clsPrototype[d] = mixinPrototype[d];
          }
        }
        if (!superclass || typeof superclass != "string") {
          var constructor = allClasses[cls];
          var prototype = constructor.prototype;
          prototype.constructor = constructor;
          prototype.$isObject = constructor;
          prototype.$deferredAction = function() {
          };
          return;
        }
        finishClass(superclass);
        var superConstructor = allClasses[superclass];
        if (!superConstructor)
          superConstructor = existingIsolateProperties[superclass];
        var constructor = allClasses[cls];
        var prototype = inheritFrom(constructor, superConstructor);
        if (mixinPrototype)
          prototype.$deferredAction = mixinDeferredActionHelper(mixinPrototype, prototype);
        if (Object.prototype.hasOwnProperty.call(prototype, "%")) {
          var nativeSpec = prototype["%"].split(";");
          if (nativeSpec[0]) {
            var tags = nativeSpec[0].split("|");
            for (var i = 0; i < tags.length; i++) {
              init.interceptorsByTag[tags[i]] = constructor;
              init.leafTags[tags[i]] = true;
            }
          }
          if (nativeSpec[1]) {
            tags = nativeSpec[1].split("|");
            if (nativeSpec[2]) {
              var subclasses = nativeSpec[2].split("|");
              for (var i = 0; i < subclasses.length; i++) {
                var subclass = allClasses[subclasses[i]];
                subclass.$nativeSuperclassTag = tags[0];
              }
            }
            for (i = 0; i < tags.length; i++) {
              init.interceptorsByTag[tags[i]] = constructor;
              init.leafTags[tags[i]] = false;
            }
          }
          prototype.$deferredAction();
        }
        if (prototype.$isInterceptor)
          prototype.$deferredAction();
      }
      var properties = Object.keys(processedClasses.pending);
      for (var i = 0; i < properties.length; i++)
        finishClass(properties[i]);
    }
    function finishAddStubsHelper() {
      var prototype = this;
      while (!prototype.hasOwnProperty("$deferredAction"))
        prototype = prototype.__proto__;
      delete prototype.$deferredAction;
      var properties = Object.keys(prototype);
      for (var index = 0; index < properties.length; index++) {
        var property = properties[index];
        var firstChar = property.charCodeAt(0);
        var elem;
        if (property !== "^" && property !== "$reflectable" && firstChar !== 43 && firstChar !== 42 && (elem = prototype[property]) != null && elem.constructor === Array && property !== "<>")
          addStubs(prototype, elem, property, false, []);
      }
      convertToFastObject(prototype);
      prototype = prototype.__proto__;
      prototype.$deferredAction();
    }
    function mixinDeferredActionHelper(mixinPrototype, targetPrototype) {
      var chain;
      if (targetPrototype.hasOwnProperty("$deferredAction"))
        chain = targetPrototype.$deferredAction;
      return function foo() {
        var prototype = this;
        while (!prototype.hasOwnProperty("$deferredAction"))
          prototype = prototype.__proto__;
        if (chain)
          prototype.$deferredAction = chain;
        else {
          delete prototype.$deferredAction;
          convertToFastObject(prototype);
        }
        mixinPrototype.$deferredAction();
        prototype.$deferredAction();
      };
    }
    function processClassData(cls, descriptor, processedClasses) {
      descriptor = convertToSlowObject(descriptor);
      var previousProperty;
      var properties = Object.keys(descriptor);
      var hasDeferredWork = false;
      var shouldDeferWork = supportsDirectProtoAccess && cls != "Object";
      for (var i = 0; i < properties.length; i++) {
        var property = properties[i];
        var firstChar = property.charCodeAt(0);
        if (property === "static") {
          processStatics(init.statics[cls] = descriptor.static, processedClasses);
          delete descriptor.static;
        } else if (firstChar === 43) {
          mangledNames[previousProperty] = property.substring(1);
          var flag = descriptor[property];
          if (flag > 0)
            descriptor[previousProperty].$reflectable = flag;
        } else if (firstChar === 42) {
          descriptor[previousProperty].$defaultValues = descriptor[property];
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods)
            descriptor.$methodsWithOptionalArguments = optionalMethods = {};
          optionalMethods[property] = previousProperty;
        } else {
          var elem = descriptor[property];
          if (property !== "^" && elem != null && elem.constructor === Array && property !== "<>")
            if (shouldDeferWork)
              hasDeferredWork = true;
            else
              addStubs(descriptor, elem, property, false, []);
          else
            previousProperty = property;
        }
      }
      if (hasDeferredWork)
        descriptor.$deferredAction = finishAddStubsHelper;
      var classData = descriptor["^"], split, supr, fields = classData;
      if (typeof classData == "object" && classData instanceof Array)
        classData = fields = classData[0];
      var s = fields.split(";");
      fields = s[1] == "" ? [] : s[1].split(",");
      supr = s[0];
      split = supr.split(":");
      if (split.length == 2) {
        supr = split[0];
        var functionSignature = split[1];
        if (functionSignature)
          descriptor.$signature = function(s) {
            return function() {
              return init.types[s];
            };
          }(functionSignature);
      }
      if (supr)
        processedClasses.pending[cls] = supr;
      processedClasses.combinedConstructorFunction += defineClass(cls, fields);
      processedClasses.constructorsList.push(cls);
      processedClasses.collected[cls] = [globalObject, descriptor];
      classes.push(cls);
    }
    function processStatics(descriptor, processedClasses) {
      var properties = Object.keys(descriptor);
      for (var i = 0; i < properties.length; i++) {
        var property = properties[i];
        if (property === "^")
          continue;
        var element = descriptor[property];
        var firstChar = property.charCodeAt(0);
        var previousProperty;
        if (firstChar === 43) {
          mangledGlobalNames[previousProperty] = property.substring(1);
          var flag = descriptor[property];
          if (flag > 0)
            descriptor[previousProperty].$reflectable = flag;
          if (element && element.length)
            init.typeInformation[previousProperty] = element;
        } else if (firstChar === 42) {
          globalObject[previousProperty].$defaultValues = element;
          var optionalMethods = descriptor.$methodsWithOptionalArguments;
          if (!optionalMethods)
            descriptor.$methodsWithOptionalArguments = optionalMethods = {};
          optionalMethods[property] = previousProperty;
        } else if (typeof element === "function") {
          globalObject[previousProperty = property] = element;
          functions.push(property);
          init.globalFunctions[property] = element;
        } else if (element.constructor === Array)
          addStubs(globalObject, element, property, true, functions);
        else {
          previousProperty = property;
          processClassData(property, element, processedClasses);
        }
      }
    }
    function addStubs(prototype, array, name, isStatic, functions) {
      var index = 0, alias = array[index], f;
      if (typeof alias == "string")
        f = array[++index];
      else {
        f = alias;
        alias = name;
      }
      var funcs = [prototype[name] = prototype[alias] = f];
      f.$stubName = name;
      functions.push(name);
      for (index++; index < array.length; index++) {
        f = array[index];
        if (typeof f != "function")
          break;
        if (!isStatic)
          f.$stubName = array[++index];
        funcs.push(f);
        if (f.$stubName) {
          prototype[f.$stubName] = f;
          functions.push(f.$stubName);
        }
      }
      for (var i = 0; i < funcs.length; index++, i++)
        funcs[i].$callName = array[index];
      var getterStubName = array[index];
      array = array.slice(++index);
      var requiredParameterInfo = array[0];
      var requiredParameterCount = requiredParameterInfo >> 1;
      var isAccessor = (requiredParameterInfo & 1) === 1;
      var isSetter = requiredParameterInfo === 3;
      var isGetter = requiredParameterInfo === 1;
      var optionalParameterInfo = array[1];
      var optionalParameterCount = optionalParameterInfo >> 1;
      var optionalParametersAreNamed = (optionalParameterInfo & 1) === 1;
      var isIntercepted = requiredParameterCount + optionalParameterCount != funcs[0].length;
      var functionTypeIndex = array[2];
      if (typeof functionTypeIndex == "number")
        array[2] = functionTypeIndex + typesOffset;
      var unmangledNameIndex = 3 * optionalParameterCount + 2 * requiredParameterCount + 3;
      if (getterStubName) {
        f = tearOff(funcs, array, isStatic, name, isIntercepted);
        prototype[name].$getter = f;
        f.$getterStub = true;
        if (isStatic) {
          init.globalFunctions[name] = f;
          functions.push(getterStubName);
        }
        prototype[getterStubName] = f;
        funcs.push(f);
        f.$stubName = getterStubName;
        f.$callName = null;
        if (isIntercepted)
          init.interceptedNames[getterStubName] = 1;
      }
      var isReflectable = array.length > unmangledNameIndex;
      if (isReflectable) {
        funcs[0].$reflectable = 1;
        funcs[0].$reflectionInfo = array;
        for (var i = 1; i < funcs.length; i++) {
          funcs[i].$reflectable = 2;
          funcs[i].$reflectionInfo = array;
        }
        var mangledNames = isStatic ? init.mangledGlobalNames : init.mangledNames;
        var unmangledName = array[unmangledNameIndex];
        var reflectionName = unmangledName;
        if (getterStubName)
          mangledNames[getterStubName] = reflectionName;
        if (isSetter)
          reflectionName += "=";
        else if (!isGetter)
          reflectionName += ":" + (requiredParameterCount + optionalParameterCount);
        mangledNames[name] = reflectionName;
        funcs[0].$reflectionName = reflectionName;
        funcs[0].$metadataIndex = unmangledNameIndex + 1;
        if (optionalParameterCount)
          prototype[unmangledName + "*"] = funcs[0];
      }
    }
    function tearOffGetter(funcs, reflectionInfo, name, isIntercepted) {
      return isIntercepted ? new Function("funcs", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "(x) {" + "if (c === null) c = H.closureFromTearOff(" + "this, funcs, reflectionInfo, false, [x], name);" + "return new c(this, funcs[0], x, name);" + "}")(funcs, reflectionInfo, name, H, null) : new Function("funcs", "reflectionInfo", "name", "H", "c", "return function tearOff_" + name + functionCounter++ + "() {" + "if (c === null) c = H.closureFromTearOff(" + "this, funcs, reflectionInfo, false, [], name);" + "return new c(this, funcs[0], null, name);" + "}")(funcs, reflectionInfo, name, H, null);
    }
    function tearOff(funcs, reflectionInfo, isStatic, name, isIntercepted) {
      var cache;
      return isStatic ? function() {
        if (cache === void 0)
          cache = H.closureFromTearOff(this, funcs, reflectionInfo, true, [], name).prototype;
        return cache;
      } : tearOffGetter(funcs, reflectionInfo, name, isIntercepted);
    }
    var functionCounter = 0;
    if (!init.libraries)
      init.libraries = [];
    if (!init.mangledNames)
      init.mangledNames = map();
    if (!init.mangledGlobalNames)
      init.mangledGlobalNames = map();
    if (!init.statics)
      init.statics = map();
    if (!init.typeInformation)
      init.typeInformation = map();
    if (!init.globalFunctions)
      init.globalFunctions = map();
    if (!init.interceptedNames)
      init.interceptedNames = {$add: 1, $and: 1, $div: 1, $eq: 1, $ge: 1, $gt: 1, $index: 1, $indexSet: 1, $le: 1, $lt: 1, $mod: 1, $mul: 1, $negate: 1, $not: 1, $or: 1, $shl: 1, $shr: 1, $sub: 1, $tdiv: 1, $xor: 1, _addEventListener$3: 1, _checkIndex$2: 1, _checkSublistArguments$3: 1, _clearChildren$0: 1, _invalidIndex$2: 1, _js$_checkIndex$1: 1, _removeEventListener$3: 1, _replaceChild$2: 1, _setRangeFast$4: 1, _shlPositive$1: 1, _shrOtherPositive$1: 1, _shrReceiverPositive$1: 1, _tdivFast$1: 1, abs$0: 1, add$1: 1, add$4: 1, addAll$1: 1, addEventListener$3: 1, allMatches$1: 1, allMatches$2: 1, asByteData$2: 1, asUint8List$2: 1, bitLength$0: 1, checkGrowable$1: 1, checkMutable$1: 1, clamp$0: 1, clear$0: 1, clone$0: 1, close$0: 1, close$1: 1, close$1$force: 1, close$2: 1, codeUnitAt$1: 1, compareTo$1: 1, complete$0: 1, complete$1: 1, contains$1: 1, contains$2: 1, defaultValue$1: 1, elementAt$1: 1, endsWith$1: 1, fillRange$3: 1, firstWhere$2$orElse: 1, floor$0: 1, fold$2: 1, forEach$1: 1, forEach$2: 1, get$_children: 1, get$_rows: 1, get$absolute: 1, get$attributes: 1, get$bitLength: 1, get$bottom: 1, get$buffer: 1, get$children: 1, get$codeUnits: 1, get$complete: 1, get$connection: 1, get$data: 1, get$defaultValue: 1, get$detail: 1, get$duration: 1, get$error: 1, get$first: 1, get$hashCode: 1, get$height: 1, get$host: 1, get$isEmpty: 1, get$isEven: 1, get$isFinite: 1, get$isNaN: 1, get$isNegative: 1, get$isNotEmpty: 1, get$isOdd: 1, get$iterator: 1, get$last: 1, get$left: 1, get$length: 1, get$lengthInBytes: 1, get$list: 1, get$loaded: 1, get$max: 1, get$message: 1, get$min: 1, get$name: 1, get$nodes: 1, get$nonce: 1, get$offsetInBytes: 1, get$onDisconnect: 1, get$onError: 1, get$options: 1, get$parent: 1, get$parentNode: 1, get$path: 1, get$port: 1, get$print: 1, get$readyState: 1, get$request: 1, get$result: 1, get$right: 1, get$rows: 1, get$runtimeType: 1, get$sign: 1, get$status: 1, get$statusCode: 1, get$stream: 1, get$top: 1, get$type: 1, get$url: 1, get$value: 1, get$values: 1, get$version: 1, get$width: 1, get$x: 1, get$y: 1, getAttribute$1: 1, getFloat32$1: 1, getFloat32$2: 1, getFloat64$1: 1, getFloat64$2: 1, getInt16$1: 1, getInt16$2: 1, getInt32$1: 1, getInt32$2: 1, getInt64$1: 1, getInt64$2: 1, getInt8$1: 1, getRange$2: 1, getUint16$1: 1, getUint16$2: 1, getUint32$1: 1, getUint32$2: 1, getUint64$1: 1, getUint64$2: 1, getUint8$1: 1, indexOf$1: 1, indexOf$2: 1, insertBefore$1: 1, isEven$0: 1, join$1: 1, lastIndexOf$1: 1, lastIndexOf$2: 1, length$0: 1, list$1: 1, load$1: 1, load$2: 1, map$1: 1, matchAsPrefix$2: 1, max$1: 1, min$1: 1, modInverse$1: 1, modPow$2: 1, noSuchMethod$1: 1, onDisconnect$0: 1, onError$1: 1, pause$0: 1, pause$1: 1, print$0: 1, print$1: 1, print$2: 1, reduce$1: 1, remainder$1: 1, remove$0: 1, remove$1: 1, removeAt$1: 1, removeEventListener$3: 1, removeRange$2: 1, replaceRange$3: 1, replaceWith$1: 1, reset$0: 1, round$0: 1, seed$1: 1, send$1: 1, send$2: 1, set$_children: 1, set$_rows: 1, set$absolute: 1, set$attributes: 1, set$bottom: 1, set$buffer: 1, set$children: 1, set$complete: 1, set$connection: 1, set$data: 1, set$defaultValue: 1, set$detail: 1, set$duration: 1, set$error: 1, set$height: 1, set$left: 1, set$length: 1, set$lengthInBytes: 1, set$list: 1, set$loaded: 1, set$max: 1, set$message: 1, set$min: 1, set$name: 1, set$nodes: 1, set$nonce: 1, set$offsetInBytes: 1, set$options: 1, set$parent: 1, set$parentNode: 1, set$path: 1, set$print: 1, set$readyState: 1, set$request: 1, set$result: 1, set$right: 1, set$rows: 1, set$status: 1, set$statusCode: 1, set$stream: 1, set$text: 1, set$top: 1, set$type: 1, set$url: 1, set$value: 1, set$version: 1, set$width: 1, set$x: 1, set$y: 1, setAll$2: 1, setAttribute$4: 1, setFloat32$2: 1, setFloat32$3: 1, setFloat64$2: 1, setFloat64$3: 1, setInt16$2: 1, setInt16$3: 1, setInt32$2: 1, setInt32$3: 1, setInt64$2: 1, setInt64$3: 1, setInt8$2: 1, setRange$3: 1, setRange$4: 1, setUint16$2: 1, setUint16$3: 1, setUint32$2: 1, setUint32$3: 1, setUint64$2: 1, setUint64$3: 1, setUint8$2: 1, skip$1: 1, split$1: 1, startsWith$1: 1, startsWith$2: 1, stop$0: 1, sublist$1: 1, sublist$2: 1, substring$1: 1, substring$2: 1, take$1: 1, toInt$0: 1, toList$0: 1, toList$1$growable: 1, toLowerCase$0: 1, toRadixString$1: 1, toString$0: 1, toString$1: 1, trim$0: 1, value$1: 1, where$1: 1};
    var libraries = init.libraries;
    var mangledNames = init.mangledNames;
    var mangledGlobalNames = init.mangledGlobalNames;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var length = programData.length;
    var processedClasses = map();
    processedClasses.collected = map();
    processedClasses.pending = map();
    processedClasses.constructorsList = [];
    processedClasses.combinedConstructorFunction = "function $reflectable(fn){fn.$reflectable=1;return fn};\n" + "var $desc;\n";
    for (var i = 0; i < length; i++) {
      var data = programData[i];
      var name = data[0];
      var uri = data[1];
      var metadata = data[2];
      var globalObject = data[3];
      var descriptor = data[4];
      var isRoot = !!data[5];
      var fields = descriptor && descriptor["^"];
      if (fields instanceof Array)
        fields = fields[0];
      var classes = [];
      var functions = [];
      processStatics(descriptor, processedClasses);
      libraries.push([name, uri, classes, functions, metadata, fields, isRoot, globalObject]);
    }
    finishClasses(processedClasses);
  }
  functionThatReturnsNull = function() {
  };
  var dart = [["_foreign_helper", "dart:_foreign_helper",, H, {
    "^": "",
    JS_CONST: {
      "^": "Object;code"
    }
  }], ["_interceptors", "dart:_interceptors",, J, {
    "^": "",
    getInterceptor: function(object) {
      return void 0;
    },
    makeDispatchRecord: function(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor: function(object) {
      var record, proto, objectProto, interceptor;
      record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          H.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw H.wrapException(new P.UnimplementedError("Return interceptor for " + H.S(proto(object, record))));
      }
      interceptor = H.lookupAndCacheInterceptor(object);
      if (interceptor == null) {
        proto = Object.getPrototypeOf(object);
        if (proto == null || proto === Object.prototype)
          return C.PlainJavaScriptObject_methods;
        else
          return C.UnknownJavaScriptObject_methods;
      }
      return interceptor;
    },
    Interceptor: {
      "^": "Object;",
      $eq: [function(receiver, other) {
        return receiver === other;
      }, null, "get$==", 2, 0, 1, 2, [], "=="],
      get$hashCode: [function(receiver) {
        return H.Primitives_objectHashCode(receiver);
      }, null, null, 1, 0, 2, "hashCode"],
      toString$0: ["super$Interceptor$toString$0", function(receiver) {
        return H.Primitives_objectToHumanReadableString(receiver);
      }, "call$0", "get$toString", 0, 0, 3, "toString"],
      noSuchMethod$1: ["super$Interceptor$noSuchMethod$1", function(receiver, invocation) {
        throw H.wrapException(P.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
      }, "call$1", "get$noSuchMethod", 2, 0, 4, 3, [], "noSuchMethod"],
      get$runtimeType: function(receiver) {
        return new H.TypeImpl(H.getRuntimeTypeString(receiver), null);
      },
      "%": "MediaError|MediaKeyError|SVGAnimatedEnumeration|SVGAnimatedLength|SVGAnimatedLengthList|SVGAnimatedNumber|SVGAnimatedNumberList|SVGAnimatedString"
    },
    JSBool: {
      "^": "Interceptor;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      get$hashCode: function(receiver) {
        return receiver ? 519018 : 218159;
      },
      get$runtimeType: function(receiver) {
        return C.Type_EsU;
      },
      $isbool: 1
    },
    JSNull: {
      "^": "Interceptor;",
      $eq: function(receiver, other) {
        return null == other;
      },
      toString$0: function(receiver) {
        return "null";
      },
      get$hashCode: function(receiver) {
        return 0;
      },
      get$runtimeType: function(receiver) {
        return C.Type_eZO;
      },
      noSuchMethod$1: [function(receiver, invocation) {
        return this.super$Interceptor$noSuchMethod$1(receiver, invocation);
      }, null, "get$noSuchMethod", 2, 0, null, 3, []]
    },
    JavaScriptObject: {
      "^": "Interceptor;",
      get$hashCode: function(_) {
        return 0;
      },
      get$runtimeType: function(_) {
        return C.Type_XXD;
      },
      $isJSObject: 1
    },
    PlainJavaScriptObject: {
      "^": "JavaScriptObject;"
    },
    UnknownJavaScriptObject: {
      "^": "JavaScriptObject;",
      toString$0: function(receiver) {
        return String(receiver);
      }
    },
    JSArray0: {
      "^": "Interceptor;",
      checkMutable$1: function(receiver, reason) {
        if (!!receiver.immutable$list)
          throw H.wrapException(new P.UnsupportedError(reason));
      },
      checkGrowable$1: function(receiver, reason) {
        if (!!receiver.fixed$length)
          throw H.wrapException(new P.UnsupportedError(reason));
      },
      add$1: function(receiver, value) {
        this.checkGrowable$1(receiver, "add");
        receiver.push(value);
      },
      removeAt$1: function(receiver, index) {
        this.checkGrowable$1(receiver, "removeAt");
        if (index >= receiver.length)
          throw H.wrapException(P.RangeError$value(index, null, null));
        return receiver.splice(index, 1)[0];
      },
      setAll$2: function(receiver, index, iterable) {
        var t1, _i, index0;
        this.checkMutable$1(receiver, "setAll");
        P.RangeError_checkValueInInterval(index, 0, receiver.length, "index", null);
        for (t1 = iterable.length, _i = 0; _i < iterable.length; iterable.length === t1 || (0, H.throwConcurrentModificationError)(iterable), ++_i, index = index0) {
          index0 = index + 1;
          this.$indexSet(receiver, index, iterable[_i]);
        }
      },
      remove$1: function(receiver, element) {
        var i;
        this.checkGrowable$1(receiver, "remove");
        for (i = 0; i < receiver.length; ++i)
          if (J.$eq(receiver[i], element)) {
            receiver.splice(i, 1);
            return true;
          }
        return false;
      },
      where$1: function(receiver, f) {
        var t1 = new H.WhereIterable(receiver, f);
        t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(receiver, 0)];
        return t1;
      },
      addAll$1: function(receiver, collection) {
        var t1;
        this.checkGrowable$1(receiver, "addAll");
        for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
          receiver.push(t1.get$current());
      },
      clear$0: function(receiver) {
        this.set$length(receiver, 0);
      },
      forEach$1: function(receiver, f) {
        var end, i;
        end = receiver.length;
        for (i = 0; i < end; ++i) {
          f.call$1(receiver[i]);
          if (receiver.length !== end)
            throw H.wrapException(new P.ConcurrentModificationError(receiver));
        }
      },
      map$1: function(receiver, f) {
        var t1 = new H.MappedListIterable(receiver, f);
        t1.$builtinTypeInfo = [null, null];
        return t1;
      },
      join$1: function(receiver, separator) {
        var t1, list, i, t2;
        t1 = receiver.length;
        list = Array(t1);
        list.fixed$length = Array;
        for (i = 0; i < receiver.length; ++i) {
          t2 = H.S(receiver[i]);
          if (i >= t1)
            return H.ioore(list, i);
          list[i] = t2;
        }
        return list.join(separator);
      },
      skip$1: function(receiver, n) {
        return H.SubListIterable$(receiver, n, null, H.getTypeArgumentByIndex(receiver, 0));
      },
      fold$2: function(receiver, initialValue, combine) {
        var $length, value, i;
        $length = receiver.length;
        for (value = initialValue, i = 0; i < $length; ++i) {
          value = combine.call$2(value, receiver[i]);
          if (receiver.length !== $length)
            throw H.wrapException(new P.ConcurrentModificationError(receiver));
        }
        return value;
      },
      elementAt$1: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        var t1;
        if (start == null)
          H.throwExpression(H._argumentError(start));
        if (typeof start !== "number" || Math.floor(start) !== start)
          throw H.wrapException(P.ArgumentError$(start));
        if (start < 0 || start > receiver.length)
          throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
        if (end == null)
          end = receiver.length;
        else {
          if (typeof end !== "number" || Math.floor(end) !== end)
            throw H.wrapException(P.ArgumentError$(end));
          if (end < start || end > receiver.length)
            throw H.wrapException(P.RangeError$range(end, start, receiver.length, null, null));
        }
        if (start === end) {
          t1 = [];
          t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(receiver, 0)];
          return t1;
        }
        t1 = receiver.slice(start, end);
        t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(receiver, 0)];
        return t1;
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      getRange$2: function(receiver, start, end) {
        P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        return H.SubListIterable$(receiver, start, end, H.getTypeArgumentByIndex(receiver, 0));
      },
      get$first: function(receiver) {
        if (receiver.length > 0)
          return receiver[0];
        throw H.wrapException(H.IterableElementError_noElement());
      },
      get$last: function(receiver) {
        var t1 = receiver.length;
        if (t1 > 0)
          return receiver[t1 - 1];
        throw H.wrapException(H.IterableElementError_noElement());
      },
      removeRange$2: function(receiver, start, end) {
        this.checkGrowable$1(receiver, "removeRange");
        P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        receiver.splice(start, J.$sub$in(end, start));
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        var $length, t1, t2, i;
        this.checkMutable$1(receiver, "set range");
        P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        $length = J.$sub$n(end, start);
        if (J.$eq($length, 0))
          return;
        if (skipCount < 0)
          H.throwExpression(P.RangeError$range(skipCount, 0, null, "skipCount", null));
        if (typeof $length !== "number")
          return H.iae($length);
        t1 = J.getInterceptor$asx(iterable);
        t2 = t1.get$length(iterable);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (skipCount + $length > t2)
          throw H.wrapException(H.IterableElementError_tooFew());
        if (typeof start !== "number")
          return H.iae(start);
        if (skipCount < start)
          for (i = $length - 1; i >= 0; --i)
            receiver[start + i] = t1.$index(iterable, skipCount + i);
        else
          for (i = 0; i < $length; ++i)
            receiver[start + i] = t1.$index(iterable, skipCount + i);
      },
      fillRange$3: function(receiver, start, end, fillValue) {
        var i;
        this.checkMutable$1(receiver, "fill range");
        P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        for (i = start; i < end; ++i)
          receiver[i] = fillValue;
      },
      indexOf$2: function(receiver, element, start) {
        var t1, i;
        t1 = J.getInterceptor$n(start);
        if (t1.$ge(start, receiver.length))
          return -1;
        if (t1.$lt(start, 0))
          start = 0;
        for (i = start; J.$lt$n(i, receiver.length); ++i) {
          if (i >>> 0 !== i || i >= receiver.length)
            return H.ioore(receiver, i);
          if (J.$eq(receiver[i], element))
            return i;
        }
        return -1;
      },
      indexOf$1: function($receiver, element) {
        return this.indexOf$2($receiver, element, 0);
      },
      lastIndexOf$2: function(receiver, element, startIndex) {
        var i;
        startIndex = receiver.length - 1;
        for (i = startIndex; i >= 0; --i) {
          if (i >= receiver.length)
            return H.ioore(receiver, i);
          if (J.$eq(receiver[i], element))
            return i;
        }
        return -1;
      },
      lastIndexOf$1: function($receiver, element) {
        return this.lastIndexOf$2($receiver, element, null);
      },
      contains$1: function(receiver, other) {
        var i;
        for (i = 0; i < receiver.length; ++i)
          if (J.$eq(receiver[i], other))
            return true;
        return false;
      },
      get$isEmpty: function(receiver) {
        return receiver.length === 0;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.length !== 0;
      },
      toString$0: function(receiver) {
        return P.IterableBase_iterableToFullString(receiver, "[", "]");
      },
      toList$1$growable: function(receiver, growable) {
        var t1;
        if (growable) {
          t1 = receiver.slice();
          t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(receiver, 0)];
          t1 = t1;
        } else {
          t1 = receiver.slice();
          t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(receiver, 0)];
          t1.fixed$length = Array;
          t1 = t1;
        }
        return t1;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      get$iterator: function(receiver) {
        var t1 = new J.ArrayIterator(receiver, receiver.length, 0, null);
        t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(receiver, 0)];
        return t1;
      },
      get$hashCode: function(receiver) {
        return H.Primitives_objectHashCode(receiver);
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      set$length: function(receiver, newLength) {
        this.checkGrowable$1(receiver, "set length");
        if (typeof newLength !== "number" || Math.floor(newLength) !== newLength)
          throw H.wrapException(P.ArgumentError$(newLength));
        if (newLength < 0)
          throw H.wrapException(P.RangeError$value(newLength, null, null));
        receiver.length = newLength;
      },
      $index: function(receiver, index) {
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(P.ArgumentError$(index));
        if (index >= receiver.length || index < 0)
          throw H.wrapException(P.RangeError$value(index, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        if (!!receiver.immutable$list)
          H.throwExpression(new P.UnsupportedError("indexed set"));
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(P.ArgumentError$(index));
        if (index >= receiver.length || index < 0)
          throw H.wrapException(P.RangeError$value(index, null, null));
        receiver[index] = value;
      },
      $isJSIndexable: 1,
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null,
      static: {JSArray_JSArray$fixed: function($length, $E) {
          var t1;
          if (typeof $length !== "number" || Math.floor($length) !== $length || $length < 0)
            throw H.wrapException(P.ArgumentError$("Length must be a non-negative integer: " + H.S($length)));
          t1 = new Array($length);
          t1.$builtinTypeInfo = [$E];
          t1.fixed$length = Array;
          return t1;
        }}
    },
    JSMutableArray: {
      "^": "JSArray0;",
      $isJSIndexable: 1
    },
    JSFixedArray: {
      "^": "JSMutableArray;"
    },
    JSExtendableArray: {
      "^": "JSMutableArray;"
    },
    JSUnmodifiableArray: {
      "^": "JSArray0;"
    },
    ArrayIterator: {
      "^": "Object;__interceptors$_iterable,__interceptors$_length,__interceptors$_index,__interceptors$_current",
      get$current: function() {
        return this.__interceptors$_current;
      },
      moveNext$0: function() {
        var t1, $length, t2;
        t1 = this.__interceptors$_iterable;
        $length = t1.length;
        if (this.__interceptors$_length !== $length)
          throw H.wrapException(new P.ConcurrentModificationError(t1));
        t2 = this.__interceptors$_index;
        if (t2 >= $length) {
          this.__interceptors$_current = null;
          return false;
        }
        this.__interceptors$_current = t1[t2];
        this.__interceptors$_index = t2 + 1;
        return true;
      }
    },
    JSNumber: {
      "^": "Interceptor;",
      compareTo$1: function(receiver, b) {
        var bIsNegative;
        if (typeof b !== "number")
          throw H.wrapException(P.ArgumentError$(b));
        if (receiver < b)
          return -1;
        else if (receiver > b)
          return 1;
        else if (receiver === b) {
          if (receiver === 0) {
            bIsNegative = this.get$isNegative(b);
            if (this.get$isNegative(receiver) === bIsNegative)
              return 0;
            if (this.get$isNegative(receiver))
              return -1;
            return 1;
          }
          return 0;
        } else if (isNaN(receiver)) {
          if (this.get$isNaN(b))
            return 0;
          return 1;
        } else
          return -1;
      },
      get$isNegative: function(receiver) {
        return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
      },
      get$isNaN: function(receiver) {
        return isNaN(receiver);
      },
      get$isFinite: function(receiver) {
        return isFinite(receiver);
      },
      remainder$1: function(receiver, b) {
        return receiver % b;
      },
      abs$0: function(receiver) {
        return Math.abs(receiver);
      },
      get$sign: function(receiver) {
        var t1;
        if (receiver > 0)
          t1 = 1;
        else
          t1 = receiver < 0 ? -1 : receiver;
        return t1;
      },
      toInt$0: function(receiver) {
        var t1;
        if (receiver >= -2147483648 && receiver <= 2147483647)
          return receiver | 0;
        if (isFinite(receiver)) {
          t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
          return t1 + 0;
        }
        throw H.wrapException(new P.UnsupportedError("" + receiver));
      },
      floor$0: function(receiver) {
        return this.toInt$0(Math.floor(receiver));
      },
      round$0: function(receiver) {
        if (receiver > 0) {
          if (receiver !== 1 / 0)
            return Math.round(receiver);
        } else if (receiver > -1 / 0)
          return 0 - Math.round(0 - receiver);
        throw H.wrapException(new P.UnsupportedError("" + receiver));
      },
      toRadixString$1: function(receiver, radix) {
        var result, match, t1, exponent;
        H.checkInt(radix);
        if (radix < 2 || radix > 36)
          throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
        result = receiver.toString(radix);
        if (C.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
          return result;
        match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
        if (match == null)
          H.throwExpression(new P.UnsupportedError("Unexpected toString result: " + result));
        t1 = J.getInterceptor$asx(match);
        result = t1.$index(match, 1);
        exponent = +t1.$index(match, 3);
        if (t1.$index(match, 2) != null) {
          result += t1.$index(match, 2);
          exponent -= t1.$index(match, 2).length;
        }
        return result + C.JSString_methods.$mul("0", exponent);
      },
      toString$0: function(receiver) {
        if (receiver === 0 && 1 / receiver < 0)
          return "-0.0";
        else
          return "" + receiver;
      },
      get$hashCode: function(receiver) {
        return receiver & 0x1FFFFFFF;
      },
      $negate: function(receiver) {
        return -receiver;
      },
      $add: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return receiver + other;
      },
      $sub: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return receiver - other;
      },
      $div: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return receiver / other;
      },
      $mul: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return receiver * other;
      },
      $mod: function(receiver, other) {
        var result;
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        result = receiver % other;
        if (result === 0)
          return 0;
        if (result > 0)
          return result;
        if (other < 0)
          return result - other;
        else
          return result + other;
      },
      $tdiv: function(receiver, other) {
        if ((receiver | 0) === receiver && (other | 0) === other && 0 !== other && -1 !== other)
          return receiver / other | 0;
        else {
          if (typeof other !== "number")
            H.throwExpression(P.ArgumentError$(other));
          return this.toInt$0(receiver / other);
        }
      },
      _tdivFast$1: function(receiver, other) {
        return (receiver | 0) === receiver ? receiver / other | 0 : this.toInt$0(receiver / other);
      },
      $shl: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        if (other < 0)
          throw H.wrapException(P.ArgumentError$(other));
        return other > 31 ? 0 : receiver << other >>> 0;
      },
      _shlPositive$1: function(receiver, other) {
        return other > 31 ? 0 : receiver << other >>> 0;
      },
      $shr: function(receiver, other) {
        var t1;
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        if (other < 0)
          throw H.wrapException(P.ArgumentError$(other));
        if (receiver > 0)
          t1 = other > 31 ? 0 : receiver >>> other;
        else {
          t1 = other > 31 ? 31 : other;
          t1 = receiver >> t1 >>> 0;
        }
        return t1;
      },
      _shrOtherPositive$1: function(receiver, other) {
        var t1;
        if (receiver > 0)
          t1 = other > 31 ? 0 : receiver >>> other;
        else {
          t1 = other > 31 ? 31 : other;
          t1 = receiver >> t1 >>> 0;
        }
        return t1;
      },
      _shrReceiverPositive$1: function(receiver, other) {
        if (other < 0)
          throw H.wrapException(P.ArgumentError$(other));
        return other > 31 ? 0 : receiver >>> other;
      },
      $and: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return (receiver & other) >>> 0;
      },
      $or: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return (receiver | other) >>> 0;
      },
      $xor: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return (receiver ^ other) >>> 0;
      },
      $lt: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return receiver < other;
      },
      $gt: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return receiver > other;
      },
      $le: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return receiver <= other;
      },
      $ge: function(receiver, other) {
        if (typeof other !== "number")
          throw H.wrapException(P.ArgumentError$(other));
        return receiver >= other;
      },
      get$runtimeType: function(receiver) {
        return C.Type_xM7;
      },
      $isnum: 1
    },
    JSInt: {
      "^": "JSNumber;",
      get$isEven: function(receiver) {
        return (receiver & 1) === 0;
      },
      get$isOdd: function(receiver) {
        return (receiver & 1) === 1;
      },
      get$bitLength: function(receiver) {
        var nonneg = receiver < 0 ? -receiver - 1 : receiver;
        if (nonneg >= 4294967296)
          return J.JSInt__bitCount(J.JSInt__spread(this._tdivFast$1(nonneg, 4294967296))) + 32;
        return J.JSInt__bitCount(J.JSInt__spread(nonneg));
      },
      modPow$2: function(receiver, e, m) {
        var b, r;
        if (typeof e !== "number" || Math.floor(e) !== e)
          throw H.wrapException(P.ArgumentError$(e));
        if (typeof m !== "number" || Math.floor(m) !== m)
          throw H.wrapException(P.ArgumentError$(m));
        if (e < 0)
          throw H.wrapException(P.RangeError$(e));
        if (m <= 0)
          throw H.wrapException(P.RangeError$(m));
        if (e === 0)
          return 1;
        b = receiver < 0 || receiver > m ? this.$mod(receiver, m) : receiver;
        for (r = 1; e > 0;) {
          if (this.get$isOdd(e))
            r = this.$mod(r * b, m);
          e = this._tdivFast$1(e, 2);
          b = this.$mod(b * b, m);
        }
        return r;
      },
      modInverse$1: function(receiver, m) {
        var t, ac, t1, v, u, a, b, c, d;
        if (typeof m !== "number" || Math.floor(m) !== m)
          throw H.wrapException(P.ArgumentError$(m));
        if (m <= 0)
          throw H.wrapException(P.RangeError$(m));
        if (m === 1)
          return 0;
        t = receiver < 0 || receiver >= m ? this.$mod(receiver, m) : receiver;
        if (t === 1)
          return 1;
        ac = this.get$isEven(m);
        if (t !== 0)
          t1 = ac && (t & 1) === 0;
        else
          t1 = true;
        if (t1)
          throw H.wrapException(P.RangeError$("Not coprime"));
        v = t;
        u = m;
        a = 1;
        b = 0;
        c = 0;
        d = 1;
        do {
          for (; this.get$isEven(u);) {
            u = this._tdivFast$1(u, 2);
            if (ac) {
              if ((a & 1) !== 0 || (b & 1) !== 0) {
                a += t;
                b -= m;
              }
              a = this._tdivFast$1(a, 2);
            } else if ((b & 1) !== 0)
              b -= m;
            b = this._tdivFast$1(b, 2);
          }
          for (; (v & 1) === 0;) {
            v = this._tdivFast$1(v, 2);
            if (ac) {
              if ((c & 1) !== 0 || (d & 1) !== 0) {
                c += t;
                d -= m;
              }
              c = this._tdivFast$1(c, 2);
            } else if ((d & 1) !== 0)
              d -= m;
            d = this._tdivFast$1(d, 2);
          }
          if (u >= v) {
            u -= v;
            if (ac)
              a -= c;
            b -= d;
          } else {
            v -= u;
            if (ac)
              c -= a;
            d -= b;
          }
        } while (u !== 0);
        if (v !== 1)
          throw H.wrapException(P.RangeError$("Not coprime"));
        if (d < 0) {
          d += m;
          if (d < 0)
            d += m;
        } else if (d > m) {
          d -= m;
          if (d > m)
            d -= m;
        }
        return d;
      },
      get$runtimeType: function(receiver) {
        return C.Type_SnA;
      },
      $not: function(receiver) {
        return ~receiver >>> 0;
      },
      isEven$0: function($receiver) {
        return this.get$isEven($receiver).call$0();
      },
      bitLength$0: function($receiver) {
        return this.get$bitLength($receiver).call$0();
      },
      $is$double: 1,
      $isnum: 1,
      $is$int: 1,
      static: {JSInt__bitCount: function(i) {
          i = (i >>> 0) - (i >>> 1 & 1431655765);
          i = (i & 858993459) + (i >>> 2 & 858993459);
          i = 252645135 & i + (i >>> 4);
          i += i >>> 8;
          return i + (i >>> 16) & 63;
        }, JSInt__spread: function(i) {
          i |= i >> 1;
          i |= i >> 2;
          i |= i >> 4;
          i |= i >> 8;
          return (i | i >> 16) >>> 0;
        }}
    },
    JSDouble: {
      "^": "JSNumber;",
      get$runtimeType: function(receiver) {
        return C.Type_qq1;
      },
      $is$double: 1,
      $isnum: 1
    },
    JSPositiveInt: {
      "^": "JSInt;"
    },
    JSUInt32: {
      "^": "JSPositiveInt;"
    },
    JSUInt31: {
      "^": "JSUInt32;"
    },
    JSString: {
      "^": "Interceptor;",
      codeUnitAt$1: function(receiver, index) {
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(P.ArgumentError$(index));
        if (index < 0)
          throw H.wrapException(P.RangeError$value(index, null, null));
        if (index >= receiver.length)
          throw H.wrapException(P.RangeError$value(index, null, null));
        return receiver.charCodeAt(index);
      },
      allMatches$2: function(receiver, string, start) {
        H.checkString(string);
        H.checkInt(start);
        if (start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return H.allMatchesInStringUnchecked(receiver, string, start);
      },
      allMatches$1: function($receiver, string) {
        return this.allMatches$2($receiver, string, 0);
      },
      matchAsPrefix$2: function(receiver, string, start) {
        var t1, i;
        if (start < 0 || start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        t1 = receiver.length;
        if (start + t1 > string.length)
          return;
        for (i = 0; i < t1; ++i)
          if (this.codeUnitAt$1(string, start + i) !== this.codeUnitAt$1(receiver, i))
            return;
        return new H.StringMatch(start, string, receiver);
      },
      $add: function(receiver, other) {
        if (typeof other !== "string")
          throw H.wrapException(P.ArgumentError$(other));
        return receiver + other;
      },
      endsWith$1: function(receiver, other) {
        var otherLength, t1;
        H.checkString(other);
        otherLength = other.length;
        t1 = receiver.length;
        if (otherLength > t1)
          return false;
        return other === this.substring$1(receiver, t1 - otherLength);
      },
      split$1: function(receiver, pattern) {
        return receiver.split(pattern);
      },
      replaceRange$3: function(receiver, start, end, replacement) {
        H.checkString(replacement);
        H.checkInt(start);
        end = P.RangeError_checkValidRange(start, end, receiver.length, null, null, null);
        H.checkInt(end);
        return H.stringReplaceRangeUnchecked(receiver, start, end, replacement);
      },
      startsWith$2: function(receiver, pattern, index) {
        var endIndex;
        if (index > receiver.length)
          throw H.wrapException(P.RangeError$range(index, 0, receiver.length, null, null));
        if (typeof pattern === "string") {
          endIndex = index + pattern.length;
          if (endIndex > receiver.length)
            return false;
          return pattern === receiver.substring(index, endIndex);
        }
        return J.matchAsPrefix$2$s(pattern, receiver, index) != null;
      },
      startsWith$1: function($receiver, pattern) {
        return this.startsWith$2($receiver, pattern, 0);
      },
      substring$2: function(receiver, startIndex, endIndex) {
        var t1;
        if (typeof startIndex !== "number" || Math.floor(startIndex) !== startIndex)
          H.throwExpression(H._argumentError(startIndex));
        if (endIndex == null)
          endIndex = receiver.length;
        if (typeof endIndex !== "number" || Math.floor(endIndex) !== endIndex)
          H.throwExpression(H._argumentError(endIndex));
        t1 = J.getInterceptor$n(startIndex);
        if (t1.$lt(startIndex, 0))
          throw H.wrapException(P.RangeError$value(startIndex, null, null));
        if (t1.$gt(startIndex, endIndex))
          throw H.wrapException(P.RangeError$value(startIndex, null, null));
        if (J.$gt$n(endIndex, receiver.length))
          throw H.wrapException(P.RangeError$value(endIndex, null, null));
        return receiver.substring(startIndex, endIndex);
      },
      substring$1: function($receiver, startIndex) {
        return this.substring$2($receiver, startIndex, null);
      },
      toLowerCase$0: function(receiver) {
        return receiver.toLowerCase();
      },
      trim$0: function(receiver) {
        var result, endIndex, startIndex, t1, endIndex0;
        result = receiver.trim();
        endIndex = result.length;
        if (endIndex === 0)
          return result;
        if (this.codeUnitAt$1(result, 0) === 133) {
          startIndex = J.JSString__skipLeadingWhitespace(result, 1);
          if (startIndex === endIndex)
            return "";
        } else
          startIndex = 0;
        t1 = endIndex - 1;
        endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
        if (startIndex === 0 && endIndex0 === endIndex)
          return result;
        return result.substring(startIndex, endIndex0);
      },
      $mul: function(receiver, times) {
        var s, result;
        if (typeof times !== "number")
          return H.iae(times);
        if (0 >= times)
          return "";
        if (times === 1 || receiver.length === 0)
          return receiver;
        if (times !== times >>> 0)
          throw H.wrapException(C.C_OutOfMemoryError);
        for (s = receiver, result = ""; true;) {
          if ((times & 1) === 1)
            result = s + result;
          times = times >>> 1;
          if (times === 0)
            break;
          s += s;
        }
        return result;
      },
      get$codeUnits: function(receiver) {
        return new H.CodeUnits(receiver);
      },
      indexOf$2: function(receiver, pattern, start) {
        var t1, match, t2, i;
        if (pattern == null)
          H.throwExpression(H._argumentError(pattern));
        if (typeof start !== "number" || Math.floor(start) !== start)
          throw H.wrapException(P.ArgumentError$(start));
        if (start < 0 || start > receiver.length)
          throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
        if (typeof pattern === "string")
          return receiver.indexOf(pattern, start);
        t1 = J.getInterceptor(pattern);
        if (!!t1.$isJSSyntaxRegExp) {
          match = pattern._execGlobal$2(receiver, start);
          return match == null ? -1 : match._match.index;
        }
        for (t2 = receiver.length, i = start; i <= t2; ++i)
          if (t1.matchAsPrefix$2(pattern, receiver, i) != null)
            return i;
        return -1;
      },
      indexOf$1: function($receiver, pattern) {
        return this.indexOf$2($receiver, pattern, 0);
      },
      lastIndexOf$2: function(receiver, pattern, start) {
        var t1, t2;
        if (start == null)
          start = receiver.length;
        else if (start < 0 || start > receiver.length)
          throw H.wrapException(P.RangeError$range(start, 0, receiver.length, null, null));
        t1 = pattern.length;
        if (typeof start !== "number")
          return start.$add();
        t2 = receiver.length;
        if (start + t1 > t2)
          start = t2 - t1;
        return receiver.lastIndexOf(pattern, start);
      },
      lastIndexOf$1: function($receiver, pattern) {
        return this.lastIndexOf$2($receiver, pattern, null);
      },
      contains$2: function(receiver, other, startIndex) {
        if (other == null)
          H.throwExpression(H._argumentError(other));
        if (startIndex > receiver.length)
          throw H.wrapException(P.RangeError$range(startIndex, 0, receiver.length, null, null));
        return H.stringContainsUnchecked(receiver, other, startIndex);
      },
      contains$1: function($receiver, other) {
        return this.contains$2($receiver, other, 0);
      },
      get$isEmpty: function(receiver) {
        return receiver.length === 0;
      },
      get$isNotEmpty: function(receiver) {
        return receiver.length !== 0;
      },
      compareTo$1: function(receiver, other) {
        var t1;
        if (typeof other !== "string")
          throw H.wrapException(P.ArgumentError$(other));
        if (receiver === other)
          t1 = 0;
        else
          t1 = receiver < other ? -1 : 1;
        return t1;
      },
      toString$0: function(receiver) {
        return receiver;
      },
      get$hashCode: function(receiver) {
        var t1, hash, i;
        for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
          hash = 536870911 & hash + receiver.charCodeAt(i);
          hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
          hash ^= hash >> 6;
        }
        hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
        hash ^= hash >> 11;
        return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
      },
      get$runtimeType: function(receiver) {
        return C.Type_Ejg;
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(P.ArgumentError$(index));
        if (index >= receiver.length || index < 0)
          throw H.wrapException(P.RangeError$value(index, null, null));
        return receiver[index];
      },
      $isJSIndexable: 1,
      $isString: 1,
      static: {JSString__isWhitespace: function(codeUnit) {
          if (codeUnit < 256)
            switch (codeUnit) {
              case 9:
              case 10:
              case 11:
              case 12:
              case 13:
              case 32:
              case 133:
              case 160:
                return true;
              default:
                return false;
            }
          switch (codeUnit) {
            case 5760:
            case 6158:
            case 8192:
            case 8193:
            case 8194:
            case 8195:
            case 8196:
            case 8197:
            case 8198:
            case 8199:
            case 8200:
            case 8201:
            case 8202:
            case 8232:
            case 8233:
            case 8239:
            case 8287:
            case 12288:
            case 65279:
              return true;
            default:
              return false;
          }
        }, JSString__skipLeadingWhitespace: function(string, index) {
          var t1, codeUnit;
          for (t1 = string.length; index < t1;) {
            codeUnit = C.JSString_methods.codeUnitAt$1(string, index);
            if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
              break;
            ++index;
          }
          return index;
        }, JSString__skipTrailingWhitespace: function(string, index) {
          var index0, codeUnit;
          for (; index > 0; index = index0) {
            index0 = index - 1;
            codeUnit = C.JSString_methods.codeUnitAt$1(string, index0);
            if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
              break;
          }
          return index;
        }}
    }
  }], ["_isolate_helper", "dart:_isolate_helper",, H, {
    "^": "",
    _callInIsolate: function(isolate, $function) {
      var result = isolate.eval$1($function);
      if (!init.globalState.currentContext._isExecutingEvent)
        init.globalState.topEventLoop.run$0();
      return result;
    },
    leaveJsAsync: function() {
      --init.globalState.topEventLoop._activeJsAsyncCount;
    },
    startRootIsolate: function(entry, args) {
      var t1, t2, t3, t4, t5, rootContext;
      t1 = {};
      t1._captured_args_0 = args;
      args = args;
      t1._captured_args_0 = args;
      if (args == null) {
        args = [];
        t1._captured_args_0 = args;
        t2 = args;
      } else
        t2 = args;
      if (!J.getInterceptor(t2).$isList)
        throw H.wrapException(P.ArgumentError$("Arguments to main must be a List: " + H.S(t2)));
      t2 = new H._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null, entry);
      t2._nativeDetectEnvironment$0();
      t2.topEventLoop = new H._EventLoop(P.ListQueue$(null, H._IsolateEvent), 0);
      t2.isolates = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, H._IsolateContext);
      t2.managers = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, null);
      if (t2.isWorker === true) {
        t2.mainManager = new H._MainManagerStub();
        t2._nativeInitWorkerMessageHandler$0();
      }
      init.globalState = t2;
      if (init.globalState.isWorker === true)
        return;
      t2 = init.globalState.nextIsolateId++;
      t3 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, H.RawReceivePortImpl);
      t4 = P.LinkedHashSet_LinkedHashSet(null, null, null, P.$int);
      t5 = new H.RawReceivePortImpl(0, null, false);
      rootContext = new H._IsolateContext(t2, t3, t4, init.createNewIsolate(), t5, new H.CapabilityImpl(H.random64()), new H.CapabilityImpl(H.random64()), false, false, [], P.LinkedHashSet_LinkedHashSet(null, null, null, null), null, null, false, true, P.LinkedHashSet_LinkedHashSet(null, null, null, null));
      t4.add$1(0, 0);
      rootContext._addRegistration$2(0, t5);
      init.globalState.rootContext = rootContext;
      init.globalState.currentContext = rootContext;
      t2 = H.getDynamicRuntimeType();
      t3 = H.buildFunctionType(t2, [t2])._isTest$1(entry);
      if (t3)
        rootContext.eval$1(new H.startRootIsolate_closure(t1, entry));
      else {
        t2 = H.buildFunctionType(t2, [t2, t2])._isTest$1(entry);
        if (t2)
          rootContext.eval$1(new H.startRootIsolate_closure0(t1, entry));
        else
          rootContext.eval$1(entry);
      }
      init.globalState.topEventLoop.run$0();
    },
    _globalState: function() {
      return init.globalState;
    },
    IsolateNatives_computeThisScript: function() {
      var currentScript = init.currentScript;
      if (currentScript != null)
        return String(currentScript.src);
      if (init.globalState.isWorker === true)
        return H.IsolateNatives_computeThisScriptFromTrace();
      return;
    },
    IsolateNatives_computeThisScriptFromTrace: function() {
      var stack, matches;
      stack = new Error().stack;
      if (stack == null) {
        stack = function() {
          try {
            throw new Error();
          } catch (e) {
            return e.stack;
          }
        }();
        if (stack == null)
          throw H.wrapException(new P.UnsupportedError("No stack trace"));
      }
      matches = stack.match(new RegExp("^ *at [^(]*\\((.*):[0-9]*:[0-9]*\\)$", "m"));
      if (matches != null)
        return matches[1];
      matches = stack.match(new RegExp("^[^@]*@(.*):[0-9]*$", "m"));
      if (matches != null)
        return matches[1];
      throw H.wrapException(new P.UnsupportedError("Cannot extract URI from \"" + H.S(stack) + "\""));
    },
    IsolateNatives__processWorkerMessage: [function(sender, e) {
      var msg, t1, functionName, entryPoint, args, message, isSpawnUri, startPaused, replyTo, t2, t3, t4, context;
      msg = new H._Deserializer(true, []).deserialize$1(e.data);
      t1 = J.getInterceptor$asx(msg);
      switch (t1.$index(msg, "command")) {
        case "start":
          init.globalState.currentManagerId = t1.$index(msg, "id");
          functionName = t1.$index(msg, "functionName");
          entryPoint = functionName == null ? init.globalState.entry : H.IsolateNatives__getJSFunctionFromName(functionName);
          args = t1.$index(msg, "args");
          message = new H._Deserializer(true, []).deserialize$1(t1.$index(msg, "msg"));
          isSpawnUri = t1.$index(msg, "isSpawnUri");
          startPaused = t1.$index(msg, "startPaused");
          replyTo = new H._Deserializer(true, []).deserialize$1(t1.$index(msg, "replyTo"));
          t1 = init.globalState.nextIsolateId++;
          t2 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, H.RawReceivePortImpl);
          t3 = P.LinkedHashSet_LinkedHashSet(null, null, null, P.$int);
          t4 = new H.RawReceivePortImpl(0, null, false);
          context = new H._IsolateContext(t1, t2, t3, init.createNewIsolate(), t4, new H.CapabilityImpl(H.random64()), new H.CapabilityImpl(H.random64()), false, false, [], P.LinkedHashSet_LinkedHashSet(null, null, null, null), null, null, false, true, P.LinkedHashSet_LinkedHashSet(null, null, null, null));
          t3.add$1(0, 0);
          context._addRegistration$2(0, t4);
          init.globalState.topEventLoop.events._add$1(new H._IsolateEvent(context, new H.IsolateNatives__processWorkerMessage_closure(entryPoint, args, message, isSpawnUri, startPaused, replyTo), "worker-start"));
          init.globalState.currentContext = context;
          init.globalState.topEventLoop.run$0();
          break;
        case "spawn-worker":
          break;
        case "message":
          if (t1.$index(msg, "port") != null)
            J.send$1$x(t1.$index(msg, "port"), t1.$index(msg, "msg"));
          init.globalState.topEventLoop.run$0();
          break;
        case "close":
          init.globalState.managers.remove$1(0, $.get$IsolateNatives_workerIds().$index(0, sender));
          sender.terminate();
          init.globalState.topEventLoop.run$0();
          break;
        case "log":
          H.IsolateNatives__log(t1.$index(msg, "msg"));
          break;
        case "print":
          if (init.globalState.isWorker === true) {
            t1 = init.globalState.mainManager;
            t2 = P.LinkedHashMap__makeLiteral(["command", "print", "msg", msg]);
            t2 = new H._Serializer(true, P.LinkedHashMap_LinkedHashMap$identity(null, P.$int)).serialize$1(t2);
            t1.toString;
            self.postMessage(t2);
          } else
            P.print(t1.$index(msg, "msg"));
          break;
        case "error":
          throw H.wrapException(t1.$index(msg, "msg"));
      }
    }, null, null, 4, 0, null, 5, [], 6, []],
    IsolateNatives__log: function(msg) {
      var trace, t1, t2, exception;
      if (init.globalState.isWorker === true) {
        t1 = init.globalState.mainManager;
        t2 = P.LinkedHashMap__makeLiteral(["command", "log", "msg", msg]);
        t2 = new H._Serializer(true, P.LinkedHashMap_LinkedHashMap$identity(null, P.$int)).serialize$1(t2);
        t1.toString;
        self.postMessage(t2);
      } else
        try {
          self.console.log(msg);
        } catch (exception) {
          H.unwrapException(exception);
          trace = H.getTraceFromException(exception);
          throw H.wrapException(P.Exception_Exception(trace));
        }
    },
    IsolateNatives__getJSFunctionFromName: function(functionName) {
      return init.globalFunctions[functionName]();
    },
    IsolateNatives__startIsolate: function(topLevel, args, message, isSpawnUri, startPaused, replyTo) {
      var context, t1, t2, t3;
      context = init.globalState.currentContext;
      t1 = context.id;
      $.Primitives_mirrorFunctionCacheName = $.Primitives_mirrorFunctionCacheName + ("_" + t1);
      $.Primitives_mirrorInvokeCacheName = $.Primitives_mirrorInvokeCacheName + ("_" + t1);
      t1 = context.controlPort;
      t2 = init.globalState.currentContext.id;
      t3 = context.pauseCapability;
      J.send$1$x(replyTo, ["spawned", new H._NativeJsSendPort(t1, t2), t3, context.terminateCapability]);
      t2 = new H.IsolateNatives__startIsolate_runStartFunction(topLevel, args, message, isSpawnUri, context);
      if (startPaused === true) {
        context.addPause$2(t3, t3);
        init.globalState.topEventLoop.events._add$1(new H._IsolateEvent(context, t2, "start isolate"));
      } else
        t2.call$0();
    },
    _clone: function(message) {
      return new H._Deserializer(true, []).deserialize$1(new H._Serializer(false, P.LinkedHashMap_LinkedHashMap$identity(null, P.$int)).serialize$1(message));
    },
    startRootIsolate_closure: {
      "^": "Closure:5;__isolate_helper$_box_0,_captured_entry_1",
      call$0: function() {
        this._captured_entry_1.call$1(this.__isolate_helper$_box_0._captured_args_0);
      }
    },
    startRootIsolate_closure0: {
      "^": "Closure:5;__isolate_helper$_box_0,_captured_entry_2",
      call$0: function() {
        this._captured_entry_2.call$2(this.__isolate_helper$_box_0._captured_args_0, null);
      }
    },
    _Manager: {
      "^": "Object;nextIsolateId,currentManagerId,nextManagerId,currentContext,rootContext,topEventLoop,fromCommandLine,isWorker,supportsWorkers,isolates,mainManager,managers,entry",
      _nativeDetectEnvironment$0: function() {
        var t1, t2, t3;
        t1 = self.window == null;
        t2 = self.Worker;
        t3 = t1 && !!self.postMessage;
        this.isWorker = t3;
        if (!t3)
          t2 = t2 != null && $.get$IsolateNatives_thisScript() != null;
        else
          t2 = true;
        this.supportsWorkers = t2;
        this.fromCommandLine = t1 && !t3;
      },
      _nativeInitWorkerMessageHandler$0: function() {
        self.onmessage = function(f, a) {
          return function(e) {
            f(a, e);
          };
        }(H.IsolateNatives__processWorkerMessage, this.mainManager);
        self.dartPrint = self.dartPrint || function(serialize) {
          return function(object) {
            if (self.console && self.console.log)
              self.console.log(object);
            else
              self.postMessage(serialize(object));
          };
        }(H._Manager__serializePrintMessage);
      },
      static: {_Manager__serializePrintMessage: [function(object) {
          var t1 = P.LinkedHashMap__makeLiteral(["command", "print", "msg", object]);
          return new H._Serializer(true, P.LinkedHashMap_LinkedHashMap$identity(null, P.$int)).serialize$1(t1);
        }, null, null, 2, 0, null, 4, []]}
    },
    _IsolateContext: {
      "^": "Object;id,ports,weakPorts,isolateStatics<,controlPort<,pauseCapability,terminateCapability,initialized@,isPaused<,delayedEvents<,pauseTokens,doneHandlers,_scheduledControlEvents,_isExecutingEvent,errorsAreFatal,errorPorts",
      addPause$2: function(authentification, resume) {
        if (!this.pauseCapability.$eq(0, authentification))
          return;
        if (this.pauseTokens.add$1(0, resume) && !this.isPaused)
          this.isPaused = true;
        this._updateGlobalState$0();
      },
      removePause$1: function(resume) {
        var t1, t2, $event;
        if (!this.isPaused)
          return;
        t1 = this.pauseTokens;
        t1.remove$1(0, resume);
        if (t1._collection$_length === 0) {
          for (t1 = this.delayedEvents; t2 = t1.length, t2 !== 0;) {
            if (0 >= t2)
              return H.ioore(t1, 0);
            $event = t1.pop();
            init.globalState.topEventLoop.events.addFirst$1($event);
          }
          this.isPaused = false;
        }
        this._updateGlobalState$0();
      },
      addDoneListener$2: function(responsePort, response) {
        var t1, i, t2;
        if (this.doneHandlers == null)
          this.doneHandlers = [];
        for (t1 = J.getInterceptor(responsePort), i = 0; t2 = this.doneHandlers, i < t2.length; i += 2)
          if (t1.$eq(responsePort, t2[i])) {
            t1 = this.doneHandlers;
            t2 = i + 1;
            if (t2 >= t1.length)
              return H.ioore(t1, t2);
            t1[t2] = response;
            return;
          }
        t2.push(responsePort);
        this.doneHandlers.push(response);
      },
      removeDoneListener$1: function(responsePort) {
        var t1, i, t2;
        if (this.doneHandlers == null)
          return;
        for (t1 = J.getInterceptor(responsePort), i = 0; t2 = this.doneHandlers, i < t2.length; i += 2)
          if (t1.$eq(responsePort, t2[i])) {
            t1 = this.doneHandlers;
            t2 = i + 2;
            t1.toString;
            if (typeof t1 !== "object" || t1 === null || !!t1.fixed$length)
              H.throwExpression(new P.UnsupportedError("removeRange"));
            P.RangeError_checkValidRange(i, t2, t1.length, null, null, null);
            t1.splice(i, t2 - i);
            return;
          }
      },
      setErrorsFatal$2: function(authentification, errorsAreFatal) {
        if (!this.terminateCapability.$eq(0, authentification))
          return;
        this.errorsAreFatal = errorsAreFatal;
      },
      handlePing$3: function(responsePort, pingType, response) {
        var t1 = J.getInterceptor(pingType);
        if (!t1.$eq(pingType, 0))
          t1 = t1.$eq(pingType, 1) && !this._isExecutingEvent;
        else
          t1 = true;
        if (t1) {
          J.send$1$x(responsePort, response);
          return;
        }
        t1 = this._scheduledControlEvents;
        if (t1 == null) {
          t1 = P.ListQueue$(null, null);
          this._scheduledControlEvents = t1;
        }
        t1._add$1(new H._IsolateContext_handlePing_respond(responsePort, response));
      },
      handleKill$2: function(authentification, priority) {
        var t1;
        if (!this.terminateCapability.$eq(0, authentification))
          return;
        t1 = J.getInterceptor(priority);
        if (!t1.$eq(priority, 0))
          t1 = t1.$eq(priority, 1) && !this._isExecutingEvent;
        else
          t1 = true;
        if (t1) {
          this.kill$0();
          return;
        }
        t1 = this._scheduledControlEvents;
        if (t1 == null) {
          t1 = P.ListQueue$(null, null);
          this._scheduledControlEvents = t1;
        }
        t1._add$1(this.get$kill());
      },
      handleUncaughtError$2: [function(error, stackTrace) {
        var t1, message, t2;
        t1 = this.errorPorts;
        if (t1._collection$_length === 0) {
          if (this.errorsAreFatal === true && this === init.globalState.rootContext)
            return;
          if (self.console && self.console.error)
            self.console.error(error, stackTrace);
          else {
            P.print(error);
            if (stackTrace != null)
              P.print(stackTrace);
          }
          return;
        }
        message = Array(2);
        message.fixed$length = Array;
        message[0] = J.toString$0(error);
        message[1] = stackTrace == null ? null : J.toString$0(stackTrace);
        t2 = new P.LinkedHashSetIterator(t1, t1._collection$_modifications, null, null);
        t2.$builtinTypeInfo = [null];
        t2._collection$_cell = t1._collection$_first;
        for (; t2.moveNext$0();)
          J.send$1$x(t2._collection$_current, message);
      }, "call$2", "get$handleUncaughtError", 4, 0, 6],
      eval$1: function(code) {
        var old, result, oldIsExecutingEvent, e, s, exception, t1;
        old = init.globalState.currentContext;
        init.globalState.currentContext = this;
        $ = this.isolateStatics;
        result = null;
        oldIsExecutingEvent = this._isExecutingEvent;
        this._isExecutingEvent = true;
        try {
          result = code.call$0();
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          this.handleUncaughtError$2(e, s);
          if (this.errorsAreFatal === true) {
            this.kill$0();
            if (this === init.globalState.rootContext)
              throw exception;
          }
        } finally {
          this._isExecutingEvent = oldIsExecutingEvent;
          init.globalState.currentContext = old;
          if (old != null)
            $ = old.get$isolateStatics();
          if (this._scheduledControlEvents != null)
            for (; t1 = this._scheduledControlEvents, !t1.get$isEmpty(t1);)
              this._scheduledControlEvents.removeFirst$0().call$0();
        }
        return result;
      },
      handleControlMessage$1: function(message) {
        var t1 = J.getInterceptor$asx(message);
        switch (t1.$index(message, 0)) {
          case "pause":
            this.addPause$2(t1.$index(message, 1), t1.$index(message, 2));
            break;
          case "resume":
            this.removePause$1(t1.$index(message, 1));
            break;
          case "add-ondone":
            this.addDoneListener$2(t1.$index(message, 1), t1.$index(message, 2));
            break;
          case "remove-ondone":
            this.removeDoneListener$1(t1.$index(message, 1));
            break;
          case "set-errors-fatal":
            this.setErrorsFatal$2(t1.$index(message, 1), t1.$index(message, 2));
            break;
          case "ping":
            this.handlePing$3(t1.$index(message, 1), t1.$index(message, 2), t1.$index(message, 3));
            break;
          case "kill":
            this.handleKill$2(t1.$index(message, 1), t1.$index(message, 2));
            break;
          case "getErrors":
            this.errorPorts.add$1(0, t1.$index(message, 1));
            break;
          case "stopErrors":
            this.errorPorts.remove$1(0, t1.$index(message, 1));
            break;
        }
      },
      lookup$1: function(portId) {
        return this.ports.$index(0, portId);
      },
      _addRegistration$2: function(portId, port) {
        var t1 = this.ports;
        if (t1.containsKey$1(portId))
          throw H.wrapException(P.Exception_Exception("Registry: ports must be registered only once."));
        t1.$indexSet(0, portId, port);
      },
      _updateGlobalState$0: function() {
        if (this.ports.__js_helper$_length - this.weakPorts._collection$_length > 0 || this.isPaused || !this.initialized)
          init.globalState.isolates.$indexSet(0, this.id, this);
        else
          this.kill$0();
      },
      kill$0: [function() {
        var t1, t2, t3, i, responsePort;
        t1 = this._scheduledControlEvents;
        if (t1 != null)
          t1.clear$0(0);
        t1 = this.ports;
        t2 = t1.get$values(t1);
        t3 = new H.MappedIterator(null, J.get$iterator$ax(t2._iterable), t2._f);
        t3.$builtinTypeInfo = [H.getTypeArgumentByIndex(t2, 0), H.getTypeArgumentByIndex(t2, 1)];
        for (; t3.moveNext$0();)
          t3.__internal$_current._close$0();
        t1.clear$0(0);
        this.weakPorts.clear$0(0);
        init.globalState.isolates.remove$1(0, this.id);
        this.errorPorts.clear$0(0);
        if (this.doneHandlers != null) {
          for (i = 0; t1 = this.doneHandlers, t2 = t1.length, i < t2; i += 2) {
            responsePort = t1[i];
            t3 = i + 1;
            if (t3 >= t2)
              return H.ioore(t1, t3);
            J.send$1$x(responsePort, t1[t3]);
          }
          this.doneHandlers = null;
        }
      }, "call$0", "get$kill", 0, 0, 7]
    },
    _IsolateContext_handlePing_respond: {
      "^": "Closure:7;_captured_responsePort_0,_captured_response_1",
      call$0: [function() {
        J.send$1$x(this._captured_responsePort_0, this._captured_response_1);
      }, null, null, 0, 0, null, "call"]
    },
    _EventLoop: {
      "^": "Object;events,_activeJsAsyncCount",
      dequeue$0: function() {
        var t1 = this.events;
        if (t1._head === t1._tail)
          return;
        return t1.removeFirst$0();
      },
      runIteration$0: function() {
        var $event, t1, t2;
        $event = this.dequeue$0();
        if ($event == null) {
          if (init.globalState.rootContext != null && init.globalState.isolates.containsKey$1(init.globalState.rootContext.id) && init.globalState.fromCommandLine === true && init.globalState.rootContext.ports.__js_helper$_length === 0)
            H.throwExpression(P.Exception_Exception("Program exited with open ReceivePorts."));
          t1 = init.globalState;
          if (t1.isWorker === true && t1.isolates.__js_helper$_length === 0 && t1.topEventLoop._activeJsAsyncCount === 0) {
            t1 = t1.mainManager;
            t2 = P.LinkedHashMap__makeLiteral(["command", "close"]);
            t2 = new H._Serializer(true, P.LinkedHashMap_LinkedHashMap$identity(null, P.$int)).serialize$1(t2);
            t1.toString;
            self.postMessage(t2);
          }
          return false;
        }
        $event.process$0();
        return true;
      },
      _runHelper$0: function() {
        if (self.window != null)
          new H._EventLoop__runHelper_next(this).call$0();
        else
          for (; this.runIteration$0();)
            ;
      },
      run$0: [function() {
        var e, trace, exception, t1, t2;
        if (init.globalState.isWorker !== true)
          this._runHelper$0();
        else
          try {
            this._runHelper$0();
          } catch (exception) {
            t1 = H.unwrapException(exception);
            e = t1;
            trace = H.getTraceFromException(exception);
            t1 = init.globalState.mainManager;
            t2 = P.LinkedHashMap__makeLiteral(["command", "error", "msg", H.S(e) + "\n" + H.S(trace)]);
            t2 = new H._Serializer(true, P.LinkedHashMap_LinkedHashMap$identity(null, P.$int)).serialize$1(t2);
            t1.toString;
            self.postMessage(t2);
          }
      }, "call$0", "get$run", 0, 0, 7]
    },
    _EventLoop__runHelper_next: {
      "^": "Closure:7;__isolate_helper$_captured_this_0",
      call$0: [function() {
        if (!this.__isolate_helper$_captured_this_0.runIteration$0())
          return;
        P.Timer_Timer(C.Duration_0, this);
      }, null, null, 0, 0, null, "call"]
    },
    _IsolateEvent: {
      "^": "Object;isolate,fn,message>",
      process$0: function() {
        var t1 = this.isolate;
        if (t1.get$isPaused()) {
          t1.get$delayedEvents().push(this);
          return;
        }
        t1.eval$1(this.fn);
      }
    },
    _MainManagerStub: {
      "^": "Object;"
    },
    IsolateNatives__processWorkerMessage_closure: {
      "^": "Closure:5;_captured_entryPoint_0,_captured_args_1,_captured_message_2,_captured_isSpawnUri_3,_captured_startPaused_4,_captured_replyTo_5",
      call$0: function() {
        H.IsolateNatives__startIsolate(this._captured_entryPoint_0, this._captured_args_1, this._captured_message_2, this._captured_isSpawnUri_3, this._captured_startPaused_4, this._captured_replyTo_5);
      }
    },
    IsolateNatives__startIsolate_runStartFunction: {
      "^": "Closure:7;_captured_topLevel_0,_captured_args_1,_captured_message_2,_captured_isSpawnUri_3,_captured_context_4",
      call$0: function() {
        var t1, t2, t3;
        this._captured_context_4.set$initialized(true);
        if (this._captured_isSpawnUri_3 !== true)
          this._captured_topLevel_0.call$1(this._captured_message_2);
        else {
          t1 = this._captured_topLevel_0;
          t2 = H.getDynamicRuntimeType();
          t3 = H.buildFunctionType(t2, [t2, t2])._isTest$1(t1);
          if (t3)
            t1.call$2(this._captured_args_1, this._captured_message_2);
          else {
            t2 = H.buildFunctionType(t2, [t2])._isTest$1(t1);
            if (t2)
              t1.call$1(this._captured_args_1);
            else
              t1.call$0();
          }
        }
      }
    },
    _BaseSendPort: {
      "^": "Object;"
    },
    _NativeJsSendPort: {
      "^": "_BaseSendPort;_receivePort,_isolateId",
      send$1: function(_, message) {
        var isolate, t1, msg, t2;
        isolate = init.globalState.isolates.$index(0, this._isolateId);
        if (isolate == null)
          return;
        t1 = this._receivePort;
        if (t1.get$_isClosed())
          return;
        msg = H._clone(message);
        if (isolate.get$controlPort() === t1) {
          isolate.handleControlMessage$1(msg);
          return;
        }
        t1 = init.globalState.topEventLoop;
        t2 = "receive " + H.S(message);
        t1.events._add$1(new H._IsolateEvent(isolate, new H._NativeJsSendPort_send_closure(this, msg), t2));
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H._NativeJsSendPort && J.$eq(this._receivePort, other._receivePort);
      },
      get$hashCode: function(_) {
        return this._receivePort.get$_id();
      }
    },
    _NativeJsSendPort_send_closure: {
      "^": "Closure:5;__isolate_helper$_captured_this_0,_captured_msg_1",
      call$0: function() {
        var t1 = this.__isolate_helper$_captured_this_0._receivePort;
        if (!t1.get$_isClosed())
          t1.__isolate_helper$_add$1(this._captured_msg_1);
      }
    },
    _WorkerSendPort: {
      "^": "_BaseSendPort;_workerId,_receivePortId,_isolateId",
      send$1: function(_, message) {
        var t1, workerMessage, manager;
        t1 = P.LinkedHashMap__makeLiteral(["command", "message", "port", this, "msg", message]);
        workerMessage = new H._Serializer(true, P.LinkedHashMap_LinkedHashMap$identity(null, P.$int)).serialize$1(t1);
        if (init.globalState.isWorker === true) {
          init.globalState.mainManager.toString;
          self.postMessage(workerMessage);
        } else {
          manager = init.globalState.managers.$index(0, this._workerId);
          if (manager != null)
            manager.postMessage(workerMessage);
        }
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H._WorkerSendPort && J.$eq(this._workerId, other._workerId) && J.$eq(this._isolateId, other._isolateId) && J.$eq(this._receivePortId, other._receivePortId);
      },
      get$hashCode: function(_) {
        return J.$xor$n(J.$xor$n(J.$shl$n(this._workerId, 16), J.$shl$n(this._isolateId, 8)), this._receivePortId);
      }
    },
    RawReceivePortImpl: {
      "^": "Object;_id<,_handler,_isClosed<",
      _close$0: function() {
        this._isClosed = true;
        this._handler = null;
      },
      close$0: function(_) {
        var t1, t2;
        if (this._isClosed)
          return;
        this._isClosed = true;
        this._handler = null;
        t1 = init.globalState.currentContext;
        t2 = this._id;
        t1.ports.remove$1(0, t2);
        t1.weakPorts.remove$1(0, t2);
        t1._updateGlobalState$0();
      },
      __isolate_helper$_add$1: function(dataEvent) {
        if (this._isClosed)
          return;
        this._handler$1(dataEvent);
      },
      _handler$1: function(arg0) {
        return this._handler.call$1(arg0);
      },
      $isRawReceivePort: 1
    },
    TimerImpl: {
      "^": "Object;_once,_inEventLoop,_handle",
      cancel$0: function() {
        if (self.setTimeout != null) {
          if (this._inEventLoop)
            throw H.wrapException(new P.UnsupportedError("Timer in event loop cannot be canceled."));
          if (this._handle == null)
            return;
          H.leaveJsAsync();
          var t1 = this._handle;
          if (this._once)
            self.clearTimeout(t1);
          else
            self.clearInterval(t1);
          this._handle = null;
        } else
          throw H.wrapException(new P.UnsupportedError("Canceling a timer."));
      },
      get$isActive: function() {
        return this._handle != null;
      },
      TimerImpl$periodic$2: function(milliseconds, callback) {
        if (self.setTimeout != null) {
          ++init.globalState.topEventLoop._activeJsAsyncCount;
          this._handle = self.setInterval(H.convertDartClosureToJS(new H.TimerImpl$periodic_closure(this, callback), 0), milliseconds);
        } else
          throw H.wrapException(new P.UnsupportedError("Periodic timer."));
      },
      TimerImpl$2: function(milliseconds, callback) {
        var t1, t2;
        if (milliseconds === 0)
          t1 = self.setTimeout == null || init.globalState.isWorker === true;
        else
          t1 = false;
        if (t1) {
          this._handle = 1;
          t1 = init.globalState.topEventLoop;
          t2 = init.globalState.currentContext;
          t1.events._add$1(new H._IsolateEvent(t2, new H.TimerImpl_internalCallback(this, callback), "timer"));
          this._inEventLoop = true;
        } else if (self.setTimeout != null) {
          ++init.globalState.topEventLoop._activeJsAsyncCount;
          this._handle = self.setTimeout(H.convertDartClosureToJS(new H.TimerImpl_internalCallback0(this, callback), 0), milliseconds);
        } else
          throw H.wrapException(new P.UnsupportedError("Timer greater than 0."));
      },
      static: {TimerImpl$: function(milliseconds, callback) {
          var t1 = new H.TimerImpl(true, false, null);
          t1.TimerImpl$2(milliseconds, callback);
          return t1;
        }, TimerImpl$periodic: function(milliseconds, callback) {
          var t1 = new H.TimerImpl(false, false, null);
          t1.TimerImpl$periodic$2(milliseconds, callback);
          return t1;
        }}
    },
    TimerImpl_internalCallback: {
      "^": "Closure:7;__isolate_helper$_captured_this_0,_captured_callback_1",
      call$0: function() {
        this.__isolate_helper$_captured_this_0._handle = null;
        this._captured_callback_1.call$0();
      }
    },
    TimerImpl_internalCallback0: {
      "^": "Closure:7;__isolate_helper$_captured_this_2,_captured_callback_3",
      call$0: [function() {
        this.__isolate_helper$_captured_this_2._handle = null;
        H.leaveJsAsync();
        this._captured_callback_3.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    TimerImpl$periodic_closure: {
      "^": "Closure:5;__isolate_helper$_captured_this_0,_captured_callback_1",
      call$0: [function() {
        this._captured_callback_1.call$1(this.__isolate_helper$_captured_this_0);
      }, null, null, 0, 0, null, "call"]
    },
    CapabilityImpl: {
      "^": "Object;_id<",
      get$hashCode: function(_) {
        var hash = this._id;
        hash = C.JSInt_methods._shrOtherPositive$1(hash, 0) ^ C.JSInt_methods._tdivFast$1(hash, 4294967296);
        hash = (~hash >>> 0) + (hash << 15 >>> 0) & 4294967295;
        hash = ((hash ^ hash >>> 12) >>> 0) * 5 & 4294967295;
        hash = ((hash ^ hash >>> 4) >>> 0) * 2057 & 4294967295;
        return (hash ^ hash >>> 16) >>> 0;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (other === this)
          return true;
        if (other instanceof H.CapabilityImpl)
          return this._id === other._id;
        return false;
      }
    },
    _Serializer: {
      "^": "Object;_serializeSendPorts,serializedObjectIds",
      serialize$1: [function(x) {
        var t1, serializationId, serializeTearOff, t2, $name;
        if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
          return x;
        t1 = this.serializedObjectIds;
        serializationId = t1.$index(0, x);
        if (serializationId != null)
          return ["ref", serializationId];
        t1.$indexSet(0, x, t1.__js_helper$_length);
        t1 = J.getInterceptor(x);
        if (!!t1.$isNativeByteBuffer)
          return ["buffer", x];
        if (!!t1.$isNativeTypedData)
          return ["typed", x];
        if (!!t1.$isJSIndexable)
          return this.serializeJSIndexable$1(x);
        if (!!t1.$isInternalMap) {
          serializeTearOff = this.get$serialize();
          t2 = x.get$keys();
          t2 = H.MappedIterable_MappedIterable(t2, serializeTearOff, H.getRuntimeTypeArgument(t2, "Iterable", 0), null);
          t2 = P.List_List$from(t2, true, H.getRuntimeTypeArgument(t2, "Iterable", 0));
          t1 = t1.get$values(x);
          t1 = H.MappedIterable_MappedIterable(t1, serializeTearOff, H.getRuntimeTypeArgument(t1, "Iterable", 0), null);
          return ["map", t2, P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "Iterable", 0))];
        }
        if (!!t1.$isJSObject)
          return this.serializeJSObject$1(x);
        if (!!t1.$isInterceptor)
          this.unsupported$1(x);
        if (!!t1.$isRawReceivePort)
          this.unsupported$2(x, "RawReceivePorts can't be transmitted:");
        if (!!t1.$is_NativeJsSendPort)
          return this.serializeJsSendPort$1(x);
        if (!!t1.$is_WorkerSendPort)
          return this.serializeWorkerSendPort$1(x);
        if (!!t1.$isClosure) {
          $name = x.$name;
          if ($name == null)
            this.unsupported$2(x, "Closures can't be transmitted:");
          return ["function", $name];
        }
        return ["dart", init.classIdExtractor(x), this.serializeArrayInPlace$1(init.classFieldsExtractor(x))];
      }, "call$1", "get$serialize", 2, 0, 8, 7, []],
      unsupported$2: function(x, message) {
        throw H.wrapException(new P.UnsupportedError(H.S(message == null ? "Can't transmit:" : message) + " " + H.S(x)));
      },
      unsupported$1: function(x) {
        return this.unsupported$2(x, null);
      },
      serializeJSIndexable$1: function(indexable) {
        var serialized = this.serializeArray$1(indexable);
        if (!!indexable.fixed$length)
          return ["fixed", serialized];
        if (!indexable.fixed$length)
          return ["extendable", serialized];
        if (!indexable.immutable$list)
          return ["mutable", serialized];
        if (indexable.constructor === Array)
          return ["const", serialized];
        this.unsupported$2(indexable, "Can't serialize indexable: ");
      },
      serializeArray$1: function(x) {
        var serialized, i, t1;
        serialized = [];
        C.JSArray_methods.set$length(serialized, x.length);
        for (i = 0; i < x.length; ++i) {
          t1 = this.serialize$1(x[i]);
          if (i >= serialized.length)
            return H.ioore(serialized, i);
          serialized[i] = t1;
        }
        return serialized;
      },
      serializeArrayInPlace$1: function(x) {
        var i;
        for (i = 0; i < x.length; ++i)
          C.JSArray_methods.$indexSet(x, i, this.serialize$1(x[i]));
        return x;
      },
      serializeJSObject$1: function(x) {
        var keys, values, i, t1;
        if (!!x.constructor && x.constructor !== Object)
          this.unsupported$2(x, "Only plain JS Objects are supported:");
        keys = Object.keys(x);
        values = [];
        C.JSArray_methods.set$length(values, keys.length);
        for (i = 0; i < keys.length; ++i) {
          t1 = this.serialize$1(x[keys[i]]);
          if (i >= values.length)
            return H.ioore(values, i);
          values[i] = t1;
        }
        return ["js-object", keys, values];
      },
      serializeWorkerSendPort$1: function(x) {
        if (this._serializeSendPorts)
          return ["sendport", x._workerId, x._isolateId, x._receivePortId];
        return ["raw sendport", x];
      },
      serializeJsSendPort$1: function(x) {
        if (this._serializeSendPorts)
          return ["sendport", init.globalState.currentManagerId, x._isolateId, x._receivePort.get$_id()];
        return ["raw sendport", x];
      }
    },
    _Deserializer: {
      "^": "Object;_adjustSendPorts,deserializedObjects",
      deserialize$1: [function(x) {
        var serializationId, t1, result, classId, fields, emptyInstance;
        if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
          return x;
        if (typeof x !== "object" || x === null || x.constructor !== Array)
          throw H.wrapException(P.ArgumentError$("Bad serialized message: " + H.S(x)));
        switch (C.JSArray_methods.get$first(x)) {
          case "ref":
            if (1 >= x.length)
              return H.ioore(x, 1);
            serializationId = x[1];
            t1 = this.deserializedObjects;
            if (serializationId >>> 0 !== serializationId || serializationId >= t1.length)
              return H.ioore(t1, serializationId);
            return t1[serializationId];
          case "buffer":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            return result;
          case "typed":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            return result;
          case "fixed":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            t1 = this.deserializeArrayInPlace$1(result);
            t1.$builtinTypeInfo = [null];
            t1.fixed$length = Array;
            return t1;
          case "extendable":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            t1 = this.deserializeArrayInPlace$1(result);
            t1.$builtinTypeInfo = [null];
            return t1;
          case "mutable":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            return this.deserializeArrayInPlace$1(result);
          case "const":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            t1 = this.deserializeArrayInPlace$1(result);
            t1.$builtinTypeInfo = [null];
            t1.fixed$length = Array;
            return t1;
          case "map":
            return this.deserializeMap$1(x);
          case "sendport":
            return this.deserializeSendPort$1(x);
          case "raw sendport":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = x[1];
            this.deserializedObjects.push(result);
            return result;
          case "js-object":
            return this.deserializeJSObject$1(x);
          case "function":
            if (1 >= x.length)
              return H.ioore(x, 1);
            result = init.globalFunctions[x[1]]();
            this.deserializedObjects.push(result);
            return result;
          case "dart":
            t1 = x.length;
            if (1 >= t1)
              return H.ioore(x, 1);
            classId = x[1];
            if (2 >= t1)
              return H.ioore(x, 2);
            fields = x[2];
            emptyInstance = init.instanceFromClassId(classId);
            this.deserializedObjects.push(emptyInstance);
            this.deserializeArrayInPlace$1(fields);
            return init.initializeEmptyInstance(classId, emptyInstance, fields);
          default:
            throw H.wrapException("couldn't deserialize: " + H.S(x));
        }
      }, "call$1", "get$deserialize", 2, 0, 8, 7, []],
      deserializeArrayInPlace$1: function(x) {
        var t1, i, t2;
        t1 = J.getInterceptor$asx(x);
        i = 0;
        while (true) {
          t2 = t1.get$length(x);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          t1.$indexSet(x, i, this.deserialize$1(t1.$index(x, i)));
          ++i;
        }
        return x;
      },
      deserializeMap$1: function(x) {
        var t1, keys, values, result, t2, i;
        t1 = x.length;
        if (1 >= t1)
          return H.ioore(x, 1);
        keys = x[1];
        if (2 >= t1)
          return H.ioore(x, 2);
        values = x[2];
        result = P.LinkedHashMap__makeEmpty();
        this.deserializedObjects.push(result);
        keys = J.map$1$ax(keys, this.get$deserialize()).toList$0(0);
        for (t1 = J.getInterceptor$asx(keys), t2 = J.getInterceptor$asx(values), i = 0; i < t1.get$length(keys); ++i)
          result.$indexSet(0, t1.$index(keys, i), this.deserialize$1(t2.$index(values, i)));
        return result;
      },
      deserializeSendPort$1: function(x) {
        var t1, managerId, isolateId, receivePortId, isolate, receivePort, result;
        t1 = x.length;
        if (1 >= t1)
          return H.ioore(x, 1);
        managerId = x[1];
        if (2 >= t1)
          return H.ioore(x, 2);
        isolateId = x[2];
        if (3 >= t1)
          return H.ioore(x, 3);
        receivePortId = x[3];
        if (J.$eq(managerId, init.globalState.currentManagerId)) {
          isolate = init.globalState.isolates.$index(0, isolateId);
          if (isolate == null)
            return;
          receivePort = isolate.lookup$1(receivePortId);
          if (receivePort == null)
            return;
          result = new H._NativeJsSendPort(receivePort, isolateId);
        } else
          result = new H._WorkerSendPort(managerId, receivePortId, isolateId);
        this.deserializedObjects.push(result);
        return result;
      },
      deserializeJSObject$1: function(x) {
        var t1, keys, values, o, t2, i, t3;
        t1 = x.length;
        if (1 >= t1)
          return H.ioore(x, 1);
        keys = x[1];
        if (2 >= t1)
          return H.ioore(x, 2);
        values = x[2];
        o = {};
        this.deserializedObjects.push(o);
        t1 = J.getInterceptor$asx(keys);
        t2 = J.getInterceptor$asx(values);
        i = 0;
        while (true) {
          t3 = t1.get$length(keys);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          o[t1.$index(keys, i)] = this.deserialize$1(t2.$index(values, i));
          ++i;
        }
        return o;
      }
    }
  }], ["_js_helper", "dart:_js_helper",, H, {
    "^": "",
    ConstantMap__throwUnmodifiable: function() {
      throw H.wrapException(new P.UnsupportedError("Cannot modify unmodifiable Map"));
    },
    jsConstructorNameToRti: function(constructorName) {
      return init.getTypeFromName(constructorName);
    },
    getType: [function(index) {
      return init.types[index];
    }, null, null, 2, 0, null, 8, []],
    isJsIndexable: function(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return !!J.getInterceptor(object).$isJavaScriptIndexingBehavior;
    },
    S: function(value) {
      var res;
      if (typeof value === "string")
        return value;
      if (typeof value === "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      res = J.toString$0(value);
      if (typeof res !== "string")
        throw H.wrapException(H._argumentError(value));
      return res;
    },
    throwInvalidReflectionError: function(memberName) {
      throw H.wrapException(new P.UnsupportedError("Can't use '" + H.S(memberName) + "' in reflection because it is not included in a @MirrorsUsed annotation."));
    },
    Primitives_objectHashCode: function(object) {
      var hash = object.$identityHash;
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object.$identityHash = hash;
      }
      return hash;
    },
    Primitives__parseIntError: function(source, handleError) {
      if (handleError == null)
        throw H.wrapException(new P.FormatException(source, null, null));
      return handleError.call$1(source);
    },
    Primitives_parseInt: function(source, radix, handleError) {
      var match, decimalMatch, maxCharCode, digitsPart, t1, i;
      H.checkString(source);
      match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return H.Primitives__parseIntError(source, handleError);
      if (3 >= match.length)
        return H.ioore(match, 3);
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return H.Primitives__parseIntError(source, handleError);
      }
      if (radix < 2 || radix > 36)
        throw H.wrapException(P.RangeError$range(radix, 2, 36, "radix", null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((C.JSString_methods.codeUnitAt$1(digitsPart, i) | 32) > maxCharCode)
            return H.Primitives__parseIntError(source, handleError);
      }
      return parseInt(source, radix);
    },
    Primitives_objectTypeName: function(object) {
      var $name, decompiled;
      $name = C.JS_CONST_8ZY(J.getInterceptor(object));
      if ($name === "Object") {
        decompiled = String(object.constructor).match(/^\s*function\s*([\w$]*)\s*\(/)[1];
        if (typeof decompiled === "string")
          $name = /^\w+$/.test(decompiled) ? decompiled : $name;
      }
      if ($name.length > 1 && C.JSString_methods.codeUnitAt$1($name, 0) === 36)
        $name = C.JSString_methods.substring$1($name, 1);
      return ($name + H.joinArguments(H.getRuntimeTypeInfo(object), 0, null)).replace(/[^<,> ]+/g, function(m) {
        return init.mangledGlobalNames[m] || m;
      });
    },
    Primitives_objectToHumanReadableString: function(object) {
      return "Instance of '" + H.Primitives_objectTypeName(object) + "'";
    },
    Primitives__fromCharCodeApply: function(array) {
      var end, result, i, i0, chunkEnd;
      end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints: function(codePoints) {
      var a, t1, _i, i;
      a = [];
      a.$builtinTypeInfo = [P.$int];
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, H.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (typeof i !== "number" || Math.floor(i) !== i)
          throw H.wrapException(H._argumentError(i));
        if (i <= 65535)
          a.push(i);
        else if (i <= 1114111) {
          a.push(55296 + (C.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          a.push(56320 + (i & 1023));
        } else
          throw H.wrapException(H._argumentError(i));
      }
      return H.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes: function(charCodes) {
      var t1, _i, t2, i;
      for (t1 = charCodes.length, _i = 0; t2 = charCodes.length, _i < t2; t2 === t1 || (0, H.throwConcurrentModificationError)(charCodes), ++_i) {
        i = charCodes[_i];
        if (typeof i !== "number" || Math.floor(i) !== i)
          throw H.wrapException(H._argumentError(i));
        if (i < 0)
          throw H.wrapException(H._argumentError(i));
        if (i > 65535)
          return H.Primitives_stringFromCodePoints(charCodes);
      }
      return H.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List: function(charCodes, start, end) {
      var t1, i, result, i0, chunkEnd;
      t1 = J.getInterceptor$n(end);
      if (t1.$le(end, 500) && start === 0 && t1.$eq(end, charCodes.length))
        return String.fromCharCode.apply(null, charCodes);
      if (typeof end !== "number")
        return H.iae(end);
      i = start;
      result = "";
      for (; i < end; i = i0) {
        i0 = i + 500;
        if (i0 < end)
          chunkEnd = i0;
        else
          chunkEnd = end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode: function(charCode) {
      var bits;
      if (typeof charCode !== "number")
        return H.iae(charCode);
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((55296 | C.JSInt_methods._shrOtherPositive$1(bits, 10)) >>> 0, 56320 | bits & 1023);
        }
      }
      throw H.wrapException(P.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate: function(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver.millisecondsSinceEpoch);
      return receiver.date;
    },
    Primitives_getYear: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : H.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : H.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : H.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : H.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : H.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds: function(receiver) {
      return receiver.isUtc ? H.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : H.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_getProperty: function(object, key) {
      if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
        throw H.wrapException(H._argumentError(object));
      return object[key];
    },
    Primitives_setProperty: function(object, key, value) {
      if (object == null || typeof object === "boolean" || typeof object === "number" || typeof object === "string")
        throw H.wrapException(H._argumentError(object));
      object[key] = value;
    },
    Primitives_functionNoSuchMethod: function($function, positionalArguments, namedArguments) {
      var t1, $arguments, namedArgumentList;
      t1 = {};
      t1._captured_argumentCount_0 = 0;
      $arguments = [];
      namedArgumentList = [];
      t1._captured_argumentCount_0 = positionalArguments.length;
      C.JSArray_methods.addAll$1($arguments, positionalArguments);
      t1._captured_names_1 = "";
      if (namedArguments != null && !namedArguments.get$isEmpty(namedArguments))
        namedArguments.forEach$1(0, new H.Primitives_functionNoSuchMethod_closure(t1, $arguments, namedArgumentList));
      return J.noSuchMethod$1($function, new H.JSInvocationMirror(C.Symbol_call, "call$" + t1._captured_argumentCount_0 + t1._captured_names_1, 0, $arguments, namedArgumentList, null));
    },
    Primitives_applyFunctionWithPositionalArguments: function($function, positionalArguments) {
      var $arguments, t1;
      $arguments = positionalArguments instanceof Array ? positionalArguments : P.List_List$from(positionalArguments, true, null);
      t1 = $arguments.length;
      if (t1 === 0) {
        if (!!$function.call$0)
          return $function.call$0();
      } else if (t1 === 1) {
        if (!!$function.call$1)
          return $function.call$1($arguments[0]);
      } else if (t1 === 2) {
        if (!!$function.call$2)
          return $function.call$2($arguments[0], $arguments[1]);
      } else if (t1 === 3)
        if (!!$function.call$3)
          return $function.call$3($arguments[0], $arguments[1], $arguments[2]);
      return H.Primitives__genericApplyFunctionWithPositionalArguments($function, $arguments);
    },
    Primitives__genericApplyFunctionWithPositionalArguments: function($function, $arguments) {
      var argumentCount, jsFunction, info, requiredArgumentCount, maxArgumentCount, pos;
      argumentCount = $arguments.length;
      jsFunction = $function["call$" + argumentCount];
      if (jsFunction == null) {
        jsFunction = J.getInterceptor($function)["call*"];
        if (jsFunction == null)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        info = H.ReflectionInfo_ReflectionInfo(jsFunction);
        requiredArgumentCount = info.requiredParameterCount;
        maxArgumentCount = requiredArgumentCount + info.optionalParameterCount;
        if (info.areOptionalParametersNamed || requiredArgumentCount > argumentCount || maxArgumentCount < argumentCount)
          return H.Primitives_functionNoSuchMethod($function, $arguments, null);
        $arguments = P.List_List$from($arguments, true, null);
        for (pos = argumentCount; pos < maxArgumentCount; ++pos)
          C.JSArray_methods.add$1($arguments, init.metadata[info.defaultValue$1(0, pos)]);
      }
      return jsFunction.apply($function, $arguments);
    },
    JsCache_allocate: function() {
      var result = Object.create(null);
      result.x = 0;
      delete result.x;
      return result;
    },
    iae: function(argument) {
      throw H.wrapException(H._argumentError(argument));
    },
    ioore: function(receiver, index) {
      if (receiver == null)
        J.get$length$asx(receiver);
      if (typeof index !== "number" || Math.floor(index) !== index)
        H.iae(index);
      throw H.wrapException(P.RangeError$value(index, null, null));
    },
    _argumentError: function(object) {
      return new P.ArgumentError(true, object, null, null);
    },
    checkNum: function(value) {
      if (typeof value !== "number")
        throw H.wrapException(H._argumentError(value));
      return value;
    },
    checkInt: function(value) {
      if (typeof value !== "number" || Math.floor(value) !== value)
        throw H.wrapException(H._argumentError(value));
      return value;
    },
    checkString: function(value) {
      if (typeof value !== "string")
        throw H.wrapException(H._argumentError(value));
      return value;
    },
    wrapException: function(ex) {
      var wrapper;
      if (ex == null)
        ex = new P.NullThrownError();
      wrapper = new Error();
      wrapper.dartException = ex;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: H.toStringWrapper});
        wrapper.name = "";
      } else
        wrapper.toString = H.toStringWrapper;
      return wrapper;
    },
    toStringWrapper: [function() {
      return J.toString$0(this.dartException);
    }, null, null, 0, 0, null],
    throwExpression: function(ex) {
      throw H.wrapException(ex);
    },
    throwConcurrentModificationError: function(collection) {
      throw H.wrapException(new P.ConcurrentModificationError(collection));
    },
    unwrapException: function(ex) {
      var t1, message, number, ieErrorCode, t2, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match;
      t1 = new H.unwrapException_saveStackTrace(ex);
      if (ex == null)
        return;
      if (ex instanceof H.ExceptionAndStackTrace)
        return t1.call$1(ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return t1.call$1(ex.dartException);
      else if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((C.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return t1.call$1(H.JsNoSuchMethodError$(H.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              t2 = H.S(message) + " (Error " + ieErrorCode + ")";
              return t1.call$1(new H.NullError(t2, null));
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.get$TypeErrorDecoder_nullPropertyPattern();
        $.get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return t1.call$1(H.JsNoSuchMethodError$(message, match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return t1.call$1(H.JsNoSuchMethodError$(message, match));
          } else {
            match = nullCall.matchTypeError$1(message);
            if (match == null) {
              match = nullLiteralCall.matchTypeError$1(message);
              if (match == null) {
                match = undefCall.matchTypeError$1(message);
                if (match == null) {
                  match = undefLiteralCall.matchTypeError$1(message);
                  if (match == null) {
                    match = nullProperty.matchTypeError$1(message);
                    if (match == null) {
                      match = nullLiteralCall.matchTypeError$1(message);
                      if (match == null) {
                        match = undefProperty.matchTypeError$1(message);
                        if (match == null) {
                          match = undefLiteralProperty.matchTypeError$1(message);
                          t2 = match != null;
                        } else
                          t2 = true;
                      } else
                        t2 = true;
                    } else
                      t2 = true;
                  } else
                    t2 = true;
                } else
                  t2 = true;
              } else
                t2 = true;
            } else
              t2 = true;
            if (t2)
              return t1.call$1(new H.NullError(message, match == null ? null : match.method));
          }
        }
        return t1.call$1(new H.UnknownJsTypeError(typeof message === "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message === "string" && message.indexOf("call stack") !== -1)
          return new P.StackOverflowError();
        return t1.call$1(new P.ArgumentError(false, null, null, null));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message === "string" && message === "too much recursion")
          return new P.StackOverflowError();
      return ex;
    },
    getTraceFromException: function(exception) {
      if (exception instanceof H.ExceptionAndStackTrace)
        return exception.stackTrace;
      return new H._StackTrace(exception, null);
    },
    objectHashCode: function(object) {
      if (object == null || typeof object != 'object')
        return J.get$hashCode$(object);
      else
        return H.Primitives_objectHashCode(object);
    },
    fillLiteralMap: function(keyValuePairs, result) {
      var $length, index, index0, index1;
      $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    invokeClosure: [function(closure, isolate, numberOfArguments, arg1, arg2, arg3, arg4) {
      var t1 = J.getInterceptor(numberOfArguments);
      if (t1.$eq(numberOfArguments, 0))
        return H._callInIsolate(isolate, new H.invokeClosure_closure(closure));
      else if (t1.$eq(numberOfArguments, 1))
        return H._callInIsolate(isolate, new H.invokeClosure_closure0(closure, arg1));
      else if (t1.$eq(numberOfArguments, 2))
        return H._callInIsolate(isolate, new H.invokeClosure_closure1(closure, arg1, arg2));
      else if (t1.$eq(numberOfArguments, 3))
        return H._callInIsolate(isolate, new H.invokeClosure_closure2(closure, arg1, arg2, arg3));
      else if (t1.$eq(numberOfArguments, 4))
        return H._callInIsolate(isolate, new H.invokeClosure_closure3(closure, arg1, arg2, arg3, arg4));
      else
        throw H.wrapException(P.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    }, null, null, 14, 0, null, 9, [], 10, [], 11, [], 12, [], 13, [], 14, [], 15, []],
    convertDartClosureToJS: function(closure, arity) {
      var $function;
      if (closure == null)
        return;
      $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = function(closure, arity, context, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, context, arity, a1, a2, a3, a4);
        };
      }(closure, arity, init.globalState.currentContext, H.invokeClosure);
      closure.$identity = $function;
      return $function;
    },
    Closure_fromTearOff: function(receiver, functions, reflectionInfo, isStatic, jsArguments, propertyName) {
      var $function, callName, functionType, $prototype, $constructor, t1, isIntercepted, trampoline, signatureFunction, getReceiver, i, stub, stubCallName, t2;
      $function = functions[0];
      callName = $function.$callName;
      if (!!J.getInterceptor(reflectionInfo).$isList) {
        $function.$reflectionInfo = reflectionInfo;
        functionType = H.ReflectionInfo_ReflectionInfo($function).functionType;
      } else
        functionType = reflectionInfo;
      $prototype = isStatic ? Object.create(new H.StaticClosure().constructor.prototype) : Object.create(new H.BoundClosure(null, null, null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      if (isStatic)
        $constructor = function() {
          this.$initialize();
        };
      else {
        t1 = $.Closure_functionCounter;
        $.Closure_functionCounter = J.$add$ns(t1, 1);
        t1 = new Function("a,b,c,d", "this.$initialize(a,b,c,d);" + t1);
        $constructor = t1;
      }
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      t1 = !isStatic;
      if (t1) {
        isIntercepted = jsArguments.length == 1 && true;
        trampoline = H.Closure_forwardCallTo(receiver, $function, isIntercepted);
        trampoline.$reflectionInfo = reflectionInfo;
      } else {
        $prototype.$name = propertyName;
        trampoline = $function;
        isIntercepted = false;
      }
      if (typeof functionType == "number")
        signatureFunction = function(t) {
          return function() {
            return H.getType(t);
          };
        }(functionType);
      else if (t1 && typeof functionType == "function") {
        getReceiver = isIntercepted ? H.BoundClosure_receiverOf : H.BoundClosure_selfOf;
        signatureFunction = function(f, r) {
          return function() {
            return f.apply({$receiver: r(this)}, arguments);
          };
        }(functionType, getReceiver);
      } else
        throw H.wrapException("Error in reflectionInfo.");
      $prototype.$signature = signatureFunction;
      $prototype[callName] = trampoline;
      for (t1 = functions.length, i = 1; i < t1; ++i) {
        stub = functions[i];
        stubCallName = stub.$callName;
        if (stubCallName != null) {
          t2 = isStatic ? stub : H.Closure_forwardCallTo(receiver, stub, isIntercepted);
          $prototype[stubCallName] = t2;
        }
      }
      $prototype["call*"] = trampoline;
      $prototype.$requiredArgCount = $function.$requiredArgCount;
      $prototype.$defaultValues = $function.$defaultValues;
      return $constructor;
    },
    Closure_cspForwardCall: function(arity, isSuperCall, stubName, $function) {
      var getSelf = H.BoundClosure_selfOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          return function(n, S) {
            return function() {
              return S(this)[n]();
            };
          }(stubName, getSelf);
        case 1:
          return function(n, S) {
            return function(a) {
              return S(this)[n](a);
            };
          }(stubName, getSelf);
        case 2:
          return function(n, S) {
            return function(a, b) {
              return S(this)[n](a, b);
            };
          }(stubName, getSelf);
        case 3:
          return function(n, S) {
            return function(a, b, c) {
              return S(this)[n](a, b, c);
            };
          }(stubName, getSelf);
        case 4:
          return function(n, S) {
            return function(a, b, c, d) {
              return S(this)[n](a, b, c, d);
            };
          }(stubName, getSelf);
        case 5:
          return function(n, S) {
            return function(a, b, c, d, e) {
              return S(this)[n](a, b, c, d, e);
            };
          }(stubName, getSelf);
        default:
          return function(f, s) {
            return function() {
              return f.apply(s(this), arguments);
            };
          }($function, getSelf);
      }
    },
    Closure_forwardCallTo: function(receiver, $function, isIntercepted) {
      var stubName, arity, lookedUpFunction, t1, t2, $arguments;
      if (isIntercepted)
        return H.Closure_forwardInterceptedCallTo(receiver, $function);
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t1 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t2 = !t1 || arity >= 27;
      if (t2)
        return H.Closure_cspForwardCall(arity, !t1, stubName, $function);
      if (arity === 0) {
        t1 = $.BoundClosure_selfFieldNameCache;
        if (t1 == null) {
          t1 = H.BoundClosure_computeFieldNamed("self");
          $.BoundClosure_selfFieldNameCache = t1;
        }
        t1 = "return function(){return this." + H.S(t1) + "." + H.S(stubName) + "();";
        t2 = $.Closure_functionCounter;
        $.Closure_functionCounter = J.$add$ns(t2, 1);
        return new Function(t1 + H.S(t2) + "}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity).join(",");
      t1 = "return function(" + $arguments + "){return this.";
      t2 = $.BoundClosure_selfFieldNameCache;
      if (t2 == null) {
        t2 = H.BoundClosure_computeFieldNamed("self");
        $.BoundClosure_selfFieldNameCache = t2;
      }
      t2 = t1 + H.S(t2) + "." + H.S(stubName) + "(" + $arguments + ");";
      t1 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t1, 1);
      return new Function(t2 + H.S(t1) + "}")();
    },
    Closure_cspForwardInterceptedCall: function(arity, isSuperCall, $name, $function) {
      var getSelf, getReceiver;
      getSelf = H.BoundClosure_selfOf;
      getReceiver = H.BoundClosure_receiverOf;
      switch (isSuperCall ? -1 : arity) {
        case 0:
          throw H.wrapException(new H.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(n, s, r) {
            return function() {
              return s(this)[n](r(this));
            };
          }($name, getSelf, getReceiver);
        case 2:
          return function(n, s, r) {
            return function(a) {
              return s(this)[n](r(this), a);
            };
          }($name, getSelf, getReceiver);
        case 3:
          return function(n, s, r) {
            return function(a, b) {
              return s(this)[n](r(this), a, b);
            };
          }($name, getSelf, getReceiver);
        case 4:
          return function(n, s, r) {
            return function(a, b, c) {
              return s(this)[n](r(this), a, b, c);
            };
          }($name, getSelf, getReceiver);
        case 5:
          return function(n, s, r) {
            return function(a, b, c, d) {
              return s(this)[n](r(this), a, b, c, d);
            };
          }($name, getSelf, getReceiver);
        case 6:
          return function(n, s, r) {
            return function(a, b, c, d, e) {
              return s(this)[n](r(this), a, b, c, d, e);
            };
          }($name, getSelf, getReceiver);
        default:
          return function(f, s, r, a) {
            return function() {
              a = [r(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(s(this), a);
            };
          }($function, getSelf, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo: function(receiver, $function) {
      var selfField, t1, stubName, arity, lookedUpFunction, t2, t3, $arguments;
      selfField = H.BoundClosure_selfFieldName();
      t1 = $.BoundClosure_receiverFieldNameCache;
      if (t1 == null) {
        t1 = H.BoundClosure_computeFieldNamed("receiver");
        $.BoundClosure_receiverFieldNameCache = t1;
      }
      stubName = $function.$stubName;
      arity = $function.length;
      lookedUpFunction = receiver[stubName];
      t2 = $function == null ? lookedUpFunction == null : $function === lookedUpFunction;
      t3 = !t2 || arity >= 28;
      if (t3)
        return H.Closure_cspForwardInterceptedCall(arity, !t2, stubName, $function);
      if (arity === 1) {
        t1 = "return function(){return this." + H.S(selfField) + "." + H.S(stubName) + "(this." + H.S(t1) + ");";
        t2 = $.Closure_functionCounter;
        $.Closure_functionCounter = J.$add$ns(t2, 1);
        return new Function(t1 + H.S(t2) + "}")();
      }
      $arguments = "abcdefghijklmnopqrstuvwxyz".split("").splice(0, arity - 1).join(",");
      t1 = "return function(" + $arguments + "){return this." + H.S(selfField) + "." + H.S(stubName) + "(this." + H.S(t1) + ", " + $arguments + ");";
      t2 = $.Closure_functionCounter;
      $.Closure_functionCounter = J.$add$ns(t2, 1);
      return new Function(t1 + H.S(t2) + "}")();
    },
    closureFromTearOff: function(receiver, functions, reflectionInfo, isStatic, jsArguments, $name) {
      var t1;
      functions.fixed$length = Array;
      if (!!J.getInterceptor(reflectionInfo).$isList) {
        reflectionInfo.fixed$length = Array;
        t1 = reflectionInfo;
      } else
        t1 = reflectionInfo;
      return H.Closure_fromTearOff(receiver, functions, t1, !!isStatic, jsArguments, $name);
    },
    intTypeCast: function(value) {
      if (typeof value === "number" && Math.floor(value) === value || value == null)
        return value;
      throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(value), "int"));
    },
    propertyTypeCastError: function(value, property) {
      var t1 = J.getInterceptor$asx(property);
      throw H.wrapException(H.CastErrorImplementation$(H.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
    },
    interceptedTypeCast: function(value, property) {
      var t1;
      if (value != null)
        t1 = typeof value === "object" && J.getInterceptor(value)[property];
      else
        t1 = true;
      if (t1)
        return value;
      H.propertyTypeCastError(value, property);
    },
    throwNoSuchMethod: function(obj, $name, $arguments, expectedArgumentNames) {
      throw H.wrapException(P.NoSuchMethodError$(obj, new H.Symbol($name), $arguments, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, null), expectedArgumentNames));
    },
    throwCyclicInit: function(staticName) {
      throw H.wrapException(new P.CyclicInitializationError("Cyclic initialization for static " + H.S(staticName)));
    },
    buildFunctionType: function(returnType, parameterTypes, optionalParameterTypes) {
var proto = Object.create(new H.RuntimeFunctionType(returnType, parameterTypes, optionalParameterTypes, null)); proto._isTest$1 = function() { return true; }; return proto;
    },
    buildInterfaceType: function(rti, typeArguments) {
      var jsConstructorName = rti.builtin$cls;
      if (typeArguments == null || typeArguments.length === 0)
        return new H.RuntimeTypePlain(jsConstructorName);
      return new H.RuntimeTypeGeneric(jsConstructorName, typeArguments, null);
    },
    getDynamicRuntimeType: function() {
      return C.C_DynamicRuntimeType;
    },
    random64: function() {
      return (Math.random() * 0x100000000 >>> 0) + (Math.random() * 0x100000000 >>> 0) * 4294967296;
    },
    getIsolateAffinityTag: function($name) {
      return init.getIsolateTag($name);
    },
    asyncHelper: function(object, bodyFunctionOrErrorCode, completer) {
      var future;
      if (bodyFunctionOrErrorCode === 0) {
        J.complete$1$x(completer, object);
        return;
      } else if (bodyFunctionOrErrorCode === 1) {
        completer.completeError$2(H.unwrapException(object), H.getTraceFromException(object));
        return;
      }
      if (!!J.getInterceptor(object).$isFuture)
        future = object;
      else {
        future = new P._Future(0, $.Zone__current, null);
        future.$builtinTypeInfo = [null];
        future._asyncComplete$1(object);
      }
      future.then$2$onError(H._wrapJsFunctionForAsync(bodyFunctionOrErrorCode, 0), new H.asyncHelper_closure(bodyFunctionOrErrorCode));
      return completer.get$future();
    },
    _wrapJsFunctionForAsync: function($function, errorCode) {
      return new H._wrapJsFunctionForAsync_closure(errorCode, function(errorCode, result) {
        while (true)
          try {
            $function(errorCode, result);
            break;
          } catch (error) {
            result = error;
            errorCode = 1;
          }
      });
    },
    createRuntimeType: function($name) {
      return new H.TypeImpl($name, null);
    },
    setRuntimeTypeInfo: function(target, rti) {
      if (target != null)
        target.$builtinTypeInfo = rti;
      return target;
    },
    getRuntimeTypeInfo: function(target) {
      if (target == null)
        return;
      return target.$builtinTypeInfo;
    },
    getRuntimeTypeArguments: function(target, substitutionName) {
      return H.substitute(target["$as" + H.S(substitutionName)], H.getRuntimeTypeInfo(target));
    },
    getRuntimeTypeArgument: function(target, substitutionName, index) {
      var $arguments = H.getRuntimeTypeArguments(target, substitutionName);
      return $arguments == null ? null : $arguments[index];
    },
    getTypeArgumentByIndex: function(target, index) {
      var rti = H.getRuntimeTypeInfo(target);
      return rti == null ? null : rti[index];
    },
    runtimeTypeToString: function(rti, onTypeVariable) {
      if (rti == null)
        return "dynamic";
      else if (typeof rti === "object" && rti !== null && rti.constructor === Array)
        return rti[0].builtin$cls + H.joinArguments(rti, 1, onTypeVariable);
      else if (typeof rti == "function")
        return rti.builtin$cls;
      else if (typeof rti === "number" && Math.floor(rti) === rti)
        if (onTypeVariable == null)
          return C.JSInt_methods.toString$0(rti);
        else
          return onTypeVariable.call$1(rti);
      else
        return;
    },
    joinArguments: function(types, startIndex, onTypeVariable) {
      var buffer, index, firstArgument, allDynamic, t1, argument;
      if (types == null)
        return "";
      buffer = new P.StringBuffer("");
      for (index = startIndex, firstArgument = true, allDynamic = true, t1 = ""; index < types.length; ++index) {
        if (firstArgument)
          firstArgument = false;
        else
          buffer._contents = t1 + ", ";
        argument = types[index];
        if (argument != null)
          allDynamic = false;
        t1 = buffer._contents += H.S(H.runtimeTypeToString(argument, onTypeVariable));
      }
      return allDynamic ? "" : "<" + H.S(buffer) + ">";
    },
    getRuntimeTypeString: function(object) {
      var className = J.getInterceptor(object).constructor.builtin$cls;
      if (object == null)
        return className;
      return className + H.joinArguments(object.$builtinTypeInfo, 0, null);
    },
    substitute: function(substitution, $arguments) {
      if (typeof substitution == "function") {
        substitution = H.invokeOn(substitution, null, $arguments);
        if (substitution == null || typeof substitution === "object" && substitution !== null && substitution.constructor === Array)
          $arguments = substitution;
        else if (typeof substitution == "function")
          $arguments = H.invokeOn(substitution, null, $arguments);
      }
      return $arguments;
    },
    checkSubtype: function(object, isField, checks, asField) {
      var $arguments, interceptor;
      if (object == null)
        return false;
      $arguments = H.getRuntimeTypeInfo(object);
      interceptor = J.getInterceptor(object);
      if (interceptor[isField] == null)
        return false;
      return H.areSubtypes(H.substitute(interceptor[asField], $arguments), checks);
    },
    areSubtypes: function(s, t) {
      var len, i;
      if (s == null || t == null)
        return true;
      len = s.length;
      for (i = 0; i < len; ++i)
        if (!H.isSubtype(s[i], t[i]))
          return false;
      return true;
    },
    computeSignature: function(signature, context, contextName) {
      return H.invokeOn(signature, context, H.getRuntimeTypeArguments(context, contextName));
    },
    isSubtype: function(s, t) {
      var t1, typeOfS, t2, typeOfT, substitution;
      if (s === t)
        return true;
      if (s == null || t == null)
        return true;
      if ('func' in t)
        return H.isFunctionSubtype(s, t);
      if ('func' in s)
        return t.builtin$cls === "Function";
      t1 = typeof s === "object" && s !== null && s.constructor === Array;
      typeOfS = t1 ? s[0] : s;
      t2 = typeof t === "object" && t !== null && t.constructor === Array;
      typeOfT = t2 ? t[0] : t;
      if (typeOfT !== typeOfS) {
        if (!('$is' + H.runtimeTypeToString(typeOfT, null) in typeOfS.prototype))
          return false;
        substitution = typeOfS.prototype["$as" + H.S(H.runtimeTypeToString(typeOfT, null))];
      } else
        substitution = null;
      if (!t1 && substitution == null || !t2)
        return true;
      t1 = t1 ? s.slice(1) : null;
      t2 = t2 ? t.slice(1) : null;
      return H.areSubtypes(H.substitute(substitution, t1), t2);
    },
    areAssignable: function(s, t, allowShorter) {
      var t1, sLength, tLength, i, t2;
      t1 = t == null;
      if (t1 && s == null)
        return true;
      if (t1)
        return allowShorter;
      if (s == null)
        return false;
      sLength = s.length;
      tLength = t.length;
      if (allowShorter) {
        if (sLength < tLength)
          return false;
      } else if (sLength !== tLength)
        return false;
      for (i = 0; i < tLength; ++i) {
        t1 = s[i];
        t2 = t[i];
        if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
          return false;
      }
      return true;
    },
    areAssignableMaps: function(s, t) {
      var t1, names, i, $name, tType, sType;
      if (t == null)
        return true;
      if (s == null)
        return false;
      t1 = Object.getOwnPropertyNames(t);
      t1.fixed$length = Array;
      names = t1;
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (!Object.hasOwnProperty.call(s, $name))
          return false;
        tType = t[$name];
        sType = s[$name];
        if (!(H.isSubtype(tType, sType) || H.isSubtype(sType, tType)))
          return false;
      }
      return true;
    },
    isFunctionSubtype: function(s, t) {
      var sReturnType, tReturnType, sParameterTypes, tParameterTypes, sOptionalParameterTypes, tOptionalParameterTypes, sParametersLen, tParametersLen, sOptionalParametersLen, tOptionalParametersLen, pos, t1, t2, tPos, sPos;
      if (!('func' in s))
        return false;
      if ("void" in s) {
        if (!("void" in t) && "ret" in t)
          return false;
      } else if (!("void" in t)) {
        sReturnType = s.ret;
        tReturnType = t.ret;
        if (!(H.isSubtype(sReturnType, tReturnType) || H.isSubtype(tReturnType, sReturnType)))
          return false;
      }
      sParameterTypes = s.args;
      tParameterTypes = t.args;
      sOptionalParameterTypes = s.opt;
      tOptionalParameterTypes = t.opt;
      sParametersLen = sParameterTypes != null ? sParameterTypes.length : 0;
      tParametersLen = tParameterTypes != null ? tParameterTypes.length : 0;
      sOptionalParametersLen = sOptionalParameterTypes != null ? sOptionalParameterTypes.length : 0;
      tOptionalParametersLen = tOptionalParameterTypes != null ? tOptionalParameterTypes.length : 0;
      if (sParametersLen > tParametersLen)
        return false;
      if (sParametersLen + sOptionalParametersLen < tParametersLen + tOptionalParametersLen)
        return false;
      if (sParametersLen === tParametersLen) {
        if (!H.areAssignable(sParameterTypes, tParameterTypes, false))
          return false;
        if (!H.areAssignable(sOptionalParameterTypes, tOptionalParameterTypes, true))
          return false;
      } else {
        for (pos = 0; pos < sParametersLen; ++pos) {
          t1 = sParameterTypes[pos];
          t2 = tParameterTypes[pos];
          if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
            return false;
        }
        for (tPos = pos, sPos = 0; tPos < tParametersLen; ++sPos, ++tPos) {
          t1 = sOptionalParameterTypes[sPos];
          t2 = tParameterTypes[tPos];
          if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
            return false;
        }
        for (tPos = 0; tPos < tOptionalParametersLen; ++sPos, ++tPos) {
          t1 = sOptionalParameterTypes[sPos];
          t2 = tOptionalParameterTypes[tPos];
          if (!(H.isSubtype(t1, t2) || H.isSubtype(t2, t1)))
            return false;
        }
      }
      return H.areAssignableMaps(s.named, t.named);
    },
    invokeOn: function($function, receiver, $arguments) {
      return $function.apply(receiver, $arguments);
    },
    toStringForNativeObject: function(obj) {
      var t1 = $.getTagFunction;
      return "Instance of " + (t1 == null ? "<Unknown>" : t1.call$1(obj));
    },
    hashCodeForNativeObject: function(object) {
      return H.Primitives_objectHashCode(object);
    },
    defineProperty: function(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor: function(obj) {
      var tag, record, interceptor, interceptorClass, mark, t1;
      tag = $.getTagFunction.call$1(obj);
      record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        tag = $.alternateTagFunction.call$2(obj, tag);
        if (tag != null) {
          record = $.dispatchRecordsForInstanceTags[tag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[tag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[tag];
        }
      }
      if (interceptorClass == null)
        return;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = H.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return H.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw H.wrapException(new P.UnimplementedError(tag));
      if (init.leafTags[tag] === true) {
        t1 = H.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return H.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto: function(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord: function(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord: function(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch: function() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      H.initNativeDispatchContinue();
    },
    initNativeDispatchContinue: function() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      H.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = H.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks: function() {
      var hooks, transformers, i, transformer, getTag, getUnknownTag, prototypeForTag;
      hooks = C.JS_CONST_gkc();
      hooks = H.applyHooksTransformer(C.JS_CONST_0, H.applyHooksTransformer(C.JS_CONST_rr7, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_Fs4, H.applyHooksTransformer(C.JS_CONST_gkc0, H.applyHooksTransformer(C.JS_CONST_4hp, H.applyHooksTransformer(C.JS_CONST_QJm(C.JS_CONST_8ZY), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (transformers.constructor == Array)
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new H.initHooks_closure(getTag);
      $.alternateTagFunction = new H.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new H.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer: function(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    allMatchesInStringUnchecked: function(pattern, string, startIndex) {
      var result, $length, patternLength, position, endIndex;
      result = [];
      result.$builtinTypeInfo = [P.Match];
      $length = string.length;
      patternLength = pattern.length;
      for (; true;) {
        position = string.indexOf(pattern, startIndex);
        if (position === -1)
          break;
        result.push(new H.StringMatch(position, string, pattern));
        endIndex = position + patternLength;
        if (endIndex === $length)
          break;
        else
          startIndex = position === endIndex ? startIndex + 1 : endIndex;
      }
      return result;
    },
    stringContainsUnchecked: function(receiver, other, startIndex) {
      var t1;
      if (typeof other === "string")
        return receiver.indexOf(other, startIndex) >= 0;
      else {
        t1 = J.getInterceptor(other);
        if (!!t1.$isJSSyntaxRegExp) {
          t1 = C.JSString_methods.substring$1(receiver, startIndex);
          return other._nativeRegExp.test(H.checkString(t1));
        } else
          return J.get$isNotEmpty$asx(t1.allMatches$1(other, C.JSString_methods.substring$1(receiver, startIndex)));
      }
    },
    stringReplaceAllUnchecked: function(receiver, pattern, replacement) {
      var $length, t1, i;
      H.checkString(replacement);
      if (pattern === "")
        if (receiver === "")
          return replacement;
        else {
          $length = receiver.length;
          for (t1 = replacement, i = 0; i < $length; ++i)
            t1 = t1 + receiver[i] + replacement;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }
      else
        return receiver.replace(new RegExp(pattern.replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), "\\$&"), 'g'), replacement.replace(/\$/g, "$$$$"));
    },
    stringReplaceFirstUnchecked: function(receiver, pattern, replacement, startIndex) {
      var index = receiver.indexOf(pattern, startIndex);
      if (index < 0)
        return receiver;
      return H.stringReplaceRangeUnchecked(receiver, index, index + pattern.length, replacement);
    },
    stringReplaceRangeUnchecked: function(receiver, start, end, replacement) {
      var prefix, suffix;
      prefix = receiver.substring(0, start);
      suffix = receiver.substring(end);
      return prefix + replacement + suffix;
    },
    NoSideEffects: {
      "^": "Object;"
    },
    NoThrows: {
      "^": "Object;"
    },
    NoInline: {
      "^": "Object;"
    },
    ForceInline: {
      "^": "Object;"
    },
    Native: {
      "^": "Object;name>"
    },
    _Patch: {
      "^": "Object;version>"
    },
    ConstantMap: {
      "^": "Object;",
      get$isEmpty: function(_) {
        return J.$eq(this.get$length(this), 0);
      },
      get$isNotEmpty: function(_) {
        return !J.$eq(this.get$length(this), 0);
      },
      toString$0: function(_) {
        return P.Maps_mapToString(this);
      },
      $indexSet: function(_, key, val) {
        return H.ConstantMap__throwUnmodifiable();
      },
      remove$1: function(_, key) {
        return H.ConstantMap__throwUnmodifiable();
      },
      clear$0: function(_) {
        return H.ConstantMap__throwUnmodifiable();
      },
      addAll$1: function(_, other) {
        return H.ConstantMap__throwUnmodifiable();
      },
      $isMap: 1
    },
    ConstantStringMap: {
      "^": "ConstantMap;length>,_jsObject,_keys",
      containsKey$1: function(key) {
        if (typeof key !== "string")
          return false;
        if ("__proto__" === key)
          return false;
        return this._jsObject.hasOwnProperty(key);
      },
      $index: function(_, key) {
        if (!this.containsKey$1(key))
          return;
        return this._fetch$1(key);
      },
      _fetch$1: function(key) {
        return this._jsObject[key];
      },
      forEach$1: function(_, f) {
        var keys, i, key;
        keys = this._keys;
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          f.call$2(key, this._fetch$1(key));
        }
      },
      get$keys: function() {
        var t1 = new H._ConstantMapKeyIterable(this);
        t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
        return t1;
      }
    },
    _ConstantMapKeyIterable: {
      "^": "Iterable;__js_helper$_map",
      get$iterator: function(_) {
        return J.get$iterator$ax(this.__js_helper$_map._keys);
      },
      get$length: function(_) {
        return J.get$length$asx(this.__js_helper$_map._keys);
      }
    },
    JSInvocationMirror: {
      "^": "Object;_memberName,_internalName,_kind,_arguments,_namedArgumentNames,_namedIndices",
      get$memberName: function() {
        var $name, t1, unmangledName;
        $name = this._memberName;
        if (!!J.getInterceptor($name).$isSymbol0)
          return $name;
        t1 = $.get$mangledNames();
        unmangledName = t1.$index(0, $name);
        if (unmangledName != null) {
          t1 = unmangledName.split(":");
          if (0 >= t1.length)
            return H.ioore(t1, 0);
          $name = t1[0];
        } else if (t1.$index(0, this._internalName) == null)
          P.print("Warning: '" + H.S($name) + "' is used reflectively but not in MirrorsUsed. This will break minified code.");
        t1 = new H.Symbol($name);
        this._memberName = t1;
        return t1;
      },
      get$isGetter: function() {
        return this._kind === 1;
      },
      get$isSetter: function() {
        return this._kind === 2;
      },
      get$positionalArguments: function() {
        var t1, argumentCount, list, index;
        if (this._kind === 1)
          return C.List_empty;
        t1 = this._arguments;
        argumentCount = t1.length - this._namedArgumentNames.length;
        if (argumentCount === 0)
          return C.List_empty;
        list = [];
        for (index = 0; index < argumentCount; ++index) {
          if (index >= t1.length)
            return H.ioore(t1, index);
          list.push(t1[index]);
        }
        list.immutable$list = true;
        list.fixed$length = true;
        return list;
      },
      get$namedArguments: function() {
        var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, t3, t4;
        if (this._kind !== 0)
          return P.LinkedHashMap_LinkedHashMap$_empty(P.Symbol0, null);
        t1 = this._namedArgumentNames;
        namedArgumentCount = t1.length;
        t2 = this._arguments;
        namedArgumentsStartIndex = t2.length - namedArgumentCount;
        if (namedArgumentCount === 0)
          return P.LinkedHashMap_LinkedHashMap$_empty(P.Symbol0, null);
        map = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Symbol0, null);
        for (i = 0; i < namedArgumentCount; ++i) {
          if (i >= t1.length)
            return H.ioore(t1, i);
          t3 = t1[i];
          t4 = namedArgumentsStartIndex + i;
          if (t4 < 0 || t4 >= t2.length)
            return H.ioore(t2, t4);
          map.$indexSet(0, new H.Symbol(t3), t2[t4]);
        }
        return map;
      },
      __js_helper$_getCachedInvocation$1: function(object) {
        var interceptor, $name, isIntercepted, interceptor0, receiver, method, baseName, isCatchAll;
        interceptor = J.getInterceptor(object);
        $name = this._internalName;
        isIntercepted = Object.prototype.hasOwnProperty.call(init.interceptedNames, $name);
        if (isIntercepted) {
          interceptor0 = object === interceptor ? null : interceptor;
          receiver = interceptor;
          interceptor = interceptor0;
        } else {
          receiver = object;
          interceptor = null;
        }
        method = receiver[$name];
        if (typeof method != "function") {
          baseName = this.get$memberName().get$_name();
          method = receiver[baseName + "*"];
          if (method == null) {
            interceptor = J.getInterceptor(object);
            method = interceptor[baseName + "*"];
            if (method != null)
              isIntercepted = true;
            else
              interceptor = null;
          }
          isCatchAll = true;
        } else
          isCatchAll = false;
        if (typeof method == "function")
          if (isCatchAll)
            return new H.CachedCatchAllInvocation(H.ReflectionInfo_ReflectionInfo(method), $name, method, isIntercepted, interceptor);
          else
            return new H.CachedInvocation($name, method, isIntercepted, interceptor);
        else
          return new H.CachedNoSuchMethodInvocation(interceptor);
      }
    },
    CachedInvocation: {
      "^": "Object;mangledName<,jsFunction<,isIntercepted<,cachedInterceptor",
      get$isNoSuchMethod: function() {
        return false;
      },
      get$isGetterStub: function() {
        return !!this.jsFunction.$getterStub;
      },
      invokeOn$2: function(victim, $arguments) {
        var receiver, arguments0;
        if (!this.isIntercepted) {
          if ($arguments.constructor !== Array)
            $arguments = P.List_List$from($arguments, true, null);
          receiver = victim;
        } else {
          arguments0 = [victim];
          C.JSArray_methods.addAll$1(arguments0, $arguments);
          receiver = this.cachedInterceptor;
          receiver = receiver != null ? receiver : victim;
          $arguments = arguments0;
        }
        return this.jsFunction.apply(receiver, $arguments);
      }
    },
    CachedCatchAllInvocation: {
      "^": "CachedInvocation;info,mangledName,jsFunction,isIntercepted,cachedInterceptor",
      get$isGetterStub: function() {
        return false;
      },
      invokeOn$2: function(victim, $arguments) {
        var t1, t2, fullParameterCount, providedArgumentCount, receiver, arguments0, i;
        t1 = this.info;
        t2 = t1.requiredParameterCount;
        fullParameterCount = t2 + t1.optionalParameterCount;
        if (!this.isIntercepted) {
          if ($arguments.constructor === Array) {
            providedArgumentCount = $arguments.length;
            if (providedArgumentCount < fullParameterCount)
              $arguments = P.List_List$from($arguments, true, null);
          } else {
            $arguments = P.List_List$from($arguments, true, null);
            providedArgumentCount = $arguments.length;
          }
          receiver = victim;
        } else {
          arguments0 = [victim];
          C.JSArray_methods.addAll$1(arguments0, $arguments);
          receiver = this.cachedInterceptor;
          receiver = receiver != null ? receiver : victim;
          providedArgumentCount = arguments0.length - 1;
          $arguments = arguments0;
        }
        if (t1.areOptionalParametersNamed && providedArgumentCount > t2)
          throw H.wrapException(new H.UnimplementedNoSuchMethodError("Invocation of unstubbed method '" + t1.get$reflectionName() + "' with " + $arguments.length + " arguments."));
        else if (providedArgumentCount < t2)
          throw H.wrapException(new H.UnimplementedNoSuchMethodError("Invocation of unstubbed method '" + t1.get$reflectionName() + "' with " + providedArgumentCount + " arguments (too few)."));
        else if (providedArgumentCount > fullParameterCount)
          throw H.wrapException(new H.UnimplementedNoSuchMethodError("Invocation of unstubbed method '" + t1.get$reflectionName() + "' with " + providedArgumentCount + " arguments (too many)."));
        for (i = providedArgumentCount; i < fullParameterCount; ++i)
          C.JSArray_methods.add$1($arguments, init.metadata[t1.defaultValue$1(0, i)]);
        return this.jsFunction.apply(receiver, $arguments);
      },
      info$1: function(arg0) {
        return this.info.call$1(arg0);
      }
    },
    CachedNoSuchMethodInvocation: {
      "^": "Object;interceptor",
      get$isNoSuchMethod: function() {
        return true;
      },
      get$isGetterStub: function() {
        return false;
      },
      invokeOn$2: function(victim, invocation) {
        var receiver = this.interceptor;
        return J.noSuchMethod$1(receiver == null ? victim : receiver, invocation);
      }
    },
    ReflectionInfo: {
      "^": "Object;jsFunction<,data>,isAccessor,requiredParameterCount,optionalParameterCount,areOptionalParametersNamed,functionType,cachedSortedIndices",
      parameterName$1: function(parameter) {
        var metadataIndex = this.data[2 * parameter + this.optionalParameterCount + 3];
        return init.metadata[metadataIndex];
      },
      defaultValue$1: [function(_, parameter) {
        var t1 = this.requiredParameterCount;
        if (J.$lt$n(parameter, t1))
          return;
        return this.data[3 + parameter - t1];
      }, "call$1", "get$defaultValue", 2, 0, 9, 16, []],
      computeFunctionRti$1: function(jsConstructor) {
        var t1, fakeInstance, t2;
        t1 = this.functionType;
        if (typeof t1 == "number")
          return init.types[t1];
        else if (typeof t1 == "function") {
          fakeInstance = new jsConstructor();
          t2 = fakeInstance["<>"];
          if (fakeInstance != null)
            fakeInstance.$builtinTypeInfo = t2;
          return t1.apply({$receiver: fakeInstance});
        } else
          throw H.wrapException(new H.RuntimeError("Unexpected function type"));
      },
      get$reflectionName: function() {
        return this.jsFunction.$reflectionName;
      },
      static: {ReflectionInfo_ReflectionInfo: function(jsFunction) {
          var data, requiredParametersInfo, optionalParametersInfo;
          data = jsFunction.$reflectionInfo;
          if (data == null)
            return;
          data.fixed$length = Array;
          data = data;
          requiredParametersInfo = data[0];
          optionalParametersInfo = data[1];
          return new H.ReflectionInfo(jsFunction, data, (requiredParametersInfo & 1) === 1, requiredParametersInfo >> 1, optionalParametersInfo >> 1, (optionalParametersInfo & 1) === 1, data[2], null);
        }}
    },
    Primitives_functionNoSuchMethod_closure: {
      "^": "Closure:10;__js_helper$_box_0,_captured_arguments_1,_captured_namedArgumentList_2",
      call$2: function($name, argument) {
        var t1 = this.__js_helper$_box_0;
        t1._captured_names_1 = t1._captured_names_1 + "$" + H.S($name);
        this._captured_namedArgumentList_2.push($name);
        this._captured_arguments_1.push(argument);
        ++t1._captured_argumentCount_0;
      }
    },
    TypeErrorDecoder: {
      "^": "Object;_pattern,_arguments,_argumentsExpr,_expr,_method,__js_helper$_receiver",
      matchTypeError$1: function(message) {
        var match, result, t1;
        match = new RegExp(this._pattern).exec(message);
        if (match == null)
          return;
        result = Object.create(null);
        t1 = this._arguments;
        if (t1 !== -1)
          result.arguments = match[t1 + 1];
        t1 = this._argumentsExpr;
        if (t1 !== -1)
          result.argumentsExpr = match[t1 + 1];
        t1 = this._expr;
        if (t1 !== -1)
          result.expr = match[t1 + 1];
        t1 = this._method;
        if (t1 !== -1)
          result.method = match[t1 + 1];
        t1 = this.__js_helper$_receiver;
        if (t1 !== -1)
          result.receiver = match[t1 + 1];
        return result;
      },
      static: {TypeErrorDecoder_extractPattern: function(message) {
          var match, $arguments, argumentsExpr, expr, method, receiver;
          message = message.replace(String({}), '$receiver$').replace(new RegExp("[[\\]{}()*+?.\\\\^$|]", 'g'), '\\$&');
          match = message.match(/\\\$[a-zA-Z]+\\\$/g);
          if (match == null)
            match = [];
          $arguments = match.indexOf("\\$arguments\\$");
          argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
          expr = match.indexOf("\\$expr\\$");
          method = match.indexOf("\\$method\\$");
          receiver = match.indexOf("\\$receiver\\$");
          return new H.TypeErrorDecoder(message.replace('\\$arguments\\$', '((?:x|[^x])*)').replace('\\$argumentsExpr\\$', '((?:x|[^x])*)').replace('\\$expr\\$', '((?:x|[^x])*)').replace('\\$method\\$', '((?:x|[^x])*)').replace('\\$receiver\\$', '((?:x|[^x])*)'), $arguments, argumentsExpr, expr, method, receiver);
        }, TypeErrorDecoder_provokeCallErrorOn: function(expression) {
          return function($expr$) {
            var $argumentsExpr$ = '$arguments$';
            try {
              $expr$.$method$($argumentsExpr$);
            } catch (e) {
              return e.message;
            }
          }(expression);
        }, TypeErrorDecoder_provokePropertyErrorOn: function(expression) {
          return function($expr$) {
            try {
              $expr$.$method$;
            } catch (e) {
              return e.message;
            }
          }(expression);
        }}
    },
    NullError: {
      "^": "Error;_message,_method",
      toString$0: function(_) {
        var t1 = this._method;
        if (t1 == null)
          return "NullError: " + H.S(this._message);
        return "NullError: method not found: '" + H.S(t1) + "' on null";
      }
    },
    JsNoSuchMethodError: {
      "^": "Error;_message,_method,__js_helper$_receiver",
      toString$0: function(_) {
        var t1, t2;
        t1 = this._method;
        if (t1 == null)
          return "NoSuchMethodError: " + H.S(this._message);
        t2 = this.__js_helper$_receiver;
        if (t2 == null)
          return "NoSuchMethodError: method not found: '" + H.S(t1) + "' (" + H.S(this._message) + ")";
        return "NoSuchMethodError: method not found: '" + H.S(t1) + "' on '" + H.S(t2) + "' (" + H.S(this._message) + ")";
      },
      static: {JsNoSuchMethodError$: function(_message, match) {
          var t1, t2;
          t1 = match == null;
          t2 = t1 ? null : match.method;
          return new H.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
        }}
    },
    UnknownJsTypeError: {
      "^": "Error;_message",
      toString$0: function(_) {
        var t1 = this._message;
        return C.JSString_methods.get$isEmpty(t1) ? "Error" : "Error: " + t1;
      }
    },
    unwrapException_saveStackTrace: {
      "^": "Closure:8;_captured_ex_0",
      call$1: function(error) {
        if (!!J.getInterceptor(error).$isError)
          if (error.$thrownJsError == null)
            error.$thrownJsError = this._captured_ex_0;
        return error;
      }
    },
    _StackTrace: {
      "^": "Object;_exception,_trace",
      toString$0: function(_) {
        var t1, trace;
        t1 = this._trace;
        if (t1 != null)
          return t1;
        t1 = this._exception;
        trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
        t1 = trace == null ? "" : trace;
        this._trace = t1;
        return t1;
      }
    },
    invokeClosure_closure: {
      "^": "Closure:5;_captured_closure_0",
      call$0: function() {
        return this._captured_closure_0.call$0();
      }
    },
    invokeClosure_closure0: {
      "^": "Closure:5;_captured_closure_1,_captured_arg1_2",
      call$0: function() {
        return this._captured_closure_1.call$1(this._captured_arg1_2);
      }
    },
    invokeClosure_closure1: {
      "^": "Closure:5;_captured_closure_3,_captured_arg1_4,_captured_arg2_5",
      call$0: function() {
        return this._captured_closure_3.call$2(this._captured_arg1_4, this._captured_arg2_5);
      }
    },
    invokeClosure_closure2: {
      "^": "Closure:5;_captured_closure_6,_captured_arg1_7,_captured_arg2_8,_captured_arg3_9",
      call$0: function() {
        return this._captured_closure_6.call$3(this._captured_arg1_7, this._captured_arg2_8, this._captured_arg3_9);
      }
    },
    invokeClosure_closure3: {
      "^": "Closure:5;_captured_closure_10,_captured_arg1_11,_captured_arg2_12,_captured_arg3_13,_captured_arg4_14",
      call$0: function() {
        return this._captured_closure_10.call$4(this._captured_arg1_11, this._captured_arg2_12, this._captured_arg3_13, this._captured_arg4_14);
      }
    },
    Closure: {
      "^": "Object;",
      toString$0: function(_) {
        return "Closure '" + H.Primitives_objectTypeName(this) + "'";
      },
      get$$call: function() {
        return this;
      },
      $isFunction: 1,
      get$$call: function() {
        return this;
      }
    },
    "+Closure": [0, 292],
    TearOffClosure: {
      "^": "Closure;"
    },
    StaticClosure: {
      "^": "TearOffClosure;",
      toString$0: function(_) {
        var $name = this.$name;
        if ($name == null)
          return "Closure of unknown static method";
        return "Closure '" + $name + "'";
      }
    },
    BoundClosure: {
      "^": "TearOffClosure;_self<,_target,__js_helper$_receiver,__js_helper$_name",
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (this === other)
          return true;
        if (!(other instanceof H.BoundClosure))
          return false;
        return this._self === other._self && this._target === other._target && this.__js_helper$_receiver === other.__js_helper$_receiver;
      },
      get$hashCode: function(_) {
        var t1, receiverHashCode;
        t1 = this.__js_helper$_receiver;
        if (t1 == null)
          receiverHashCode = H.Primitives_objectHashCode(this._self);
        else
          receiverHashCode = typeof t1 !== "object" ? J.get$hashCode$(t1) : H.Primitives_objectHashCode(t1);
        return J.$xor$n(receiverHashCode, H.Primitives_objectHashCode(this._target));
      },
      toString$0: function(_) {
        var receiver = this.__js_helper$_receiver;
        if (receiver == null)
          receiver = this._self;
        return "Closure '" + H.S(this.__js_helper$_name) + "' of " + H.Primitives_objectToHumanReadableString(receiver);
      },
      static: {BoundClosure_selfOf: function(closure) {
          return closure.get$_self();
        }, BoundClosure_receiverOf: function(closure) {
          return closure.__js_helper$_receiver;
        }, BoundClosure_selfFieldName: function() {
          var t1 = $.BoundClosure_selfFieldNameCache;
          if (t1 == null) {
            t1 = H.BoundClosure_computeFieldNamed("self");
            $.BoundClosure_selfFieldNameCache = t1;
          }
          return t1;
        }, BoundClosure_computeFieldNamed: function(fieldName) {
          var template, t1, names, i, $name;
          template = new H.BoundClosure("self", "target", "receiver", "name");
          t1 = Object.getOwnPropertyNames(template);
          t1.fixed$length = Array;
          names = t1;
          for (t1 = names.length, i = 0; i < t1; ++i) {
            $name = names[i];
            if (template[$name] === fieldName)
              return $name;
          }
        }}
    },
    "+BoundClosure": [293],
    Creates: {
      "^": "Object;types"
    },
    Returns: {
      "^": "Object;types"
    },
    JSName: {
      "^": "Object;name>"
    },
    CastErrorImplementation: {
      "^": "Error;message>",
      toString$0: function(_) {
        return this.message;
      },
      static: {CastErrorImplementation$: function(actualType, expectedType) {
          return new H.CastErrorImplementation("CastError: Casting value of type " + H.S(actualType) + " to incompatible type " + H.S(expectedType));
        }}
    },
    RuntimeError: {
      "^": "Error;message>",
      toString$0: function(_) {
        return "RuntimeError: " + H.S(this.message);
      }
    },
    RuntimeType: {
      "^": "Object;"
    },
    RuntimeFunctionType: {
      "^": "RuntimeType;returnType,parameterTypes,optionalParameterTypes,namedParameters",
      _isTest$1: function(expression) {
        var functionTypeObject = this._extractFunctionTypeObjectFrom$1(expression);
        return functionTypeObject == null ? false : H.isFunctionSubtype(functionTypeObject, this.toRti$0());
      },
      _extractFunctionTypeObjectFrom$1: function(o) {
        var interceptor = J.getInterceptor(o);
        return "$signature" in interceptor ? interceptor.$signature() : null;
      },
      toRti$0: function() {
        var result, t1, t2, namedRti, keys, i, $name;
        result = {func: "dynafunc"};
        t1 = this.returnType;
        t2 = J.getInterceptor(t1);
        if (!!t2.$isVoidRuntimeType)
          result.void = true;
        else if (!t2.$isDynamicRuntimeType)
          result.ret = t1.toRti$0();
        t1 = this.parameterTypes;
        if (t1 != null && t1.length !== 0)
          result.args = H.RuntimeFunctionType_listToRti(t1);
        t1 = this.optionalParameterTypes;
        if (t1 != null && t1.length !== 0)
          result.opt = H.RuntimeFunctionType_listToRti(t1);
        t1 = this.namedParameters;
        if (t1 != null) {
          namedRti = Object.create(null);
          keys = H.extractKeys(t1);
          for (t2 = keys.length, i = 0; i < t2; ++i) {
            $name = keys[i];
            namedRti[$name] = t1[$name].toRti$0();
          }
          result.named = namedRti;
        }
        return result;
      },
      toString$0: function(_) {
        var t1, t2, result, needsComma, i, type, keys, $name;
        t1 = this.parameterTypes;
        if (t1 != null)
          for (t2 = t1.length, result = "(", needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
            type = t1[i];
            if (needsComma)
              result += ", ";
            result += H.S(type);
          }
        else {
          result = "(";
          needsComma = false;
        }
        t1 = this.optionalParameterTypes;
        if (t1 != null && t1.length !== 0) {
          result = (needsComma ? result + ", " : result) + "[";
          for (t2 = t1.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
            type = t1[i];
            if (needsComma)
              result += ", ";
            result += H.S(type);
          }
          result += "]";
        } else {
          t1 = this.namedParameters;
          if (t1 != null) {
            result = (needsComma ? result + ", " : result) + "{";
            keys = H.extractKeys(t1);
            for (t2 = keys.length, needsComma = false, i = 0; i < t2; ++i, needsComma = true) {
              $name = keys[i];
              if (needsComma)
                result += ", ";
              result += H.S(t1[$name].toRti$0()) + " " + $name;
            }
            result += "}";
          }
        }
        return result + (") -> " + H.S(this.returnType));
      },
      static: {RuntimeFunctionType_listToRti: function(list) {
          var result, t1, i;
          list = list;
          result = [];
          for (t1 = list.length, i = 0; i < t1; ++i)
            result.push(list[i].toRti$0());
          return result;
        }}
    },
    DynamicRuntimeType: {
      "^": "RuntimeType;",
      toString$0: function(_) {
        return "dynamic";
      },
      toRti$0: function() {
        return;
      }
    },
    RuntimeTypePlain: {
      "^": "RuntimeType;_jsConstructorName",
      toRti$0: function() {
        var t1, rti;
        t1 = this._jsConstructorName;
        rti = H.jsConstructorNameToRti(t1);
        if (rti == null)
          throw H.wrapException("no type for '" + t1 + "'");
        return rti;
      },
      toString$0: function(_) {
        return this._jsConstructorName;
      }
    },
    RuntimeTypeGeneric: {
      "^": "RuntimeType;_jsConstructorName,$arguments,rti",
      toRti$0: function() {
        var t1, result, t2, _i;
        t1 = this.rti;
        if (t1 != null)
          return t1;
        t1 = this._jsConstructorName;
        result = [H.jsConstructorNameToRti(t1)];
        if (0 >= result.length)
          return H.ioore(result, 0);
        if (result[0] == null)
          throw H.wrapException("no type for '" + t1 + "<...>'");
        for (t1 = this.$arguments, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          result.push(t1[_i].toRti$0());
        this.rti = result;
        return result;
      },
      toString$0: function(_) {
        var t1 = this.$arguments;
        return this._jsConstructorName + "<" + (t1 && C.JSArray_methods).join$1(t1, ", ") + ">";
      }
    },
    UnimplementedNoSuchMethodError: {
      "^": "Error;_message",
      toString$0: function(_) {
        return "Unsupported operation: " + this._message;
      }
    },
    ExceptionAndStackTrace: {
      "^": "Object;dartException,stackTrace<"
    },
    asyncHelper_closure: {
      "^": "Closure:11;_captured_bodyFunctionOrErrorCode_0",
      call$2: [function(error, stackTrace) {
        H._wrapJsFunctionForAsync(this._captured_bodyFunctionOrErrorCode_0, 1).call$1(new H.ExceptionAndStackTrace(error, stackTrace));
      }, null, null, 4, 0, null, 17, [], 18, [], "call"]
    },
    _wrapJsFunctionForAsync_closure: {
      "^": "Closure:8;_captured_errorCode_0,_captured_protected_1",
      call$1: [function(result) {
        this._captured_protected_1(this._captured_errorCode_0, result);
      }, null, null, 2, 0, null, 19, [], "call"]
    },
    TypeImpl: {
      "^": "Object;_typeName<,_unmangledName",
      toString$0: function(_) {
        var t1, unmangledName;
        t1 = this._unmangledName;
        if (t1 != null)
          return t1;
        unmangledName = this._typeName.replace(/[^<,> ]+/g, function(m) {
          return init.mangledGlobalNames[m] || m;
        });
        this._unmangledName = unmangledName;
        return unmangledName;
      },
      get$hashCode: function(_) {
        return J.get$hashCode$(this._typeName);
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H.TypeImpl && J.$eq(this._typeName, other._typeName);
      },
      $isType: 1
    },
    TypeVariable: {
      "^": "Object;owner<,name>,bound"
    },
    JsLinkedHashMap: {
      "^": "Object;__js_helper$_length,_strings,_nums,_rest,_first,_last,_modifications",
      get$length: function(_) {
        return this.__js_helper$_length;
      },
      get$isEmpty: function(_) {
        return this.__js_helper$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return this.__js_helper$_length !== 0;
      },
      get$keys: function() {
        var t1 = new H.LinkedHashMapKeyIterable(this);
        t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
        return t1;
      },
      get$values: function(_) {
        var t1 = new H.LinkedHashMapKeyIterable(this);
        t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
        return H.MappedIterable_MappedIterable(t1, new H.JsLinkedHashMap_values_closure(this), H.getTypeArgumentByIndex(this, 0), H.getTypeArgumentByIndex(this, 1));
      },
      containsKey$1: function(key) {
        var strings, nums;
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null)
            return false;
          return this._containsTableEntry$2(strings, key);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null)
            return false;
          return this._containsTableEntry$2(nums, key);
        } else
          return this.internalContainsKey$1(key);
      },
      internalContainsKey$1: function(key) {
        var rest = this._rest;
        if (rest == null)
          return false;
        return this.internalFindBucketIndex$2(this._getTableEntry$2(rest, this.internalComputeHashCode$1(key)), key) >= 0;
      },
      addAll$1: function(_, other) {
        J.forEach$1$ax(other, new H.JsLinkedHashMap_addAll_closure(this));
      },
      $index: function(_, key) {
        var strings, cell, nums;
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null)
            return;
          cell = this._getTableEntry$2(strings, key);
          return cell == null ? null : cell.get$hashMapCellValue();
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null)
            return;
          cell = this._getTableEntry$2(nums, key);
          return cell == null ? null : cell.get$hashMapCellValue();
        } else
          return this.internalGet$1(key);
      },
      internalGet$1: function(key) {
        var rest, bucket, index;
        rest = this._rest;
        if (rest == null)
          return;
        bucket = this._getTableEntry$2(rest, this.internalComputeHashCode$1(key));
        index = this.internalFindBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        return bucket[index].get$hashMapCellValue();
      },
      $indexSet: function(_, key, value) {
        var strings, nums;
        if (typeof key === "string") {
          strings = this._strings;
          if (strings == null) {
            strings = this._newHashTable$0();
            this._strings = strings;
          }
          this._addHashTableEntry$3(strings, key, value);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._nums;
          if (nums == null) {
            nums = this._newHashTable$0();
            this._nums = nums;
          }
          this._addHashTableEntry$3(nums, key, value);
        } else
          this.internalSet$2(key, value);
      },
      internalSet$2: function(key, value) {
        var rest, hash, bucket, index;
        rest = this._rest;
        if (rest == null) {
          rest = this._newHashTable$0();
          this._rest = rest;
        }
        hash = this.internalComputeHashCode$1(key);
        bucket = this._getTableEntry$2(rest, hash);
        if (bucket == null)
          this._setTableEntry$3(rest, hash, [this._newLinkedCell$2(key, value)]);
        else {
          index = this.internalFindBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].set$hashMapCellValue(value);
          else
            bucket.push(this._newLinkedCell$2(key, value));
        }
      },
      putIfAbsent$2: function(key, ifAbsent) {
        var value;
        if (this.containsKey$1(key))
          return this.$index(0, key);
        value = ifAbsent.call$0();
        this.$indexSet(0, key, value);
        return value;
      },
      remove$1: function(_, key) {
        if (typeof key === "string")
          return this._removeHashTableEntry$2(this._strings, key);
        else if (typeof key === "number" && (key & 0x3ffffff) === key)
          return this._removeHashTableEntry$2(this._nums, key);
        else
          return this.internalRemove$1(key);
      },
      internalRemove$1: function(key) {
        var rest, bucket, index, cell;
        rest = this._rest;
        if (rest == null)
          return;
        bucket = this._getTableEntry$2(rest, this.internalComputeHashCode$1(key));
        index = this.internalFindBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        cell = bucket.splice(index, 1)[0];
        this._unlinkCell$1(cell);
        return cell.get$hashMapCellValue();
      },
      clear$0: function(_) {
        if (this.__js_helper$_length > 0) {
          this._last = null;
          this._first = null;
          this._rest = null;
          this._nums = null;
          this._strings = null;
          this.__js_helper$_length = 0;
          this._modifications = this._modifications + 1 & 67108863;
        }
      },
      forEach$1: function(_, action) {
        var cell, modifications;
        cell = this._first;
        modifications = this._modifications;
        for (; cell != null;) {
          action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
          if (modifications !== this._modifications)
            throw H.wrapException(new P.ConcurrentModificationError(this));
          cell = cell._next;
        }
      },
      _addHashTableEntry$3: function(table, key, value) {
        var cell = this._getTableEntry$2(table, key);
        if (cell == null)
          this._setTableEntry$3(table, key, this._newLinkedCell$2(key, value));
        else
          cell.set$hashMapCellValue(value);
      },
      _removeHashTableEntry$2: function(table, key) {
        var cell;
        if (table == null)
          return;
        cell = this._getTableEntry$2(table, key);
        if (cell == null)
          return;
        this._unlinkCell$1(cell);
        this._deleteTableEntry$2(table, key);
        return cell.get$hashMapCellValue();
      },
      _newLinkedCell$2: function(key, value) {
        var cell, last;
        cell = new H.LinkedHashMapCell(key, value, null, null);
        if (this._first == null) {
          this._last = cell;
          this._first = cell;
        } else {
          last = this._last;
          cell._previous = last;
          last._next = cell;
          this._last = cell;
        }
        ++this.__js_helper$_length;
        this._modifications = this._modifications + 1 & 67108863;
        return cell;
      },
      _unlinkCell$1: function(cell) {
        var previous, next;
        previous = cell.get$_previous();
        next = cell.get$_next();
        if (previous == null)
          this._first = next;
        else
          previous._next = next;
        if (next == null)
          this._last = previous;
        else
          next._previous = previous;
        --this.__js_helper$_length;
        this._modifications = this._modifications + 1 & 67108863;
      },
      internalComputeHashCode$1: function(key) {
        return J.get$hashCode$(key) & 0x3ffffff;
      },
      internalFindBucketIndex$2: function(bucket, key) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i)
          if (J.$eq(bucket[i].get$hashMapCellKey(), key))
            return i;
        return -1;
      },
      toString$0: function(_) {
        return P.Maps_mapToString(this);
      },
      _getTableEntry$2: function(table, key) {
        return table[key];
      },
      _setTableEntry$3: function(table, key, value) {
        table[key] = value;
      },
      _deleteTableEntry$2: function(table, key) {
        delete table[key];
      },
      _containsTableEntry$2: function(table, key) {
        return this._getTableEntry$2(table, key) != null;
      },
      _newHashTable$0: function() {
        var table = Object.create(null);
        this._setTableEntry$3(table, "<non-identifier-key>", table);
        this._deleteTableEntry$2(table, "<non-identifier-key>");
        return table;
      },
      $isInternalMap: 1,
      $isMap: 1
    },
    JsLinkedHashMap_values_closure: {
      "^": "Closure:8;_captured_this_0",
      call$1: [function(each) {
        return this._captured_this_0.$index(0, each);
      }, null, null, 2, 0, null, 20, [], "call"]
    },
    JsLinkedHashMap_addAll_closure: {
      "^": "Closure;_captured_this_0",
      call$2: [function(key, value) {
        this._captured_this_0.$indexSet(0, key, value);
      }, null, null, 4, 0, null, 21, [], 22, [], "call"],
      $signature: function() {
        return H.computeSignature(function(K, V) {
          return {func: 1, args: [K, V]};
        }, this._captured_this_0, "JsLinkedHashMap");
      }
    },
    LinkedHashMapCell: {
      "^": "Object;hashMapCellKey<,hashMapCellValue@,_next<,_previous<"
    },
    LinkedHashMapKeyIterable: {
      "^": "Iterable;__js_helper$_map",
      get$length: function(_) {
        return this.__js_helper$_map.__js_helper$_length;
      },
      get$isEmpty: function(_) {
        return this.__js_helper$_map.__js_helper$_length === 0;
      },
      get$iterator: function(_) {
        var t1, t2;
        t1 = this.__js_helper$_map;
        t2 = new H.LinkedHashMapKeyIterator(t1, t1._modifications, null, null);
        t2.$builtinTypeInfo = this.$builtinTypeInfo;
        t2._cell = t1._first;
        return t2;
      },
      contains$1: function(_, element) {
        return this.__js_helper$_map.containsKey$1(element);
      },
      forEach$1: function(_, f) {
        var t1, cell, modifications;
        t1 = this.__js_helper$_map;
        cell = t1._first;
        modifications = t1._modifications;
        for (; cell != null;) {
          f.call$1(cell.hashMapCellKey);
          if (modifications !== t1._modifications)
            throw H.wrapException(new P.ConcurrentModificationError(t1));
          cell = cell._next;
        }
      },
      $isEfficientLength: 1
    },
    LinkedHashMapKeyIterator: {
      "^": "Object;__js_helper$_map,_modifications,_cell,__js_helper$_current",
      get$current: function() {
        return this.__js_helper$_current;
      },
      moveNext$0: function() {
        var t1 = this.__js_helper$_map;
        if (this._modifications !== t1._modifications)
          throw H.wrapException(new P.ConcurrentModificationError(t1));
        else {
          t1 = this._cell;
          if (t1 == null) {
            this.__js_helper$_current = null;
            return false;
          } else {
            this.__js_helper$_current = t1.hashMapCellKey;
            this._cell = t1._next;
            return true;
          }
        }
      }
    },
    initHooks_closure: {
      "^": "Closure:8;_captured_getTag_0",
      call$1: function(o) {
        return this._captured_getTag_0(o);
      }
    },
    initHooks_closure0: {
      "^": "Closure:12;_captured_getUnknownTag_1",
      call$2: function(o, tag) {
        return this._captured_getUnknownTag_1(o, tag);
      }
    },
    initHooks_closure1: {
      "^": "Closure:13;_captured_prototypeForTag_2",
      call$1: function(tag) {
        return this._captured_prototypeForTag_2(tag);
      }
    },
    JSSyntaxRegExp: {
      "^": "Object;pattern,_nativeRegExp,_nativeGlobalRegExp,_nativeAnchoredRegExp",
      toString$0: function(_) {
        return "RegExp/" + this.pattern + "/";
      },
      get$_nativeGlobalVersion: function() {
        var t1 = this._nativeGlobalRegExp;
        if (t1 != null)
          return t1;
        t1 = this._nativeRegExp;
        t1 = H.JSSyntaxRegExp_makeNative(this.pattern, t1.multiline, !t1.ignoreCase, true);
        this._nativeGlobalRegExp = t1;
        return t1;
      },
      get$_nativeAnchoredVersion: function() {
        var t1 = this._nativeAnchoredRegExp;
        if (t1 != null)
          return t1;
        t1 = this._nativeRegExp;
        t1 = H.JSSyntaxRegExp_makeNative(this.pattern + "|()", t1.multiline, !t1.ignoreCase, true);
        this._nativeAnchoredRegExp = t1;
        return t1;
      },
      firstMatch$1: function(string) {
        var m = this._nativeRegExp.exec(H.checkString(string));
        if (m == null)
          return;
        return H._MatchImplementation$(this, m);
      },
      allMatches$2: function(_, string, start) {
        H.checkString(string);
        H.checkInt(start);
        if (start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return new H._AllMatchesIterable(this, string, start);
      },
      allMatches$1: function($receiver, string) {
        return this.allMatches$2($receiver, string, 0);
      },
      _execGlobal$2: function(string, start) {
        var regexp, match;
        regexp = this.get$_nativeGlobalVersion();
        regexp.lastIndex = start;
        match = regexp.exec(string);
        if (match == null)
          return;
        return H._MatchImplementation$(this, match);
      },
      _execAnchored$2: function(string, start) {
        var regexp, match, t1, t2;
        regexp = this.get$_nativeAnchoredVersion();
        regexp.lastIndex = start;
        match = regexp.exec(string);
        if (match == null)
          return;
        t1 = match.length;
        t2 = t1 - 1;
        if (t2 < 0)
          return H.ioore(match, t2);
        if (match[t2] != null)
          return;
        C.JSArray_methods.set$length(match, t2);
        return H._MatchImplementation$(this, match);
      },
      matchAsPrefix$2: function(_, string, start) {
        if (start < 0 || start > string.length)
          throw H.wrapException(P.RangeError$range(start, 0, string.length, null, null));
        return this._execAnchored$2(string, start);
      },
      static: {JSSyntaxRegExp_makeNative: function(source, multiLine, caseSensitive, global) {
          var m, i, g, regexp;
          H.checkString(source);
          m = multiLine ? "m" : "";
          i = caseSensitive ? "" : "i";
          g = global ? "g" : "";
          regexp = function() {
            try {
              return new RegExp(source, m + i + g);
            } catch (e) {
              return e;
            }
          }();
          if (regexp instanceof RegExp)
            return regexp;
          throw H.wrapException(new P.FormatException("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
        }}
    },
    _MatchImplementation: {
      "^": "Object;pattern,_match",
      $index: function(_, index) {
        var t1 = this._match;
        if (index >>> 0 !== index || index >= t1.length)
          return H.ioore(t1, index);
        return t1[index];
      },
      groups$1: [function(groups) {
        var out, t1, t2, i;
        out = [];
        for (t1 = groups.get$iterator(groups), t2 = this._match; t1.moveNext$0();) {
          i = t1.get$current();
          if (i >>> 0 !== i || i >= t2.length)
            return H.ioore(t2, i);
          out.push(t2[i]);
        }
        return out;
      }, "call$1", "get$groups", 2, 0, 14],
      _MatchImplementation$2: function(pattern, _match) {
      },
      static: {_MatchImplementation$: function(pattern, _match) {
          var t1 = new H._MatchImplementation(pattern, _match);
          t1._MatchImplementation$2(pattern, _match);
          return t1;
        }}
    },
    _AllMatchesIterable: {
      "^": "IterableBase;_re,_string,__js_helper$_start",
      get$iterator: function(_) {
        return new H._AllMatchesIterator(this._re, this._string, this.__js_helper$_start, null);
      },
      $asIterableBase: function() {
        return [P.Match];
      },
      $asIterable: function() {
        return [P.Match];
      }
    },
    _AllMatchesIterator: {
      "^": "Object;_regExp,_string,_nextIndex,__js_helper$_current",
      get$current: function() {
        return this.__js_helper$_current;
      },
      moveNext$0: function() {
        var t1, t2, match, t3, nextIndex;
        t1 = this._string;
        if (t1 == null)
          return false;
        t2 = this._nextIndex;
        if (t2 <= t1.length) {
          match = this._regExp._execGlobal$2(t1, t2);
          if (match != null) {
            this.__js_helper$_current = match;
            t1 = match._match;
            t2 = t1.index;
            if (0 >= t1.length)
              return H.ioore(t1, 0);
            t3 = J.get$length$asx(t1[0]);
            if (typeof t3 !== "number")
              return H.iae(t3);
            nextIndex = t2 + t3;
            this._nextIndex = t1.index === nextIndex ? nextIndex + 1 : nextIndex;
            return true;
          }
        }
        this.__js_helper$_current = null;
        this._string = null;
        return false;
      }
    },
    StringMatch: {
      "^": "Object;start,input,pattern",
      $index: function(_, g) {
        return this.group$1(g);
      },
      group$1: function(group_) {
        if (!J.$eq(group_, 0))
          throw H.wrapException(P.RangeError$value(group_, null, null));
        return this.pattern;
      },
      groups$1: [function(groups_) {
        var result, t1, t2, g;
        result = [];
        result.$builtinTypeInfo = [P.String];
        for (t1 = groups_.get$iterator(groups_), t2 = this.pattern; t1.moveNext$0();) {
          g = t1.get$current();
          H.throwExpression(P.RangeError$value(g, null, null));
          result.push(t2);
        }
        return result;
      }, "call$1", "get$groups", 2, 0, 14]
    }
  }], ["args.src.arg_parser", "package:args/src/arg_parser.dart",, S, {
    "^": "",
    ArgParser: {
      "^": "Object;_options,_commands,options>,commands<,_optionsAndSeparators,allowTrailingOptions<",
      addFlag$7$abbr$callback$defaultsTo$help$hide$negatable: function($name, abbr, callback, defaultsTo, help, hide, negatable) {
        this._addOption$11$hide$negatable($name, abbr, help, null, null, null, defaultsTo, callback, C.OptionType_woc, hide, negatable);
      },
      addFlag$4$abbr$help$negatable: function($name, abbr, help, negatable) {
        return this.addFlag$7$abbr$callback$defaultsTo$help$hide$negatable($name, abbr, null, false, help, false, negatable);
      },
      addOption$11$abbr$allowMultiple$allowed$allowedHelp$callback$defaultsTo$help$hide$splitCommas$valueHelp: function($name, abbr, allowMultiple, allowed, allowedHelp, callback, defaultsTo, help, hide, splitCommas, valueHelp) {
        if (!allowMultiple)
          ;
        this._addOption$11$hide$splitCommas($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, allowMultiple ? C.OptionType_Icb : C.OptionType_F9d, hide, splitCommas);
      },
      addOption$4$abbr$defaultsTo$help: function($name, abbr, defaultsTo, help) {
        return this.addOption$11$abbr$allowMultiple$allowed$allowedHelp$callback$defaultsTo$help$hide$splitCommas$valueHelp($name, abbr, false, null, null, null, defaultsTo, help, false, null, null);
      },
      addOption$3$abbr$help: function($name, abbr, help) {
        return this.addOption$11$abbr$allowMultiple$allowed$allowedHelp$callback$defaultsTo$help$hide$splitCommas$valueHelp($name, abbr, false, null, null, null, null, help, false, null, null);
      },
      addOption$2$help: function($name, help) {
        return this.addOption$11$abbr$allowMultiple$allowed$allowedHelp$callback$defaultsTo$help$hide$splitCommas$valueHelp($name, null, false, null, null, null, null, help, false, null, null);
      },
      addOption$5$abbr$allowed$defaultsTo$help: function($name, abbr, allowed, defaultsTo, help) {
        return this.addOption$11$abbr$allowMultiple$allowed$allowedHelp$callback$defaultsTo$help$hide$splitCommas$valueHelp($name, abbr, false, allowed, null, null, defaultsTo, help, false, null, null);
      },
      _addOption$12$hide$negatable$splitCommas: function($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, type, hide, negatable, splitCommas) {
        var t1, existing, t2, option;
        t1 = this._options;
        if (t1.containsKey$1($name))
          throw H.wrapException(P.ArgumentError$("Duplicate option \"" + $name + "\"."));
        if (abbr != null) {
          existing = this.findByAbbreviation$1(abbr);
          if (existing != null)
            throw H.wrapException(P.ArgumentError$("Abbreviation \"" + abbr + "\" is already used by \"" + H.S(J.get$name$x(existing)) + "\"."));
        }
        if (allowed == null)
          t2 = null;
        else {
          t2 = new P.UnmodifiableListView(allowed);
          t2.$builtinTypeInfo = [null];
        }
        option = new E.Option($name, abbr, t2, defaultsTo, callback, help, valueHelp, null, type, negatable, type === C.OptionType_Icb, hide);
        if ($name.length === 0)
          H.throwExpression(P.ArgumentError$("Name cannot be empty."));
        else if (C.JSString_methods.startsWith$1($name, "-"))
          H.throwExpression(P.ArgumentError$("Name " + $name + " cannot start with \"-\"."));
        t2 = $.get$Option__invalidChars()._nativeRegExp;
        if (t2.test(H.checkString($name)))
          H.throwExpression(P.ArgumentError$("Name \"" + $name + "\" contains invalid characters."));
        if (abbr != null) {
          if (abbr.length !== 1)
            H.throwExpression(P.ArgumentError$("Abbreviation must be null or have length 1."));
          else if (abbr === "-")
            H.throwExpression(P.ArgumentError$("Abbreviation cannot be \"-\"."));
          if (t2.test(H.checkString(abbr)))
            H.throwExpression(P.ArgumentError$("Abbreviation is an invalid character."));
        }
        t1.$indexSet(0, $name, option);
        this._optionsAndSeparators.push(option);
      },
      _addOption$11$hide$negatable: function($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, type, hide, negatable) {
        return this._addOption$12$hide$negatable$splitCommas($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, type, hide, negatable, null);
      },
      _addOption$11$hide$splitCommas: function($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, type, hide, splitCommas) {
        return this._addOption$12$hide$negatable$splitCommas($name, abbr, help, valueHelp, allowed, allowedHelp, defaultsTo, callback, type, hide, false, splitCommas);
      },
      parse$1: function(args) {
        var t1, t2;
        t1 = J.toList$0$ax(args);
        t2 = [];
        t2.$builtinTypeInfo = [P.String];
        return new S.Parser(null, null, this, t1, t2, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null)).parse$0();
      },
      get$usage: function() {
        return new A.Usage(this._optionsAndSeparators, null, 0, null, 0, 0).generate$0();
      },
      findByAbbreviation$1: function(abbr) {
        var t1 = this.options._map;
        return t1.get$values(t1).firstWhere$2$orElse(0, new S.ArgParser_findByAbbreviation_closure(abbr), new S.ArgParser_findByAbbreviation_closure0());
      }
    },
    ArgParser_findByAbbreviation_closure: {
      "^": "Closure:8;_captured_abbr_0",
      call$1: function(option) {
        var t1, t2;
        t1 = option.get$abbreviation();
        t2 = this._captured_abbr_0;
        return t1 == null ? t2 == null : t1 === t2;
      }
    },
    ArgParser_findByAbbreviation_closure0: {
      "^": "Closure:5;",
      call$0: function() {
        return;
      }
    }
  }], ["args.src.arg_results", "package:args/src/arg_results.dart",, G, {
    "^": "",
    ArgResults: {
      "^": "Object;_parser,_parsed,name>,command<,rest,$arguments",
      $index: function(_, $name) {
        var t1, t2;
        t1 = this._parser;
        t2 = J.getInterceptor$x(t1);
        if (!t2.get$options(t1).containsKey$1($name))
          throw H.wrapException(P.ArgumentError$("Could not find an option named \"" + H.S($name) + "\"."));
        return J.$index$asx(t2.get$options(t1), $name).getOrDefault$1(this._parsed.$index(0, $name));
      },
      get$options: function(_) {
        var result = P.LinkedHashSet_LinkedHashSet$from(this._parsed.get$keys(), P.String);
        J.forEach$1$ax(J.get$options$x(this._parser), new G.ArgResults_options_closure(result));
        return result;
      }
    },
    ArgResults_options_closure: {
      "^": "Closure:15;_arg_results$_captured_result_0",
      call$2: function($name, option) {
        if (J.get$defaultValue$x(option) != null)
          this._arg_results$_captured_result_0.add$1(0, $name);
      }
    }
  }], ["args.src.option", "package:args/src/option.dart",, E, {
    "^": "",
    Option: {
      "^": "Object;name>,abbreviation<,allowed<,defaultValue>,callback<,help,valueHelp,allowedHelp,type>,negatable<,splitCommas<,hide",
      get$isFlag: function() {
        return this.type === C.OptionType_woc;
      },
      get$isMultiple: function() {
        return this.type === C.OptionType_Icb;
      },
      getOrDefault$1: function(value) {
        var t1;
        if (value != null)
          return value;
        if (this.type !== C.OptionType_Icb)
          return this.defaultValue;
        t1 = this.defaultValue;
        if (t1 != null)
          return [t1];
        return [];
      },
      callback$0: function() {
        return this.callback.call$0();
      },
      callback$1: function(arg0) {
        return this.callback.call$1(arg0);
      }
    },
    OptionType: {
      "^": "Object;name>"
    }
  }], ["args.src.parser", "package:args/src/parser.dart",, S, {
    "^": "",
    Parser: {
      "^": "Object;commandName,parent>,grammar,args<,rest,results",
      parse$0: function() {
        var t1, t2, $arguments, commandResults, t3, t4, command, commandName, t5;
        t1 = this.args;
        t2 = J.getInterceptor$ax(t1);
        $arguments = t2.toList$0(t1);
        t3 = this.rest;
        t4 = this.grammar;
        while (true) {
          if (!(t2.get$length(t1) > 0)) {
            commandResults = null;
            break;
          }
          c$0: {
            if (J.$eq(t2.$index(t1, 0), "--")) {
              t2.removeAt$1(t1, 0);
              commandResults = null;
              break;
            }
            command = t4.get$commands()._map.$index(0, t2.$index(t1, 0));
            if (command != null) {
              if (t3.length !== 0)
                H.throwExpression(new P.FormatException("Cannot specify arguments before a command.", null, null));
              commandName = t2.removeAt$1(t1, 0);
              t5 = [];
              t5.$builtinTypeInfo = [P.String];
              C.JSArray_methods.addAll$1(t5, t3);
              commandResults = new S.Parser(commandName, this, command, t1, t5, P.LinkedHashMap_LinkedHashMap$_empty(P.String, null)).parse$0();
              C.JSArray_methods.set$length(t3, 0);
              break;
            }
            if (this.parseSoloOption$0())
              break c$0;
            if (this.parseAbbreviation$1(this))
              break c$0;
            if (this.parseLongOption$0())
              break c$0;
            if (!t4.get$allowTrailingOptions()) {
              commandResults = null;
              break;
            }
            t3.push(t2.removeAt$1(t1, 0));
          }
        }
        J.forEach$1$ax(J.get$options$x(t4), new S.Parser_parse_closure(this));
        C.JSArray_methods.addAll$1(t3, t1);
        t2.clear$0(t1);
        t1 = new P.UnmodifiableListView(t3);
        t1.$builtinTypeInfo = [null];
        t2 = new P.UnmodifiableListView($arguments);
        t2.$builtinTypeInfo = [null];
        return new G.ArgResults(t4, this.results, this.commandName, commandResults, t1, t2);
      },
      parseSoloOption$0: function() {
        var t1, t2, soloOpt, t3, option, t4;
        t1 = this.args;
        t2 = J.getInterceptor$asx(t1);
        soloOpt = $.get$_SOLO_OPT().firstMatch$1(t2.$index(t1, 0));
        if (soloOpt == null)
          return false;
        t3 = soloOpt._match;
        if (1 >= t3.length)
          return H.ioore(t3, 1);
        option = this.grammar.findByAbbreviation$1(t3[1]);
        if (option == null) {
          t1 = this.parent;
          if (1 >= t3.length)
            return H.ioore(t3, 1);
          t3 = "Could not find an option or flag \"-" + H.S(t3[1]) + "\".";
          if (t1 == null)
            H.throwExpression(new P.FormatException(t3, null, null));
          return t1.parseSoloOption$0();
        }
        t2.removeAt$1(t1, 0);
        t3 = J.getInterceptor$x(option);
        if (option.get$isFlag())
          this.results.$indexSet(0, t3.get$name(option), true);
        else {
          t4 = t2.get$length(t1);
          t3 = "Missing argument for \"" + H.S(t3.get$name(option)) + "\".";
          if (t4 <= 0)
            H.throwExpression(new P.FormatException(t3, null, null));
          this.setOption$3(this.results, option, t2.$index(t1, 0));
          t2.removeAt$1(t1, 0);
        }
        return true;
      },
      parseAbbreviation$1: function(innermostCommand) {
        var t1, t2, abbrOpt, t3, c, first, t4, t5, i, i0;
        t1 = this.args;
        t2 = J.getInterceptor$asx(t1);
        abbrOpt = $.get$_ABBR_OPT().firstMatch$1(t2.$index(t1, 0));
        if (abbrOpt == null)
          return false;
        t3 = abbrOpt._match;
        if (1 >= t3.length)
          return H.ioore(t3, 1);
        c = J.substring$2$s(t3[1], 0, 1);
        first = this.grammar.findByAbbreviation$1(c);
        if (first == null) {
          t1 = this.parent;
          t2 = "Could not find an option with short name \"-" + c + "\".";
          if (t1 == null)
            H.throwExpression(new P.FormatException(t2, null, null));
          return t1.parseAbbreviation$1(innermostCommand);
        } else if (!first.get$isFlag()) {
          if (1 >= t3.length)
            return H.ioore(t3, 1);
          t4 = J.substring$1$s(t3[1], 1);
          if (2 >= t3.length)
            return H.ioore(t3, 2);
          this.setOption$3(this.results, first, t4 + H.S(t3[2]));
        } else {
          if (2 >= t3.length)
            return H.ioore(t3, 2);
          t4 = J.$eq(t3[2], "");
          t5 = "Option \"-" + c + "\" is a flag and cannot handle value \"";
          if (1 >= t3.length)
            return H.ioore(t3, 1);
          t5 += J.substring$1$s(t3[1], 1);
          if (2 >= t3.length)
            return H.ioore(t3, 2);
          t5 = t5 + H.S(t3[2]) + "\".";
          if (!t4)
            H.throwExpression(new P.FormatException(t5, null, null));
          i = 0;
          while (true) {
            if (1 >= t3.length)
              return H.ioore(t3, 1);
            t4 = J.get$length$asx(t3[1]);
            if (typeof t4 !== "number")
              return H.iae(t4);
            if (!(i < t4))
              break;
            if (1 >= t3.length)
              return H.ioore(t3, 1);
            i0 = i + 1;
            innermostCommand.parseShortFlag$1(J.substring$2$s(t3[1], i, i0));
            i = i0;
          }
        }
        t2.removeAt$1(t1, 0);
        return true;
      },
      parseShortFlag$1: function(c) {
        var option, t1, t2;
        option = this.grammar.findByAbbreviation$1(c);
        if (option == null) {
          t1 = this.parent;
          t2 = "Could not find an option with short name \"-" + c + "\".";
          if (t1 == null)
            H.throwExpression(new P.FormatException(t2, null, null));
          t1.parseShortFlag$1(c);
          return;
        }
        t1 = option.get$isFlag();
        t2 = "Option \"-" + c + "\" must be a flag to be in a collapsed \"-\".";
        if (!t1)
          H.throwExpression(new P.FormatException(t2, null, null));
        this.results.$indexSet(0, J.get$name$x(option), true);
      },
      parseLongOption$0: function() {
        var t1, t2, longOpt, t3, $name, t4, t5, option;
        t1 = this.args;
        t2 = J.getInterceptor$asx(t1);
        longOpt = $.get$_LONG_OPT().firstMatch$1(t2.$index(t1, 0));
        if (longOpt == null)
          return false;
        t3 = longOpt._match;
        if (1 >= t3.length)
          return H.ioore(t3, 1);
        $name = t3[1];
        t4 = this.grammar;
        t5 = J.getInterceptor$x(t4);
        option = J.$index$asx(t5.get$options(t4), $name);
        if (option != null) {
          t2.removeAt$1(t1, 0);
          if (option.get$isFlag()) {
            if (3 >= t3.length)
              return H.ioore(t3, 3);
            t1 = t3[3];
            t2 = "Flag option \"" + H.S($name) + "\" should not be given a value.";
            if (t1 != null)
              H.throwExpression(new P.FormatException(t2, null, null));
            this.results.$indexSet(0, J.get$name$x(option), true);
          } else {
            if (3 >= t3.length)
              return H.ioore(t3, 3);
            t3 = t3[3];
            if (t3 != null)
              this.setOption$3(this.results, option, t3);
            else {
              t3 = t2.get$length(t1);
              t4 = "Missing argument for \"" + H.S(J.get$name$x(option)) + "\".";
              if (t3 <= 0)
                H.throwExpression(new P.FormatException(t4, null, null));
              this.setOption$3(this.results, option, t2.$index(t1, 0));
              t2.removeAt$1(t1, 0);
            }
          }
        } else {
          t3 = J.getInterceptor$s($name);
          if (t3.startsWith$1($name, "no-")) {
            $name = t3.substring$1($name, 3);
            option = J.$index$asx(t5.get$options(t4), $name);
            if (option == null) {
              t1 = this.parent;
              t2 = "Could not find an option named \"" + $name + "\".";
              if (t1 == null)
                H.throwExpression(new P.FormatException(t2, null, null));
              return t1.parseLongOption$0();
            }
            t2.removeAt$1(t1, 0);
            t1 = option.get$isFlag();
            t2 = "Cannot negate non-flag option \"" + $name + "\".";
            if (!t1)
              H.throwExpression(new P.FormatException(t2, null, null));
            t1 = option.get$negatable();
            t2 = "Cannot negate option \"" + $name + "\".";
            if (!t1)
              H.throwExpression(new P.FormatException(t2, null, null));
            this.results.$indexSet(0, J.get$name$x(option), false);
          } else {
            t1 = this.parent;
            t2 = "Could not find an option named \"" + H.S($name) + "\".";
            if (t1 == null)
              H.throwExpression(new P.FormatException(t2, null, null));
            return t1.parseLongOption$0();
          }
        }
        return true;
      },
      setOption$3: function(results, option, value) {
        var list, t1, t2, t3, _i, element;
        if (!option.get$isMultiple()) {
          this._validateAllowed$2(option, value);
          results.$indexSet(0, J.get$name$x(option), value);
          return;
        }
        list = results.putIfAbsent$2(J.get$name$x(option), new S.Parser_setOption_closure());
        if (option.get$splitCommas())
          for (t1 = J.split$1$s(value, ","), t2 = t1.length, t3 = J.getInterceptor$ax(list), _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
            element = t1[_i];
            this._validateAllowed$2(option, element);
            t3.add$1(list, element);
          }
        else {
          this._validateAllowed$2(option, value);
          J.add$1$ax(list, value);
        }
      },
      _validateAllowed$2: function(option, value) {
        var t1, t2;
        if (option.get$allowed() == null)
          return;
        t1 = option.get$allowed();
        t1 = t1.contains$1(t1, value);
        t2 = "\"" + H.S(value) + "\" is not an allowed value for option \"" + H.S(J.get$name$x(option)) + "\".";
        if (!t1)
          H.throwExpression(new P.FormatException(t2, null, null));
      }
    },
    Parser_parse_closure: {
      "^": "Closure:15;_parser$_captured_this_0",
      call$2: function($name, option) {
        if (option.get$callback() == null)
          return;
        option.callback$1(option.getOrDefault$1(this._parser$_captured_this_0.results.$index(0, $name)));
      }
    },
    Parser_setOption_closure: {
      "^": "Closure:5;",
      call$0: function() {
        return [];
      }
    }
  }], ["args.src.usage", "package:args/src/usage.dart",, A, {
    "^": "",
    padRight: function(source, $length) {
      var t1 = H.S(source);
      for (; t1.length < $length;)
        t1 += " ";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    Usage: {
      "^": "Object;optionsAndSeparators,buffer>,currentColumn,columnWidths,numHelpLines,newlinesNeeded",
      generate$0: function() {
        var t1, t2, _i, optionOrSeparator, t3, allowedNames, t4, _i0, $name;
        this.buffer = new P.StringBuffer("");
        this.calculateColumnWidths$0();
        for (t1 = this.optionsAndSeparators, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          optionOrSeparator = t1[_i];
          if (optionOrSeparator.hide)
            continue;
          this.write$2(0, this.getAbbreviation$1(optionOrSeparator));
          this.write$2(1, this.getLongOption$1(optionOrSeparator));
          this.write$2(2, optionOrSeparator.help);
          t3 = optionOrSeparator.allowedHelp;
          if (t3 != null) {
            t3 = t3._map;
            allowedNames = t3.get$keys().toList$1$growable(0, false);
            t4 = allowedNames.length - 1;
            if (t4 - 0 <= 32)
              H.Sort__insertionSort(allowedNames, 0, t4, P.Comparable_compare$closure());
            else
              H.Sort__dualPivotQuicksort(allowedNames, 0, t4, P.Comparable_compare$closure());
            ++this.newlinesNeeded;
            this.currentColumn = 0;
            this.numHelpLines = 0;
            for (t4 = allowedNames.length, _i0 = 0; _i0 < allowedNames.length; allowedNames.length === t4 || (0, H.throwConcurrentModificationError)(allowedNames), ++_i0) {
              $name = allowedNames[_i0];
              this.write$2(1, "      [" + H.S($name) + "]");
              this.write$2(2, t3.$index(0, $name));
            }
            ++this.newlinesNeeded;
            this.currentColumn = 0;
            this.numHelpLines = 0;
          } else if (optionOrSeparator.allowed != null)
            this.write$2(2, this.buildAllowedList$1(optionOrSeparator));
          else {
            t3 = optionOrSeparator.defaultValue;
            if (t3 != null) {
              t4 = optionOrSeparator.type === C.OptionType_woc;
              if (t4 && t3 === true)
                this.write$2(2, "(defaults to on)");
              else if (!t4)
                this.write$2(2, "(defaults to \"" + H.S(t3) + "\")");
            }
          }
          if (this.numHelpLines > 1) {
            ++this.newlinesNeeded;
            this.currentColumn = 0;
            this.numHelpLines = 0;
          }
        }
        return J.toString$0(this.buffer);
      },
      getAbbreviation$1: function(option) {
        var t1 = option.abbreviation;
        if (t1 != null)
          return "-" + H.S(t1) + ", ";
        else
          return "";
      },
      getLongOption$1: function(option) {
        var result = option.negatable ? "--[no-]" + option.name : "--" + option.name;
        option.valueHelp;
        return result;
      },
      calculateColumnWidths$0: function() {
        var t1, t2, abbr, title, _i, option, t3;
        for (t1 = this.optionsAndSeparators, t2 = t1.length, abbr = 0, title = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          option = t1[_i];
          if (option.hide)
            continue;
          abbr = P.max(abbr, this.getAbbreviation$1(option).length);
          title = P.max(title, this.getLongOption$1(option).length);
          t3 = option.allowedHelp;
          if (t3 != null)
            for (t3 = t3._map.get$keys(), t3 = t3.get$iterator(t3); t3.moveNext$0();)
              title = P.max(title, ("      [" + H.S(t3.get$current()) + "]").length);
        }
        this.columnWidths = [abbr, title + 4];
      },
      write$2: function(column, text) {
        var lines, t1, _i;
        lines = J.split$1$s(text, "\n");
        while (true) {
          if (!(lines.length > 0 && J.trim$0$s(lines[0]) === ""))
            break;
          P.RangeError_checkValidRange(0, 1, lines.length, null, null, null);
          lines.splice(0, 1);
        }
        while (true) {
          t1 = lines.length;
          if (!(t1 > 0 && J.trim$0$s(lines[t1 - 1]) === ""))
            break;
          if (0 >= lines.length)
            return H.ioore(lines, 0);
          lines.pop();
        }
        for (t1 = lines.length, _i = 0; _i < lines.length; lines.length === t1 || (0, H.throwConcurrentModificationError)(lines), ++_i)
          this.writeLine$2(column, lines[_i]);
      },
      writeLine$2: function(column, text) {
        var t1, t2;
        for (; t1 = this.newlinesNeeded, t1 > 0;) {
          this.buffer._contents += "\n";
          this.newlinesNeeded = t1 - 1;
        }
        for (; t1 = this.currentColumn, t1 !== column;) {
          t2 = this.buffer;
          if (t1 < 2)
            t2._contents += A.padRight("", this.columnWidths[t1]);
          else
            t2._contents += "\n";
          this.currentColumn = C.JSInt_methods.$mod(this.currentColumn + 1, 3);
        }
        t1 = this.columnWidths;
        t1.length;
        t2 = this.buffer;
        if (column < 2)
          t2._contents += A.padRight(text, t1[column]);
        else {
          t2.toString;
          t2._contents += H.S(text);
        }
        this.currentColumn = C.JSInt_methods.$mod(this.currentColumn + 1, 3);
        t1 = column === 2;
        if (t1)
          ++this.newlinesNeeded;
        if (t1)
          ++this.numHelpLines;
        else
          this.numHelpLines = 0;
      },
      buildAllowedList$1: function(option) {
        var allowedBuffer, t1, first, allowed;
        allowedBuffer = new P.StringBuffer("");
        allowedBuffer._contents = "[";
        for (t1 = option.allowed, t1 = t1.get$iterator(t1), first = true; t1.moveNext$0(); first = false) {
          allowed = t1.__internal$_current;
          if (!first)
            allowedBuffer._contents += ", ";
          allowedBuffer._contents += H.S(allowed);
          if (J.$eq(allowed, option.defaultValue))
            allowedBuffer._contents += " (default)";
        }
        t1 = allowedBuffer._contents += "]";
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    }
  }], ["bignum", "package:bignum/bignum.dart",, Z, {
    "^": "",
    BigInteger_ZERO: function() {
      if ($.get$BigInteger_useJsBigint() === true) {
        var r = Z.BigIntegerV8$(null, null, null);
        r.fromInt$1(0);
        return r;
      } else
        return Z.BigIntegerDartvm$(0, null, null);
    },
    BigInteger_ONE: function() {
      if ($.get$BigInteger_useJsBigint() === true) {
        var r = Z.BigIntegerV8$(null, null, null);
        r.fromInt$1(1);
        return r;
      } else
        return Z.BigIntegerDartvm$(1, null, null);
    },
    BigInteger_TWO: function() {
      if ($.get$BigInteger_useJsBigint() === true) {
        var r = Z.BigIntegerV8$(null, null, null);
        r.fromInt$1(2);
        return r;
      } else
        return Z.BigIntegerDartvm$(2, null, null);
    },
    BigInteger_THREE: function() {
      if ($.get$BigInteger_useJsBigint() === true) {
        var r = Z.BigIntegerV8$(null, null, null);
        r.fromInt$1(3);
        return r;
      } else
        return Z.BigIntegerDartvm$(3, null, null);
    },
    BigInteger_BigInteger: function(a, b, c) {
      if ($.get$BigInteger_useJsBigint() === true)
        return Z.BigIntegerV8$(a, b, c);
      else
        return Z.BigIntegerDartvm$(a, b, c);
    },
    BigInteger_BigInteger$fromBytes: function(signum, magnitude) {
      var t1, magnitude0, $self;
      if ($.get$BigInteger_useJsBigint() === true) {
        if (signum === 0)
          H.throwExpression(P.ArgumentError$("Argument signum must not be zero"));
        if (0 >= magnitude.length)
          return H.ioore(magnitude, 0);
        if (!J.$eq(J.$and$in(magnitude[0], 128), 0)) {
          t1 = H._checkLength(1 + magnitude.length);
          magnitude0 = new Uint8Array(t1);
          if (0 >= t1)
            return H.ioore(magnitude0, 0);
          magnitude0[0] = 0;
          C.NativeUint8List_methods.setRange$3(magnitude0, 1, 1 + magnitude.length, magnitude);
          magnitude = magnitude0;
        }
        $self = Z.BigIntegerV8$(magnitude, null, null);
        return $self;
      } else {
        $self = Z.BigIntegerDartvm$(null, null, null);
        if (signum !== 0)
          $self.fromByteArray$2(magnitude, true);
        else
          $self.fromByteArray$2(magnitude, false);
        return $self;
      }
    },
    BigInteger: {
      "^": "Object;"
    },
    closure0: {
      "^": "Closure:5;",
      call$0: function() {
        return true;
      }
    },
    BigIntegerDartvm: {
      "^": "Object;data*",
      copyTo$1: function(r) {
        r.set$data(0, this.data);
      },
      fromString$2: function(s, b) {
        this.data = H.Primitives_parseInt(s, b, new Z.BigIntegerDartvm_fromString_closure());
      },
      fromByteArray$2: function(s, fixsign) {
        var t1, v, t2;
        if (s == null || J.$eq(J.get$length$asx(s), 0)) {
          this.data = 0;
          return;
        }
        if (!fixsign && J.$gt$n(J.$and$in(J.$index$asx(s, 0), 255), 127) && true) {
          for (t1 = J.get$iterator$ax(s), v = 0; t1.moveNext$0();) {
            t2 = J.$not$i(J.$sub$n(J.$and$in(t1.get$current(), 255), 256));
            if (typeof t2 !== "number")
              return H.iae(t2);
            v = v << 8 | t2;
          }
          this.data = ~v >>> 0;
        } else {
          for (t1 = J.get$iterator$ax(s), v = 0; t1.moveNext$0();) {
            t2 = J.$and$in(t1.get$current(), 255);
            if (typeof t2 !== "number")
              return H.iae(t2);
            v = (v << 8 | t2) >>> 0;
          }
          this.data = v;
        }
      },
      fromByteArray$1: function(s) {
        return this.fromByteArray$2(s, false);
      },
      toString$1: function(_, b) {
        return J.toRadixString$1$n(this.data, b);
      },
      toString$0: function($receiver) {
        return this.toString$1($receiver, 10);
      },
      abs$0: function(_) {
        var t1, t2;
        t1 = J.$lt$in(this.data, 0);
        t2 = this.data;
        return t1 ? Z.BigIntegerDartvm$(J.$negate$n(t2), null, null) : Z.BigIntegerDartvm$(t2, null, null);
      },
      compareTo$1: function(_, a) {
        if (typeof a === "number")
          return J.compareTo$1$ns(this.data, a);
        if (a instanceof Z.BigIntegerDartvm)
          return J.compareTo$1$ns(this.data, a.data);
        return 0;
      },
      bitLength$0: [function(_) {
        return J.get$bitLength$i(this.data);
      }, "call$0", "get$bitLength", 0, 0, 2],
      lShiftTo$2: function(n, r) {
        r.set$data(0, J.$shl$n(this.data, n));
      },
      rShiftTo$2: function(n, r) {
        J.set$data$x(r, J.$shr$n(this.data, n));
      },
      subTo$2: function(a, r) {
        J.set$data$x(r, J.$sub$n(this.data, J.get$data$x(a)));
      },
      squareTo$1: function(r) {
        var t1 = this.data;
        r.set$data(0, J.$mul$ns(t1, t1));
      },
      divRemTo$3: function(m, q, r) {
        var t1 = J.getInterceptor$x(m);
        C.JSNull_methods.set$data(q, J.$tdiv$n(this.data, t1.get$data(m)));
        J.set$data$x(r, J.$mod$n(this.data, t1.get$data(m)));
      },
      mod$1: function(a) {
        return Z.BigIntegerDartvm$(J.$mod$n(this.data, J.get$data$x(a)), null, null);
      },
      isEven$0: [function(_) {
        return J.get$isEven$i(this.data);
      }, "call$0", "get$isEven", 0, 0, 5],
      clone$0: function(_) {
        return Z.BigIntegerDartvm$(this.data, null, null);
      },
      intValue$0: function() {
        return this.data;
      },
      signum$0: function() {
        return J.get$sign$n(this.data);
      },
      toByteArray$0: function() {
        var t1, t2, str, neg, len, blen, p, byte0, bytes, boff, i, $byte;
        t1 = J.$lt$in(this.data, 0);
        t2 = this.data;
        if (t1) {
          str = J.toRadixString$1$n(J.$not$i(t2), 16);
          neg = true;
        } else {
          str = J.toRadixString$1$n(t2, 16);
          neg = false;
        }
        len = str.length;
        blen = C.JSInt_methods._tdivFast$1(len + 1, 2);
        if (neg) {
          p = (len & 1) === 1 ? -1 : 0;
          byte0 = J.$not$i(H.Primitives_parseInt(C.JSString_methods.substring$2(str, 0, p + 2), 16, null));
          t1 = J.getInterceptor$in(byte0);
          if (t1.$lt(byte0, -128))
            byte0 = t1.$add(byte0, 256);
          if (J.$ge$n(byte0, 0)) {
            t1 = blen + 1;
            bytes = Array(t1);
            bytes.fixed$length = Array;
            bytes.$builtinTypeInfo = [P.$int];
            bytes[0] = -1;
            if (1 >= t1)
              return H.ioore(bytes, 1);
            bytes[1] = byte0;
            boff = 1;
          } else {
            bytes = Array(blen);
            bytes.fixed$length = Array;
            bytes.$builtinTypeInfo = [P.$int];
            if (0 >= blen)
              return H.ioore(bytes, 0);
            bytes[0] = byte0;
            boff = 0;
          }
          for (t1 = bytes.length, i = 1; i < blen; ++i) {
            t2 = p + (i << 1 >>> 0);
            $byte = J.$not$i(H.Primitives_parseInt(C.JSString_methods.substring$2(str, t2, t2 + 2), 16, null));
            t2 = J.getInterceptor$in($byte);
            if (t2.$lt($byte, -128))
              $byte = t2.$add($byte, 256);
            t2 = i + boff;
            if (t2 >= t1)
              return H.ioore(bytes, t2);
            bytes[t2] = $byte;
          }
        } else {
          p = (len & 1) === 1 ? -1 : 0;
          byte0 = H.Primitives_parseInt(C.JSString_methods.substring$2(str, 0, p + 2), 16, null);
          t1 = J.getInterceptor$n(byte0);
          if (t1.$gt(byte0, 127))
            byte0 = t1.$sub(byte0, 256);
          if (J.$lt$in(byte0, 0)) {
            t1 = blen + 1;
            bytes = Array(t1);
            bytes.fixed$length = Array;
            bytes.$builtinTypeInfo = [P.$int];
            bytes[0] = 0;
            if (1 >= t1)
              return H.ioore(bytes, 1);
            bytes[1] = byte0;
            boff = 1;
          } else {
            bytes = Array(blen);
            bytes.fixed$length = Array;
            bytes.$builtinTypeInfo = [P.$int];
            if (0 >= blen)
              return H.ioore(bytes, 0);
            bytes[0] = byte0;
            boff = 0;
          }
          for (t1 = bytes.length, i = 1; i < blen; ++i) {
            t2 = p + (i << 1 >>> 0);
            $byte = H.Primitives_parseInt(C.JSString_methods.substring$2(str, t2, t2 + 2), 16, null);
            t2 = J.getInterceptor$n($byte);
            if (t2.$gt($byte, 127))
              $byte = t2.$sub($byte, 256);
            t2 = i + boff;
            if (t2 >= t1)
              return H.ioore(bytes, t2);
            bytes[t2] = $byte;
          }
        }
        return bytes;
      },
      min$1: [function(_, a) {
        return J.$lt$in(this.compareTo$1(0, a), 0) ? this : a;
      }, "call$1", "get$min", 2, 0, 16, 23, []],
      max$1: [function(_, a) {
        return J.$gt$n(this.compareTo$1(0, a), 0) ? this : a;
      }, "call$1", "get$max", 2, 0, 16, 23, []],
      shiftRight$1: function(n) {
        return Z.BigIntegerDartvm$(J.$shr$n(this.data, n), null, null);
      },
      lbit$1: function(x) {
        var r, t1;
        if (J.$eq(x, 0))
          return -1;
        for (r = 0; t1 = J.getInterceptor$in(x), J.$eq(t1.$and(x, 4294967295), 0);) {
          x = t1.$shr(x, 32);
          r += 32;
        }
        if (J.$eq(t1.$and(x, 65535), 0)) {
          x = t1.$shr(x, 16);
          r += 16;
        }
        t1 = J.getInterceptor$in(x);
        if (J.$eq(t1.$and(x, 255), 0)) {
          x = t1.$shr(x, 8);
          r += 8;
        }
        t1 = J.getInterceptor$in(x);
        if (J.$eq(t1.$and(x, 15), 0)) {
          x = t1.$shr(x, 4);
          r += 4;
        }
        t1 = J.getInterceptor$in(x);
        if (J.$eq(t1.$and(x, 3), 0)) {
          x = t1.$shr(x, 2);
          r += 2;
        }
        return J.$eq(J.$and$in(x, 1), 0) ? r + 1 : r;
      },
      get$lowestSetBit: function() {
        return this.lbit$1(this.data);
      },
      testBit$1: function(n) {
        return !J.$eq(J.$and$in(this.data, C.JSInt_methods.$shl(1, n)), 0);
      },
      add$1: function(_, a) {
        return Z.BigIntegerDartvm$(J.$add$ns(this.data, J.get$data$x(a)), null, null);
      },
      dAddOffset$2: function(n, w) {
        if (w === 0)
          this.data = J.$add$ns(this.data, n);
        else
          throw H.wrapException("dAddOffset(" + n + "," + w + ") not implemented");
      },
      modPow$2: function(_, e, m) {
        return Z.BigIntegerDartvm$(J.modPow$2$i(this.data, J.get$data$x(e), J.get$data$x(m)), null, null);
      },
      modInverse$1: function(_, m) {
        return Z.BigIntegerDartvm$(J.modInverse$1$i(this.data, J.get$data$x(m)), null, null);
      },
      $add: function(_, other) {
        return Z.BigIntegerDartvm$(J.$add$ns(this.data, J.get$data$x(other)), null, null);
      },
      $sub: function(_, other) {
        return Z.BigIntegerDartvm$(J.$sub$n(this.data, J.get$data$x(other)), null, null);
      },
      $mul: function(_, other) {
        return Z.BigIntegerDartvm$(J.$mul$ns(this.data, J.get$data$x(other)), null, null);
      },
      $mod: function(_, other) {
        return Z.BigIntegerDartvm$(J.$mod$n(this.data, J.get$data$x(other)), null, null);
      },
      $div: function(_, other) {
        return Z.BigIntegerDartvm$(J.$tdiv$n(this.data, J.get$data$x(other)), null, null);
      },
      $tdiv: function(_, other) {
        return Z.BigIntegerDartvm$(J.$tdiv$n(this.data, J.get$data$x(other)), null, null);
      },
      $negate: function(_) {
        return Z.BigIntegerDartvm$(J.$negate$n(this.data), null, null);
      },
      $lt: function(_, other) {
        return J.$lt$in(this.compareTo$1(0, other), 0) && true;
      },
      $le: function(_, other) {
        return J.$le$n(this.compareTo$1(0, other), 0) && true;
      },
      $gt: function(_, other) {
        return J.$gt$n(this.compareTo$1(0, other), 0) && true;
      },
      $ge: function(_, other) {
        return J.$ge$n(this.compareTo$1(0, other), 0) && true;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return J.$eq(this.compareTo$1(0, other), 0) && true;
      },
      $and: function(_, other) {
        return Z.BigIntegerDartvm$(J.$and$in(this.data, J.get$data$x(other)), null, null);
      },
      $or: function(_, other) {
        return Z.BigIntegerDartvm$(J.$or$n(this.data, J.get$data$x(other)), null, null);
      },
      $xor: function(_, other) {
        return Z.BigIntegerDartvm$(J.$xor$n(this.data, J.get$data$x(other)), null, null);
      },
      $not: function(_) {
        return Z.BigIntegerDartvm$(J.$not$i(this.data), null, null);
      },
      $shl: function(_, shiftAmount) {
        return Z.BigIntegerDartvm$(J.$shl$n(this.data, shiftAmount), null, null);
      },
      $shr: function(_, shiftAmount) {
        return Z.BigIntegerDartvm$(J.$shr$n(this.data, shiftAmount), null, null);
      },
      BigIntegerDartvm$3: function(a, b, c) {
        if (a != null)
          if (typeof a === "number" && Math.floor(a) === a)
            this.data = a;
          else if (typeof a === "number")
            this.data = C.JSNumber_methods.toInt$0(a);
          else if (!!J.getInterceptor(a).$isList)
            this.fromByteArray$1(a);
          else
            this.fromString$2(a, b);
      },
      $isBigInteger: 1,
      static: {BigIntegerDartvm$: function(a, b, c) {
          var t1 = new Z.BigIntegerDartvm(null);
          t1.BigIntegerDartvm$3(a, b, c);
          return t1;
        }}
    },
    BigIntegerDartvm_fromString_closure: {
      "^": "Closure:8;",
      call$1: function(str) {
        return 0;
      }
    },
    Classic: {
      "^": "Object;m",
      convert$1: function(x) {
        if (J.$lt$in(x.s, 0) || J.$ge$n(x.compareTo$1(0, this.m), 0))
          return x.mod$1(this.m);
        else
          return x;
      },
      revert$1: function(x) {
        return x;
      },
      mulTo$3: function(x, y, r) {
        x.multiplyTo$2(y, r);
        r.divRemTo$3(this.m, null, r);
      },
      sqrTo$2: function(x, r) {
        x.squareTo$1(r);
        r.divRemTo$3(this.m, null, r);
      }
    },
    Montgomery: {
      "^": "Object;m,mp,mpl,mph,um,mt2",
      convert$1: function(x) {
        var r, t1, t2, r0;
        r = Z.BigIntegerV8$(null, null, null);
        t1 = J.$lt$in(x.s, 0) ? x.negate_op$0() : x;
        t2 = this.m;
        t1.dlShiftTo$2(t2.get$t(), r);
        r.divRemTo$3(t2, null, r);
        if (J.$lt$in(x.s, 0)) {
          r0 = Z.BigIntegerV8$(null, null, null);
          r0.fromInt$1(0);
          t1 = J.$gt$n(r.compareTo$1(0, r0), 0);
        } else
          t1 = false;
        if (t1)
          t2.subTo$2(r, r);
        return r;
      },
      revert$1: function(x) {
        var r = Z.BigIntegerV8$(null, null, null);
        x.copyTo$1(r);
        this.reduce$1(0, r);
        return r;
      },
      reduce$1: function(_, x) {
        var x_array, t1, t2, t3, i, j, u0;
        x_array = x.get$array();
        while (true) {
          t1 = x.get$t();
          t2 = this.mt2;
          if (typeof t1 !== "number")
            return t1.$le();
          if (!(t1 <= t2))
            break;
          t1 = x.get$t();
          if (typeof t1 !== "number")
            return t1.$add();
          t2 = t1 + 1;
          x.set$t(t2);
          t3 = J.$sub$n(J.get$length$asx(x_array.data), 1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (t1 > t3)
            J.set$length$asx(x_array.data, t2);
          J.$indexSet$ax(x_array.data, t1, 0);
        }
        t1 = this.m;
        i = 0;
        while (true) {
          t2 = t1.get$t();
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          j = J.$and$in(J.$index$asx(x_array.data, i), 32767);
          t2 = J.getInterceptor$ns(j);
          u0 = J.$and$in(J.$add$ns(t2.$mul(j, this.mpl), J.$shl$n(J.$and$in(J.$add$ns(t2.$mul(j, this.mph), J.$mul$ns(J.$shr$n(J.$index$asx(x_array.data, i), 15), this.mpl)), this.um), 15)), $.BigIntegerV8_BI_DM);
          t2 = t1.get$t();
          if (typeof t2 !== "number")
            return H.iae(t2);
          j = i + t2;
          t2 = J.$add$ns(J.$index$asx(x_array.data, j), t1.am$6(0, u0, x, i, 0, t1.get$t()));
          t3 = J.$sub$n(J.get$length$asx(x_array.data), 1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (j > t3)
            J.set$length$asx(x_array.data, j + 1);
          J.$indexSet$ax(x_array.data, j, t2);
          for (; J.$ge$n(J.$index$asx(x_array.data, j), $.BigIntegerV8_BI_DV);) {
            t2 = J.$sub$n(J.$index$asx(x_array.data, j), $.BigIntegerV8_BI_DV);
            t3 = J.$sub$n(J.get$length$asx(x_array.data), 1);
            if (typeof t3 !== "number")
              return H.iae(t3);
            if (j > t3)
              J.set$length$asx(x_array.data, j + 1);
            J.$indexSet$ax(x_array.data, j, t2);
            ++j;
            t2 = J.$add$ns(J.$index$asx(x_array.data, j), 1);
            t3 = J.$sub$n(J.get$length$asx(x_array.data), 1);
            if (typeof t3 !== "number")
              return H.iae(t3);
            if (j > t3)
              J.set$length$asx(x_array.data, j + 1);
            J.$indexSet$ax(x_array.data, j, t2);
          }
          ++i;
        }
        t2 = J.getInterceptor$n(x);
        t2.clamp$0(x);
        x.drShiftTo$2(t1.get$t(), x);
        if (J.$ge$n(t2.compareTo$1(x, t1), 0))
          x.subTo$2(t1, x);
      },
      sqrTo$2: function(x, r) {
        x.squareTo$1(r);
        this.reduce$1(0, r);
      },
      mulTo$3: function(x, y, r) {
        x.multiplyTo$2(y, r);
        this.reduce$1(0, r);
      }
    },
    Barrett: {
      "^": "Object;m,r2,q3,mu",
      convert$1: function(x) {
        var t1, t2, r;
        if (!J.$lt$in(x.s, 0)) {
          t1 = x.t;
          t2 = this.m.get$t();
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (typeof t1 !== "number")
            return t1.$gt();
          t2 = t1 > 2 * t2;
          t1 = t2;
        } else
          t1 = true;
        if (t1)
          return x.mod$1(this.m);
        else if (J.$lt$in(x.compareTo$1(0, this.m), 0))
          return x;
        else {
          r = Z.BigIntegerV8$(null, null, null);
          x.copyTo$1(r);
          this.reduce$1(0, r);
          return r;
        }
      },
      revert$1: function(x) {
        return x;
      },
      reduce$1: function(_, x) {
        var t1, t2, t3, t4;
        t1 = this.m;
        t2 = t1.get$t();
        if (typeof t2 !== "number")
          return t2.$sub();
        x.drShiftTo$2(t2 - 1, this.r2);
        t2 = x.get$t();
        t3 = t1.get$t();
        if (typeof t3 !== "number")
          return t3.$add();
        if (typeof t2 !== "number")
          return t2.$gt();
        if (t2 > t3 + 1) {
          t2 = t1.get$t();
          if (typeof t2 !== "number")
            return t2.$add();
          x.set$t(t2 + 1);
          J.clamp$0$n(x);
        }
        t2 = this.mu;
        t3 = this.r2;
        t4 = t1.get$t();
        if (typeof t4 !== "number")
          return t4.$add();
        t2.multiplyUpperTo$3(t3, t4 + 1, this.q3);
        t4 = this.q3;
        t3 = t1.get$t();
        if (typeof t3 !== "number")
          return t3.$add();
        t1.multiplyLowerTo$3(t4, t3 + 1, this.r2);
        for (t2 = J.getInterceptor$ns(x); J.$lt$in(t2.compareTo$1(x, this.r2), 0);) {
          t3 = t1.get$t();
          if (typeof t3 !== "number")
            return t3.$add();
          x.dAddOffset$2(1, t3 + 1);
        }
        x.subTo$2(this.r2, x);
        for (; J.$ge$n(t2.compareTo$1(x, t1), 0);)
          x.subTo$2(t1, x);
      },
      sqrTo$2: function(x, r) {
        x.squareTo$1(r);
        this.reduce$1(0, r);
      },
      mulTo$3: function(x, y, r) {
        x.multiplyTo$2(y, r);
        this.reduce$1(0, r);
      }
    },
    JSArray: {
      "^": "Object;data*",
      $index: function(_, index) {
        return J.$index$asx(this.data, index);
      },
      $indexSet: function(_, index, value) {
        var t1 = J.getInterceptor$n(index);
        if (t1.$gt(index, J.$sub$n(J.get$length$asx(this.data), 1)))
          J.set$length$asx(this.data, t1.$add(index, 1));
        J.$indexSet$ax(this.data, index, value);
        return value;
      }
    },
    BigIntegerV8: {
      "^": "Object;array<,am,t@,s@,_debugging",
      _am3$6: [function(i, x, w, j, c, n) {
        var this_array, w_array, t1, xl, xh, l, i0, h, m, t2, j0;
        this_array = this.array;
        w_array = w.get$array();
        t1 = J.getInterceptor$n(x);
        xl = t1.toInt$0(x) & 16383;
        xh = C.JSInt_methods._shrOtherPositive$1(t1.toInt$0(x), 14);
        for (; n = J.$sub$n(n, 1), J.$ge$n(n, 0); j = j0, i = i0) {
          l = J.$and$in(J.$index$asx(this_array.data, i), 16383);
          i0 = J.$add$ns(i, 1);
          h = J.$shr$n(J.$index$asx(this_array.data, i), 14);
          if (typeof l !== "number")
            return H.iae(l);
          t1 = J.$mul$ns(h, xl);
          if (typeof t1 !== "number")
            return H.iae(t1);
          m = xh * l + t1;
          t1 = J.$index$asx(w_array.data, j);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (typeof c !== "number")
            return H.iae(c);
          l = xl * l + ((m & 16383) << 14 >>> 0) + t1 + c;
          t1 = C.JSNumber_methods._shrOtherPositive$1(l, 28);
          t2 = C.JSNumber_methods._shrOtherPositive$1(m, 14);
          if (typeof h !== "number")
            return H.iae(h);
          c = t1 + t2 + xh * h;
          t2 = J.getInterceptor$ns(j);
          j0 = t2.$add(j, 1);
          if (t2.$gt(j, J.$sub$n(J.get$length$asx(w_array.data), 1)))
            J.set$length$asx(w_array.data, t2.$add(j, 1));
          J.$indexSet$ax(w_array.data, j, l & 268435455);
        }
        return c;
      }, "call$6", "get$_am3", 12, 0, 17, 24, [], 7, [], 25, [], 26, [], 27, [], 28, []],
      copyTo$1: function(r) {
        var this_array, r_array, t1, i, t2;
        this_array = this.array;
        r_array = r.get$array();
        t1 = this.t;
        if (typeof t1 !== "number")
          return t1.$sub();
        i = t1 - 1;
        for (; i >= 0; --i) {
          t1 = J.$index$asx(this_array.data, i);
          t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (i > t2)
            J.set$length$asx(r_array.data, i + 1);
          J.$indexSet$ax(r_array.data, i, t1);
        }
        r.set$t(this.t);
        r.set$s(this.s);
      },
      fromInt$1: function(x) {
        var this_array, t1;
        this_array = this.array;
        this.t = 1;
        this.s = x < 0 ? -1 : 0;
        if (x > 0)
          this_array.$indexSet(0, 0, x);
        else if (x < -1) {
          t1 = $.BigIntegerV8_BI_DV;
          if (typeof t1 !== "number")
            return H.iae(t1);
          this_array.$indexSet(0, 0, x + t1);
        } else
          this.t = 0;
      },
      fromString$2: function(s, b) {
        var this_array, k, t1, i, t2, mi, sh, x, c, t3, t4, t5, t6, r;
        this_array = this.array;
        if (b === 16)
          k = 4;
        else if (b === 8)
          k = 3;
        else if (b === 256)
          k = 8;
        else if (b === 2)
          k = 1;
        else if (b === 32)
          k = 5;
        else {
          if (b === 4)
            ;
          else {
            this.fromRadix$2(s, b);
            return;
          }
          k = 2;
        }
        this.t = 0;
        this.s = 0;
        t1 = J.getInterceptor$asx(s);
        i = t1.get$length(s);
        for (t2 = k === 8, mi = false, sh = 0; i = J.$sub$n(i, 1), J.$ge$n(i, 0);) {
          if (t2)
            x = J.$and$in(t1.$index(s, i), 255);
          else {
            c = $.BigIntegerV8_BI_RC.$index(0, t1.codeUnitAt$1(s, i));
            x = c == null ? -1 : c;
          }
          t3 = J.getInterceptor$in(x);
          if (t3.$lt(x, 0)) {
            if (J.$eq(t1.$index(s, i), "-"))
              mi = true;
            continue;
          }
          if (sh === 0) {
            t3 = this.t;
            if (typeof t3 !== "number")
              return t3.$add();
            t4 = t3 + 1;
            this.t = t4;
            t5 = J.$sub$n(J.get$length$asx(this_array.data), 1);
            if (typeof t5 !== "number")
              return H.iae(t5);
            if (t3 > t5)
              J.set$length$asx(this_array.data, t4);
            J.$indexSet$ax(this_array.data, t3, x);
          } else {
            t4 = $.BigIntegerV8_BI_DB;
            if (typeof t4 !== "number")
              return H.iae(t4);
            t5 = this.t;
            if (sh + k > t4) {
              if (typeof t5 !== "number")
                return t5.$sub();
              t4 = t5 - 1;
              t5 = J.$index$asx(this_array.data, t4);
              t6 = $.BigIntegerV8_BI_DB;
              if (typeof t6 !== "number")
                return t6.$sub();
              t6 = J.$or$n(t5, J.$shl$n(t3.$and(x, C.JSInt_methods.$shl(1, t6 - sh) - 1), sh));
              t5 = J.$sub$n(J.get$length$asx(this_array.data), 1);
              if (typeof t5 !== "number")
                return H.iae(t5);
              if (t4 > t5)
                J.set$length$asx(this_array.data, t4 + 1);
              J.$indexSet$ax(this_array.data, t4, t6);
              t4 = this.t;
              if (typeof t4 !== "number")
                return t4.$add();
              t5 = t4 + 1;
              this.t = t5;
              t6 = $.BigIntegerV8_BI_DB;
              if (typeof t6 !== "number")
                return t6.$sub();
              t6 = t3.$shr(x, t6 - sh);
              t3 = J.$sub$n(J.get$length$asx(this_array.data), 1);
              if (typeof t3 !== "number")
                return H.iae(t3);
              if (t4 > t3)
                J.set$length$asx(this_array.data, t5);
              J.$indexSet$ax(this_array.data, t4, t6);
            } else {
              if (typeof t5 !== "number")
                return t5.$sub();
              t4 = t5 - 1;
              t3 = J.$or$n(J.$index$asx(this_array.data, t4), t3.$shl(x, sh));
              t5 = J.$sub$n(J.get$length$asx(this_array.data), 1);
              if (typeof t5 !== "number")
                return H.iae(t5);
              if (t4 > t5)
                J.set$length$asx(this_array.data, t4 + 1);
              J.$indexSet$ax(this_array.data, t4, t3);
            }
          }
          sh += k;
          t3 = $.BigIntegerV8_BI_DB;
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (sh >= t3)
            sh -= t3;
          mi = false;
        }
        if (t2 && !J.$eq(J.$and$in(t1.$index(s, 0), 128), 0)) {
          this.s = -1;
          if (sh > 0) {
            t1 = this.t;
            if (typeof t1 !== "number")
              return t1.$sub();
            --t1;
            t2 = J.$index$asx(this_array.data, t1);
            t3 = $.BigIntegerV8_BI_DB;
            if (typeof t3 !== "number")
              return t3.$sub();
            this_array.$indexSet(0, t1, J.$or$n(t2, C.JSInt_methods.$shl(C.JSInt_methods.$shl(1, t3 - sh) - 1, sh)));
          }
        }
        this.clamp$0(0);
        if (mi) {
          r = Z.BigIntegerV8$(null, null, null);
          r.fromInt$1(0);
          r.subTo$2(this, this);
        }
      },
      toString$1: function(_, b) {
        if (J.$lt$in(this.s, 0))
          return "-" + this.negate_op$0().toString$1(0, b);
        return this.toRadix$1(b);
      },
      toString$0: function($receiver) {
        return this.toString$1($receiver, null);
      },
      negate_op$0: function() {
        var r, r0;
        r = Z.BigIntegerV8$(null, null, null);
        r0 = Z.BigIntegerV8$(null, null, null);
        r0.fromInt$1(0);
        r0.subTo$2(this, r);
        return r;
      },
      abs$0: function(_) {
        return J.$lt$in(this.s, 0) ? this.negate_op$0() : this;
      },
      compareTo$1: function(_, a) {
        var this_array, a_array, r, i, t1;
        if (typeof a === "number")
          a = Z.BigIntegerV8$(a, null, null);
        this_array = this.array;
        a_array = a.get$array();
        r = J.$sub$n(this.s, a.get$s());
        if (!J.$eq(r, 0))
          return r;
        i = this.t;
        t1 = a.get$t();
        if (typeof i !== "number")
          return i.$sub();
        if (typeof t1 !== "number")
          return H.iae(t1);
        r = i - t1;
        if (r !== 0)
          return r;
        for (; --i, i >= 0;) {
          r = J.$sub$n(J.$index$asx(this_array.data, i), J.$index$asx(a_array.data, i));
          if (!J.$eq(r, 0))
            return r;
        }
        return 0;
      },
      nbits$1: function(x) {
        var t, r;
        if (typeof x === "number")
          x = C.JSNumber_methods.toInt$0(x);
        t = J.$shr$n(x, 16);
        if (!J.$eq(t, 0)) {
          x = t;
          r = 17;
        } else
          r = 1;
        t = J.$shr$n(x, 8);
        if (!J.$eq(t, 0)) {
          r += 8;
          x = t;
        }
        t = J.$shr$n(x, 4);
        if (!J.$eq(t, 0)) {
          r += 4;
          x = t;
        }
        t = J.$shr$n(x, 2);
        if (!J.$eq(t, 0)) {
          r += 2;
          x = t;
        }
        return !J.$eq(J.$shr$n(x, 1), 0) ? r + 1 : r;
      },
      bitLength$0: [function(_) {
        var this_array, t1, t2;
        this_array = this.array;
        t1 = this.t;
        if (typeof t1 !== "number")
          return t1.$le();
        if (t1 <= 0)
          return 0;
        t2 = $.BigIntegerV8_BI_DB;
        --t1;
        if (typeof t2 !== "number")
          return t2.$mul();
        return t2 * t1 + this.nbits$1(J.$xor$n(J.$index$asx(this_array.data, t1), J.$and$in(this.s, $.BigIntegerV8_BI_DM)));
      }, "call$0", "get$bitLength", 0, 0, 2],
      dlShiftTo$2: function(n, r) {
        var this_array, r_array, t1, i, t2, t3;
        this_array = this.array;
        r_array = r.array;
        t1 = this.t;
        if (typeof t1 !== "number")
          return t1.$sub();
        i = t1 - 1;
        for (; i >= 0; --i) {
          if (typeof n !== "number")
            return H.iae(n);
          t1 = i + n;
          t2 = J.$index$asx(this_array.data, i);
          t3 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (t1 > t3)
            J.set$length$asx(r_array.data, t1 + 1);
          J.$indexSet$ax(r_array.data, t1, t2);
        }
        if (typeof n !== "number")
          return n.$sub();
        i = n - 1;
        for (; i >= 0; --i) {
          t1 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (i > t1)
            J.set$length$asx(r_array.data, i + 1);
          J.$indexSet$ax(r_array.data, i, 0);
        }
        t1 = this.t;
        if (typeof t1 !== "number")
          return t1.$add();
        r.t = t1 + n;
        r.s = this.s;
      },
      drShiftTo$2: function(n, r) {
        var this_array, r_array, i, t1, t2, t3;
        this_array = this.array;
        r_array = r.get$array();
        i = n;
        while (true) {
          t1 = this.t;
          if (typeof i !== "number")
            return i.$lt();
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          if (typeof n !== "number")
            return H.iae(n);
          t1 = i - n;
          t2 = J.$index$asx(this_array.data, i);
          t3 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (t1 > t3)
            J.set$length$asx(r_array.data, t1 + 1);
          J.$indexSet$ax(r_array.data, t1, t2);
          ++i;
        }
        if (typeof n !== "number")
          return H.iae(n);
        r.set$t(P.max(t1 - n, 0));
        r.set$s(this.s);
      },
      lShiftTo$2: function(n, r) {
        var this_array, r_array, t1, bs, cbs, bm, ds, c, i, t2, t3;
        this_array = this.array;
        r_array = r.get$array();
        t1 = $.BigIntegerV8_BI_DB;
        if (typeof n !== "number")
          return n.$mod();
        if (typeof t1 !== "number")
          return H.iae(t1);
        bs = C.JSNumber_methods.$mod(n, t1);
        cbs = t1 - bs;
        bm = C.JSInt_methods.$shl(1, cbs) - 1;
        ds = C.JSNumber_methods.$tdiv(n, t1);
        c = J.$and$in(J.$shl$n(this.s, bs), $.BigIntegerV8_BI_DM);
        t1 = this.t;
        if (typeof t1 !== "number")
          return t1.$sub();
        i = t1 - 1;
        for (; i >= 0; --i) {
          t1 = i + ds + 1;
          t2 = J.$or$n(J.$shr$n(J.$index$asx(this_array.data, i), cbs), c);
          t3 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (t1 > t3)
            J.set$length$asx(r_array.data, t1 + 1);
          J.$indexSet$ax(r_array.data, t1, t2);
          c = J.$shl$n(J.$and$in(J.$index$asx(this_array.data, i), bm), bs);
        }
        for (i = ds - 1; i >= 0; --i) {
          t1 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (i > t1)
            J.set$length$asx(r_array.data, i + 1);
          J.$indexSet$ax(r_array.data, i, 0);
        }
        r_array.$indexSet(0, ds, c);
        t1 = this.t;
        if (typeof t1 !== "number")
          return t1.$add();
        r.set$t(t1 + ds + 1);
        r.set$s(this.s);
        J.clamp$0$n(r);
      },
      rShiftTo$2: function(n, r) {
        var this_array, r_array, t1, ds, t2, bs, cbs, bm, i, t3, t4;
        this_array = this.array;
        r_array = r.get$array();
        r.set$s(this.s);
        t1 = $.BigIntegerV8_BI_DB;
        if (typeof n !== "number")
          return n.$tdiv();
        if (typeof t1 !== "number")
          return H.iae(t1);
        ds = C.JSNumber_methods.$tdiv(n, t1);
        t2 = this.t;
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (ds >= t2) {
          r.set$t(0);
          return;
        }
        bs = C.JSNumber_methods.$mod(n, t1);
        cbs = t1 - bs;
        bm = C.JSInt_methods.$shl(1, bs) - 1;
        r_array.$indexSet(0, 0, J.$shr$n(J.$index$asx(this_array.data, ds), bs));
        i = ds + 1;
        while (true) {
          t1 = this.t;
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          t1 = i - ds;
          t2 = t1 - 1;
          t3 = J.$or$n(J.$index$asx(r_array.data, t2), J.$shl$n(J.$and$in(J.$index$asx(this_array.data, i), bm), cbs));
          t4 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t4 !== "number")
            return H.iae(t4);
          if (t2 > t4)
            J.set$length$asx(r_array.data, t2 + 1);
          J.$indexSet$ax(r_array.data, t2, t3);
          t2 = J.$shr$n(J.$index$asx(this_array.data, i), bs);
          t3 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (t1 > t3)
            J.set$length$asx(r_array.data, t1 + 1);
          J.$indexSet$ax(r_array.data, t1, t2);
          ++i;
        }
        if (bs > 0) {
          t1 = t1 - ds - 1;
          r_array.$indexSet(0, t1, J.$or$n(J.$index$asx(r_array.data, t1), J.$shl$n(J.$and$in(this.s, bm), cbs)));
        }
        t1 = this.t;
        if (typeof t1 !== "number")
          return t1.$sub();
        r.set$t(t1 - ds);
        J.clamp$0$n(r);
      },
      clamp$0: function(_) {
        var this_array, c, t1;
        this_array = this.array;
        c = J.$and$in(this.s, $.BigIntegerV8_BI_DM);
        while (true) {
          t1 = this.t;
          if (typeof t1 !== "number")
            return t1.$gt();
          if (!(t1 > 0 && J.$eq(J.$index$asx(this_array.data, t1 - 1), c)))
            break;
          t1 = this.t;
          if (typeof t1 !== "number")
            return t1.$sub();
          this.t = t1 - 1;
        }
      },
      subTo$2: function(a, r) {
        var this_array, r_array, a_array, m, i, c, i0, t1, t2;
        this_array = this.array;
        r_array = r.get$array();
        a_array = a.get$array();
        m = P.min(a.get$t(), this.t);
        for (i = 0, c = 0; i < m; i = i0) {
          c += C.JSInt_methods.toInt$0(J.toInt$0$n(J.$index$asx(this_array.data, i)) - J.toInt$0$n(J.$index$asx(a_array.data, i)));
          i0 = i + 1;
          t1 = $.BigIntegerV8_BI_DM;
          if (typeof t1 !== "number")
            return H.iae(t1);
          t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (i > t2)
            J.set$length$asx(r_array.data, i0);
          J.$indexSet$ax(r_array.data, i, (c & t1) >>> 0);
          t1 = $.BigIntegerV8_BI_DB;
          if (typeof t1 !== "number")
            return H.iae(t1);
          c = C.JSInt_methods._shrOtherPositive$1(c, t1);
          if (c === 4294967295)
            c = -1;
        }
        t1 = a.get$t();
        t2 = this.t;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 < t2) {
          t1 = a.get$s();
          if (typeof t1 !== "number")
            return H.iae(t1);
          c -= t1;
          while (true) {
            t1 = this.t;
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(i < t1))
              break;
            t1 = J.$index$asx(this_array.data, i);
            if (typeof t1 !== "number")
              return H.iae(t1);
            c += t1;
            i0 = i + 1;
            t1 = $.BigIntegerV8_BI_DM;
            if (typeof t1 !== "number")
              return H.iae(t1);
            t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (i > t2)
              J.set$length$asx(r_array.data, i0);
            J.$indexSet$ax(r_array.data, i, (c & t1) >>> 0);
            t1 = $.BigIntegerV8_BI_DB;
            if (typeof t1 !== "number")
              return H.iae(t1);
            c = C.JSNumber_methods._shrOtherPositive$1(c, t1);
            if (c === 4294967295)
              c = -1;
            i = i0;
          }
          t1 = this.s;
          if (typeof t1 !== "number")
            return H.iae(t1);
          c += t1;
        } else {
          t1 = this.s;
          if (typeof t1 !== "number")
            return H.iae(t1);
          c += t1;
          while (true) {
            t1 = a.get$t();
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(i < t1))
              break;
            t1 = J.$index$asx(a_array.data, i);
            if (typeof t1 !== "number")
              return H.iae(t1);
            c -= t1;
            i0 = i + 1;
            t1 = $.BigIntegerV8_BI_DM;
            if (typeof t1 !== "number")
              return H.iae(t1);
            t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (i > t2)
              J.set$length$asx(r_array.data, i0);
            J.$indexSet$ax(r_array.data, i, (c & t1) >>> 0);
            t1 = $.BigIntegerV8_BI_DB;
            if (typeof t1 !== "number")
              return H.iae(t1);
            c = C.JSNumber_methods._shrOtherPositive$1(c, t1);
            if (c === 4294967295)
              c = -1;
            i = i0;
          }
          t1 = a.get$s();
          if (typeof t1 !== "number")
            return H.iae(t1);
          c -= t1;
        }
        r.set$s(c < 0 ? -1 : 0);
        if (c < -1) {
          i0 = i + 1;
          t1 = $.BigIntegerV8_BI_DV;
          if (typeof t1 !== "number")
            return t1.$add();
          r_array.$indexSet(0, i, t1 + c);
          i = i0;
        } else if (c > 0) {
          i0 = i + 1;
          r_array.$indexSet(0, i, c);
          i = i0;
        }
        r.set$t(i);
        J.clamp$0$n(r);
      },
      multiplyTo$2: function(a, r) {
        var r_array, x, y, y_array, i, t1, t2, t3, r0;
        r_array = r.get$array();
        x = J.$lt$in(this.s, 0) ? this.negate_op$0() : this;
        y = J.abs$0$n(a);
        y_array = y.get$array();
        i = x.t;
        t1 = y.get$t();
        if (typeof i !== "number")
          return i.$add();
        if (typeof t1 !== "number")
          return H.iae(t1);
        r.set$t(i + t1);
        for (; --i, i >= 0;) {
          t1 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (i > t1)
            J.set$length$asx(r_array.data, i + 1);
          J.$indexSet$ax(r_array.data, i, 0);
        }
        i = 0;
        while (true) {
          t1 = y.get$t();
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          t1 = x.t;
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = i + t1;
          t2 = x.am$6(0, J.$index$asx(y_array.data, i), r, i, 0, x.t);
          t3 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (t1 > t3)
            J.set$length$asx(r_array.data, t1 + 1);
          J.$indexSet$ax(r_array.data, t1, t2);
          ++i;
        }
        r.set$s(0);
        J.clamp$0$n(r);
        if (!J.$eq(this.s, a.get$s())) {
          r0 = Z.BigIntegerV8$(null, null, null);
          r0.fromInt$1(0);
          r0.subTo$2(r, r);
        }
      },
      squareTo$1: function(r) {
        var x, x_array, r_array, t1, i, c, t2, t3, i0, t4, t5;
        x = J.$lt$in(this.s, 0) ? this.negate_op$0() : this;
        x_array = x.array;
        r_array = r.array;
        t1 = x.t;
        if (typeof t1 !== "number")
          return H.iae(t1);
        i = 2 * t1;
        r.t = i;
        for (; --i, i >= 0;) {
          t1 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (i > t1)
            J.set$length$asx(r_array.data, i + 1);
          J.$indexSet$ax(r_array.data, i, 0);
        }
        i = 0;
        while (true) {
          t1 = x.t;
          if (typeof t1 !== "number")
            return t1.$sub();
          if (!(i < t1 - 1))
            break;
          t1 = 2 * i;
          c = x.am$6(i, J.$index$asx(x_array.data, i), r, t1, 0, 1);
          t2 = x.t;
          if (typeof t2 !== "number")
            return H.iae(t2);
          t2 = i + t2;
          t3 = J.$index$asx(r_array.data, t2);
          i0 = i + 1;
          t4 = J.$index$asx(x_array.data, i);
          if (typeof t4 !== "number")
            return H.iae(t4);
          t5 = x.t;
          if (typeof t5 !== "number")
            return t5.$sub();
          t5 = J.$add$ns(t3, x.am$6(i0, 2 * t4, r, t1 + 1, c, t5 - i - 1));
          t1 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (t2 > t1)
            J.set$length$asx(r_array.data, t2 + 1);
          J.$indexSet$ax(r_array.data, t2, t5);
          if (J.$ge$n(t5, $.BigIntegerV8_BI_DV)) {
            t1 = x.t;
            if (typeof t1 !== "number")
              return H.iae(t1);
            t1 = i + t1;
            t2 = J.$sub$n(J.$index$asx(r_array.data, t1), $.BigIntegerV8_BI_DV);
            t3 = J.$sub$n(J.get$length$asx(r_array.data), 1);
            if (typeof t3 !== "number")
              return H.iae(t3);
            if (t1 > t3)
              J.set$length$asx(r_array.data, t1 + 1);
            J.$indexSet$ax(r_array.data, t1, t2);
            t1 = x.t;
            if (typeof t1 !== "number")
              return H.iae(t1);
            t1 = i + t1 + 1;
            t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (t1 > t2)
              J.set$length$asx(r_array.data, t1 + 1);
            J.$indexSet$ax(r_array.data, t1, 1);
          }
          i = i0;
        }
        t1 = r.t;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > 0) {
          --t1;
          r_array.$indexSet(0, t1, J.$add$ns(J.$index$asx(r_array.data, t1), x.am$6(i, J.$index$asx(x_array.data, i), r, 2 * i, 0, 1)));
        }
        r.s = 0;
        r.clamp$0(0);
      },
      divRemTo$3: function(m, q, r) {
        var pm, t1, pt, t2, y, ts, ms, pm_array, nsh, ys, y_array, y0, t3, yt, d1, d2, e, i, j, t, r_array, t4, r0, t5, t6, qd;
        pm = J.abs$0$n(m);
        t1 = pm.get$t();
        if (typeof t1 !== "number")
          return t1.$le();
        if (t1 <= 0)
          return;
        pt = J.$lt$in(this.s, 0) ? this.negate_op$0() : this;
        t1 = pt.t;
        t2 = pm.get$t();
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 < t2) {
          if (q != null)
            q.fromInt$1(0);
          if (r != null)
            this.copyTo$1(r);
          return;
        }
        if (r == null)
          r = Z.BigIntegerV8$(null, null, null);
        y = Z.BigIntegerV8$(null, null, null);
        ts = this.s;
        ms = m.get$s();
        pm_array = pm.get$array();
        t1 = $.BigIntegerV8_BI_DB;
        t2 = pm.get$t();
        if (typeof t2 !== "number")
          return t2.$sub();
        t2 = this.nbits$1(J.$index$asx(pm_array.data, t2 - 1));
        if (typeof t1 !== "number")
          return t1.$sub();
        nsh = t1 - t2;
        t1 = nsh > 0;
        if (t1) {
          pm.lShiftTo$2(nsh, y);
          pt.lShiftTo$2(nsh, r);
        } else {
          pm.copyTo$1(y);
          pt.copyTo$1(r);
        }
        ys = y.t;
        y_array = y.array;
        if (typeof ys !== "number")
          return ys.$sub();
        y0 = J.$index$asx(y_array.data, ys - 1);
        t2 = J.getInterceptor(y0);
        if (t2.$eq(y0, 0))
          return;
        t3 = $.BigIntegerV8_BI_F1;
        if (typeof t3 !== "number")
          return H.iae(t3);
        t3 = t2.$mul(y0, C.JSInt_methods.$shl(1, t3));
        yt = J.$add$ns(t3, ys > 1 ? J.$shr$n(J.$index$asx(y_array.data, ys - 2), $.BigIntegerV8_BI_F2) : 0);
        t2 = $.BigIntegerV8_BI_FV;
        if (typeof t2 !== "number")
          return t2.$div();
        if (typeof yt !== "number")
          return H.iae(yt);
        d1 = t2 / yt;
        t2 = $.BigIntegerV8_BI_F1;
        if (typeof t2 !== "number")
          return H.iae(t2);
        d2 = C.JSInt_methods.$shl(1, t2) / yt;
        t2 = $.BigIntegerV8_BI_F2;
        if (typeof t2 !== "number")
          return H.iae(t2);
        e = C.JSInt_methods.$shl(1, t2);
        i = r.get$t();
        if (typeof i !== "number")
          return i.$sub();
        j = i - ys;
        t2 = q == null;
        t = t2 ? Z.BigIntegerV8$(null, null, null) : q;
        y.dlShiftTo$2(j, t);
        r_array = r.get$array();
        t3 = J.getInterceptor$ns(r);
        if (J.$ge$n(t3.compareTo$1(r, t), 0)) {
          t4 = r.get$t();
          if (typeof t4 !== "number")
            return t4.$add();
          r.set$t(t4 + 1);
          r_array.$indexSet(0, t4, 1);
          r.subTo$2(t, r);
        }
        r0 = Z.BigIntegerV8$(null, null, null);
        r0.fromInt$1(1);
        r0.dlShiftTo$2(ys, t);
        t.subTo$2(y, y);
        while (true) {
          t4 = y.t;
          if (typeof t4 !== "number")
            return t4.$lt();
          if (!(t4 < ys))
            break;
          t5 = t4 + 1;
          y.t = t5;
          t6 = J.$sub$n(J.get$length$asx(y_array.data), 1);
          if (typeof t6 !== "number")
            return H.iae(t6);
          if (t4 > t6)
            J.set$length$asx(y_array.data, t5);
          J.$indexSet$ax(y_array.data, t4, 0);
        }
        for (; --j, j >= 0;) {
          --i;
          qd = J.$eq(J.$index$asx(r_array.data, i), y0) ? $.BigIntegerV8_BI_DM : J.floor$0$n(J.$add$ns(J.$mul$ns(J.$index$asx(r_array.data, i), d1), J.$mul$ns(J.$add$ns(J.$index$asx(r_array.data, i - 1), e), d2)));
          t4 = J.$add$ns(J.$index$asx(r_array.data, i), y.am$6(0, qd, r, j, 0, ys));
          t5 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t5 !== "number")
            return H.iae(t5);
          if (i > t5)
            J.set$length$asx(r_array.data, i + 1);
          J.$indexSet$ax(r_array.data, i, t4);
          if (J.$lt$in(t4, qd)) {
            y.dlShiftTo$2(j, t);
            r.subTo$2(t, r);
            while (true) {
              t4 = J.$index$asx(r_array.data, i);
              if (typeof qd !== "number")
                return qd.$sub();
              --qd;
              if (!J.$lt$in(t4, qd))
                break;
              r.subTo$2(t, r);
            }
          }
        }
        if (!t2) {
          r.drShiftTo$2(ys, q);
          if (!J.$eq(ts, ms)) {
            r0 = Z.BigIntegerV8$(null, null, null);
            r0.fromInt$1(0);
            r0.subTo$2(q, q);
          }
        }
        r.set$t(ys);
        t3.clamp$0(r);
        if (t1)
          r.rShiftTo$2(nsh, r);
        if (J.$lt$in(ts, 0)) {
          r0 = Z.BigIntegerV8$(null, null, null);
          r0.fromInt$1(0);
          r0.subTo$2(r, r);
        }
      },
      mod$1: function(a) {
        var r, r0, t1;
        r = Z.BigIntegerV8$(null, null, null);
        (J.$lt$in(this.s, 0) ? this.negate_op$0() : this).divRemTo$3(a, null, r);
        if (J.$lt$in(this.s, 0)) {
          r0 = Z.BigIntegerV8$(null, null, null);
          r0.fromInt$1(0);
          t1 = J.$gt$n(r.compareTo$1(0, r0), 0);
        } else
          t1 = false;
        if (t1)
          a.subTo$2(r, r);
        return r;
      },
      invDigit$0: function() {
        var this_array, t1, x, y, t2;
        this_array = this.array;
        t1 = this.t;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (t1 < 1)
          return 0;
        x = J.$index$asx(this_array.data, 0);
        t1 = J.getInterceptor$in(x);
        if (J.$eq(t1.$and(x, 1), 0))
          return 0;
        y = t1.$and(x, 3);
        t2 = J.$mul$ns(t1.$and(x, 15), y);
        if (typeof t2 !== "number")
          return H.iae(t2);
        y = J.$and$in(J.$mul$ns(y, 2 - t2), 15);
        t2 = J.$mul$ns(t1.$and(x, 255), y);
        if (typeof t2 !== "number")
          return H.iae(t2);
        y = J.$and$in(J.$mul$ns(y, 2 - t2), 255);
        t2 = J.$and$in(J.$mul$ns(t1.$and(x, 65535), y), 65535);
        if (typeof t2 !== "number")
          return H.iae(t2);
        y = J.$and$in(J.$mul$ns(y, 2 - t2), 65535);
        t1 = J.$mod$n(t1.$mul(x, y), $.BigIntegerV8_BI_DV);
        if (typeof t1 !== "number")
          return H.iae(t1);
        y = J.$mod$n(J.$mul$ns(y, 2 - t1), $.BigIntegerV8_BI_DV);
        t1 = J.getInterceptor$n(y);
        if (t1.$gt(y, 0)) {
          t1 = $.BigIntegerV8_BI_DV;
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof y !== "number")
            return H.iae(y);
          t1 -= y;
        } else
          t1 = t1.$negate(y);
        return t1;
      },
      isEven$0: [function(_) {
        var this_array, t1;
        this_array = this.array;
        t1 = this.t;
        if (typeof t1 !== "number")
          return t1.$gt();
        return J.$eq(t1 > 0 ? J.$and$in(J.$index$asx(this_array.data, 0), 1) : this.s, 0);
      }, "call$0", "get$isEven", 0, 0, 5],
      clone$0: function(_) {
        var r = Z.BigIntegerV8$(null, null, null);
        this.copyTo$1(r);
        return r;
      },
      intValue$0: function() {
        var this_array, t1, t2;
        this_array = this.array;
        if (J.$lt$in(this.s, 0)) {
          t1 = this.t;
          if (t1 === 1)
            return J.$sub$n(J.$index$asx(this_array.data, 0), $.BigIntegerV8_BI_DV);
          else if (t1 === 0)
            return -1;
        } else {
          t1 = this.t;
          if (t1 === 1)
            return J.$index$asx(this_array.data, 0);
          else if (t1 === 0)
            return 0;
        }
        t1 = J.$index$asx(this_array.data, 1);
        t2 = $.BigIntegerV8_BI_DB;
        if (typeof t2 !== "number")
          return H.iae(t2);
        return J.$or$n(J.$shl$n(J.$and$in(t1, C.JSInt_methods.$shl(1, 32 - t2) - 1), $.BigIntegerV8_BI_DB), J.$index$asx(this_array.data, 0));
      },
      chunkSize$1: function(r) {
        var t1 = $.BigIntegerV8_BI_DB;
        if (typeof t1 !== "number")
          return H.iae(t1);
        return C.JSInt_methods.toInt$0(C.JSNumber_methods.toInt$0(Math.floor(0.6931471805599453 * t1 / Math.log(H.checkNum(r)))));
      },
      signum$0: function() {
        var this_array, t1;
        this_array = this.array;
        if (J.$lt$in(this.s, 0))
          return -1;
        else {
          t1 = this.t;
          if (typeof t1 !== "number")
            return t1.$le();
          if (t1 > 0)
            t1 = t1 === 1 && J.$le$n(J.$index$asx(this_array.data, 0), 0);
          else
            t1 = true;
          if (t1)
            return 0;
          else
            return 1;
        }
      },
      toRadix$1: function(b) {
        var t1, cs, a, r, y, z, r0;
        if (this.signum$0() !== 0)
          t1 = false;
        else
          t1 = true;
        if (t1)
          return "0";
        cs = this.chunkSize$1(10);
        H.checkNum(10);
        H.checkNum(cs);
        a = Math.pow(10, cs);
        r = Z.BigIntegerV8$(null, null, null);
        r.fromInt$1(a);
        y = Z.BigIntegerV8$(null, null, null);
        z = Z.BigIntegerV8$(null, null, null);
        this.divRemTo$3(r, y, z);
        for (r0 = ""; y.signum$0() > 0;) {
          t1 = z.intValue$0();
          if (typeof t1 !== "number")
            return H.iae(t1);
          r0 = C.JSString_methods.substring$1(C.JSInt_methods.toRadixString$1(C.JSNumber_methods.toInt$0(a + t1), 10), 1) + r0;
          y.divRemTo$3(r, y, z);
        }
        return J.toRadixString$1$n(z.intValue$0(), 10) + r0;
      },
      fromRadix$2: function(s, b) {
        var cs, d, t1, t2, mi, j, w, i, t3, c, x, r;
        this.fromInt$1(0);
        if (b == null)
          b = 10;
        cs = this.chunkSize$1(b);
        H.checkNum(b);
        H.checkNum(cs);
        d = Math.pow(b, cs);
        t1 = J.getInterceptor$asx(s);
        t2 = typeof s === "string";
        mi = false;
        j = 0;
        w = 0;
        i = 0;
        while (true) {
          t3 = t1.get$length(s);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          c$0: {
            c = $.BigIntegerV8_BI_RC.$index(0, t1.codeUnitAt$1(s, i));
            x = c == null ? -1 : c;
            if (J.$lt$in(x, 0)) {
              if (t2) {
                if (0 >= s.length)
                  return H.ioore(s, 0);
                if (s[0] === "-" && this.signum$0() === 0)
                  mi = true;
              }
              break c$0;
            }
            if (typeof b !== "number")
              return b.$mul();
            if (typeof x !== "number")
              return H.iae(x);
            w = b * w + x;
            ++j;
            if (j >= cs) {
              this.dMultiply$1(d);
              this.dAddOffset$2(w, 0);
              j = 0;
              w = 0;
            }
          }
          ++i;
        }
        if (j > 0) {
          H.checkNum(b);
          H.checkNum(j);
          this.dMultiply$1(Math.pow(b, j));
          if (w !== 0)
            this.dAddOffset$2(w, 0);
        }
        if (mi) {
          r = Z.BigIntegerV8$(null, null, null);
          r.fromInt$1(0);
          r.subTo$2(this, this);
        }
      },
      toByteArray$0: function() {
        var this_array, i, t1, r, p, i0, d, t2, k, k0;
        this_array = this.array;
        i = this.t;
        t1 = [];
        t1.$builtinTypeInfo = [P.$int];
        r = new Z.JSArray(t1);
        r.$builtinTypeInfo = [P.$int];
        r.$indexSet(0, 0, this.s);
        t1 = $.BigIntegerV8_BI_DB;
        if (typeof i !== "number")
          return i.$mul();
        if (typeof t1 !== "number")
          return H.iae(t1);
        p = t1 - C.JSInt_methods.$mod(i * t1, 8);
        i0 = i - 1;
        if (i > 0) {
          if (p < t1) {
            d = J.$shr$n(J.$index$asx(this_array.data, i0), p);
            t1 = !J.$eq(d, J.$shr$n(J.$and$in(this.s, $.BigIntegerV8_BI_DM), p));
          } else {
            d = null;
            t1 = false;
          }
          if (t1) {
            t1 = this.s;
            t2 = $.BigIntegerV8_BI_DB;
            if (typeof t2 !== "number")
              return t2.$sub();
            r.$indexSet(0, 0, J.$or$n(d, J.$shl$n(t1, t2 - p)));
            k = 1;
          } else
            k = 0;
          for (i = i0; i >= 0;) {
            if (p < 8) {
              d = J.$shl$n(J.$and$in(J.$index$asx(this_array.data, i), C.JSInt_methods.$shl(1, p) - 1), 8 - p);
              --i;
              t1 = J.$index$asx(this_array.data, i);
              t2 = $.BigIntegerV8_BI_DB;
              if (typeof t2 !== "number")
                return t2.$sub();
              p += t2 - 8;
              d = J.$or$n(d, J.$shr$n(t1, p));
            } else {
              p -= 8;
              d = J.$and$in(J.$shr$n(J.$index$asx(this_array.data, i), p), 255);
              if (p <= 0) {
                t1 = $.BigIntegerV8_BI_DB;
                if (typeof t1 !== "number")
                  return H.iae(t1);
                p += t1;
                --i;
              }
            }
            t1 = J.getInterceptor$in(d);
            if (!J.$eq(t1.$and(d, 128), 0))
              d = t1.$or(d, -256);
            if (k === 0 && !J.$eq(J.$and$in(this.s, 128), J.$and$in(d, 128)))
              ++k;
            if (k > 0 || !J.$eq(d, this.s)) {
              k0 = k + 1;
              t1 = J.$sub$n(J.get$length$asx(r.data), 1);
              if (typeof t1 !== "number")
                return H.iae(t1);
              if (k > t1)
                J.set$length$asx(r.data, k0);
              J.$indexSet$ax(r.data, k, d);
              k = k0;
            }
          }
        }
        return r.data;
      },
      min$1: [function(_, a) {
        return J.$lt$in(this.compareTo$1(0, a), 0) ? this : a;
      }, "call$1", "get$min", 2, 0, 18, 23, []],
      max$1: [function(_, a) {
        return J.$gt$n(this.compareTo$1(0, a), 0) ? this : a;
      }, "call$1", "get$max", 2, 0, 18, 23, []],
      bitwiseTo$3: function(a, op, r) {
        var this_array, a_array, r_array, m, i, t1, t2, f;
        this_array = this.array;
        a_array = a.get$array();
        r_array = r.array;
        m = P.min(a.get$t(), this.t);
        for (i = 0; i < m; ++i) {
          t1 = op.call$2(J.$index$asx(this_array.data, i), J.$index$asx(a_array.data, i));
          t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (i > t2)
            J.set$length$asx(r_array.data, i + 1);
          J.$indexSet$ax(r_array.data, i, t1);
        }
        t1 = a.get$t();
        t2 = this.t;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 < t2) {
          f = J.$and$in(a.get$s(), $.BigIntegerV8_BI_DM);
          i = m;
          while (true) {
            t1 = this.t;
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(i < t1))
              break;
            t1 = op.call$2(J.$index$asx(this_array.data, i), f);
            t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (i > t2)
              J.set$length$asx(r_array.data, i + 1);
            J.$indexSet$ax(r_array.data, i, t1);
            ++i;
          }
          r.t = t1;
        } else {
          f = J.$and$in(this.s, $.BigIntegerV8_BI_DM);
          i = m;
          while (true) {
            t1 = a.get$t();
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(i < t1))
              break;
            t1 = op.call$2(f, J.$index$asx(a_array.data, i));
            t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (i > t2)
              J.set$length$asx(r_array.data, i + 1);
            J.$indexSet$ax(r_array.data, i, t1);
            ++i;
          }
          r.t = a.get$t();
        }
        r.s = op.call$2(this.s, a.get$s());
        r.clamp$0(0);
      },
      op_and$2: [function(x, y) {
        return J.$and$in(x, y);
      }, "call$2", "get$op_and", 4, 0, 15],
      op_or$2: [function(x, y) {
        return J.$or$n(x, y);
      }, "call$2", "get$op_or", 4, 0, 15],
      op_xor$2: [function(x, y) {
        return J.$xor$n(x, y);
      }, "call$2", "get$op_xor", 4, 0, 15],
      not$0: function() {
        var this_array, r, r_array, i, t1, t2, t3;
        this_array = this.array;
        r = Z.BigIntegerV8$(null, null, null);
        r_array = r.array;
        i = 0;
        while (true) {
          t1 = this.t;
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          t1 = $.BigIntegerV8_BI_DM;
          t2 = J.$not$i(J.$index$asx(this_array.data, i));
          if (typeof t1 !== "number")
            return t1.$and();
          if (typeof t2 !== "number")
            return H.iae(t2);
          t3 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (i > t3)
            J.set$length$asx(r_array.data, i + 1);
          J.$indexSet$ax(r_array.data, i, (t1 & t2) >>> 0);
          ++i;
        }
        r.t = t1;
        r.s = J.$not$i(this.s);
        return r;
      },
      shiftRight$1: function(n) {
        var r = Z.BigIntegerV8$(null, null, null);
        if (typeof n !== "number")
          return n.$lt();
        if (n < 0)
          this.lShiftTo$2(-n, r);
        else
          this.rShiftTo$2(n, r);
        return r;
      },
      lbit$1: function(x) {
        var t1, r;
        t1 = J.getInterceptor(x);
        if (t1.$eq(x, 0))
          return -1;
        if (J.$eq(t1.$and(x, 65535), 0)) {
          x = t1.$shr(x, 16);
          r = 16;
        } else
          r = 0;
        t1 = J.getInterceptor$in(x);
        if (J.$eq(t1.$and(x, 255), 0)) {
          x = t1.$shr(x, 8);
          r += 8;
        }
        t1 = J.getInterceptor$in(x);
        if (J.$eq(t1.$and(x, 15), 0)) {
          x = t1.$shr(x, 4);
          r += 4;
        }
        t1 = J.getInterceptor$in(x);
        if (J.$eq(t1.$and(x, 3), 0)) {
          x = t1.$shr(x, 2);
          r += 2;
        }
        return J.$eq(J.$and$in(x, 1), 0) ? r + 1 : r;
      },
      getLowestSetBit$0: function() {
        var this_array, i, t1, t2;
        this_array = this.array;
        i = 0;
        while (true) {
          t1 = this.t;
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          if (!J.$eq(J.$index$asx(this_array.data, i), 0)) {
            t1 = $.BigIntegerV8_BI_DB;
            if (typeof t1 !== "number")
              return H.iae(t1);
            return i * t1 + this.lbit$1(J.$index$asx(this_array.data, i));
          }
          ++i;
        }
        if (J.$lt$in(this.s, 0)) {
          t1 = this.t;
          t2 = $.BigIntegerV8_BI_DB;
          if (typeof t1 !== "number")
            return t1.$mul();
          if (typeof t2 !== "number")
            return H.iae(t2);
          return t1 * t2;
        }
        return -1;
      },
      get$lowestSetBit: function() {
        return this.getLowestSetBit$0();
      },
      testBit$1: function(n) {
        var this_array, t1, j, t2;
        this_array = this.array;
        t1 = $.BigIntegerV8_BI_DB;
        if (typeof t1 !== "number")
          return H.iae(t1);
        j = C.JSNumber_methods.$tdiv(n, t1);
        t1 = this.t;
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (j >= t1)
          return !J.$eq(this.s, 0);
        t1 = J.$index$asx(this_array.data, j);
        t2 = $.BigIntegerV8_BI_DB;
        if (typeof t2 !== "number")
          return H.iae(t2);
        return !J.$eq(J.$and$in(t1, C.JSInt_methods.$shl(1, C.JSNumber_methods.$mod(n, t2))), 0);
      },
      addTo$2: function(a, r) {
        var this_array, a_array, r_array, m, i, c, t1, i0, t2;
        this_array = this.array;
        a_array = a.get$array();
        r_array = r.array;
        m = P.min(a.get$t(), this.t);
        for (i = 0, c = 0; i < m; i = i0) {
          t1 = J.$add$ns(J.$index$asx(this_array.data, i), J.$index$asx(a_array.data, i));
          if (typeof t1 !== "number")
            return H.iae(t1);
          c += t1;
          i0 = i + 1;
          t1 = $.BigIntegerV8_BI_DM;
          if (typeof t1 !== "number")
            return H.iae(t1);
          t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (i > t2)
            J.set$length$asx(r_array.data, i0);
          J.$indexSet$ax(r_array.data, i, (c & t1) >>> 0);
          t1 = $.BigIntegerV8_BI_DB;
          if (typeof t1 !== "number")
            return H.iae(t1);
          c = C.JSNumber_methods._shrOtherPositive$1(c, t1);
        }
        t1 = a.get$t();
        t2 = this.t;
        if (typeof t1 !== "number")
          return t1.$lt();
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 < t2) {
          t1 = a.get$s();
          if (typeof t1 !== "number")
            return H.iae(t1);
          c += t1;
          while (true) {
            t1 = this.t;
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(i < t1))
              break;
            t1 = J.$index$asx(this_array.data, i);
            if (typeof t1 !== "number")
              return H.iae(t1);
            c += t1;
            i0 = i + 1;
            t1 = $.BigIntegerV8_BI_DM;
            if (typeof t1 !== "number")
              return H.iae(t1);
            t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (i > t2)
              J.set$length$asx(r_array.data, i0);
            J.$indexSet$ax(r_array.data, i, (c & t1) >>> 0);
            t1 = $.BigIntegerV8_BI_DB;
            if (typeof t1 !== "number")
              return H.iae(t1);
            c = C.JSNumber_methods._shrOtherPositive$1(c, t1);
            i = i0;
          }
          t1 = this.s;
          if (typeof t1 !== "number")
            return H.iae(t1);
          c += t1;
        } else {
          t1 = this.s;
          if (typeof t1 !== "number")
            return H.iae(t1);
          c += t1;
          while (true) {
            t1 = a.get$t();
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(i < t1))
              break;
            t1 = J.$index$asx(a_array.data, i);
            if (typeof t1 !== "number")
              return H.iae(t1);
            c += t1;
            i0 = i + 1;
            t1 = $.BigIntegerV8_BI_DM;
            if (typeof t1 !== "number")
              return H.iae(t1);
            t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (i > t2)
              J.set$length$asx(r_array.data, i0);
            J.$indexSet$ax(r_array.data, i, (c & t1) >>> 0);
            t1 = $.BigIntegerV8_BI_DB;
            if (typeof t1 !== "number")
              return H.iae(t1);
            c = C.JSNumber_methods._shrOtherPositive$1(c, t1);
            i = i0;
          }
          t1 = a.get$s();
          if (typeof t1 !== "number")
            return H.iae(t1);
          c += t1;
        }
        r.s = c < 0 ? -1 : 0;
        if (c > 0) {
          i0 = i + 1;
          r_array.$indexSet(0, i, c);
          i = i0;
        } else if (c < -1) {
          i0 = i + 1;
          t1 = $.BigIntegerV8_BI_DV;
          if (typeof t1 !== "number")
            return t1.$add();
          r_array.$indexSet(0, i, t1 + c);
          i = i0;
        }
        r.t = i;
        r.clamp$0(0);
      },
      add$1: function(_, a) {
        var r = Z.BigIntegerV8$(null, null, null);
        this.addTo$2(a, r);
        return r;
      },
      subtract$1: function(a) {
        var r = Z.BigIntegerV8$(null, null, null);
        this.subTo$2(a, r);
        return r;
      },
      divide$1: function(a) {
        var r = Z.BigIntegerV8$(null, null, null);
        this.divRemTo$3(a, r, null);
        return r;
      },
      remainder$1: function(_, a) {
        var r = Z.BigIntegerV8$(null, null, null);
        this.divRemTo$3(a, null, r);
        return r.signum$0() >= 0 ? r : r.add$1(0, a);
      },
      dMultiply$1: function(n) {
        var this_array, t1, t2, t3;
        this_array = this.array;
        t1 = this.t;
        t2 = this.am$6(0, n - 1, this, 0, 0, t1);
        t3 = J.$sub$n(J.get$length$asx(this_array.data), 1);
        if (typeof t1 !== "number")
          return t1.$gt();
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (t1 > t3)
          J.set$length$asx(this_array.data, t1 + 1);
        J.$indexSet$ax(this_array.data, t1, t2);
        t1 = this.t;
        if (typeof t1 !== "number")
          return t1.$add();
        this.t = t1 + 1;
        this.clamp$0(0);
      },
      dAddOffset$2: function(n, w) {
        var this_array, t1, t2, t3;
        this_array = this.array;
        while (true) {
          t1 = this.t;
          if (typeof t1 !== "number")
            return t1.$le();
          if (!(t1 <= w))
            break;
          t2 = t1 + 1;
          this.t = t2;
          t3 = J.$sub$n(J.get$length$asx(this_array.data), 1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (t1 > t3)
            J.set$length$asx(this_array.data, t2);
          J.$indexSet$ax(this_array.data, t1, 0);
        }
        t1 = J.$add$ns(J.$index$asx(this_array.data, w), n);
        t2 = J.$sub$n(J.get$length$asx(this_array.data), 1);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (w > t2)
          J.set$length$asx(this_array.data, w + 1);
        J.$indexSet$ax(this_array.data, w, t1);
        for (; J.$ge$n(J.$index$asx(this_array.data, w), $.BigIntegerV8_BI_DV);) {
          t1 = J.$sub$n(J.$index$asx(this_array.data, w), $.BigIntegerV8_BI_DV);
          t2 = J.$sub$n(J.get$length$asx(this_array.data), 1);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (w > t2)
            J.set$length$asx(this_array.data, w + 1);
          J.$indexSet$ax(this_array.data, w, t1);
          ++w;
          t1 = this.t;
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (w >= t1) {
            t2 = t1 + 1;
            this.t = t2;
            t3 = J.$sub$n(J.get$length$asx(this_array.data), 1);
            if (typeof t3 !== "number")
              return H.iae(t3);
            if (t1 > t3)
              J.set$length$asx(this_array.data, t2);
            J.$indexSet$ax(this_array.data, t1, 0);
          }
          t1 = J.$add$ns(J.$index$asx(this_array.data, w), 1);
          t2 = J.$sub$n(J.get$length$asx(this_array.data), 1);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (w > t2)
            J.set$length$asx(this_array.data, w + 1);
          J.$indexSet$ax(this_array.data, w, t1);
        }
      },
      multiplyLowerTo$3: function(a, n, r) {
        var r_array, a_array, t1, t2, i, j, t3;
        r_array = r.array;
        a_array = a.array;
        t1 = this.t;
        t2 = a.t;
        if (typeof t1 !== "number")
          return t1.$add();
        if (typeof t2 !== "number")
          return H.iae(t2);
        i = P.min(t1 + t2, n);
        r.s = 0;
        r.t = i;
        for (; i > 0;) {
          --i;
          t1 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (i > t1)
            J.set$length$asx(r_array.data, i + 1);
          J.$indexSet$ax(r_array.data, i, 0);
        }
        t1 = r.t;
        t2 = this.t;
        if (typeof t1 !== "number")
          return t1.$sub();
        if (typeof t2 !== "number")
          return H.iae(t2);
        j = t1 - t2;
        for (; i < j; ++i) {
          t1 = this.t;
          if (typeof t1 !== "number")
            return H.iae(t1);
          t1 = i + t1;
          t2 = this.am$6(0, J.$index$asx(a_array.data, i), r, i, 0, this.t);
          t3 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (t1 > t3)
            J.set$length$asx(r_array.data, t1 + 1);
          J.$indexSet$ax(r_array.data, t1, t2);
        }
        for (j = P.min(a.t, n); i < j; ++i)
          this.am$6(0, J.$index$asx(a_array.data, i), r, i, 0, n - i);
        r.clamp$0(0);
      },
      multiplyUpperTo$3: function(a, n, r) {
        var r_array, a_array, t1, t2, i, t3;
        r_array = r.array;
        a_array = a.array;
        --n;
        t1 = this.t;
        t2 = a.t;
        if (typeof t1 !== "number")
          return t1.$add();
        if (typeof t2 !== "number")
          return H.iae(t2);
        i = t1 + t2 - n;
        r.t = i;
        r.s = 0;
        for (; --i, i >= 0;) {
          t1 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (i > t1)
            J.set$length$asx(r_array.data, i + 1);
          J.$indexSet$ax(r_array.data, i, 0);
        }
        t1 = this.t;
        if (typeof t1 !== "number")
          return H.iae(t1);
        i = P.max(n - t1, 0);
        while (true) {
          t1 = a.t;
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          t1 = this.t;
          if (typeof t1 !== "number")
            return t1.$add();
          t1 = t1 + i - n;
          t2 = J.$index$asx(a_array.data, i);
          t3 = this.t;
          if (typeof t3 !== "number")
            return t3.$add();
          t3 = this.am$6(n - i, t2, r, 0, 0, t3 + i - n);
          t2 = J.$sub$n(J.get$length$asx(r_array.data), 1);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (t1 > t2)
            J.set$length$asx(r_array.data, t1 + 1);
          J.$indexSet$ax(r_array.data, t1, t3);
          ++i;
        }
        r.clamp$0(0);
        r.drShiftTo$2(1, r);
      },
      modPow$2: function(_, e, m) {
        var e_array, i, r, t1, k, z, r0, t2, g, k1, km, g2, n, j, r2, is1, t, w;
        e_array = e.get$array();
        i = J.bitLength$0$i(e);
        r = Z.BigIntegerV8$(null, null, null);
        r.fromInt$1(1);
        t1 = J.getInterceptor$in(i);
        if (t1.$le(i, 0))
          return r;
        else if (t1.$lt(i, 18))
          k = 1;
        else if (t1.$lt(i, 48))
          k = 3;
        else if (t1.$lt(i, 144))
          k = 4;
        else
          k = t1.$lt(i, 768) ? 5 : 6;
        if (t1.$lt(i, 8))
          z = new Z.Classic(m);
        else if (J.isEven$0$i(m) === true) {
          z = new Z.Barrett(m, null, null, null);
          t1 = Z.BigIntegerV8$(null, null, null);
          z.r2 = t1;
          z.q3 = Z.BigIntegerV8$(null, null, null);
          r0 = Z.BigIntegerV8$(null, null, null);
          r0.fromInt$1(1);
          t2 = m.get$t();
          if (typeof t2 !== "number")
            return H.iae(t2);
          r0.dlShiftTo$2(2 * t2, t1);
          z.mu = t1.divide$1(m);
        } else {
          z = new Z.Montgomery(m, null, null, null, null, null);
          t1 = m.invDigit$0();
          z.mp = t1;
          z.mpl = J.$and$in(t1, 32767);
          z.mph = J.$shr$n(t1, 15);
          t1 = $.BigIntegerV8_BI_DB;
          if (typeof t1 !== "number")
            return t1.$sub();
          z.um = C.JSInt_methods.$shl(1, t1 - 15) - 1;
          t1 = m.get$t();
          if (typeof t1 !== "number")
            return H.iae(t1);
          z.mt2 = 2 * t1;
        }
        g = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
        k1 = k - 1;
        km = C.JSInt_methods._shlPositive$1(1, k) - 1;
        g.$indexSet(0, 1, z.convert$1(this));
        if (k > 1) {
          g2 = Z.BigIntegerV8$(null, null, null);
          z.sqrTo$2(g.$index(0, 1), g2);
          for (n = 3; n <= km;) {
            g.$indexSet(0, n, Z.BigIntegerV8$(null, null, null));
            z.mulTo$3(g2, g.$index(0, n - 2), g.$index(0, n));
            n += 2;
          }
        }
        t1 = e.get$t();
        if (typeof t1 !== "number")
          return t1.$sub();
        j = t1 - 1;
        r2 = Z.BigIntegerV8$(null, null, null);
        i = this.nbits$1(J.$index$asx(e_array.data, j)) - 1;
        for (is1 = true, t = null; j >= 0;) {
          t1 = e_array.data;
          if (i >= k1)
            w = J.$and$in(J.$shr$n(J.$index$asx(t1, j), i - k1), km);
          else {
            w = J.$shl$n(J.$and$in(J.$index$asx(t1, j), C.JSInt_methods.$shl(1, i + 1) - 1), k1 - i);
            if (j > 0) {
              t1 = J.$index$asx(e_array.data, j - 1);
              t2 = $.BigIntegerV8_BI_DB;
              if (typeof t2 !== "number")
                return t2.$add();
              w = J.$or$n(w, J.$shr$n(t1, t2 + i - k1));
            }
          }
          for (n = k; t1 = J.getInterceptor$in(w), J.$eq(t1.$and(w, 1), 0);) {
            w = t1.$shr(w, 1);
            --n;
          }
          i -= n;
          if (i < 0) {
            t1 = $.BigIntegerV8_BI_DB;
            if (typeof t1 !== "number")
              return H.iae(t1);
            i += t1;
            --j;
          }
          if (is1) {
            g.$index(0, w).copyTo$1(r);
            is1 = false;
          } else {
            for (; n > 1;) {
              z.sqrTo$2(r, r2);
              z.sqrTo$2(r2, r);
              n -= 2;
            }
            if (n > 0)
              z.sqrTo$2(r, r2);
            else {
              t = r;
              r = r2;
              r2 = t;
            }
            z.mulTo$3(r2, g.$index(0, w), r);
          }
          while (true) {
            if (!(j >= 0 && J.$eq(J.$and$in(J.$index$asx(e_array.data, j), C.JSInt_methods.$shl(1, i)), 0)))
              break;
            z.sqrTo$2(r, r2);
            --i;
            if (i < 0) {
              t1 = $.BigIntegerV8_BI_DB;
              if (typeof t1 !== "number")
                return t1.$sub();
              i = t1 - 1;
              --j;
            }
            t = r;
            r = r2;
            r2 = t;
          }
        }
        return z.revert$1(r);
      },
      modInverse$1: function(_, m) {
        var t1, ac, r, u, v, r0, r1, r2, t2, t3, this_array, t4, t5;
        t1 = J.getInterceptor$i(m);
        ac = t1.isEven$0(m);
        if (this.isEven$0(0) && ac === true || m.signum$0() === 0) {
          r = Z.BigIntegerV8$(null, null, null);
          r.fromInt$1(0);
          return r;
        }
        u = t1.clone$0(m);
        v = this.clone$0(0);
        if (v.signum$0() < 0)
          v = v.negate_op$0();
        r = Z.BigIntegerV8$(null, null, null);
        r.fromInt$1(1);
        r0 = Z.BigIntegerV8$(null, null, null);
        r0.fromInt$1(0);
        r1 = Z.BigIntegerV8$(null, null, null);
        r1.fromInt$1(0);
        r2 = Z.BigIntegerV8$(null, null, null);
        r2.fromInt$1(1);
        for (t2 = ac === true, t3 = J.getInterceptor$i(u); u.signum$0() !== 0;) {
          for (; t3.isEven$0(u) === true;) {
            u.rShiftTo$2(1, u);
            if (t2) {
              this_array = r.array;
              t4 = r.t;
              if (typeof t4 !== "number")
                return t4.$gt();
              if (J.$eq(t4 > 0 ? J.$and$in(J.$index$asx(this_array.data, 0), 1) : r.s, 0)) {
                this_array = r0.array;
                t4 = r0.t;
                if (typeof t4 !== "number")
                  return t4.$gt();
                t5 = !J.$eq(t4 > 0 ? J.$and$in(J.$index$asx(this_array.data, 0), 1) : r0.s, 0);
                t4 = t5;
              } else
                t4 = true;
              if (t4) {
                r.addTo$2(this, r);
                r0.subTo$2(m, r0);
              }
              r.rShiftTo$2(1, r);
            } else {
              this_array = r0.array;
              t4 = r0.t;
              if (typeof t4 !== "number")
                return t4.$gt();
              if (!J.$eq(t4 > 0 ? J.$and$in(J.$index$asx(this_array.data, 0), 1) : r0.s, 0))
                r0.subTo$2(m, r0);
            }
            r0.rShiftTo$2(1, r0);
          }
          while (true) {
            this_array = v.array;
            t4 = v.t;
            if (typeof t4 !== "number")
              return t4.$gt();
            if (!J.$eq(t4 > 0 ? J.$and$in(J.$index$asx(this_array.data, 0), 1) : v.s, 0))
              break;
            v.rShiftTo$2(1, v);
            if (t2) {
              this_array = r1.array;
              t4 = r1.t;
              if (typeof t4 !== "number")
                return t4.$gt();
              if (J.$eq(t4 > 0 ? J.$and$in(J.$index$asx(this_array.data, 0), 1) : r1.s, 0)) {
                this_array = r2.array;
                t4 = r2.t;
                if (typeof t4 !== "number")
                  return t4.$gt();
                t5 = !J.$eq(t4 > 0 ? J.$and$in(J.$index$asx(this_array.data, 0), 1) : r2.s, 0);
                t4 = t5;
              } else
                t4 = true;
              if (t4) {
                r1.addTo$2(this, r1);
                r2.subTo$2(m, r2);
              }
              r1.rShiftTo$2(1, r1);
            } else {
              this_array = r2.array;
              t4 = r2.t;
              if (typeof t4 !== "number")
                return t4.$gt();
              if (!J.$eq(t4 > 0 ? J.$and$in(J.$index$asx(this_array.data, 0), 1) : r2.s, 0))
                r2.subTo$2(m, r2);
            }
            r2.rShiftTo$2(1, r2);
          }
          if (J.$ge$n(t3.compareTo$1(u, v), 0)) {
            u.subTo$2(v, u);
            if (t2)
              r.subTo$2(r1, r);
            r0.subTo$2(r2, r0);
          } else {
            v.subTo$2(u, v);
            if (t2)
              r1.subTo$2(r, r1);
            r2.subTo$2(r0, r2);
          }
        }
        r = Z.BigIntegerV8$(null, null, null);
        r.fromInt$1(1);
        if (!J.$eq(v.compareTo$1(0, r), 0)) {
          r = Z.BigIntegerV8$(null, null, null);
          r.fromInt$1(0);
          return r;
        }
        if (J.$ge$n(r2.compareTo$1(0, m), 0)) {
          t2 = r2.subtract$1(m);
          return this.signum$0() < 0 ? t1.$sub(m, t2) : t2;
        }
        if (r2.signum$0() < 0)
          r2.addTo$2(m, r2);
        else
          return this.signum$0() < 0 ? t1.$sub(m, r2) : r2;
        if (r2.signum$0() < 0) {
          t2 = r2.add$1(0, m);
          return this.signum$0() < 0 ? t1.$sub(m, t2) : t2;
        } else
          return this.signum$0() < 0 ? t1.$sub(m, r2) : r2;
      },
      $add: function(_, other) {
        return this.add$1(0, other);
      },
      $sub: function(_, other) {
        return this.subtract$1(other);
      },
      $mul: function(_, other) {
        var r = Z.BigIntegerV8$(null, null, null);
        this.multiplyTo$2(other, r);
        return r;
      },
      $mod: function(_, other) {
        return this.remainder$1(0, other);
      },
      $div: function(_, other) {
        return this.divide$1(other);
      },
      $tdiv: function(_, other) {
        return this.divide$1(other);
      },
      $negate: function(_) {
        return this.negate_op$0();
      },
      $lt: function(_, other) {
        return J.$lt$in(this.compareTo$1(0, other), 0) && true;
      },
      $le: function(_, other) {
        return J.$le$n(this.compareTo$1(0, other), 0) && true;
      },
      $gt: function(_, other) {
        return J.$gt$n(this.compareTo$1(0, other), 0) && true;
      },
      $ge: function(_, other) {
        return J.$ge$n(this.compareTo$1(0, other), 0) && true;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return J.$eq(this.compareTo$1(0, other), 0) && true;
      },
      $and: function(_, other) {
        var r = Z.BigIntegerV8$(null, null, null);
        this.bitwiseTo$3(other, this.get$op_and(), r);
        return r;
      },
      $or: function(_, other) {
        var r = Z.BigIntegerV8$(null, null, null);
        this.bitwiseTo$3(other, this.get$op_or(), r);
        return r;
      },
      $xor: function(_, other) {
        var r = Z.BigIntegerV8$(null, null, null);
        this.bitwiseTo$3(other, this.get$op_xor(), r);
        return r;
      },
      $not: function(_) {
        return this.not$0();
      },
      $shl: function(_, shiftAmount) {
        var r = Z.BigIntegerV8$(null, null, null);
        if (typeof shiftAmount !== "number")
          return shiftAmount.$lt();
        if (shiftAmount < 0)
          this.rShiftTo$2(-shiftAmount, r);
        else
          this.lShiftTo$2(shiftAmount, r);
        return r;
      },
      $shr: function(_, shiftAmount) {
        return this.shiftRight$1(shiftAmount);
      },
      BigIntegerV8$3: function(a, b, c) {
        var t1;
        Z.BigIntegerV8__init(28);
        this.am = this.get$_am3();
        t1 = [];
        t1.$builtinTypeInfo = [P.$int];
        t1 = new Z.JSArray(t1);
        t1.$builtinTypeInfo = [P.$int];
        this.array = t1;
        if (a != null)
          if (typeof a === "number" && Math.floor(a) === a)
            this.fromString$2(C.JSInt_methods.toString$0(a), 10);
          else if (typeof a === "number")
            this.fromString$2(C.JSInt_methods.toString$0(C.JSNumber_methods.toInt$0(a)), 10);
          else if (b == null && typeof a !== "string")
            this.fromString$2(a, 256);
          else
            this.fromString$2(a, b);
      },
      am$6: function(arg0, arg1, arg2, arg3, arg4, arg5) {
        return this.am.call$6(arg0, arg1, arg2, arg3, arg4, arg5);
      },
      $isBigInteger: 1,
      static: {BigIntegerV8$: function(a, b, c) {
          var t1 = new Z.BigIntegerV8(null, null, null, null, true);
          t1.BigIntegerV8$3(a, b, c);
          return t1;
        }, BigIntegerV8__init: function(bits) {
          var t1, t2;
          if ($.BigIntegerV8_BI_RC != null)
            return;
          $.BigIntegerV8_BI_RC = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
          $.BigIntegerV8__j_lm = ($.BigIntegerV8_canary & 16777215) === 15715070;
          Z.BigIntegerV8__setupDigitConversions();
          $.BigIntegerV8__lplim = 131844;
          $.BigIntegerV8_dbits = bits;
          $.BigIntegerV8_BI_DB = bits;
          $.BigIntegerV8_BI_DM = C.JSInt_methods._shlPositive$1(1, bits) - 1;
          $.BigIntegerV8_BI_DV = C.JSInt_methods._shlPositive$1(1, bits);
          $.BigIntegerV8_BI_FP = 52;
          H.checkNum(2);
          H.checkNum(52);
          $.BigIntegerV8_BI_FV = Math.pow(2, 52);
          t1 = $.BigIntegerV8_BI_FP;
          t2 = $.BigIntegerV8_dbits;
          if (typeof t1 !== "number")
            return t1.$sub();
          if (typeof t2 !== "number")
            return H.iae(t2);
          $.BigIntegerV8_BI_F1 = t1 - t2;
          $.BigIntegerV8_BI_F2 = 2 * t2 - t1;
        }, BigIntegerV8__setupDigitConversions: function() {
          var rr, vv, rr0;
          $.BigIntegerV8_BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
          $.BigIntegerV8_BI_RC = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
          for (rr = 48, vv = 0; vv <= 9; ++vv, rr = rr0) {
            rr0 = rr + 1;
            $.BigIntegerV8_BI_RC.$indexSet(0, rr, vv);
          }
          for (rr = 97, vv = 10; vv < 36; ++vv, rr = rr0) {
            rr0 = rr + 1;
            $.BigIntegerV8_BI_RC.$indexSet(0, rr, vv);
          }
          for (rr = 65, vv = 10; vv < 36; ++vv, rr = rr0) {
            rr0 = rr + 1;
            $.BigIntegerV8_BI_RC.$indexSet(0, rr, vv);
          }
        }}
    }
  }], ["cipher.api", "package:cipher/api.dart",, S, {
    "^": "",
    CipherParameters: {
      "^": "Object;"
    },
    AsymmetricKeyPair: {
      "^": "Object;publicKey<,privateKey<"
    },
    SecureRandom: {
      "^": "Object;"
    }
  }], ["cipher.api.ecc", "package:cipher/api/ecc.dart",, Q, {
    "^": "",
    ECAsymmetricKey: {
      "^": "Object;parameters<"
    },
    ECPrivateKey: {
      "^": "ECAsymmetricKey;d<,parameters",
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!(other instanceof Q.ECPrivateKey))
          return false;
        return J.$eq(other.parameters, this.parameters) && other.d.$eq(0, this.d);
      },
      get$hashCode: function(_) {
        return J.$add$ins(J.get$hashCode$(this.parameters), H.Primitives_objectHashCode(this.d));
      }
    },
    ECPublicKey: {
      "^": "ECAsymmetricKey;Q<,parameters",
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!(other instanceof Q.ECPublicKey))
          return false;
        return J.$eq(other.parameters, this.parameters) && J.$eq(other.Q, this.Q);
      },
      get$hashCode: function(_) {
        return J.$add$ins(J.get$hashCode$(this.parameters), J.get$hashCode$(this.Q));
      }
    }
  }], ["cipher.api.registry", "package:cipher/api/registry.dart",, F, {
    "^": "",
    Registry: {
      "^": "Object;_staticFactories,_dynamicFactories",
      $indexSet: function(_, algorithmName, factory) {
        this._staticFactories.$indexSet(0, algorithmName, factory);
        return;
      },
      create$1: function(algorithmName) {
        var factory, t1, _i, algorithm;
        factory = this._staticFactories.$index(0, algorithmName);
        if (factory != null)
          return factory.call$1(algorithmName);
        else
          for (t1 = this._dynamicFactories, _i = 0; false; ++_i) {
            if (_i >= 0)
              return H.ioore(t1, _i);
            algorithm = t1[_i].call$1(algorithmName);
            if (algorithm != null)
              return algorithm;
          }
        throw H.wrapException(new P.UnsupportedError("No algorithm with that name registered: " + algorithmName));
      }
    }
  }], ["cipher.block.aes_fast", "package:cipher/block/aes_fast.dart",, S, {
    "^": "",
    _subWord: function(x) {
      var t1, t2, t3, t4;
      t1 = $.get$_S();
      t2 = J.getInterceptor$in(x);
      t3 = t2.$and(x, 255);
      if (t3 >>> 0 !== t3 || t3 >= t1.length)
        return H.ioore(t1, t3);
      t3 = J.$and$in(t1[t3], 255);
      t4 = J.$and$in(t2.$shr(x, 8), 255);
      if (t4 >>> 0 !== t4 || t4 >= t1.length)
        return H.ioore(t1, t4);
      t4 = J.$or$n(t3, J.$shl$in(J.$and$in(t1[t4], 255), 8));
      t3 = J.$and$in(t2.$shr(x, 16), 255);
      if (t3 >>> 0 !== t3 || t3 >= t1.length)
        return H.ioore(t1, t3);
      t3 = J.$or$n(t4, J.$shl$in(J.$and$in(t1[t3], 255), 16));
      t2 = J.$and$in(t2.$shr(x, 24), 255);
      if (t2 >>> 0 !== t2 || t2 >= t1.length)
        return H.ioore(t1, t2);
      return J.$or$n(t3, J.$shl$in(t1[t2], 24));
    },
    AESFastEngine: {
      "^": "BaseBlockCipher;_forEncryption,_workingKey,_ROUNDS,_C0,_C1,_C2,_C3",
      init$2: function(forEncryption, params) {
        var key, t1, KC, keyView, i, t, value, t2, k, t3, t4, temp, j, f2, f4, f8, f9;
        key = params.key;
        t1 = key.byteLength;
        if (typeof t1 !== "number")
          return t1.$div();
        KC = C.JSNumber_methods.toInt$0(Math.floor(t1 / 4));
        if (KC !== 4 && KC !== 6 && KC !== 8 || KC * 4 !== key.byteLength)
          throw H.wrapException(P.ArgumentError$("Key length must be 128/192/256 bits"));
        this._forEncryption = forEncryption;
        t1 = KC + 6;
        this._ROUNDS = t1;
        this._workingKey = P.List_List$generate(t1 + 1, new S.AESFastEngine_init_closure(), true, null);
        t1 = key.buffer;
        keyView = (t1 && C.NativeByteBuffer_methods).asByteData$2(t1, 0, null);
        i = 0;
        t = 0;
        while (true) {
          t1 = key.byteLength;
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          value = keyView.getUint32(i, true);
          t1 = this._workingKey;
          t2 = t >>> 2;
          if (t2 >= t1.length)
            return H.ioore(t1, t2);
          J.$indexSet$ax(t1[t2], t & 3, value);
          i += 4;
          ++t;
        }
        t1 = this._ROUNDS;
        if (typeof t1 !== "number")
          return t1.$add();
        k = t1 + 1 << 2 >>> 0;
        for (t1 = KC > 6, i = KC; i < k; ++i) {
          t2 = this._workingKey;
          t3 = i - 1;
          t4 = C.JSInt_methods._shrOtherPositive$1(t3, 2);
          if (t4 >= t2.length)
            return H.ioore(t2, t4);
          temp = J.toInt$0$n(J.$index$asx(t2[t4], t3 & 3));
          t2 = C.JSInt_methods.$mod(i, KC);
          if (t2 === 0) {
            t2 = S._subWord(R.rotr32(temp, 8));
            t3 = $.get$_rcon();
            t4 = C.JSNumber_methods.toInt$0(Math.floor(i / KC - 1));
            if (t4 < 0 || t4 >= 30)
              return H.ioore(t3, t4);
            temp = J.$xor$n(t2, t3[t4]);
          } else if (t1 && t2 === 4)
            temp = S._subWord(temp);
          t2 = this._workingKey;
          t3 = i - KC;
          t4 = C.JSInt_methods._shrOtherPositive$1(t3, 2);
          if (t4 >= t2.length)
            return H.ioore(t2, t4);
          value = J.$xor$n(J.$index$asx(t2[t4], t3 & 3), temp);
          t3 = this._workingKey;
          t4 = C.JSInt_methods._shrOtherPositive$1(i, 2);
          if (t4 >= t3.length)
            return H.ioore(t3, t4);
          J.$indexSet$ax(t3[t4], i & 3, value);
        }
        if (!forEncryption) {
          j = 1;
          while (true) {
            t1 = this._ROUNDS;
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(j < t1))
              break;
            for (i = 0; i < 4; ++i) {
              t1 = this._workingKey;
              if (j >= t1.length)
                return H.ioore(t1, j);
              t1 = J.toInt$0$n(J.$index$asx(t1[j], i));
              f2 = (t1 & 2139062143) << 1 ^ ((t1 & 2155905152) >>> 7) * 27;
              f4 = (f2 & 2139062143) << 1 ^ ((f2 & 2155905152) >>> 7) * 27;
              f8 = (f4 & 2139062143) << 1 ^ ((f4 & 2155905152) >>> 7) * 27;
              f9 = (t1 ^ f8) >>> 0;
              t1 = R.rotr32((f2 ^ f9) >>> 0, 8);
              if (typeof t1 !== "number")
                return H.iae(t1);
              t2 = R.rotr32((f4 ^ f9) >>> 0, 16);
              if (typeof t2 !== "number")
                return H.iae(t2);
              t3 = R.rotr32(f9, 24);
              if (typeof t3 !== "number")
                return H.iae(t3);
              t4 = this._workingKey;
              if (j >= t4.length)
                return H.ioore(t4, j);
              J.$indexSet$ax(t4[j], i, (f2 ^ f4 ^ f8 ^ t1 ^ t2 ^ t3) >>> 0);
            }
            ++j;
          }
        }
      },
      processBlock$4: function(inp, inpOff, out, outOff) {
        var t1, inpView, outView;
        if (this._workingKey == null)
          throw H.wrapException(new P.StateError("AES engine not initialised"));
        t1 = inp.byteLength;
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (inpOff + 16 > t1)
          throw H.wrapException(P.ArgumentError$("Input buffer too short"));
        t1 = out.byteLength;
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (outOff + 16 > t1)
          throw H.wrapException(P.ArgumentError$("Output buffer too short"));
        t1 = inp.buffer;
        inpView = (t1 && C.NativeByteBuffer_methods).asByteData$2(t1, 0, null);
        t1 = out.buffer;
        outView = (t1 && C.NativeByteBuffer_methods).asByteData$2(t1, 0, null);
        if (this._forEncryption === true) {
          this._unpackBlock$2(inpView, inpOff);
          this._encryptBlock$1(this._workingKey);
          this._packBlock$2(outView, outOff);
        } else {
          this._unpackBlock$2(inpView, inpOff);
          this._decryptBlock$1(this._workingKey);
          this._packBlock$2(outView, outOff);
        }
        return 16;
      },
      _encryptBlock$1: function(KW) {
        var t1, r, t2, t3, t4, t5, t6, t7, t8, r0, r1, r2, r3;
        t1 = this._C0;
        if (0 >= KW.length)
          return H.ioore(KW, 0);
        this._C0 = J.$xor$n(t1, J.toInt$0$n(J.$index$asx(KW[0], 0)));
        t1 = this._C1;
        if (0 >= KW.length)
          return H.ioore(KW, 0);
        this._C1 = J.$xor$n(t1, J.toInt$0$n(J.$index$asx(KW[0], 1)));
        t1 = this._C2;
        if (0 >= KW.length)
          return H.ioore(KW, 0);
        this._C2 = J.$xor$n(t1, J.toInt$0$n(J.$index$asx(KW[0], 2)));
        t1 = this._C3;
        if (0 >= KW.length)
          return H.ioore(KW, 0);
        this._C3 = J.$xor$n(t1, J.toInt$0$n(J.$index$asx(KW[0], 3)));
        r = 1;
        while (true) {
          t1 = this._ROUNDS;
          if (typeof t1 !== "number")
            return t1.$sub();
          if (!(r < t1 - 1))
            break;
          t1 = $.get$_T0();
          t2 = J.$and$in(this._C0, 255);
          if (t2 >>> 0 !== t2 || t2 >= 256)
            return H.ioore(t1, t2);
          t2 = t1[t2];
          t3 = $.get$_T1();
          t4 = J.$and$in(J.$shr$in(this._C1, 8), 255);
          if (t4 >>> 0 !== t4 || t4 >= 256)
            return H.ioore(t3, t4);
          t4 = t3[t4];
          t5 = $.get$_T2();
          t6 = J.$and$in(J.$shr$in(this._C2, 16), 255);
          if (t6 >>> 0 !== t6 || t6 >= 256)
            return H.ioore(t5, t6);
          t6 = t5[t6];
          t7 = $.get$_T3();
          t8 = J.$and$in(J.$shr$in(this._C3, 24), 255);
          if (t8 >>> 0 !== t8 || t8 >= 256)
            return H.ioore(t7, t8);
          t8 = t7[t8];
          if (r >= KW.length)
            return H.ioore(KW, r);
          r0 = t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 0));
          t8 = J.$and$in(this._C1, 255);
          if (t8 >>> 0 !== t8 || t8 >= 256)
            return H.ioore(t1, t8);
          t8 = t1[t8];
          t6 = J.$and$in(J.$shr$in(this._C2, 8), 255);
          if (t6 >>> 0 !== t6 || t6 >= 256)
            return H.ioore(t3, t6);
          t6 = t3[t6];
          t4 = J.$and$in(J.$shr$in(this._C3, 16), 255);
          if (t4 >>> 0 !== t4 || t4 >= 256)
            return H.ioore(t5, t4);
          t4 = t5[t4];
          t2 = J.$and$in(J.$shr$in(this._C0, 24), 255);
          if (t2 >>> 0 !== t2 || t2 >= 256)
            return H.ioore(t7, t2);
          t2 = t7[t2];
          if (r >= KW.length)
            return H.ioore(KW, r);
          r1 = t8 ^ t6 ^ t4 ^ t2 ^ J.toInt$0$n(J.$index$asx(KW[r], 1));
          t2 = J.$and$in(this._C2, 255);
          if (t2 >>> 0 !== t2 || t2 >= 256)
            return H.ioore(t1, t2);
          t2 = t1[t2];
          t4 = J.$and$in(J.$shr$in(this._C3, 8), 255);
          if (t4 >>> 0 !== t4 || t4 >= 256)
            return H.ioore(t3, t4);
          t4 = t3[t4];
          t6 = J.$and$in(J.$shr$in(this._C0, 16), 255);
          if (t6 >>> 0 !== t6 || t6 >= 256)
            return H.ioore(t5, t6);
          t6 = t5[t6];
          t8 = J.$and$in(J.$shr$in(this._C1, 24), 255);
          if (t8 >>> 0 !== t8 || t8 >= 256)
            return H.ioore(t7, t8);
          t8 = t7[t8];
          if (r >= KW.length)
            return H.ioore(KW, r);
          r2 = t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 2));
          t8 = J.$and$in(this._C3, 255);
          if (t8 >>> 0 !== t8 || t8 >= 256)
            return H.ioore(t1, t8);
          t8 = t1[t8];
          t6 = J.$and$in(J.$shr$in(this._C0, 8), 255);
          if (t6 >>> 0 !== t6 || t6 >= 256)
            return H.ioore(t3, t6);
          t6 = t3[t6];
          t4 = J.$and$in(J.$shr$in(this._C1, 16), 255);
          if (t4 >>> 0 !== t4 || t4 >= 256)
            return H.ioore(t5, t4);
          t4 = t5[t4];
          t2 = J.$and$in(J.$shr$in(this._C2, 24), 255);
          if (t2 >>> 0 !== t2 || t2 >= 256)
            return H.ioore(t7, t2);
          t2 = t7[t2];
          if (r >= KW.length)
            return H.ioore(KW, r);
          r3 = t8 ^ t6 ^ t4 ^ t2 ^ J.toInt$0$n(J.$index$asx(KW[r], 3));
          ++r;
          t2 = t1[r0 & 255];
          t4 = t3[r1 >>> 8 & 255];
          t6 = t5[r2 >>> 16 & 255];
          t8 = t7[r3 >>> 24 & 255];
          if (r >= KW.length)
            return H.ioore(KW, r);
          this._C0 = (t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 0))) >>> 0;
          t8 = t1[r1 & 255];
          t6 = t3[r2 >>> 8 & 255];
          t4 = t5[r3 >>> 16 & 255];
          t2 = t7[r0 >>> 24 & 255];
          if (r >= KW.length)
            return H.ioore(KW, r);
          this._C1 = (t8 ^ t6 ^ t4 ^ t2 ^ J.toInt$0$n(J.$index$asx(KW[r], 1))) >>> 0;
          t2 = t1[r2 & 255];
          t4 = t3[r3 >>> 8 & 255];
          t6 = t5[r0 >>> 16 & 255];
          t8 = t7[r1 >>> 24 & 255];
          if (r >= KW.length)
            return H.ioore(KW, r);
          this._C2 = (t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 2))) >>> 0;
          t1 = t1[r3 & 255];
          t3 = t3[r0 >>> 8 & 255];
          t5 = t5[r1 >>> 16 & 255];
          t7 = t7[r2 >>> 24 & 255];
          if (r >= KW.length)
            return H.ioore(KW, r);
          this._C3 = (t1 ^ t3 ^ t5 ^ t7 ^ J.toInt$0$n(J.$index$asx(KW[r], 3))) >>> 0;
          ++r;
        }
        t1 = $.get$_T0();
        t2 = J.$and$in(this._C0, 255);
        if (t2 >>> 0 !== t2 || t2 >= 256)
          return H.ioore(t1, t2);
        t2 = t1[t2];
        t3 = $.get$_T1();
        t4 = J.$and$in(J.$shr$in(this._C1, 8), 255);
        if (t4 >>> 0 !== t4 || t4 >= 256)
          return H.ioore(t3, t4);
        t4 = t3[t4];
        t5 = $.get$_T2();
        t6 = J.$and$in(J.$shr$in(this._C2, 16), 255);
        if (t6 >>> 0 !== t6 || t6 >= 256)
          return H.ioore(t5, t6);
        t6 = t5[t6];
        t7 = $.get$_T3();
        t8 = J.$and$in(J.$shr$in(this._C3, 24), 255);
        if (t8 >>> 0 !== t8 || t8 >= 256)
          return H.ioore(t7, t8);
        t8 = t7[t8];
        if (r >= KW.length)
          return H.ioore(KW, r);
        r0 = t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 0));
        t8 = J.$and$in(this._C1, 255);
        if (t8 >>> 0 !== t8 || t8 >= 256)
          return H.ioore(t1, t8);
        t8 = t1[t8];
        t6 = J.$and$in(J.$shr$in(this._C2, 8), 255);
        if (t6 >>> 0 !== t6 || t6 >= 256)
          return H.ioore(t3, t6);
        t6 = t3[t6];
        t4 = J.$and$in(J.$shr$in(this._C3, 16), 255);
        if (t4 >>> 0 !== t4 || t4 >= 256)
          return H.ioore(t5, t4);
        t4 = t5[t4];
        t2 = J.$and$in(J.$shr$in(this._C0, 24), 255);
        if (t2 >>> 0 !== t2 || t2 >= 256)
          return H.ioore(t7, t2);
        t2 = t7[t2];
        if (r >= KW.length)
          return H.ioore(KW, r);
        r1 = t8 ^ t6 ^ t4 ^ t2 ^ J.toInt$0$n(J.$index$asx(KW[r], 1));
        t2 = J.$and$in(this._C2, 255);
        if (t2 >>> 0 !== t2 || t2 >= 256)
          return H.ioore(t1, t2);
        t2 = t1[t2];
        t4 = J.$and$in(J.$shr$in(this._C3, 8), 255);
        if (t4 >>> 0 !== t4 || t4 >= 256)
          return H.ioore(t3, t4);
        t4 = t3[t4];
        t6 = J.$and$in(J.$shr$in(this._C0, 16), 255);
        if (t6 >>> 0 !== t6 || t6 >= 256)
          return H.ioore(t5, t6);
        t6 = t5[t6];
        t8 = J.$and$in(J.$shr$in(this._C1, 24), 255);
        if (t8 >>> 0 !== t8 || t8 >= 256)
          return H.ioore(t7, t8);
        t8 = t7[t8];
        if (r >= KW.length)
          return H.ioore(KW, r);
        r2 = t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 2));
        t8 = J.$and$in(this._C3, 255);
        if (t8 >>> 0 !== t8 || t8 >= 256)
          return H.ioore(t1, t8);
        t8 = t1[t8];
        t1 = J.$and$in(J.$shr$in(this._C0, 8), 255);
        if (t1 >>> 0 !== t1 || t1 >= 256)
          return H.ioore(t3, t1);
        t1 = t3[t1];
        t3 = J.$and$in(J.$shr$in(this._C1, 16), 255);
        if (t3 >>> 0 !== t3 || t3 >= 256)
          return H.ioore(t5, t3);
        t3 = t5[t3];
        t5 = J.$and$in(J.$shr$in(this._C2, 24), 255);
        if (t5 >>> 0 !== t5 || t5 >= 256)
          return H.ioore(t7, t5);
        t5 = t7[t5];
        if (r >= KW.length)
          return H.ioore(KW, r);
        r3 = t8 ^ t1 ^ t3 ^ t5 ^ J.toInt$0$n(J.$index$asx(KW[r], 3));
        ++r;
        t5 = $.get$_S();
        t3 = r0 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$and$in(t5[t3], 255);
        t1 = r1 >>> 8 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(J.$and$in(t5[t1], 255), 8));
        t3 = r2 >>> 16 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(J.$and$in(t5[t3], 255), 16));
        t1 = r3 >>> 24 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(t5[t1], 24));
        if (r >= KW.length)
          return H.ioore(KW, r);
        this._C0 = J.$xor$n(t1, J.toInt$0$n(J.$index$asx(KW[r], 0)));
        t1 = r1 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$and$in(t5[t1], 255);
        t3 = r2 >>> 8 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(J.$and$in(t5[t3], 255), 8));
        t1 = r3 >>> 16 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(J.$and$in(t5[t1], 255), 16));
        t3 = r0 >>> 24 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(t5[t3], 24));
        if (r >= KW.length)
          return H.ioore(KW, r);
        this._C1 = J.$xor$n(t3, J.toInt$0$n(J.$index$asx(KW[r], 1)));
        t3 = r2 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$and$in(t5[t3], 255);
        t1 = r3 >>> 8 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(J.$and$in(t5[t1], 255), 8));
        t3 = r0 >>> 16 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(J.$and$in(t5[t3], 255), 16));
        t1 = r1 >>> 24 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(t5[t1], 24));
        if (r >= KW.length)
          return H.ioore(KW, r);
        this._C2 = J.$xor$n(t1, J.toInt$0$n(J.$index$asx(KW[r], 2)));
        t1 = r3 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$and$in(t5[t1], 255);
        t3 = r0 >>> 8 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(J.$and$in(t5[t3], 255), 8));
        t1 = r1 >>> 16 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(J.$and$in(t5[t1], 255), 16));
        t3 = r2 >>> 24 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(t5[t3], 24));
        if (r >= KW.length)
          return H.ioore(KW, r);
        this._C3 = J.$xor$n(t3, J.toInt$0$n(J.$index$asx(KW[r], 3)));
      },
      _decryptBlock$1: function(KW) {
        var t1, t2, r, t3, t4, t5, t6, t7, t8, r0, r1, r2, r3;
        t1 = this._C0;
        t2 = this._ROUNDS;
        if (t2 >>> 0 !== t2 || t2 >= KW.length)
          return H.ioore(KW, t2);
        this._C0 = J.$xor$n(t1, J.toInt$0$n(J.$index$asx(KW[t2], 0)));
        t2 = this._C1;
        t1 = this._ROUNDS;
        if (t1 >>> 0 !== t1 || t1 >= KW.length)
          return H.ioore(KW, t1);
        this._C1 = J.$xor$n(t2, J.toInt$0$n(J.$index$asx(KW[t1], 1)));
        t1 = this._C2;
        t2 = this._ROUNDS;
        if (t2 >>> 0 !== t2 || t2 >= KW.length)
          return H.ioore(KW, t2);
        this._C2 = J.$xor$n(t1, J.toInt$0$n(J.$index$asx(KW[t2], 2)));
        t2 = this._C3;
        t1 = this._ROUNDS;
        if (t1 >>> 0 !== t1 || t1 >= KW.length)
          return H.ioore(KW, t1);
        this._C3 = J.$xor$n(t2, J.toInt$0$n(J.$index$asx(KW[t1], 3)));
        t1 = this._ROUNDS;
        if (typeof t1 !== "number")
          return t1.$sub();
        r = t1 - 1;
        for (; r > 1;) {
          t1 = $.get$_Tinv0();
          t2 = J.$and$in(this._C0, 255);
          if (t2 >>> 0 !== t2 || t2 >= 256)
            return H.ioore(t1, t2);
          t2 = t1[t2];
          t3 = $.get$_Tinv1();
          t4 = J.$and$in(J.$shr$in(this._C3, 8), 255);
          if (t4 >>> 0 !== t4 || t4 >= 256)
            return H.ioore(t3, t4);
          t4 = t3[t4];
          t5 = $.get$_Tinv2();
          t6 = J.$and$in(J.$shr$in(this._C2, 16), 255);
          if (t6 >>> 0 !== t6 || t6 >= 256)
            return H.ioore(t5, t6);
          t6 = t5[t6];
          t7 = $.get$_Tinv3();
          t8 = J.$and$in(J.$shr$in(this._C1, 24), 255);
          if (t8 >>> 0 !== t8 || t8 >= 256)
            return H.ioore(t7, t8);
          t8 = t7[t8];
          if (r >= KW.length)
            return H.ioore(KW, r);
          r0 = t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 0));
          t8 = J.$and$in(this._C1, 255);
          if (t8 >>> 0 !== t8 || t8 >= 256)
            return H.ioore(t1, t8);
          t8 = t1[t8];
          t6 = J.$and$in(J.$shr$in(this._C0, 8), 255);
          if (t6 >>> 0 !== t6 || t6 >= 256)
            return H.ioore(t3, t6);
          t6 = t3[t6];
          t4 = J.$and$in(J.$shr$in(this._C3, 16), 255);
          if (t4 >>> 0 !== t4 || t4 >= 256)
            return H.ioore(t5, t4);
          t4 = t5[t4];
          t2 = J.$and$in(J.$shr$in(this._C2, 24), 255);
          if (t2 >>> 0 !== t2 || t2 >= 256)
            return H.ioore(t7, t2);
          t2 = t7[t2];
          if (r >= KW.length)
            return H.ioore(KW, r);
          r1 = t8 ^ t6 ^ t4 ^ t2 ^ J.toInt$0$n(J.$index$asx(KW[r], 1));
          t2 = J.$and$in(this._C2, 255);
          if (t2 >>> 0 !== t2 || t2 >= 256)
            return H.ioore(t1, t2);
          t2 = t1[t2];
          t4 = J.$and$in(J.$shr$in(this._C1, 8), 255);
          if (t4 >>> 0 !== t4 || t4 >= 256)
            return H.ioore(t3, t4);
          t4 = t3[t4];
          t6 = J.$and$in(J.$shr$in(this._C0, 16), 255);
          if (t6 >>> 0 !== t6 || t6 >= 256)
            return H.ioore(t5, t6);
          t6 = t5[t6];
          t8 = J.$and$in(J.$shr$in(this._C3, 24), 255);
          if (t8 >>> 0 !== t8 || t8 >= 256)
            return H.ioore(t7, t8);
          t8 = t7[t8];
          if (r >= KW.length)
            return H.ioore(KW, r);
          r2 = t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 2));
          t8 = J.$and$in(this._C3, 255);
          if (t8 >>> 0 !== t8 || t8 >= 256)
            return H.ioore(t1, t8);
          t8 = t1[t8];
          t6 = J.$and$in(J.$shr$in(this._C2, 8), 255);
          if (t6 >>> 0 !== t6 || t6 >= 256)
            return H.ioore(t3, t6);
          t6 = t3[t6];
          t4 = J.$and$in(J.$shr$in(this._C1, 16), 255);
          if (t4 >>> 0 !== t4 || t4 >= 256)
            return H.ioore(t5, t4);
          t4 = t5[t4];
          t2 = J.$and$in(J.$shr$in(this._C0, 24), 255);
          if (t2 >>> 0 !== t2 || t2 >= 256)
            return H.ioore(t7, t2);
          t2 = t7[t2];
          if (r >= KW.length)
            return H.ioore(KW, r);
          r3 = t8 ^ t6 ^ t4 ^ t2 ^ J.toInt$0$n(J.$index$asx(KW[r], 3));
          --r;
          t2 = t1[r0 & 255];
          t4 = t3[r3 >>> 8 & 255];
          t6 = t5[r2 >>> 16 & 255];
          t8 = t7[r1 >>> 24 & 255];
          if (r >= KW.length)
            return H.ioore(KW, r);
          this._C0 = (t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 0))) >>> 0;
          t8 = t1[r1 & 255];
          t6 = t3[r0 >>> 8 & 255];
          t4 = t5[r3 >>> 16 & 255];
          t2 = t7[r2 >>> 24 & 255];
          if (r >= KW.length)
            return H.ioore(KW, r);
          this._C1 = (t8 ^ t6 ^ t4 ^ t2 ^ J.toInt$0$n(J.$index$asx(KW[r], 1))) >>> 0;
          t2 = t1[r2 & 255];
          t4 = t3[r1 >>> 8 & 255];
          t6 = t5[r0 >>> 16 & 255];
          t8 = t7[r3 >>> 24 & 255];
          if (r >= KW.length)
            return H.ioore(KW, r);
          this._C2 = (t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 2))) >>> 0;
          t1 = t1[r3 & 255];
          t3 = t3[r2 >>> 8 & 255];
          t5 = t5[r1 >>> 16 & 255];
          t7 = t7[r0 >>> 24 & 255];
          if (r >= KW.length)
            return H.ioore(KW, r);
          this._C3 = (t1 ^ t3 ^ t5 ^ t7 ^ J.toInt$0$n(J.$index$asx(KW[r], 3))) >>> 0;
          --r;
        }
        t1 = $.get$_Tinv0();
        t2 = J.$and$in(this._C0, 255);
        if (t2 >>> 0 !== t2 || t2 >= 256)
          return H.ioore(t1, t2);
        t2 = t1[t2];
        t3 = $.get$_Tinv1();
        t4 = J.$and$in(J.$shr$in(this._C3, 8), 255);
        if (t4 >>> 0 !== t4 || t4 >= 256)
          return H.ioore(t3, t4);
        t4 = t3[t4];
        t5 = $.get$_Tinv2();
        t6 = J.$and$in(J.$shr$in(this._C2, 16), 255);
        if (t6 >>> 0 !== t6 || t6 >= 256)
          return H.ioore(t5, t6);
        t6 = t5[t6];
        t7 = $.get$_Tinv3();
        t8 = J.$and$in(J.$shr$in(this._C1, 24), 255);
        if (t8 >>> 0 !== t8 || t8 >= 256)
          return H.ioore(t7, t8);
        t8 = t7[t8];
        if (r < 0 || r >= KW.length)
          return H.ioore(KW, r);
        r0 = t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 0));
        t8 = J.$and$in(this._C1, 255);
        if (t8 >>> 0 !== t8 || t8 >= 256)
          return H.ioore(t1, t8);
        t8 = t1[t8];
        t6 = J.$and$in(J.$shr$in(this._C0, 8), 255);
        if (t6 >>> 0 !== t6 || t6 >= 256)
          return H.ioore(t3, t6);
        t6 = t3[t6];
        t4 = J.$and$in(J.$shr$in(this._C3, 16), 255);
        if (t4 >>> 0 !== t4 || t4 >= 256)
          return H.ioore(t5, t4);
        t4 = t5[t4];
        t2 = J.$and$in(J.$shr$in(this._C2, 24), 255);
        if (t2 >>> 0 !== t2 || t2 >= 256)
          return H.ioore(t7, t2);
        t2 = t7[t2];
        if (r >= KW.length)
          return H.ioore(KW, r);
        r1 = t8 ^ t6 ^ t4 ^ t2 ^ J.toInt$0$n(J.$index$asx(KW[r], 1));
        t2 = J.$and$in(this._C2, 255);
        if (t2 >>> 0 !== t2 || t2 >= 256)
          return H.ioore(t1, t2);
        t2 = t1[t2];
        t4 = J.$and$in(J.$shr$in(this._C1, 8), 255);
        if (t4 >>> 0 !== t4 || t4 >= 256)
          return H.ioore(t3, t4);
        t4 = t3[t4];
        t6 = J.$and$in(J.$shr$in(this._C0, 16), 255);
        if (t6 >>> 0 !== t6 || t6 >= 256)
          return H.ioore(t5, t6);
        t6 = t5[t6];
        t8 = J.$and$in(J.$shr$in(this._C3, 24), 255);
        if (t8 >>> 0 !== t8 || t8 >= 256)
          return H.ioore(t7, t8);
        t8 = t7[t8];
        if (r >= KW.length)
          return H.ioore(KW, r);
        r2 = t2 ^ t4 ^ t6 ^ t8 ^ J.toInt$0$n(J.$index$asx(KW[r], 2));
        t8 = J.$and$in(this._C3, 255);
        if (t8 >>> 0 !== t8 || t8 >= 256)
          return H.ioore(t1, t8);
        t8 = t1[t8];
        t1 = J.$and$in(J.$shr$in(this._C2, 8), 255);
        if (t1 >>> 0 !== t1 || t1 >= 256)
          return H.ioore(t3, t1);
        t1 = t3[t1];
        t3 = J.$and$in(J.$shr$in(this._C1, 16), 255);
        if (t3 >>> 0 !== t3 || t3 >= 256)
          return H.ioore(t5, t3);
        t3 = t5[t3];
        t5 = J.$and$in(J.$shr$in(this._C0, 24), 255);
        if (t5 >>> 0 !== t5 || t5 >= 256)
          return H.ioore(t7, t5);
        t5 = t7[t5];
        if (r >= KW.length)
          return H.ioore(KW, r);
        r3 = t8 ^ t1 ^ t3 ^ t5 ^ J.toInt$0$n(J.$index$asx(KW[r], 3));
        t5 = $.get$_Si();
        t3 = r0 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$and$in(t5[t3], 255);
        t1 = r3 >>> 8 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(J.$and$in(t5[t1], 255), 8));
        t3 = r2 >>> 16 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(J.$and$in(t5[t3], 255), 16));
        t1 = r1 >>> 24 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(t5[t1], 24));
        if (0 >= KW.length)
          return H.ioore(KW, 0);
        this._C0 = J.$xor$n(t1, J.toInt$0$n(J.$index$asx(KW[0], 0)));
        t1 = r1 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$and$in(t5[t1], 255);
        t3 = r0 >>> 8 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(J.$and$in(t5[t3], 255), 8));
        t1 = r3 >>> 16 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(J.$and$in(t5[t1], 255), 16));
        t3 = r2 >>> 24 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(t5[t3], 24));
        if (0 >= KW.length)
          return H.ioore(KW, 0);
        this._C1 = J.$xor$n(t3, J.toInt$0$n(J.$index$asx(KW[0], 1)));
        t3 = r2 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$and$in(t5[t3], 255);
        t1 = r1 >>> 8 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(J.$and$in(t5[t1], 255), 8));
        t3 = r0 >>> 16 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(J.$and$in(t5[t3], 255), 16));
        t1 = r3 >>> 24 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(t5[t1], 24));
        if (0 >= KW.length)
          return H.ioore(KW, 0);
        this._C2 = J.$xor$n(t1, J.toInt$0$n(J.$index$asx(KW[0], 2)));
        t1 = r3 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$and$in(t5[t1], 255);
        t3 = r2 >>> 8 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(J.$and$in(t5[t3], 255), 8));
        t1 = r1 >>> 16 & 255;
        if (t1 >= t5.length)
          return H.ioore(t5, t1);
        t1 = J.$xor$n(t3, J.$shl$in(J.$and$in(t5[t1], 255), 16));
        t3 = r0 >>> 24 & 255;
        if (t3 >= t5.length)
          return H.ioore(t5, t3);
        t3 = J.$xor$n(t1, J.$shl$in(t5[t3], 24));
        if (0 >= KW.length)
          return H.ioore(KW, 0);
        this._C3 = J.$xor$n(t3, J.toInt$0$n(J.$index$asx(KW[0], 3)));
      },
      _unpackBlock$2: function(view, off) {
        this._C0 = R.unpack32(view, off, C.Endianness_true);
        this._C1 = R.unpack32(view, off + 4, C.Endianness_true);
        this._C2 = R.unpack32(view, off + 8, C.Endianness_true);
        this._C3 = R.unpack32(view, off + 12, C.Endianness_true);
      },
      _packBlock$2: function(view, off) {
        R.pack32(this._C0, view, off, C.Endianness_true);
        R.pack32(this._C1, view, off + 4, C.Endianness_true);
        R.pack32(this._C2, view, off + 8, C.Endianness_true);
        R.pack32(this._C3, view, off + 12, C.Endianness_true);
      }
    },
    AESFastEngine_init_closure: {
      "^": "Closure:19;",
      call$1: function(i) {
        var t1 = Array(4);
        t1.fixed$length = Array;
        t1.$builtinTypeInfo = [P.$int];
        return t1;
      }
    }
  }], ["cipher.block.base_block_cipher", "package:cipher/block/base_block_cipher.dart",, U, {
    "^": "",
    BaseBlockCipher: {
      "^": "Object;"
    }
  }], ["cipher.digests.base_digest", "package:cipher/digests/base_digest.dart",, U, {
    "^": "",
    BaseDigest: {
      "^": "Object;",
      process$1: function(data) {
        var out;
        this.update$3(data, 0, data.length);
        out = new Uint8Array(H._checkLength(this.get$digestSize()));
        return C.NativeUint8List_methods.sublist$2(out, 0, this.doFinal$2(out, 0));
      }
    }
  }], ["cipher.digests.md4_family_digest", "package:cipher/digests/md4_family_digest.dart",, R, {
    "^": "",
    MD4FamilyDigest: {
      "^": "BaseDigest;buffer>",
      reset$0: function(_) {
        var t1;
        this._byteCount.$set$1(0);
        this._wordBufferOffset = 0;
        C.NativeUint8List_methods.fillRange$3(this._wordBuffer, 0, 4, 0);
        this.bufferOffset = 0;
        t1 = this.buffer;
        C.JSArray_methods.fillRange$3(t1, 0, t1.length, 0);
        this.resetState$0();
      },
      updateByte$1: function(inp) {
        var t1, t2, t3;
        t1 = this._wordBuffer;
        t2 = this._wordBufferOffset;
        if (typeof t2 !== "number")
          return t2.$add();
        t3 = t2 + 1;
        this._wordBufferOffset = t3;
        if (t2 >= 4)
          return H.ioore(t1, t2);
        t1[t2] = inp & 255;
        if (t3 === 4) {
          t2 = this.buffer;
          t3 = this.bufferOffset;
          if (typeof t3 !== "number")
            return t3.$add();
          this.bufferOffset = t3 + 1;
          t1 = t1.buffer;
          inp = (t1 && C.NativeByteBuffer_methods).asByteData$2(t1, 0, null);
          t1 = inp.getUint32(0, C.Endianness_true === this._endian);
          if (t3 >= t2.length)
            return H.ioore(t2, t3);
          t2[t3] = t1;
          if (this.bufferOffset === 16) {
            this.processBlock$0();
            this.bufferOffset = 0;
            C.JSArray_methods.fillRange$3(t2, 0, 16, 0);
          }
          this._wordBufferOffset = 0;
        }
        this._byteCount.sum$1(1);
      },
      update$3: function(inp, inpOff, len) {
        var nbytes = this._processUntilNextWord$3(inp, inpOff, len);
        inpOff += nbytes;
        len -= nbytes;
        nbytes = this._processWholeWords$3(inp, inpOff, len);
        this._processBytes$3(inp, inpOff + nbytes, len - nbytes);
      },
      doFinal$2: function(out, outOff) {
        var bitLength, t1, t2, t3;
        bitLength = new R.Register64(null, null);
        bitLength.$set$2(this._byteCount, null);
        t1 = R.shiftl32(bitLength._hi32, 3);
        bitLength._hi32 = t1;
        bitLength._hi32 = J.$or$n(t1, J.$shr$n(bitLength._lo32, 29));
        bitLength._lo32 = R.shiftl32(bitLength._lo32, 3);
        this._processPadding$0();
        t1 = this.bufferOffset;
        if (typeof t1 !== "number")
          return t1.$gt();
        if (t1 > 14)
          this._doProcessBlock$0();
        t1 = this._endian;
        switch (t1) {
          case C.Endianness_true:
            t1 = this.buffer;
            t2 = bitLength._lo32;
            t3 = t1.length;
            if (14 >= t3)
              return H.ioore(t1, 14);
            t1[14] = t2;
            t2 = bitLength._hi32;
            if (15 >= t3)
              return H.ioore(t1, 15);
            t1[15] = t2;
            break;
          case C.Endianness_false:
            t1 = this.buffer;
            t2 = bitLength._hi32;
            t3 = t1.length;
            if (14 >= t3)
              return H.ioore(t1, 14);
            t1[14] = t2;
            t2 = bitLength._lo32;
            if (15 >= t3)
              return H.ioore(t1, 15);
            t1[15] = t2;
            break;
          default:
            H.throwExpression(new P.StateError("Invalid endianness: " + t1.toString$0(0)));
        }
        this._doProcessBlock$0();
        this._packState$2(out, outOff);
        this.reset$0(0);
        return this.get$digestSize();
      },
      _doProcessBlock$0: function() {
        this.processBlock$0();
        this.bufferOffset = 0;
        C.JSArray_methods.fillRange$3(this.buffer, 0, 16, 0);
      },
      _processBytes$3: function(inp, inpOff, len) {
        var t1, t2, t3, t4, t5, t6, t7, t8, inp0;
        for (t1 = this._byteCount, t2 = inp.length, t3 = this._wordBuffer, t4 = this.buffer, t5 = this._endian; len > 0;) {
          if (inpOff >= t2)
            return H.ioore(inp, inpOff);
          t6 = inp[inpOff];
          t7 = this._wordBufferOffset;
          if (typeof t7 !== "number")
            return t7.$add();
          t8 = t7 + 1;
          this._wordBufferOffset = t8;
          if (t7 >= 4)
            return H.ioore(t3, t7);
          t3[t7] = t6 & 255;
          if (t8 === 4) {
            t6 = this.bufferOffset;
            if (typeof t6 !== "number")
              return t6.$add();
            this.bufferOffset = t6 + 1;
            t7 = t3.buffer;
            inp0 = (t7 && C.NativeByteBuffer_methods).asByteData$2(t7, 0, null);
            t7 = inp0.getUint32(0, C.Endianness_true === t5);
            if (t6 >= t4.length)
              return H.ioore(t4, t6);
            t4[t6] = t7;
            if (this.bufferOffset === 16) {
              this.processBlock$0();
              this.bufferOffset = 0;
              C.JSArray_methods.fillRange$3(t4, 0, 16, 0);
            }
            this._wordBufferOffset = 0;
          }
          t1.sum$1(1);
          ++inpOff;
          --len;
        }
      },
      _processWholeWords$3: function(inp, inpOff, len) {
        var t1, t2, t3, processed, t4, t5, inp0;
        for (t1 = this._byteCount, t2 = this.buffer, t3 = this._endian, processed = 0; len > 4;) {
          t4 = this.bufferOffset;
          if (typeof t4 !== "number")
            return t4.$add();
          this.bufferOffset = t4 + 1;
          t5 = inp.buffer;
          inp0 = (t5 && C.NativeByteBuffer_methods).asByteData$2(t5, 0, null);
          t5 = inp0.getUint32(inpOff, C.Endianness_true === t3);
          if (t4 >= t2.length)
            return H.ioore(t2, t4);
          t2[t4] = t5;
          if (this.bufferOffset === 16) {
            this.processBlock$0();
            this.bufferOffset = 0;
            C.JSArray_methods.fillRange$3(t2, 0, 16, 0);
          }
          inpOff += 4;
          len -= 4;
          t1.sum$1(4);
          processed += 4;
        }
        return processed;
      },
      _processUntilNextWord$3: function(inp, inpOff, len) {
        var t1, t2, t3, t4, t5, processed, t6, t7, t8, inp0;
        t1 = this._byteCount;
        t2 = inp.length;
        t3 = this._wordBuffer;
        t4 = this.buffer;
        t5 = this._endian;
        processed = 0;
        while (true) {
          t6 = this._wordBufferOffset;
          if (!(t6 !== 0 && len > 0))
            break;
          if (inpOff >= t2)
            return H.ioore(inp, inpOff);
          t7 = inp[inpOff];
          if (typeof t6 !== "number")
            return t6.$add();
          t8 = t6 + 1;
          this._wordBufferOffset = t8;
          if (t6 >= 4)
            return H.ioore(t3, t6);
          t3[t6] = t7 & 255;
          if (t8 === 4) {
            t6 = this.bufferOffset;
            if (typeof t6 !== "number")
              return t6.$add();
            this.bufferOffset = t6 + 1;
            t7 = t3.buffer;
            inp0 = (t7 && C.NativeByteBuffer_methods).asByteData$2(t7, 0, null);
            t7 = inp0.getUint32(0, C.Endianness_true === t5);
            if (t6 >= t4.length)
              return H.ioore(t4, t6);
            t4[t6] = t7;
            if (this.bufferOffset === 16) {
              this.processBlock$0();
              this.bufferOffset = 0;
              C.JSArray_methods.fillRange$3(t4, 0, 16, 0);
            }
            this._wordBufferOffset = 0;
          }
          t1.sum$1(1);
          ++inpOff;
          --len;
          ++processed;
        }
        return processed;
      },
      _processPadding$0: function() {
        var t1, t2, t3, t4, t5, t6, inp;
        this.updateByte$1(128);
        for (t1 = this._byteCount, t2 = this._wordBuffer, t3 = this.buffer, t4 = this._endian; t5 = this._wordBufferOffset, t5 !== 0;) {
          if (typeof t5 !== "number")
            return t5.$add();
          t6 = t5 + 1;
          this._wordBufferOffset = t6;
          if (t5 >= 4)
            return H.ioore(t2, t5);
          t2[t5] = 0;
          if (t6 === 4) {
            t5 = this.bufferOffset;
            if (typeof t5 !== "number")
              return t5.$add();
            this.bufferOffset = t5 + 1;
            t6 = t2.buffer;
            inp = (t6 && C.NativeByteBuffer_methods).asByteData$2(t6, 0, null);
            t6 = inp.getUint32(0, C.Endianness_true === t4);
            if (t5 >= t3.length)
              return H.ioore(t3, t5);
            t3[t5] = t6;
            if (this.bufferOffset === 16) {
              this.processBlock$0();
              this.bufferOffset = 0;
              C.JSArray_methods.fillRange$3(t3, 0, 16, 0);
            }
            this._wordBufferOffset = 0;
          }
          t1.sum$1(1);
        }
      },
      _packState$2: function(out, outOff) {
        var t1, t2, t3, t4, i;
        for (t1 = this._packedStateSize, t2 = this.state, t3 = t2.length, t4 = this._endian, i = 0; i < t1; ++i) {
          if (i >= t3)
            return H.ioore(t2, i);
          R.pack32(t2[i], out, outOff + i * 4, t4);
        }
      },
      MD4FamilyDigest$4: function(_endian, stateSize, bufferSize, packedStateSize) {
        this.reset$0(0);
      }
    }
  }], ["cipher.digests.sha256", "package:cipher/digests/sha256.dart",, K, {
    "^": "",
    SHA256Digest: {
      "^": "MD4FamilyDigest;algorithmName,digestSize<,_byteCount,_wordBuffer,_wordBufferOffset,_endian,_packedStateSize,state,buffer,bufferOffset",
      resetState$0: function() {
        var t1, t2;
        t1 = this.state;
        t2 = t1.length;
        if (0 >= t2)
          return H.ioore(t1, 0);
        t1[0] = 1779033703;
        if (1 >= t2)
          return H.ioore(t1, 1);
        t1[1] = 3144134277;
        if (2 >= t2)
          return H.ioore(t1, 2);
        t1[2] = 1013904242;
        if (3 >= t2)
          return H.ioore(t1, 3);
        t1[3] = 2773480762;
        if (4 >= t2)
          return H.ioore(t1, 4);
        t1[4] = 1359893119;
        if (5 >= t2)
          return H.ioore(t1, 5);
        t1[5] = 2600822924;
        if (6 >= t2)
          return H.ioore(t1, 6);
        t1[6] = 528734635;
        if (7 >= t2)
          return H.ioore(t1, 7);
        t1[7] = 1541459225;
      },
      processBlock$0: function() {
        var t1, t2, t, t3, t4, a, b, c, d, e, f, g, h, i, t5, t6, t7, t8, t9, t10, t11;
        for (t1 = this.buffer, t2 = t1.length, t = 16; t < 64; ++t) {
          t3 = t - 2;
          if (t3 >= t2)
            return H.ioore(t1, t3);
          t3 = t1[t3];
          t3 = J.$xor$n(J.$xor$n(R.rotr32(t3, 17), R.rotr32(t3, 19)), J.$shr$n(t3, 10));
          t4 = t - 7;
          if (t4 >= t2)
            return H.ioore(t1, t4);
          t4 = J.$add$ns(t3, t1[t4]);
          t3 = t - 15;
          if (t3 >= t2)
            return H.ioore(t1, t3);
          t3 = t1[t3];
          t3 = J.$add$ns(t4, J.$xor$n(J.$xor$n(R.rotr32(t3, 7), R.rotr32(t3, 18)), J.$shr$n(t3, 3)));
          t4 = t - 16;
          if (t4 >= t2)
            return H.ioore(t1, t4);
          t4 = J.$and$in(J.$add$ns(t3, t1[t4]), 4294967295);
          if (t >= t2)
            return H.ioore(t1, t);
          t1[t] = t4;
        }
        t3 = this.state;
        t4 = t3.length;
        if (0 >= t4)
          return H.ioore(t3, 0);
        a = t3[0];
        if (1 >= t4)
          return H.ioore(t3, 1);
        b = t3[1];
        if (2 >= t4)
          return H.ioore(t3, 2);
        c = t3[2];
        if (3 >= t4)
          return H.ioore(t3, 3);
        d = t3[3];
        if (4 >= t4)
          return H.ioore(t3, 4);
        e = t3[4];
        if (5 >= t4)
          return H.ioore(t3, 5);
        f = t3[5];
        if (6 >= t4)
          return H.ioore(t3, 6);
        g = t3[6];
        if (7 >= t4)
          return H.ioore(t3, 7);
        h = t3[7];
        for (t = 0, i = 0; i < 8; ++i) {
          t4 = J.getInterceptor$in(e);
          t5 = J.$add$ns(J.$add$ns(h, J.$xor$n(J.$xor$n(R.rotr32(e, 6), R.rotr32(e, 11)), R.rotr32(e, 25))), J.$xor$n(t4.$and(e, f), J.$and$in(t4.$not(e), g)));
          t6 = $.get$SHA256Digest__K();
          if (t >= 64)
            return H.ioore(t6, t);
          t5 = J.$add$ns(t5, t6[t]);
          if (t >= t2)
            return H.ioore(t1, t);
          h = J.$and$in(J.$add$ns(t5, t1[t]), 4294967295);
          d = J.$and$in(J.$add$ns(d, h), 4294967295);
          t5 = J.getInterceptor$in(a);
          t7 = J.getInterceptor$in(b);
          h = J.$and$in(J.$add$ns(J.$add$ns(h, J.$xor$n(J.$xor$n(R.rotr32(a, 2), R.rotr32(a, 13)), R.rotr32(a, 22))), J.$xor$n(J.$xor$n(t5.$and(a, b), t5.$and(a, c)), t7.$and(b, c))), 4294967295);
          ++t;
          t8 = J.getInterceptor$in(d);
          t9 = J.$add$ns(J.$add$ns(g, J.$xor$n(J.$xor$n(R.rotr32(d, 6), R.rotr32(d, 11)), R.rotr32(d, 25))), J.$xor$n(t8.$and(d, e), J.$and$in(t8.$not(d), f)));
          if (t >= 64)
            return H.ioore(t6, t);
          t9 = J.$add$ns(t9, t6[t]);
          if (t >= t2)
            return H.ioore(t1, t);
          g = J.$and$in(J.$add$ns(t9, t1[t]), 4294967295);
          c = J.$and$in(J.$add$ns(c, g), 4294967295);
          t9 = J.getInterceptor$in(h);
          g = J.$and$in(J.$add$ns(J.$add$ns(g, J.$xor$n(J.$xor$n(R.rotr32(h, 2), R.rotr32(h, 13)), R.rotr32(h, 22))), J.$xor$n(J.$xor$n(t9.$and(h, a), t9.$and(h, b)), t5.$and(a, b))), 4294967295);
          ++t;
          t10 = J.getInterceptor$in(c);
          t11 = J.$add$ns(J.$add$ns(f, J.$xor$n(J.$xor$n(R.rotr32(c, 6), R.rotr32(c, 11)), R.rotr32(c, 25))), J.$xor$n(t10.$and(c, d), J.$and$in(t10.$not(c), e)));
          if (t >= 64)
            return H.ioore(t6, t);
          t11 = J.$add$ns(t11, t6[t]);
          if (t >= t2)
            return H.ioore(t1, t);
          f = J.$and$in(J.$add$ns(t11, t1[t]), 4294967295);
          b = J.$and$in(t7.$add(b, f), 4294967295);
          t7 = J.getInterceptor$in(g);
          f = J.$and$in(J.$add$ns(J.$add$ns(f, J.$xor$n(J.$xor$n(R.rotr32(g, 2), R.rotr32(g, 13)), R.rotr32(g, 22))), J.$xor$n(J.$xor$n(t7.$and(g, h), t7.$and(g, a)), t9.$and(h, a))), 4294967295);
          ++t;
          t11 = J.getInterceptor$in(b);
          t4 = J.$add$ns(t4.$add(e, J.$xor$n(J.$xor$n(R.rotr32(b, 6), R.rotr32(b, 11)), R.rotr32(b, 25))), J.$xor$n(t11.$and(b, c), J.$and$in(t11.$not(b), d)));
          if (t >= 64)
            return H.ioore(t6, t);
          t4 = J.$add$ns(t4, t6[t]);
          if (t >= t2)
            return H.ioore(t1, t);
          e = J.$and$in(J.$add$ns(t4, t1[t]), 4294967295);
          a = J.$and$in(t5.$add(a, e), 4294967295);
          t5 = J.getInterceptor$in(f);
          e = J.$and$in(J.$add$ns(J.$add$ns(e, J.$xor$n(J.$xor$n(R.rotr32(f, 2), R.rotr32(f, 13)), R.rotr32(f, 22))), J.$xor$n(J.$xor$n(t5.$and(f, g), t5.$and(f, h)), t7.$and(g, h))), 4294967295);
          ++t;
          t4 = J.getInterceptor$in(a);
          t8 = J.$add$ns(t8.$add(d, J.$xor$n(J.$xor$n(R.rotr32(a, 6), R.rotr32(a, 11)), R.rotr32(a, 25))), J.$xor$n(t4.$and(a, b), J.$and$in(t4.$not(a), c)));
          if (t >= 64)
            return H.ioore(t6, t);
          t8 = J.$add$ns(t8, t6[t]);
          if (t >= t2)
            return H.ioore(t1, t);
          d = J.$and$in(J.$add$ns(t8, t1[t]), 4294967295);
          h = J.$and$in(t9.$add(h, d), 4294967295);
          t9 = J.getInterceptor$in(e);
          d = J.$and$in(J.$add$ns(J.$add$ns(d, J.$xor$n(J.$xor$n(R.rotr32(e, 2), R.rotr32(e, 13)), R.rotr32(e, 22))), J.$xor$n(J.$xor$n(t9.$and(e, f), t9.$and(e, g)), t5.$and(f, g))), 4294967295);
          ++t;
          t8 = J.getInterceptor$in(h);
          t8 = J.$add$ns(t10.$add(c, J.$xor$n(J.$xor$n(R.rotr32(h, 6), R.rotr32(h, 11)), R.rotr32(h, 25))), J.$xor$n(t8.$and(h, a), J.$and$in(t8.$not(h), b)));
          if (t >= 64)
            return H.ioore(t6, t);
          t8 = J.$add$ns(t8, t6[t]);
          if (t >= t2)
            return H.ioore(t1, t);
          c = J.$and$in(J.$add$ns(t8, t1[t]), 4294967295);
          g = J.$and$in(t7.$add(g, c), 4294967295);
          t7 = J.getInterceptor$in(d);
          c = J.$and$in(J.$add$ns(J.$add$ns(c, J.$xor$n(J.$xor$n(R.rotr32(d, 2), R.rotr32(d, 13)), R.rotr32(d, 22))), J.$xor$n(J.$xor$n(t7.$and(d, e), t7.$and(d, f)), t9.$and(e, f))), 4294967295);
          ++t;
          t8 = J.getInterceptor$in(g);
          t8 = J.$add$ns(t11.$add(b, J.$xor$n(J.$xor$n(R.rotr32(g, 6), R.rotr32(g, 11)), R.rotr32(g, 25))), J.$xor$n(t8.$and(g, h), J.$and$in(t8.$not(g), a)));
          if (t >= 64)
            return H.ioore(t6, t);
          t8 = J.$add$ns(t8, t6[t]);
          if (t >= t2)
            return H.ioore(t1, t);
          b = J.$and$in(J.$add$ns(t8, t1[t]), 4294967295);
          f = J.$and$in(t5.$add(f, b), 4294967295);
          t5 = J.getInterceptor$in(c);
          b = J.$and$in(J.$add$ns(J.$add$ns(b, J.$xor$n(J.$xor$n(R.rotr32(c, 2), R.rotr32(c, 13)), R.rotr32(c, 22))), J.$xor$n(J.$xor$n(t5.$and(c, d), t5.$and(c, e)), t7.$and(d, e))), 4294967295);
          ++t;
          t7 = J.getInterceptor$in(f);
          t7 = J.$add$ns(t4.$add(a, J.$xor$n(J.$xor$n(R.rotr32(f, 6), R.rotr32(f, 11)), R.rotr32(f, 25))), J.$xor$n(t7.$and(f, g), J.$and$in(t7.$not(f), h)));
          if (t >= 64)
            return H.ioore(t6, t);
          t6 = J.$add$ns(t7, t6[t]);
          if (t >= t2)
            return H.ioore(t1, t);
          a = J.$and$in(J.$add$ns(t6, t1[t]), 4294967295);
          e = J.$and$in(t9.$add(e, a), 4294967295);
          t9 = J.getInterceptor$in(b);
          a = J.$and$in(J.$add$ns(J.$add$ns(a, J.$xor$n(J.$xor$n(R.rotr32(b, 2), R.rotr32(b, 13)), R.rotr32(b, 22))), J.$xor$n(J.$xor$n(t9.$and(b, c), t9.$and(b, d)), t5.$and(c, d))), 4294967295);
          ++t;
        }
        t3[0] = J.$and$in(J.$add$ns(t3[0], a), 4294967295);
        t3[1] = J.$and$in(J.$add$ns(t3[1], b), 4294967295);
        t3[2] = J.$and$in(J.$add$ns(t3[2], c), 4294967295);
        t3[3] = J.$and$in(J.$add$ns(t3[3], d), 4294967295);
        t3[4] = J.$and$in(J.$add$ns(t3[4], e), 4294967295);
        t3[5] = J.$and$in(J.$add$ns(t3[5], f), 4294967295);
        t3[6] = J.$and$in(J.$add$ns(t3[6], g), 4294967295);
        t3[7] = J.$and$in(J.$add$ns(t3[7], h), 4294967295);
      }
    }
  }], ["cipher.ecc.ecc_base", "package:cipher/ecc/ecc_base.dart",, S, {
    "^": "",
    ECDomainParametersImpl: {
      "^": "Object;domainName,curve<,seed,G<,n<,_h"
    },
    ECFieldElementBase: {
      "^": "Object;",
      toString$0: function(_) {
        return this.toBigInteger$0().toString$0(0);
      }
    },
    ECPointBase: {
      "^": "Object;curve<,x>,y>",
      get$isInfinity: function() {
        return this.x == null && this.y == null;
      },
      set$preCompInfo: function(preCompInfo) {
        this._preCompInfo = preCompInfo;
      },
      $eq: function(_, other) {
        var t1;
        if (other == null)
          return false;
        if (other instanceof S.ECPointBase) {
          t1 = this.x;
          if (t1 == null && this.y == null)
            return other.x == null && other.y == null;
          return J.$eq(t1, other.x) && J.$eq(this.y, other.y);
        }
        return false;
      },
      toString$0: function(_) {
        return "(" + J.toString$0(this.x) + "," + H.S(this.y) + ")";
      },
      get$hashCode: function(_) {
        var t1 = this.x;
        if (t1 == null && this.y == null)
          return 0;
        return (J.get$hashCode$(t1) ^ J.get$hashCode$(this.y)) >>> 0;
      },
      $mul: function(_, k) {
        if (k.signum$0() < 0)
          throw H.wrapException(P.ArgumentError$("The multiplicator cannot be negative"));
        if (this.x == null && this.y == null)
          return this;
        if (k.signum$0() === 0)
          return this.curve._infinity;
        return this._multiplier$3(this, k, this._preCompInfo);
      },
      _multiplier$3: function(arg0, arg1, arg2) {
        return this._multiplier.call$3(arg0, arg1, arg2);
      }
    },
    ECCurveBase: {
      "^": "Object;",
      decodePoint$1: function(encoded) {
        var expectedLength, t1, p, t2;
        expectedLength = C.JSNumber_methods._tdivFast$1(J.$add$ins(this.get$fieldSize(), 7), 8);
        t1 = J.getInterceptor$asx(encoded);
        switch (t1.$index(encoded, 0)) {
          case 0:
            if (!J.$eq(t1.get$length(encoded), 1))
              throw H.wrapException(P.ArgumentError$("Incorrect length for infinity encoding"));
            p = this.get$infinity();
            break;
          case 2:
          case 3:
            if (!J.$eq(t1.get$length(encoded), expectedLength + 1))
              throw H.wrapException(P.ArgumentError$("Incorrect length for compressed encoding"));
            p = this.decompressPoint$2(J.$and$in(t1.$index(encoded, 0), 1), Z.BigInteger_BigInteger$fromBytes(1, t1.sublist$2(encoded, 1, 1 + expectedLength)));
            break;
          case 4:
          case 6:
          case 7:
            if (!J.$eq(t1.get$length(encoded), 2 * expectedLength + 1))
              throw H.wrapException(P.ArgumentError$("Incorrect length for uncompressed/hybrid encoding"));
            t2 = 1 + expectedLength;
            p = this.createPoint$3(Z.BigInteger_BigInteger$fromBytes(1, t1.sublist$2(encoded, 1, t2)), Z.BigInteger_BigInteger$fromBytes(1, t1.sublist$2(encoded, t2, t2 + expectedLength)), false);
            break;
          default:
            throw H.wrapException(P.ArgumentError$("Invalid point encoding 0x" + J.toRadixString$1$n(t1.$index(encoded, 0), 16)));
        }
        return p;
      }
    },
    PreCompInfo: {
      "^": "Object;"
    }
  }], ["cipher.ecc.ecc_fp", "package:cipher/ecc/ecc_fp.dart",, E, {
    "^": "",
    _WNafMultiplier: [function(p, k, preCompInfo) {
      var wnafPreCompInfo, m, t1, width, reqPreCompLen, preComp, twiceP, preCompLen, preComp0, i, wnaf, q, t2;
      wnafPreCompInfo = preCompInfo == null && !(preCompInfo instanceof E._WNafPreCompInfo) ? new E._WNafPreCompInfo(null, null) : preCompInfo;
      m = J.bitLength$0$i(k);
      t1 = J.getInterceptor$n(m);
      if (t1.$lt(m, 13)) {
        width = 2;
        reqPreCompLen = 1;
      } else if (t1.$lt(m, 41)) {
        width = 3;
        reqPreCompLen = 2;
      } else if (t1.$lt(m, 121)) {
        width = 4;
        reqPreCompLen = 4;
      } else if (t1.$lt(m, 337)) {
        width = 5;
        reqPreCompLen = 8;
      } else if (t1.$lt(m, 897)) {
        width = 6;
        reqPreCompLen = 16;
      } else if (t1.$lt(m, 2305)) {
        width = 7;
        reqPreCompLen = 32;
      } else {
        width = 8;
        reqPreCompLen = 127;
      }
      preComp = wnafPreCompInfo.get$preComp();
      twiceP = wnafPreCompInfo.get$twiceP();
      if (preComp == null) {
        preComp = P.List_List$filled(1, p, E.ECPoint);
        preCompLen = 1;
      } else
        preCompLen = preComp.length;
      if (twiceP == null)
        twiceP = p.twice$0();
      if (preCompLen < reqPreCompLen) {
        preComp0 = Array(reqPreCompLen);
        preComp0.fixed$length = Array;
        preComp0.$builtinTypeInfo = [E.ECPoint];
        C.JSArray_methods.setAll$2(preComp0, 0, preComp);
        for (i = preCompLen; i < reqPreCompLen; ++i) {
          t1 = i - 1;
          if (t1 < 0)
            return H.ioore(preComp0, t1);
          preComp0[i] = twiceP.$add(0, preComp0[t1]);
        }
        preComp = preComp0;
      }
      wnaf = E._windowNaf(width, k);
      q = p.get$curve()._infinity;
      for (i = wnaf.length - 1; i >= 0; --i) {
        q = q.twice$0();
        if (!J.$eq(wnaf[i], 0)) {
          t1 = J.$gt$n(wnaf[i], 0);
          t2 = wnaf[i];
          if (t1) {
            t1 = J.$tdiv$n(J.$sub$n(t2, 1), 2);
            if (t1 >>> 0 !== t1 || t1 >= preComp.length)
              return H.ioore(preComp, t1);
            q = q.$add(0, preComp[t1]);
          } else {
            t1 = J.$tdiv$n(J.$sub$n(J.$negate$n(t2), 1), 2);
            if (t1 >>> 0 !== t1 || t1 >= preComp.length)
              return H.ioore(preComp, t1);
            q = q.$sub(0, preComp[t1]);
          }
        }
      }
      wnafPreCompInfo.set$preComp(preComp);
      wnafPreCompInfo.set$twiceP(twiceP);
      p.set$preCompInfo(wnafPreCompInfo);
      return q;
    }, "call$3", "_WNafMultiplier$closure", 6, 0, 190, 29, [], 30, [], 31, []],
    _windowNaf: function(width, k) {
      var t1, wnaf, pow2wB, pow2wBI, t2, i, $length, remainder, t3, wnafShort;
      t1 = J.$add$ns(J.bitLength$0$i(k), 1);
      if (typeof t1 !== "number")
        return H.iae(t1);
      wnaf = Array(t1);
      wnaf.$builtinTypeInfo = [P.$int];
      pow2wB = C.JSInt_methods._shlPositive$1(1, width);
      pow2wBI = Z.BigInteger_BigInteger(pow2wB, null, null);
      for (t1 = wnaf.length, t2 = width - 1, i = 0, $length = 0; k.signum$0() > 0;) {
        if (k.testBit$1(0)) {
          remainder = k.mod$1(pow2wBI);
          if (remainder.testBit$1(t2)) {
            t3 = J.$sub$n(remainder.intValue$0(), pow2wB);
            if (i >= t1)
              return H.ioore(wnaf, i);
            wnaf[i] = t3;
          } else {
            t3 = remainder.intValue$0();
            if (i >= t1)
              return H.ioore(wnaf, i);
            wnaf[i] = t3;
          }
          if (i >= t1)
            return H.ioore(wnaf, i);
          t3 = J.$mod$n(t3, 256);
          wnaf[i] = t3;
          if (!J.$eq(J.$and$in(t3, 128), 0))
            wnaf[i] = J.$sub$n(wnaf[i], 256);
          k = J.$sub$n(k, Z.BigInteger_BigInteger(wnaf[i], null, null));
          $length = i;
        } else {
          if (i >= t1)
            return H.ioore(wnaf, i);
          wnaf[i] = 0;
        }
        k = k.shiftRight$1(1);
        ++i;
      }
      ++$length;
      wnafShort = Array($length);
      wnafShort.fixed$length = Array;
      wnafShort.$builtinTypeInfo = [P.$int];
      C.JSArray_methods.setAll$2(wnafShort, 0, C.JSArray_methods.sublist$2(wnaf, 0, $length));
      return wnafShort;
    },
    _x9IntegerToBytes: function(s, qLength) {
      var bytes, t1, t2;
      bytes = new Uint8Array(H._ensureNativeList(s.toByteArray$0()));
      t1 = bytes.length;
      if (qLength < t1)
        return C.NativeUint8List_methods.sublist$1(bytes, t1 - qLength);
      else if (qLength > t1) {
        t2 = new Uint8Array(H._checkLength(qLength));
        C.NativeUint8List_methods.setAll$2(t2, qLength - t1, bytes);
        return t2;
      }
      return bytes;
    },
    ECFieldElement: {
      "^": "ECFieldElementBase;q,x>",
      get$fieldSize: function() {
        return this.q.bitLength$0(0);
      },
      toBigInteger$0: function() {
        return this.x;
      },
      $add: function(_, b) {
        var t1, t2;
        t1 = this.q;
        t2 = this.x.$add(0, b.toBigInteger$0()).$mod(0, t1);
        if (t2.$ge(0, t1))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        return new E.ECFieldElement(t1, t2);
      },
      $sub: function(_, b) {
        var t1, t2;
        t1 = this.q;
        t2 = this.x.$sub(0, b.toBigInteger$0()).$mod(0, t1);
        if (t2.$ge(0, t1))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        return new E.ECFieldElement(t1, t2);
      },
      $mul: function(_, b) {
        var t1, t2;
        t1 = this.q;
        t2 = this.x.$mul(0, b.toBigInteger$0()).$mod(0, t1);
        if (t2.$ge(0, t1))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        return new E.ECFieldElement(t1, t2);
      },
      $div: function(_, b) {
        var t1, t2;
        t1 = this.q;
        t2 = this.x.$mul(0, b.toBigInteger$0().modInverse$1(0, t1)).$mod(0, t1);
        if (t2.$ge(0, t1))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        return new E.ECFieldElement(t1, t2);
      },
      $negate: function(_) {
        var t1, t2;
        t1 = this.q;
        t2 = this.x.$negate(0).$mod(0, t1);
        if (t2.$ge(0, t1))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        return new E.ECFieldElement(t1, t2);
      },
      square$0: function() {
        var t1, t2;
        t1 = this.q;
        t2 = this.x.modPow$2(0, Z.BigInteger_TWO(), t1);
        if (t2.$ge(0, t1))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        return new E.ECFieldElement(t1, t2);
      },
      sqrt$0: function() {
        var t1, t2, z, qMinusOne, legendreExponent, k, fourQ, rand, $P, result, $U, $V;
        t1 = this.q;
        if (!t1.testBit$1(0))
          throw H.wrapException(new P.UnimplementedError("Not implemented yet"));
        if (t1.testBit$1(1)) {
          t2 = this.x.modPow$2(0, t1.$shr(0, 2).$add(0, Z.BigInteger_ONE()), t1);
          z = new E.ECFieldElement(t1, t2);
          if (t2.$ge(0, t1))
            H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
          t2 = t2.modPow$2(0, Z.BigInteger_TWO(), t1);
          if (t2.$ge(0, t1))
            H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
          return new E.ECFieldElement(t1, t2).$eq(0, this) ? z : null;
        }
        qMinusOne = t1.$sub(0, Z.BigInteger_ONE());
        legendreExponent = qMinusOne.$shr(0, 1);
        t2 = this.x;
        if (!t2.modPow$2(0, legendreExponent, t1).$eq(0, Z.BigInteger_ONE()))
          return;
        k = qMinusOne.$shr(0, 2).$shl(0, 1).$add(0, Z.BigInteger_ONE());
        fourQ = t2.$shr(0, 2).$mod(0, t1);
        rand = $.get$SecureRandom_registry().create$1("");
        do {
          do
            $P = rand.nextBigInteger$1(t1.bitLength$0(0));
          while ($P.$ge(0, t1) || !$P.$mul(0, $P).$sub(0, fourQ).modPow$2(0, legendreExponent, t1).$eq(0, qMinusOne));
          result = this._lucasSequence$4(t1, $P, t2, k);
          $U = result[0];
          $V = result[1];
          if ($V.$mul(0, $V).$mod(0, t1).$eq(0, fourQ)) {
            $V = ($V.testBit$1(0) ? $V.$add(0, t1) : $V).$shr(0, 1);
            if ($V.$ge(0, t1))
              H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
            return new E.ECFieldElement(t1, $V);
          }
        } while ($U.$eq(0, Z.BigInteger_ONE()) || $U.$eq(0, qMinusOne));
        return;
      },
      _lucasSequence$4: function(p, $P, $Q, k) {
        var n, s, Uh, Vl, Ql, Qh, j, t1, Vh;
        n = k.bitLength$0(0);
        s = k.get$lowestSetBit();
        Uh = Z.BigInteger_ONE();
        Vl = Z.BigInteger_TWO();
        Ql = Z.BigInteger_ONE();
        Qh = Z.BigInteger_ONE();
        for (j = J.$sub$in(n, 1), t1 = s + 1, Vh = $P; j >= t1; --j) {
          Ql = Ql.$mul(0, Qh).$mod(0, p);
          if (k.testBit$1(j)) {
            Qh = Ql.$mul(0, $Q).$mod(0, p);
            Uh = Uh.$mul(0, Vh).$mod(0, p);
            Vl = Vh.$mul(0, Vl).$sub(0, $P.$mul(0, Ql)).$mod(0, p);
            Vh = Vh.$mul(0, Vh).$sub(0, Qh.$shl(0, 1)).$mod(0, p);
          } else {
            Uh = Uh.$mul(0, Vl).$sub(0, Ql).$mod(0, p);
            Vh = Vh.$mul(0, Vl).$sub(0, $P.$mul(0, Ql)).$mod(0, p);
            Vl = Vl.$mul(0, Vl).$sub(0, Ql.$shl(0, 1)).$mod(0, p);
            Qh = Ql;
          }
        }
        Ql = Ql.$mul(0, Qh).$mod(0, p);
        Qh = Ql.$mul(0, $Q).$mod(0, p);
        Uh = Uh.$mul(0, Vl).$sub(0, Ql).$mod(0, p);
        Vl = Vh.$mul(0, Vl).$sub(0, $P.$mul(0, Ql)).$mod(0, p);
        Ql = Ql.$mul(0, Qh).$mod(0, p);
        for (j = 1; j <= s; ++j) {
          Uh = Uh.$mul(0, Vl).$mod(0, p);
          Vl = Vl.$mul(0, Vl).$sub(0, Ql.$shl(0, 1)).$mod(0, p);
          Ql = Ql.$mul(0, Ql).$mod(0, p);
        }
        return [Uh, Vl];
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (other instanceof E.ECFieldElement)
          return this.q.$eq(0, other.q) && this.x.$eq(0, other.x);
        return false;
      },
      get$hashCode: function(_) {
        return (H.Primitives_objectHashCode(this.q) ^ H.Primitives_objectHashCode(this.x)) >>> 0;
      }
    },
    ECPoint: {
      "^": "ECPointBase;curve,x,y,isCompressed,_multiplier,_preCompInfo",
      getEncoded$1: function(compressed) {
        var t1, qLength, PC, $X, PO, t2, $Y;
        t1 = this.x;
        if (t1 == null && this.y == null)
          return new Uint8Array(H._ensureNativeList([1]));
        qLength = C.JSNumber_methods._tdivFast$1(J.$add$ns(t1.get$fieldSize(), 7), 8);
        if (compressed) {
          PC = this.y.toBigInteger$0().testBit$1(0) ? 3 : 2;
          $X = E._x9IntegerToBytes(t1.x, qLength);
          t1 = H._checkLength($X.length + 1);
          PO = new Uint8Array(t1);
          t2 = C.JSInt_methods.toInt$0(PC);
          if (0 >= t1)
            return H.ioore(PO, 0);
          PO[0] = t2;
          C.NativeUint8List_methods.setAll$2(PO, 1, $X);
          return PO;
        } else {
          $X = E._x9IntegerToBytes(t1.x, qLength);
          $Y = E._x9IntegerToBytes(this.y.toBigInteger$0(), qLength);
          t1 = $X.length;
          t2 = H._checkLength(t1 + $Y.length + 1);
          PO = new Uint8Array(t2);
          if (0 >= t2)
            return H.ioore(PO, 0);
          PO[0] = 4;
          C.NativeUint8List_methods.setAll$2(PO, 1, $X);
          C.NativeUint8List_methods.setAll$2(PO, t1 + 1, $Y);
          return PO;
        }
      },
      $add: function(_, b) {
        var t1, t2, t3, t4, gamma, x3;
        t1 = this.x;
        if (t1 == null && this.y == null)
          return b;
        if (b.get$isInfinity())
          return this;
        t2 = J.getInterceptor$x(b);
        t3 = J.getInterceptor(t1);
        if (t3.$eq(t1, t2.get$x(b))) {
          if (J.$eq(this.y, t2.get$y(b)))
            return this.twice$0();
          return this.curve._infinity;
        }
        t4 = this.y;
        gamma = J.$div$n(J.$sub$n(t2.get$y(b), t4), J.$sub$n(t2.get$x(b), t1));
        x3 = gamma.square$0().$sub(0, t1).$sub(0, t2.get$x(b));
        return E.ECPoint$(this.curve, x3, J.$sub$n(J.$mul$ns(gamma, t3.$sub(t1, x3)), t4), this.isCompressed);
      },
      twice$0: function() {
        var t1, t2, t3, t4, t5, TWO, t6, t7, gamma, x3;
        t1 = this.x;
        if (t1 == null && this.y == null)
          return this;
        t2 = this.y;
        if (t2.toBigInteger$0().$eq(0, 0))
          return this.curve._infinity;
        t3 = this.curve;
        t4 = Z.BigInteger_TWO();
        t5 = t3.q;
        TWO = new E.ECFieldElement(t5, t4);
        if (t4.$ge(0, t5))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        t4 = Z.BigInteger_THREE();
        if (t4.$ge(0, t5))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        t6 = t1.q;
        t7 = t1.x.modPow$2(0, Z.BigInteger_TWO(), t6);
        if (t7.$ge(0, t6))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        gamma = new E.ECFieldElement(t6, t7).$mul(0, new E.ECFieldElement(t5, t4)).$add(0, t3._a).$div(0, J.$mul$ns(t2, TWO));
        t4 = gamma.q;
        t5 = gamma.x.modPow$2(0, Z.BigInteger_TWO(), t4);
        if (t5.$ge(0, t4))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        x3 = new E.ECFieldElement(t4, t5).$sub(0, t1.$mul(0, TWO));
        return E.ECPoint$(t3, x3, gamma.$mul(0, t1.$sub(0, x3)).$sub(0, t2), this.isCompressed);
      },
      $sub: function(_, b) {
        if (b.get$isInfinity())
          return this;
        return this.$add(0, J.$negate$n(b));
      },
      $negate: function(_) {
        return E.ECPoint$(this.curve, this.x, J.$negate$n(this.y), this.isCompressed);
      },
      ECPoint$4: function(curve, x, y, withCompression) {
        var t1 = x == null;
        if (!(!t1 && y == null))
          t1 = t1 && y != null;
        else
          t1 = true;
        if (t1)
          throw H.wrapException(P.ArgumentError$("Exactly one of the field elements is null"));
      },
      static: {ECPoint$: function(curve, x, y, withCompression) {
          var t1 = new E.ECPoint(curve, x, y, withCompression, E._WNafMultiplier$closure(), null);
          t1.ECPoint$4(curve, x, y, withCompression);
          return t1;
        }}
    },
    ECCurve: {
      "^": "ECCurveBase;q,_infinity,_a,_b",
      get$fieldSize: function() {
        return this.q.bitLength$0(0);
      },
      get$infinity: function() {
        return this._infinity;
      },
      fromBigInteger$1: function(x) {
        var t1 = this.q;
        if (x.$ge(0, t1))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        return new E.ECFieldElement(t1, x);
      },
      createPoint$3: function(x, y, withCompression) {
        var t1 = this.q;
        if (x.$ge(0, t1))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        if (y.$ge(0, t1))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        return E.ECPoint$(this, new E.ECFieldElement(t1, x), new E.ECFieldElement(t1, y), withCompression);
      },
      decompressPoint$2: function(yTilde, X1) {
        var t1, x, beta, betaValue, t2;
        t1 = this.q;
        x = new E.ECFieldElement(t1, X1);
        if (X1.$ge(0, t1))
          H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        beta = x.$mul(0, x.$mul(0, x).$add(0, this._a)).$add(0, this._b).sqrt$0();
        if (beta == null)
          throw H.wrapException(P.ArgumentError$("Invalid point compression"));
        betaValue = beta.x;
        if ((betaValue.testBit$1(0) ? 1 : 0) !== yTilde) {
          t2 = t1.$sub(0, betaValue);
          beta = new E.ECFieldElement(t1, t2);
          if (t2.$ge(0, t1))
            H.throwExpression(P.ArgumentError$("Value x must be smaller than q"));
        }
        return E.ECPoint$(this, x, beta, true);
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (other instanceof E.ECCurve)
          return this.q.$eq(0, other.q) && J.$eq(this._a, other._a) && J.$eq(this._b, other._b);
        return false;
      },
      get$hashCode: function(_) {
        return (J.get$hashCode$(this._a) ^ J.get$hashCode$(this._b) ^ H.Primitives_objectHashCode(this.q)) >>> 0;
      }
    },
    _WNafPreCompInfo: {
      "^": "Object;preComp@,twiceP@"
    }
  }], ["cipher.key_generators.ec_key_generator", "package:cipher/key_generators/ec_key_generator.dart",, S, {
    "^": "",
    ECKeyGenerator: {
      "^": "Object;_params,_random",
      init$1: function(params) {
        var ecparams;
        this._random = params.random;
        ecparams = params.parameters;
        this._params = ecparams.get$domainParameters();
      },
      generateKeyPair$0: function() {
        var n, nBitLength, d, $Q, t1;
        n = this._params.get$n();
        nBitLength = n.bitLength$0(0);
        do
          d = this._random.nextBigInteger$1(nBitLength);
        while (d.$eq(0, Z.BigInteger_ZERO()) || d.$ge(0, n));
        $Q = this._params.get$G().$mul(0, d);
        t1 = this._params;
        t1 = new S.AsymmetricKeyPair(new Q.ECPublicKey($Q, t1), new Q.ECPrivateKey(d, t1));
        t1.$builtinTypeInfo = [null, null];
        return t1;
      }
    }
  }], ["cipher.params.key_generators.ec_key_generator_parameters", "package:cipher/params/key_generators/ec_key_generator_parameters.dart",, Z, {
    "^": "",
    ECKeyGeneratorParameters: {
      "^": "KeyGeneratorParameters;_domainParameters,bitStrength",
      get$domainParameters: function() {
        return this._domainParameters;
      }
    }
  }], ["cipher.params.key_generators.key_generator_parameters", "package:cipher/params/key_generators/key_generator_parameters.dart",, X, {
    "^": "",
    KeyGeneratorParameters: {
      "^": "Object;"
    }
  }], ["cipher.params.key_parameter", "package:cipher/params/key_parameter.dart",, E, {
    "^": "",
    KeyParameter: {
      "^": "CipherParameters;key"
    }
  }], ["cipher.params.parameters_with_iv", "package:cipher/params/parameters_with_iv.dart",, Y, {
    "^": "",
    ParametersWithIV: {
      "^": "Object;iv,parameters<"
    }
  }], ["cipher.params.parameters_with_random", "package:cipher/params/parameters_with_random.dart",, A, {
    "^": "",
    ParametersWithRandom: {
      "^": "Object;parameters<,random"
    }
  }], ["cipher.random.block_ctr_random", "package:cipher/random/block_ctr_random.dart",, Y, {
    "^": "",
    BlockCtrRandom: {
      "^": "SecureRandomBase;cipher,_input,_output,_used",
      seed$1: function(_, params) {
        this._used = this._output.length;
        C.NativeUint8List_methods.setAll$2(this._input, 0, params.iv);
        this.cipher.init$2(true, params.parameters);
      },
      nextUint8$0: function() {
        var t1, t2;
        t1 = this._used;
        t2 = this._output;
        if (t1 === t2.length) {
          this.cipher.processBlock$4(this._input, 0, t2, 0);
          this._used = 0;
          this._incrementInput$0();
        }
        t1 = this._output;
        t2 = this._used++;
        if (t2 >= t1.length)
          return H.ioore(t1, t2);
        return t1[t2] & 255;
      },
      _incrementInput$0: function() {
        var t1, offset, offset0;
        t1 = this._input;
        offset = t1.length;
        offset0 = offset;
        do {
          --offset0;
          if (offset0 < 0)
            return H.ioore(t1, offset0);
          t1[offset0] = t1[offset0] + 1;
        } while (t1[offset0] === 0);
      }
    }
  }], ["cipher.random.secure_random_base", "package:cipher/random/secure_random_base.dart",, S, {
    "^": "",
    SecureRandomBase: {
      "^": "Object;",
      nextBigInteger$1: function(bitLength) {
        return Z.BigInteger_BigInteger$fromBytes(1, this._randomBits$1(bitLength));
      },
      _randomBits$1: function(numBits) {
        var t1, numBytes, randomBits, i, t2;
        t1 = J.getInterceptor$in(numBits);
        if (t1.$lt(numBits, 0))
          throw H.wrapException(P.ArgumentError$("numBits must be non-negative"));
        numBytes = C.JSNumber_methods._tdivFast$1(t1.$add(numBits, 7), 8);
        t1 = H._checkLength(numBytes);
        randomBits = new Uint8Array(t1);
        if (numBytes > 0) {
          for (i = 0; i < numBytes; ++i) {
            t2 = this.nextUint8$0();
            if (i >= t1)
              return H.ioore(randomBits, i);
            randomBits[i] = t2;
          }
          if (typeof numBits !== "number")
            return H.iae(numBits);
          if (0 >= t1)
            return H.ioore(randomBits, 0);
          randomBits[0] = randomBits[0] & C.JSInt_methods.$shl(1, 8 - (8 * numBytes - numBits)) - 1;
        }
        return randomBits;
      }
    }
  }], ["cipher.src.ufixnum", "package:cipher/src/ufixnum.dart",, R, {
    "^": "",
    shiftl32: function(x, n) {
      n &= 31;
      return J.$and$in(J.$shl$n(J.$and$in(x, $.get$_MASK32_HI_BITS()[n]), n), 4294967295);
    },
    rotr32: function(x, n) {
      n &= 31;
      return J.$or$n(J.$shr$n(x, n), R.shiftl32(x, 32 - n));
    },
    pack32: function(x, out, offset, endian) {
      var t1;
      if (!J.getInterceptor(out).$isByteData) {
        t1 = out.buffer;
        out = (t1 && C.NativeByteBuffer_methods).asByteData$2(t1, 0, null);
      }
      H.interceptedTypeCast(out, "$isByteData").setUint32(offset, x, C.Endianness_true === endian);
    },
    unpack32: function(inp, offset, endian) {
      var t1;
      if (!J.getInterceptor(inp).$isByteData) {
        t1 = inp.buffer;
        inp = (t1 && C.NativeByteBuffer_methods).asByteData$2(t1, 0, null);
      }
      return H.interceptedTypeCast(inp, "$isByteData").getUint32(offset, C.Endianness_true === endian);
    },
    Register64: {
      "^": "Object;_hi32<,_lo32<",
      $eq: function(_, y) {
        if (y == null)
          return false;
        return J.$eq(this._hi32, y.get$_hi32()) && J.$eq(this._lo32, y.get$_lo32());
      },
      $lt: function(_, y) {
        var t1;
        if (!J.$lt$n(this._hi32, y.get$_hi32()))
          t1 = J.$eq(this._hi32, y.get$_hi32()) && J.$lt$n(this._lo32, y.get$_lo32());
        else
          t1 = true;
        return t1;
      },
      $le: function(_, y) {
        return this.$lt(0, y) || this.$eq(0, y);
      },
      $gt: function(_, y) {
        var t1;
        if (!J.$gt$n(this._hi32, y.get$_hi32()))
          t1 = J.$eq(this._hi32, y.get$_hi32()) && J.$gt$n(this._lo32, y.get$_lo32());
        else
          t1 = true;
        return t1;
      },
      $ge: function(_, y) {
        return this.$gt(0, y) || this.$eq(0, y);
      },
      $set$2: function(hiOrLo32OrY, lo32) {
        if (hiOrLo32OrY instanceof R.Register64) {
          this._hi32 = hiOrLo32OrY._hi32;
          this._lo32 = hiOrLo32OrY._lo32;
        } else {
          this._hi32 = 0;
          this._lo32 = hiOrLo32OrY;
        }
      },
      $set$1: function(hiOrLo32OrY) {
        return this.$set$2(hiOrLo32OrY, null);
      },
      sum$1: [function(y) {
        var t1, slo32, t2, carry;
        t1 = this._lo32;
        if (typeof y === "number" && Math.floor(y) === y) {
          slo32 = J.$add$ns(t1, (y & 4294967295) >>> 0);
          t1 = J.getInterceptor$in(slo32);
          t2 = t1.$and(slo32, 4294967295);
          this._lo32 = t2;
          if (!t1.$eq(slo32, t2)) {
            t1 = J.$add$ns(this._hi32, 1);
            this._hi32 = t1;
            this._hi32 = J.$and$in(t1, 4294967295);
          }
        } else {
          slo32 = J.$add$ns(t1, y.get$_lo32());
          t1 = J.getInterceptor$in(slo32);
          t2 = t1.$and(slo32, 4294967295);
          this._lo32 = t2;
          carry = !t1.$eq(slo32, t2) ? 1 : 0;
          this._hi32 = (H.intTypeCast(J.$add$ns(J.$add$ns(this._hi32, y.get$_hi32()), carry)) & 4294967295) >>> 0;
        }
      }, "call$1", "get$sum", 2, 0, 20, 32, []],
      toString$0: function(_) {
        var sb, t1;
        sb = new P.StringBuffer("");
        this._padWrite$2(sb, this._hi32);
        this._padWrite$2(sb, this._lo32);
        t1 = sb._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      _padWrite$2: function(sb, value) {
        var str, i;
        str = J.toRadixString$1$n(value, 16);
        for (i = 8 - str.length; i > 0; --i)
          sb._contents += "0";
        sb._contents += str;
      }
    }
  }], ["dart._internal", "dart:_internal",, H, {
    "^": "",
    IterableElementError_noElement: function() {
      return new P.StateError("No element");
    },
    IterableElementError_tooFew: function() {
      return new P.StateError("Too few elements");
    },
    Sort__doSort: function(a, left, right, compare) {
      if (J.$le$in(J.$sub$in(right, left), 32))
        H.Sort__insertionSort(a, left, right, compare);
      else
        H.Sort__dualPivotQuicksort(a, left, right, compare);
    },
    Sort__insertionSort: function(a, left, right, compare) {
      var i, t1, t2, el, j, t3;
      for (i = J.$add$ins(left, 1), t1 = J.getInterceptor$asx(a); t2 = J.getInterceptor$in(i), t2.$le(i, right); i = t2.$add(i, 1)) {
        el = t1.$index(a, i);
        j = i;
        while (true) {
          t3 = J.getInterceptor$in(j);
          if (!(t3.$gt(j, left) && J.$gt$in(compare.call$2(t1.$index(a, t3.$sub(j, 1)), el), 0)))
            break;
          t1.$indexSet(a, j, t1.$index(a, t3.$sub(j, 1)));
          j = t3.$sub(j, 1);
        }
        t1.$indexSet(a, j, el);
      }
    },
    Sort__dualPivotQuicksort: function(a, left, right, compare) {
      var t1, sixth, t2, index1, index5, index3, t3, index2, index4, el1, el2, el3, el4, el5, t0, less, great, k, ak, comp, t4, less0, great0, pivots_are_equal;
      t1 = J.getInterceptor$in(right);
      sixth = J.$tdiv$n(J.$add$ins(t1.$sub(right, left), 1), 6);
      t2 = J.getInterceptor$ins(left);
      index1 = t2.$add(left, sixth);
      index5 = t1.$sub(right, sixth);
      index3 = J.$tdiv$n(t2.$add(left, right), 2);
      t3 = J.getInterceptor$in(index3);
      index2 = t3.$sub(index3, sixth);
      index4 = t3.$add(index3, sixth);
      t3 = J.getInterceptor$asx(a);
      el1 = t3.$index(a, index1);
      el2 = t3.$index(a, index2);
      el3 = t3.$index(a, index3);
      el4 = t3.$index(a, index4);
      el5 = t3.$index(a, index5);
      if (J.$gt$in(compare.call$2(el1, el2), 0)) {
        t0 = el2;
        el2 = el1;
        el1 = t0;
      }
      if (J.$gt$in(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      if (J.$gt$in(compare.call$2(el1, el3), 0)) {
        t0 = el3;
        el3 = el1;
        el1 = t0;
      }
      if (J.$gt$in(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (J.$gt$in(compare.call$2(el1, el4), 0)) {
        t0 = el4;
        el4 = el1;
        el1 = t0;
      }
      if (J.$gt$in(compare.call$2(el3, el4), 0)) {
        t0 = el4;
        el4 = el3;
        el3 = t0;
      }
      if (J.$gt$in(compare.call$2(el2, el5), 0)) {
        t0 = el5;
        el5 = el2;
        el2 = t0;
      }
      if (J.$gt$in(compare.call$2(el2, el3), 0)) {
        t0 = el3;
        el3 = el2;
        el2 = t0;
      }
      if (J.$gt$in(compare.call$2(el4, el5), 0)) {
        t0 = el5;
        el5 = el4;
        el4 = t0;
      }
      t3.$indexSet(a, index1, el1);
      t3.$indexSet(a, index3, el3);
      t3.$indexSet(a, index5, el5);
      t3.$indexSet(a, index2, t3.$index(a, left));
      t3.$indexSet(a, index4, t3.$index(a, right));
      less = t2.$add(left, 1);
      great = t1.$sub(right, 1);
      if (J.$eq(compare.call$2(el2, el4), 0)) {
        for (k = less; t1 = J.getInterceptor$in(k), t1.$le(k, great); k = t1.$add(k, 1)) {
          ak = t3.$index(a, k);
          comp = compare.call$2(ak, el2);
          t2 = J.getInterceptor(comp);
          if (t2.$eq(comp, 0))
            continue;
          if (t2.$lt(comp, 0)) {
            if (!t1.$eq(k, less)) {
              t3.$indexSet(a, k, t3.$index(a, less));
              t3.$indexSet(a, less, ak);
            }
            less = J.$add$ins(less, 1);
          } else
            for (; true;) {
              comp = compare.call$2(t3.$index(a, great), el2);
              t2 = J.getInterceptor$in(comp);
              if (t2.$gt(comp, 0)) {
                great = J.$sub$in(great, 1);
                continue;
              } else {
                t4 = J.getInterceptor$in(great);
                if (t2.$lt(comp, 0)) {
                  t3.$indexSet(a, k, t3.$index(a, less));
                  less0 = J.$add$ins(less, 1);
                  t3.$indexSet(a, less, t3.$index(a, great));
                  great0 = t4.$sub(great, 1);
                  t3.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                  break;
                } else {
                  t3.$indexSet(a, k, t3.$index(a, great));
                  great0 = t4.$sub(great, 1);
                  t3.$indexSet(a, great, ak);
                  great = great0;
                  break;
                }
              }
            }
        }
        pivots_are_equal = true;
      } else {
        for (k = less; t1 = J.getInterceptor$in(k), t1.$le(k, great); k = t1.$add(k, 1)) {
          ak = t3.$index(a, k);
          if (J.$lt$in(compare.call$2(ak, el2), 0)) {
            if (!t1.$eq(k, less)) {
              t3.$indexSet(a, k, t3.$index(a, less));
              t3.$indexSet(a, less, ak);
            }
            less = J.$add$ins(less, 1);
          } else if (J.$gt$in(compare.call$2(ak, el4), 0))
            for (; true;)
              if (J.$gt$in(compare.call$2(t3.$index(a, great), el4), 0)) {
                great = J.$sub$in(great, 1);
                if (J.$lt$in(great, k))
                  break;
                continue;
              } else {
                t2 = J.getInterceptor$in(great);
                if (J.$lt$in(compare.call$2(t3.$index(a, great), el2), 0)) {
                  t3.$indexSet(a, k, t3.$index(a, less));
                  less0 = J.$add$ins(less, 1);
                  t3.$indexSet(a, less, t3.$index(a, great));
                  great0 = t2.$sub(great, 1);
                  t3.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                } else {
                  t3.$indexSet(a, k, t3.$index(a, great));
                  great0 = t2.$sub(great, 1);
                  t3.$indexSet(a, great, ak);
                  great = great0;
                }
                break;
              }
        }
        pivots_are_equal = false;
      }
      t1 = J.getInterceptor$in(less);
      t3.$indexSet(a, left, t3.$index(a, t1.$sub(less, 1)));
      t3.$indexSet(a, t1.$sub(less, 1), el2);
      t2 = J.getInterceptor$ins(great);
      t3.$indexSet(a, right, t3.$index(a, t2.$add(great, 1)));
      t3.$indexSet(a, t2.$add(great, 1), el4);
      H.Sort__doSort(a, left, t1.$sub(less, 2), compare);
      H.Sort__doSort(a, t2.$add(great, 2), right, compare);
      if (pivots_are_equal)
        return;
      if (t1.$lt(less, index1) && t2.$gt(great, index5)) {
        for (; J.$eq(compare.call$2(t3.$index(a, less), el2), 0);)
          less = J.$add$ins(less, 1);
        for (; J.$eq(compare.call$2(t3.$index(a, great), el4), 0);)
          great = J.$sub$in(great, 1);
        for (k = less; t1 = J.getInterceptor$in(k), t1.$le(k, great); k = t1.$add(k, 1)) {
          ak = t3.$index(a, k);
          if (J.$eq(compare.call$2(ak, el2), 0)) {
            if (!t1.$eq(k, less)) {
              t3.$indexSet(a, k, t3.$index(a, less));
              t3.$indexSet(a, less, ak);
            }
            less = J.$add$ins(less, 1);
          } else if (J.$eq(compare.call$2(ak, el4), 0))
            for (; true;)
              if (J.$eq(compare.call$2(t3.$index(a, great), el4), 0)) {
                great = J.$sub$in(great, 1);
                if (J.$lt$in(great, k))
                  break;
                continue;
              } else {
                t2 = J.getInterceptor$in(great);
                if (J.$lt$in(compare.call$2(t3.$index(a, great), el2), 0)) {
                  t3.$indexSet(a, k, t3.$index(a, less));
                  less0 = J.$add$ins(less, 1);
                  t3.$indexSet(a, less, t3.$index(a, great));
                  great0 = t2.$sub(great, 1);
                  t3.$indexSet(a, great, ak);
                  great = great0;
                  less = less0;
                } else {
                  t3.$indexSet(a, k, t3.$index(a, great));
                  great0 = t2.$sub(great, 1);
                  t3.$indexSet(a, great, ak);
                  great = great0;
                }
                break;
              }
        }
        H.Sort__doSort(a, less, great, compare);
      } else
        H.Sort__doSort(a, less, great, compare);
    },
    CodeUnits: {
      "^": "UnmodifiableListBase;__internal$_string",
      get$length: function(_) {
        return this.__internal$_string.length;
      },
      $index: function(_, i) {
        return C.JSString_methods.codeUnitAt$1(this.__internal$_string, i);
      },
      $asUnmodifiableListBase: function() {
        return [P.$int];
      },
      $asListBase: function() {
        return [P.$int];
      },
      $asObject_ListMixin: function() {
        return [P.$int];
      },
      $asList: function() {
        return [P.$int];
      },
      $asIterable: function() {
        return [P.$int];
      }
    },
    ListIterable: {
      "^": "Iterable;",
      get$iterator: function(_) {
        var t1 = new H.ListIterator(this, this.get$length(this), 0, null);
        t1.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "ListIterable", 0)];
        return t1;
      },
      forEach$1: function(_, action) {
        var $length, i;
        $length = this.get$length(this);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          action.call$1(this.elementAt$1(0, i));
          if ($length !== this.get$length(this))
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
      },
      get$isEmpty: function(_) {
        return J.$eq(this.get$length(this), 0);
      },
      get$first: function(_) {
        if (J.$eq(this.get$length(this), 0))
          throw H.wrapException(H.IterableElementError_noElement());
        return this.elementAt$1(0, 0);
      },
      get$last: function(_) {
        if (J.$eq(this.get$length(this), 0))
          throw H.wrapException(H.IterableElementError_noElement());
        return this.elementAt$1(0, J.$sub$n(this.get$length(this), 1));
      },
      contains$1: function(_, element) {
        var $length, i;
        $length = this.get$length(this);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          if (J.$eq(this.elementAt$1(0, i), element))
            return true;
          if ($length !== this.get$length(this))
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
        return false;
      },
      join$1: function(_, separator) {
        var $length, t1, first, buffer, i;
        $length = this.get$length(this);
        if (separator.length !== 0) {
          t1 = J.getInterceptor($length);
          if (t1.$eq($length, 0))
            return "";
          first = H.S(this.elementAt$1(0, 0));
          if (!t1.$eq($length, this.get$length(this)))
            throw H.wrapException(new P.ConcurrentModificationError(this));
          buffer = new P.StringBuffer(first);
          if (typeof $length !== "number")
            return H.iae($length);
          i = 1;
          for (; i < $length; ++i) {
            buffer._contents += separator;
            buffer._contents += H.S(this.elementAt$1(0, i));
            if ($length !== this.get$length(this))
              throw H.wrapException(new P.ConcurrentModificationError(this));
          }
          t1 = buffer._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        } else {
          buffer = new P.StringBuffer("");
          if (typeof $length !== "number")
            return H.iae($length);
          i = 0;
          for (; i < $length; ++i) {
            buffer._contents += H.S(this.elementAt$1(0, i));
            if ($length !== this.get$length(this))
              throw H.wrapException(new P.ConcurrentModificationError(this));
          }
          t1 = buffer._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }
      },
      where$1: function(_, test) {
        return this.super$Iterable$where$1(this, test);
      },
      map$1: function(_, f) {
        var t1 = new H.MappedListIterable(this, f);
        t1.$builtinTypeInfo = [null, null];
        return t1;
      },
      fold$2: function(_, initialValue, combine) {
        var $length, value, i;
        $length = this.get$length(this);
        if (typeof $length !== "number")
          return H.iae($length);
        value = initialValue;
        i = 0;
        for (; i < $length; ++i) {
          value = combine.call$2(value, this.elementAt$1(0, i));
          if ($length !== this.get$length(this))
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
        return value;
      },
      toList$1$growable: function(_, growable) {
        var result, t1, i;
        if (growable) {
          result = [];
          result.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "ListIterable", 0)];
          C.JSArray_methods.set$length(result, this.get$length(this));
        } else {
          t1 = this.get$length(this);
          if (typeof t1 !== "number")
            return H.iae(t1);
          result = Array(t1);
          result.fixed$length = Array;
          result.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "ListIterable", 0)];
        }
        i = 0;
        while (true) {
          t1 = this.get$length(this);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          t1 = this.elementAt$1(0, i);
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = t1;
          ++i;
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      $isEfficientLength: 1
    },
    SubListIterable: {
      "^": "ListIterable;_iterable,_start,_endOrLength",
      get$_endIndex: function() {
        var $length, t1;
        $length = J.get$length$asx(this._iterable);
        t1 = this._endOrLength;
        if (t1 == null || J.$gt$n(t1, $length))
          return $length;
        return t1;
      },
      get$_startIndex: function() {
        var $length, t1;
        $length = J.get$length$asx(this._iterable);
        t1 = this._start;
        if (J.$gt$n(t1, $length))
          return $length;
        return t1;
      },
      get$length: function(_) {
        var $length, t1, t2;
        $length = J.get$length$asx(this._iterable);
        t1 = this._start;
        if (J.$ge$n(t1, $length))
          return 0;
        t2 = this._endOrLength;
        if (t2 == null || J.$ge$n(t2, $length))
          return J.$sub$n($length, t1);
        return J.$sub$n(t2, t1);
      },
      elementAt$1: function(_, index) {
        var realIndex = J.$add$ns(this.get$_startIndex(), index);
        if (J.$lt$n(index, 0) || J.$ge$n(realIndex, this.get$_endIndex()))
          throw H.wrapException(P.IndexError$(index, this, "index", null, null));
        return J.elementAt$1$ax(this._iterable, realIndex);
      },
      take$1: function(_, count) {
        var t1, t2, newEnd;
        if (J.$lt$in(count, 0))
          H.throwExpression(P.RangeError$range(count, 0, null, "count", null));
        t1 = this._endOrLength;
        t2 = this._start;
        if (t1 == null)
          return H.SubListIterable$(this._iterable, t2, J.$add$ins(t2, count), H.getTypeArgumentByIndex(this, 0));
        else {
          newEnd = J.$add$ins(t2, count);
          if (J.$lt$in(t1, newEnd))
            return this;
          return H.SubListIterable$(this._iterable, t2, newEnd, H.getTypeArgumentByIndex(this, 0));
        }
      },
      toList$1$growable: function(_, growable) {
        var start, t1, t2, end, end0, $length, result, t3, i, t4;
        start = this._start;
        t1 = this._iterable;
        t2 = J.getInterceptor$asx(t1);
        end = t2.get$length(t1);
        end0 = this._endOrLength;
        if (end0 != null && J.$lt$n(end0, end))
          end = end0;
        $length = J.$sub$n(end, start);
        if (J.$lt$n($length, 0))
          $length = 0;
        if (growable) {
          result = [];
          result.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
          C.JSArray_methods.set$length(result, $length);
        } else {
          if (typeof $length !== "number")
            return H.iae($length);
          result = Array($length);
          result.fixed$length = Array;
          result.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
        }
        if (typeof $length !== "number")
          return H.iae($length);
        t3 = J.getInterceptor$ns(start);
        i = 0;
        for (; i < $length; ++i) {
          t4 = t2.elementAt$1(t1, t3.$add(start, i));
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = t4;
          if (J.$lt$n(t2.get$length(t1), end))
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      SubListIterable$3: function(_iterable, _start, _endOrLength, $E) {
        var t1, t2, t3;
        t1 = this._start;
        t2 = J.getInterceptor$n(t1);
        if (t2.$lt(t1, 0))
          H.throwExpression(P.RangeError$range(t1, 0, null, "start", null));
        t3 = this._endOrLength;
        if (t3 != null) {
          if (J.$lt$n(t3, 0))
            H.throwExpression(P.RangeError$range(t3, 0, null, "end", null));
          if (t2.$gt(t1, t3))
            throw H.wrapException(P.RangeError$range(t1, 0, t3, "start", null));
        }
      },
      static: {SubListIterable$: function(_iterable, _start, _endOrLength, $E) {
          var t1 = new H.SubListIterable(_iterable, _start, _endOrLength);
          t1.$builtinTypeInfo = [$E];
          t1.SubListIterable$3(_iterable, _start, _endOrLength, $E);
          return t1;
        }}
    },
    ListIterator: {
      "^": "Object;_iterable,__internal$_length,_index,__internal$_current",
      get$current: function() {
        return this.__internal$_current;
      },
      moveNext$0: function() {
        var t1, t2, $length, t3;
        t1 = this._iterable;
        t2 = J.getInterceptor$asx(t1);
        $length = t2.get$length(t1);
        if (!J.$eq(this.__internal$_length, $length))
          throw H.wrapException(new P.ConcurrentModificationError(t1));
        t3 = this._index;
        if (typeof $length !== "number")
          return H.iae($length);
        if (t3 >= $length) {
          this.__internal$_current = null;
          return false;
        }
        this.__internal$_current = t2.elementAt$1(t1, t3);
        ++this._index;
        return true;
      }
    },
    MappedIterable: {
      "^": "Iterable;_iterable,_f",
      get$iterator: function(_) {
        var t1 = new H.MappedIterator(null, J.get$iterator$ax(this._iterable), this._f);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      get$length: function(_) {
        return J.get$length$asx(this._iterable);
      },
      get$isEmpty: function(_) {
        return J.get$isEmpty$asx(this._iterable);
      },
      get$first: function(_) {
        return this._f$1(J.get$first$ax(this._iterable));
      },
      get$last: function(_) {
        return this._f$1(J.get$last$ax(this._iterable));
      },
      elementAt$1: function(_, index) {
        return this._f$1(J.elementAt$1$ax(this._iterable, index));
      },
      _f$1: function(arg0) {
        return this._f.call$1(arg0);
      },
      $asIterable: function($S, $T) {
        return [$T];
      },
      static: {MappedIterable_MappedIterable: function(iterable, $function, $S, $T) {
          var t1;
          if (!!J.getInterceptor(iterable).$isEfficientLength) {
            t1 = new H.EfficientLengthMappedIterable(iterable, $function);
            t1.$builtinTypeInfo = [$S, $T];
            return t1;
          }
          t1 = new H.MappedIterable(iterable, $function);
          t1.$builtinTypeInfo = [$S, $T];
          return t1;
        }}
    },
    EfficientLengthMappedIterable: {
      "^": "MappedIterable;_iterable,_f",
      $isEfficientLength: 1
    },
    MappedIterator: {
      "^": "Iterator;__internal$_current,_iterator,_f",
      moveNext$0: function() {
        var t1 = this._iterator;
        if (t1.moveNext$0()) {
          this.__internal$_current = this._f$1(t1.get$current());
          return true;
        }
        this.__internal$_current = null;
        return false;
      },
      get$current: function() {
        return this.__internal$_current;
      },
      _f$1: function(arg0) {
        return this._f.call$1(arg0);
      },
      $asIterator: function($S, $T) {
        return [$T];
      }
    },
    MappedListIterable: {
      "^": "ListIterable;_source,_f",
      get$length: function(_) {
        return J.get$length$asx(this._source);
      },
      elementAt$1: function(_, index) {
        return this._f$1(J.elementAt$1$ax(this._source, index));
      },
      _f$1: function(arg0) {
        return this._f.call$1(arg0);
      },
      $asListIterable: function($S, $T) {
        return [$T];
      },
      $asIterable: function($S, $T) {
        return [$T];
      },
      $isEfficientLength: 1
    },
    WhereIterable: {
      "^": "Iterable;_iterable,_f",
      get$iterator: function(_) {
        var t1 = new H.WhereIterator(J.get$iterator$ax(this._iterable), this._f);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      }
    },
    WhereIterator: {
      "^": "Iterator;_iterator,_f",
      moveNext$0: function() {
        for (var t1 = this._iterator; t1.moveNext$0();)
          if (this._f$1(t1.get$current()) === true)
            return true;
        return false;
      },
      get$current: function() {
        return this._iterator.get$current();
      },
      _f$1: function(arg0) {
        return this._f.call$1(arg0);
      }
    },
    FixedLengthListMixin: {
      "^": "Object;",
      set$length: function(receiver, newLength) {
        throw H.wrapException(new P.UnsupportedError("Cannot change the length of a fixed-length list"));
      },
      add$1: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot add to a fixed-length list"));
      },
      addAll$1: function(receiver, iterable) {
        throw H.wrapException(new P.UnsupportedError("Cannot add to a fixed-length list"));
      },
      remove$1: function(receiver, element) {
        throw H.wrapException(new P.UnsupportedError("Cannot remove from a fixed-length list"));
      },
      clear$0: function(receiver) {
        throw H.wrapException(new P.UnsupportedError("Cannot clear a fixed-length list"));
      },
      removeAt$1: function(receiver, index) {
        throw H.wrapException(new P.UnsupportedError("Cannot remove from a fixed-length list"));
      },
      removeRange$2: function(receiver, start, end) {
        throw H.wrapException(new P.UnsupportedError("Cannot remove from a fixed-length list"));
      }
    },
    UnmodifiableListMixin: {
      "^": "Object;",
      $indexSet: function(_, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify an unmodifiable list"));
      },
      set$length: function(_, newLength) {
        throw H.wrapException(new P.UnsupportedError("Cannot change the length of an unmodifiable list"));
      },
      add$1: function(_, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot add to an unmodifiable list"));
      },
      addAll$1: function(_, iterable) {
        throw H.wrapException(new P.UnsupportedError("Cannot add to an unmodifiable list"));
      },
      remove$1: function(_, element) {
        throw H.wrapException(new P.UnsupportedError("Cannot remove from an unmodifiable list"));
      },
      clear$0: function(_) {
        throw H.wrapException(new P.UnsupportedError("Cannot clear an unmodifiable list"));
      },
      removeAt$1: function(_, index) {
        throw H.wrapException(new P.UnsupportedError("Cannot remove from an unmodifiable list"));
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify an unmodifiable list"));
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      removeRange$2: function(_, start, end) {
        throw H.wrapException(new P.UnsupportedError("Cannot remove from an unmodifiable list"));
      },
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    UnmodifiableListBase: {
      "^": "ListBase+UnmodifiableListMixin;",
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    Symbol: {
      "^": "Object;_name<",
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H.Symbol && J.$eq(this._name, other._name);
      },
      get$hashCode: function(_) {
        var t1 = J.get$hashCode$(this._name);
        if (typeof t1 !== "number")
          return H.iae(t1);
        return 536870911 & 664597 * t1;
      },
      toString$0: function(_) {
        return "Symbol(\"" + H.S(this._name) + "\")";
      },
      $isSymbol0: 1
    }
  }], ["dart._js_mirrors", "dart:_js_mirrors",, H, {
    "^": "",
    n: function(symbol) {
      return symbol.get$_name();
    },
    s: function($name) {
      if ($name == null)
        return;
      return new H.Symbol($name);
    },
    reflect: [function(reflectee) {
      if (reflectee instanceof H.Closure)
        return new H.JsClosureMirror(reflectee, 4);
      else
        return new H.JsInstanceMirror(reflectee, 4);
    }, "call$1", "reflect$closure", 2, 0, 191, 33, []],
    reflectClassByMangledName: function(mangledName) {
      var result, unmangledName, t1;
      result = $.get$mangledGlobalNames()._jsMangledNames[mangledName];
      unmangledName = typeof result !== "string" ? null : result;
      t1 = J.getInterceptor(mangledName);
      if (t1.$eq(mangledName, "dynamic"))
        return $.get$JsMirrorSystem__dynamicType();
      if (t1.$eq(mangledName, "void"))
        return $.get$JsMirrorSystem__voidType();
      return H.reflectClassByName(H.s(unmangledName == null ? mangledName : unmangledName), mangledName);
    },
    reflectClassByName: function(symbol, mangledName) {
      var t1, mirror, typeArgIndex, t2, originalDeclaration, $constructor, descriptor, fields, fieldsMetadata, mixins, classMirror, typeVariables, typeArguments, i;
      t1 = $.classMirrors;
      if (t1 == null) {
        t1 = H.JsCache_allocate();
        $.classMirrors = t1;
      }
      mirror = t1[mangledName];
      if (mirror != null)
        return mirror;
      t1 = J.getInterceptor$asx(mangledName);
      typeArgIndex = t1.indexOf$1(mangledName, "<");
      t2 = J.getInterceptor(typeArgIndex);
      if (!t2.$eq(typeArgIndex, -1)) {
        originalDeclaration = H.reflectClassByMangledName(t1.substring$2(mangledName, 0, typeArgIndex)).get$originalDeclaration();
        if (!!originalDeclaration.$isJsTypedefMirror)
          throw H.wrapException(new P.UnimplementedError(null));
        mirror = new H.JsTypeBoundClassMirror(originalDeclaration, t1.substring$2(mangledName, t2.$add(typeArgIndex, 1), J.$sub$n(t1.get$length(mangledName), 1)), null, null, null, null, null, null, null, null, null, null, null, null, null, originalDeclaration.get$simpleName());
        $.classMirrors[mangledName] = mirror;
        return mirror;
      }
      $constructor = init.allClasses[mangledName];
      if ($constructor == null)
        throw H.wrapException(new P.UnsupportedError("Cannot find class for: " + H.S(H.n(symbol))));
      descriptor = $constructor["@"];
      if (descriptor == null) {
        fields = null;
        fieldsMetadata = null;
      } else if ("$$isTypedef" in descriptor) {
        mirror = new H.JsTypedefMirror(mangledName, null, symbol);
        mirror.referent = new H.JsFunctionTypeMirror(init.types[descriptor.$typedefType], null, null, null, mirror);
        fields = null;
        fieldsMetadata = null;
      } else {
        fields = descriptor["^"];
        t1 = J.getInterceptor(fields);
        if (!!t1.$isList) {
          fieldsMetadata = t1.getRange$2(fields, 1, t1.get$length(fields)).toList$0(0);
          fields = t1.$index(fields, 0);
        } else
          fieldsMetadata = null;
        if (typeof fields !== "string")
          fields = "";
      }
      if (mirror == null) {
        t1 = J.split$1$s(fields, ";");
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        mixins = J.split$1$s(t1[0], "+");
        if (mixins.length > 1 && $.get$mangledGlobalNames().$index(0, mangledName) == null)
          mirror = H.reflectMixinApplication(mixins, mangledName);
        else {
          classMirror = new H.JsClassMirror(mangledName, $constructor, fields, fieldsMetadata, H.JsCache_allocate(), null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, symbol);
          typeVariables = $constructor.prototype["<>"];
          if (typeVariables == null || typeVariables.length === 0)
            mirror = classMirror;
          else {
            for (t1 = typeVariables.length, typeArguments = "dynamic", i = 1; i < t1; ++i)
              typeArguments += ",dynamic";
            mirror = new H.JsTypeBoundClassMirror(classMirror, typeArguments, null, null, null, null, null, null, null, null, null, null, null, null, null, classMirror.simpleName);
          }
        }
      }
      $.classMirrors[mangledName] = mirror;
      return mirror;
    },
    filterMethods: function(methods) {
      var result, t1, _i, method;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = methods.length, _i = 0; _i < methods.length; methods.length === t1 || (0, H.throwConcurrentModificationError)(methods), ++_i) {
        method = methods[_i];
        if (!method.get$isConstructor() && !method.get$isGetter() && !method.get$isSetter())
          result.$indexSet(0, method.get$simpleName(), method);
      }
      return result;
    },
    filterGetters: function(methods, fields) {
      var result, t1, _i, method, t2;
      result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
      for (t1 = methods.length, _i = 0; _i < methods.length; methods.length === t1 || (0, H.throwConcurrentModificationError)(methods), ++_i) {
        method = methods[_i];
        if (method.get$isGetter()) {
          t2 = method.get$simpleName();
          if (fields._map.$index(0, t2) != null)
            continue;
          result.$indexSet(0, method.get$simpleName(), method);
        }
      }
      return result;
    },
    reflectMixinApplication: function(mixinNames, mangledName) {
      var mixins, t1, _i, it, superclass;
      mixins = [];
      for (t1 = mixinNames.length, _i = 0; _i < mixinNames.length; mixinNames.length === t1 || (0, H.throwConcurrentModificationError)(mixinNames), ++_i)
        mixins.push(H.reflectClassByMangledName(mixinNames[_i]));
      it = new J.ArrayIterator(mixins, mixins.length, 0, null);
      it.$builtinTypeInfo = [H.getTypeArgumentByIndex(mixins, 0)];
      it.moveNext$0();
      superclass = it.__interceptors$_current;
      for (; it.moveNext$0();)
        superclass = new H.JsMixinApplication(superclass, it.__interceptors$_current, null, null, H.s(mangledName));
      return superclass;
    },
    findTypeVariableIndex: function(typeVariables, $name) {
      var t1, i, t2;
      t1 = J.getInterceptor$asx(typeVariables);
      i = 0;
      while (true) {
        t2 = t1.get$length(typeVariables);
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (!(i < t2))
          break;
        if (J.$eq(t1.$index(typeVariables, i).get$simpleName(), H.s($name)))
          return i;
        ++i;
      }
      throw H.wrapException(P.ArgumentError$("Type variable not present in list."));
    },
    typeMirrorFromRuntimeTypeRepresentation: function(owner, type) {
      var t1, context, t2, representation, typeVariable, typeVariables, typeArgument;
      t1 = {};
      t1._captured_ownerClass_0 = null;
      for (context = owner; context != null;) {
        t2 = J.getInterceptor(context);
        if (!!t2.$isClassMirror) {
          t1._captured_ownerClass_0 = context;
          break;
        }
        if (!!t2.$isTypedefMirror)
          break;
        context = context.get$owner();
      }
      if (type == null)
        return $.get$JsMirrorSystem__dynamicType();
      else if (type instanceof H.TypeImpl)
        return H.reflectClassByMangledName(type._typeName);
      else {
        t2 = t1._captured_ownerClass_0;
        if (t2 == null)
          representation = H.runtimeTypeToString(type, null);
        else if (t2.get$isOriginalDeclaration())
          if (typeof type === "number") {
            typeVariable = init.metadata[type];
            typeVariables = t1._captured_ownerClass_0.get$typeVariables();
            return J.$index$asx(typeVariables, H.findTypeVariableIndex(typeVariables, J.get$name$x(typeVariable)));
          } else
            representation = H.runtimeTypeToString(type, null);
        else {
          t1 = new H.typeMirrorFromRuntimeTypeRepresentation_getTypeArgument(t1);
          if (typeof type === "number") {
            typeArgument = t1.call$1(type);
            if (typeArgument instanceof H.JsTypeVariableMirror)
              return typeArgument;
          }
          representation = H.runtimeTypeToString(type, new H.typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable(t1));
        }
      }
      if (representation != null)
        return H.reflectClassByMangledName(representation);
      if (type.typedef != null)
        return H.typeMirrorFromRuntimeTypeRepresentation(owner, type.typedef);
      else if ('func' in type)
        return new H.JsFunctionTypeMirror(type, null, null, null, owner);
      return P.reflectClass(C.Type_EjN);
    },
    computeQualifiedName: function(owner, simpleName) {
      if (owner == null)
        return simpleName;
      return H.s(H.S(owner.get$qualifiedName()._name) + "." + H.S(simpleName._name));
    },
    extractMetadata: function(victim) {
      var metadataFunction, t1;
      metadataFunction = Object.prototype.hasOwnProperty.call(victim, "@") ? victim["@"] : null;
      if (metadataFunction != null)
        return metadataFunction();
      if (typeof victim != "function")
        return C.List_empty;
      if ("$metadataIndex" in victim) {
        t1 = victim.$reflectionInfo.splice(victim.$metadataIndex);
        t1.fixed$length = Array;
        t1 = new H.MappedListIterable(t1, new H.extractMetadata_closure());
        t1.$builtinTypeInfo = [null, null];
        return t1.toList$0(0);
      }
      return C.List_empty;
    },
    parseCompactFieldSpecification: function(owner, fieldSpecification, isStatic, result) {
      var t1, fields, fieldsMetadata, t2, fieldNumber, _i, field, fieldNumber0, metadata, mirror;
      t1 = J.getInterceptor(fieldSpecification);
      if (!!t1.$isList) {
        fields = H.splitFields(t1.$index(fieldSpecification, 0), ",");
        fieldsMetadata = t1.sublist$1(fieldSpecification, 1);
      } else {
        fields = typeof fieldSpecification === "string" ? H.splitFields(fieldSpecification, ",") : [];
        fieldsMetadata = null;
      }
      for (t1 = fields.length, t2 = fieldsMetadata != null, fieldNumber = 0, _i = 0; _i < fields.length; fields.length === t1 || (0, H.throwConcurrentModificationError)(fields), ++_i) {
        field = fields[_i];
        if (t2) {
          fieldNumber0 = fieldNumber + 1;
          if (fieldNumber >= fieldsMetadata.length)
            return H.ioore(fieldsMetadata, fieldNumber);
          metadata = fieldsMetadata[fieldNumber];
          fieldNumber = fieldNumber0;
        } else
          metadata = null;
        mirror = H.JsVariableMirror_JsVariableMirror$from(field, metadata, owner, isStatic);
        if (mirror != null)
          result.push(mirror);
      }
    },
    splitFields: function(string, pattern) {
      var t1 = J.getInterceptor$asx(string);
      if (t1.get$isEmpty(string) === true) {
        t1 = [];
        t1.$builtinTypeInfo = [P.String];
        return t1;
      }
      return t1.split$1(string, pattern);
    },
    isOperatorName: function($name) {
      switch ($name) {
        case "==":
        case "[]":
        case "*":
        case "/":
        case "%":
        case "~/":
        case "+":
        case "<<":
        case ">>":
        case ">=":
        case ">":
        case "<=":
        case "<":
        case "&":
        case "^":
        case "|":
        case "-":
        case "unary-":
        case "[]=":
        case "~":
          return true;
        default:
          return false;
      }
    },
    isReflectiveDataInPrototype: function(key) {
      var t1, firstChar;
      t1 = J.getInterceptor(key);
      if (t1.$eq(key, "^") || t1.$eq(key, "$methodsWithOptionalArguments"))
        return true;
      firstChar = t1.$index(key, 0);
      t1 = J.getInterceptor(firstChar);
      return t1.$eq(firstChar, "*") || t1.$eq(firstChar, "+");
    },
    JsMirrorSystem: {
      "^": "Object;_cachedLibraries,isolate",
      static: {JsMirrorSystem_librariesByName: function() {
          var t1 = $.JsMirrorSystem__librariesByName;
          if (t1 == null) {
            t1 = H.JsMirrorSystem_computeLibrariesByName();
            $.JsMirrorSystem__librariesByName = t1;
            if (!$.JsMirrorSystem__hasInstalledDeferredLoadHook) {
              $.JsMirrorSystem__hasInstalledDeferredLoadHook = true;
              $.deferredLoadHook = new H.JsMirrorSystem_librariesByName_closure();
            }
          }
          return t1;
        }, JsMirrorSystem_computeLibrariesByName: function() {
          var result, jsLibraries, t1, _i, data, t2, $name, uriString, uri, t3, scheme, userInfo, host, query, fragment, port, isFile, classes, functions, metadataFunction, fields, isRoot, globalObject, metadata;
          result = P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, [P.List, P.LibraryMirror]);
          jsLibraries = init.libraries;
          if (jsLibraries == null)
            return result;
          for (t1 = jsLibraries.length, _i = 0; _i < jsLibraries.length; jsLibraries.length === t1 || (0, H.throwConcurrentModificationError)(jsLibraries), ++_i) {
            data = jsLibraries[_i];
            t2 = J.getInterceptor$asx(data);
            $name = t2.$index(data, 0);
            uriString = t2.$index(data, 1);
            if (!J.$eq(uriString, ""))
              uri = P.Uri_parse(uriString, 0, null);
            else {
              t3 = P.LinkedHashMap__makeLiteral(["lib", $name]);
              scheme = P.Uri__makeScheme("https", 0, 5);
              userInfo = P.Uri__makeUserInfo("", 0, 0);
              host = P.Uri__makeHost("dartlang.org", 0, 12, false);
              query = P.Uri__makeQuery(null, 0, 0, t3);
              fragment = P.Uri__makeFragment(null, 0, 0);
              port = P.Uri__makePort(null, scheme);
              isFile = scheme === "file";
              if (host == null)
                t3 = userInfo.length !== 0 || port != null || isFile;
              else
                t3 = false;
              if (t3)
                host = "";
              uri = new P.Uri(host, port, P.Uri__makePath("dart2js-stripped-uri", 0, 20, null, host != null, isFile), scheme, userInfo, query, fragment, null, null);
            }
            classes = t2.$index(data, 2);
            functions = t2.$index(data, 3);
            metadataFunction = t2.$index(data, 4);
            fields = t2.$index(data, 5);
            isRoot = t2.$index(data, 6);
            globalObject = t2.$index(data, 7);
            metadata = metadataFunction == null ? C.List_empty : metadataFunction();
            J.add$1$ax(result.putIfAbsent$2($name, new H.JsMirrorSystem_computeLibrariesByName_closure()), new H.JsLibraryMirror(uri, classes, functions, metadata, fields, isRoot, globalObject, null, null, null, null, null, null, null, null, null, null, H.s($name)));
          }
          return result;
        }}
    },
    JsMirrorSystem_librariesByName_closure: {
      "^": "Closure:5;",
      call$0: function() {
        $.JsMirrorSystem__librariesByName = null;
        return;
      }
    },
    JsMirrorSystem_computeLibrariesByName_closure: {
      "^": "Closure:5;",
      call$0: function() {
        var t1 = [];
        t1.$builtinTypeInfo = [P.LibraryMirror];
        return t1;
      }
    },
    JsMirror: {
      "^": "Object;",
      toString$0: function(_) {
        return this.get$_prettyName();
      },
      _getField$1: function(receiver) {
        throw H.wrapException(new P.UnimplementedError(null));
      }
    },
    JsIsolateMirror: {
      "^": "JsMirror;_isolateContext",
      get$_prettyName: function() {
        return "Isolate";
      }
    },
    JsDeclarationMirror: {
      "^": "JsMirror;simpleName<",
      get$qualifiedName: function() {
        return H.computeQualifiedName(this.get$owner(), this.get$simpleName());
      },
      toString$0: function(_) {
        return this.get$_prettyName() + " on '" + H.S(this.get$simpleName()._name) + "'";
      },
      _invoke$2: function(positionalArguments, namedArguments) {
        throw H.wrapException(new H.RuntimeError("Should not call _invoke"));
      }
    },
    JsTypeVariableMirror: {
      "^": "JsTypeMirror;owner<,_typeVariable,_metadataIndex,_cachedUpperBound,simpleName",
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof H.JsTypeVariableMirror && J.$eq(this.simpleName, other.simpleName) && this.owner.$eq(0, other.owner);
      },
      get$hashCode: function(_) {
        var t1, t2;
        t1 = J.get$hashCode$(C.Type_AGr._typeName);
        if (typeof t1 !== "number")
          return H.iae(t1);
        t2 = this.owner;
        return (1073741823 & t1 ^ 17 * J.get$hashCode$(this.simpleName) ^ 19 * t2.get$hashCode(t2)) >>> 0;
      },
      get$_prettyName: function() {
        return "TypeVariableMirror";
      },
      get$isStatic: function() {
        return false;
      }
    },
    JsTypeMirror: {
      "^": "JsDeclarationMirror;simpleName",
      get$_prettyName: function() {
        return "TypeMirror";
      },
      get$owner: function() {
        return;
      },
      get$typeVariables: function() {
        return C.List_empty2;
      },
      get$typeArguments: function() {
        return C.List_empty1;
      },
      get$isOriginalDeclaration: function() {
        return true;
      },
      get$originalDeclaration: function() {
        return this;
      },
      static: {JsTypeMirror$: function(simpleName) {
          return new H.JsTypeMirror(simpleName);
        }}
    },
    JsLibraryMirror: {
      "^": "JsDeclarationMirror_JsObjectMirror;_uri,_classes,_functions,_metadata,_compactFieldSpecification,_isRoot,_globalObject,_cachedFunctionMirrors,_cachedFields,_cachedClasses,_cachedFunctions,_cachedGetters,_cachedSetters,_cachedVariables,_cachedMembers,_cachedDeclarations,_cachedMetadata,simpleName",
      get$_prettyName: function() {
        return "LibraryMirror";
      },
      get$qualifiedName: function() {
        return this.simpleName;
      },
      get$_methods: function() {
        return this.get$_functionMirrors();
      },
      get$__classes: function() {
        var t1, result, cls, t2;
        t1 = this._cachedClasses;
        if (t1 != null)
          return t1;
        result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
        for (t1 = J.get$iterator$ax(this._classes); t1.moveNext$0();) {
          cls = H.reflectClassByMangledName(t1.get$current());
          if (!!J.getInterceptor(cls).$isClassMirror)
            cls = cls.get$originalDeclaration();
          t2 = J.getInterceptor(cls);
          if (!!t2.$isJsClassMirror) {
            result.$indexSet(0, cls.simpleName, cls);
            cls._owner = this;
          } else if (!!t2.$isJsTypedefMirror)
            result.$indexSet(0, cls.simpleName, cls);
        }
        t1 = new P.UnmodifiableMapView(result);
        t1.$builtinTypeInfo = [P.Symbol0, P.ClassMirror];
        this._cachedClasses = t1;
        return t1;
      },
      getField$1: function(fieldName) {
        var mirror, getter;
        mirror = this.get$__members()._map.$index(0, fieldName);
        if (mirror == null)
          throw H.wrapException(H.NoSuchStaticMethodError$method(null, fieldName, [], null));
        if (!J.getInterceptor(mirror).$isMethodMirror)
          return H.reflect(mirror._getField$1(this));
        if (mirror.get$isGetter())
          return H.reflect(mirror._getField$1(this));
        getter = mirror._jsFunction.$getter;
        if (getter == null)
          throw H.wrapException(new P.UnimplementedError(null));
        return H.reflect(getter());
      },
      invoke$3: function(memberName, positionalArguments, namedArguments) {
        var mirror, t1, t2;
        mirror = this.get$__members()._map.$index(0, memberName);
        t1 = mirror instanceof H.JsMethodMirror;
        if (t1 && !("$reflectable" in mirror._jsFunction))
          H.throwInvalidReflectionError(memberName.get$_name());
        if (mirror != null)
          t2 = t1 && mirror.isSetter;
        else
          t2 = true;
        if (t2)
          throw H.wrapException(H.NoSuchStaticMethodError$method(null, memberName, positionalArguments, namedArguments));
        if (t1 && !mirror.isGetter)
          return H.reflect(mirror._invoke$2(positionalArguments, namedArguments));
        return this.getField$1(memberName).invoke$3(C.Symbol_call, positionalArguments, namedArguments);
      },
      invoke$2: function(memberName, positionalArguments) {
        return this.invoke$3(memberName, positionalArguments, null);
      },
      get$_functionMirrors: function() {
        var t1, result, t2, t3, i, t4, $name, jsFunction, result0, unmangledName, isConstructor, mirror;
        t1 = this._cachedFunctionMirrors;
        if (t1 != null)
          return t1;
        result = [];
        result.$builtinTypeInfo = [H.JsMethodMirror];
        t1 = this._functions;
        t2 = J.getInterceptor$asx(t1);
        t3 = this._globalObject;
        i = 0;
        while (true) {
          t4 = t2.get$length(t1);
          if (typeof t4 !== "number")
            return H.iae(t4);
          if (!(i < t4))
            break;
          c$0: {
            $name = t2.$index(t1, i);
            jsFunction = t3[$name];
            result0 = $.get$mangledGlobalNames()._jsMangledNames[$name];
            unmangledName = typeof result0 !== "string" ? null : result0;
            if (unmangledName == null || !!jsFunction.$getterStub)
              break c$0;
            isConstructor = J.getInterceptor$s(unmangledName).startsWith$1(unmangledName, "new ");
            if (isConstructor) {
              t4 = C.JSString_methods.substring$1(unmangledName, 4);
              unmangledName = H.stringReplaceAllUnchecked(t4, "$", ".");
            }
            mirror = H.JsMethodMirror_JsMethodMirror$fromUnmangledName(unmangledName, jsFunction, !isConstructor, isConstructor);
            result.push(mirror);
            mirror._owner = this;
          }
          ++i;
        }
        this._cachedFunctionMirrors = result;
        return result;
      },
      get$_fields: function() {
        var t1, result;
        t1 = this._cachedFields;
        if (t1 != null)
          return t1;
        result = [];
        result.$builtinTypeInfo = [P.VariableMirror];
        H.parseCompactFieldSpecification(this, this._compactFieldSpecification, true, result);
        this._cachedFields = result;
        return result;
      },
      get$__functions: function() {
        var t1, result, t2, _i, mirror;
        t1 = this._cachedFunctions;
        if (t1 != null)
          return t1;
        result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
        for (t1 = this.get$_functionMirrors(), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          mirror = t1[_i];
          if (!mirror.isConstructor)
            result.$indexSet(0, mirror.simpleName, mirror);
        }
        t1 = new P.UnmodifiableMapView(result);
        t1.$builtinTypeInfo = [P.Symbol0, P.MethodMirror];
        this._cachedFunctions = t1;
        return t1;
      },
      get$__getters: function() {
        var t1 = this._cachedGetters;
        if (t1 != null)
          return t1;
        t1 = new P.UnmodifiableMapView(P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
        t1.$builtinTypeInfo = [P.Symbol0, P.MethodMirror];
        this._cachedGetters = t1;
        return t1;
      },
      get$__setters: function() {
        var t1 = this._cachedSetters;
        if (t1 != null)
          return t1;
        t1 = new P.UnmodifiableMapView(P.LinkedHashMap_LinkedHashMap(null, null, null, null, null));
        t1.$builtinTypeInfo = [P.Symbol0, P.MethodMirror];
        this._cachedSetters = t1;
        return t1;
      },
      get$__variables: function() {
        var t1, result, t2, _i, mirror;
        t1 = this._cachedVariables;
        if (t1 != null)
          return t1;
        result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
        for (t1 = this.get$_fields(), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          mirror = t1[_i];
          result.$indexSet(0, mirror.simpleName, mirror);
        }
        t1 = new P.UnmodifiableMapView(result);
        t1.$builtinTypeInfo = [P.Symbol0, P.VariableMirror];
        this._cachedVariables = t1;
        return t1;
      },
      get$__members: function() {
        var t1, result;
        t1 = this._cachedMembers;
        if (t1 != null)
          return t1;
        result = P.LinkedHashMap_LinkedHashMap$from(this.get$__classes(), null, null);
        t1 = new H.JsLibraryMirror___members_addToResult(result);
        this.get$__functions()._map.forEach$1(0, t1);
        this.get$__getters()._map.forEach$1(0, t1);
        this.get$__setters()._map.forEach$1(0, t1);
        this.get$__variables()._map.forEach$1(0, t1);
        t1 = new P.UnmodifiableMapView(result);
        t1.$builtinTypeInfo = [P.Symbol0, P.Mirror];
        this._cachedMembers = t1;
        return t1;
      },
      get$owner: function() {
        return;
      },
      $isLibraryMirror: 1
    },
    JsDeclarationMirror_JsObjectMirror: {
      "^": "JsDeclarationMirror+JsObjectMirror;"
    },
    JsLibraryMirror___members_addToResult: {
      "^": "Closure:21;_captured_result_0",
      call$2: function(key, value) {
        this._captured_result_0.$indexSet(0, key, value);
      }
    },
    JsMixinApplication: {
      "^": "JsTypeMirror_JsObjectMirror;superclass,mixin,_cachedSimpleName,_cachedInstanceMembers,simpleName",
      get$_prettyName: function() {
        return "ClassMirror";
      },
      get$simpleName: function() {
        var t1, superName;
        t1 = this._cachedSimpleName;
        if (t1 != null)
          return t1;
        superName = this.superclass.get$qualifiedName()._name;
        t1 = this.mixin;
        t1 = J.contains$1$asx(superName, " with ") === true ? H.s(H.S(superName) + ", " + H.S(t1.get$qualifiedName()._name)) : H.s(H.S(superName) + " with " + H.S(t1.get$qualifiedName()._name));
        this._cachedSimpleName = t1;
        return t1;
      },
      get$qualifiedName: function() {
        return this.get$simpleName();
      },
      invoke$3: function(memberName, positionalArguments, namedArguments) {
        throw H.wrapException(H.NoSuchStaticMethodError$method(null, memberName, positionalArguments, namedArguments));
      },
      invoke$2: function(memberName, positionalArguments) {
        return this.invoke$3(memberName, positionalArguments, null);
      },
      getField$1: function(fieldName) {
        throw H.wrapException(H.NoSuchStaticMethodError$method(null, fieldName, null, null));
      },
      get$isOriginalDeclaration: function() {
        return true;
      },
      get$originalDeclaration: function() {
        return this;
      },
      get$typeVariables: function() {
        throw H.wrapException(new P.UnimplementedError(null));
      },
      get$typeArguments: function() {
        return C.List_empty1;
      },
      $isClassMirror: 1
    },
    JsTypeMirror_JsObjectMirror: {
      "^": "JsTypeMirror+JsObjectMirror;"
    },
    JsObjectMirror: {
      "^": "Object;"
    },
    JsInstanceMirror: {
      "^": "JsObjectMirror;reflectee<,_getterCache",
      get$type: function(_) {
        var t1 = this.reflectee;
        if (t1 == null)
          return P.reflectClass(C.Type_eZO);
        return H.reflectClassByMangledName(H.getRuntimeTypeString(t1));
      },
      invoke$3: function(memberName, positionalArguments, namedArguments) {
        return this._invoke$4(memberName, 0, positionalArguments, namedArguments == null ? C.Map_empty : namedArguments);
      },
      invoke$2: function(memberName, positionalArguments) {
        return this.invoke$3(memberName, positionalArguments, null);
      },
      _invokeMethodWithNamedArguments$3: function(reflectiveName, positionalArguments, namedArguments) {
        var t1, jsFunction, info, t2, defaultArguments, t3, i, t4;
        t1 = this.reflectee;
        jsFunction = J.getInterceptor(t1)[reflectiveName];
        if (jsFunction == null)
          throw H.wrapException(new H.UnimplementedNoSuchMethodError("Invoking noSuchMethod with named arguments not implemented"));
        info = H.ReflectionInfo_ReflectionInfo(jsFunction);
        positionalArguments = P.List_List$from(positionalArguments, true, null);
        t2 = info.requiredParameterCount;
        if (t2 !== positionalArguments.length)
          throw H.wrapException(new H.UnimplementedNoSuchMethodError("Invoking noSuchMethod with named arguments not implemented"));
        defaultArguments = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
        for (t3 = info.optionalParameterCount, i = 0; i < t3; ++i) {
          t4 = i + t2;
          defaultArguments.$indexSet(0, info.parameterName$1(t4), init.metadata[info.defaultValue$1(0, t4)]);
        }
        namedArguments.forEach$1(0, new H.JsInstanceMirror__invokeMethodWithNamedArguments_closure(defaultArguments));
        C.JSArray_methods.addAll$1(positionalArguments, defaultArguments.get$values(defaultArguments));
        return H.reflect(jsFunction.apply(t1, positionalArguments));
      },
      get$_classInvocationCache: function() {
        var cacheName, cacheHolder, cache;
        cacheName = $.Primitives_mirrorInvokeCacheName;
        cacheHolder = this.reflectee;
        if (cacheHolder == null)
          cacheHolder = J.getInterceptor(null);
        cache = cacheHolder.constructor[cacheName];
        if (cache == null) {
          cache = H.JsCache_allocate();
          cacheHolder.constructor[cacheName] = cache;
        }
        return cache;
      },
      _computeReflectiveName$4: function(symbolName, type, positionalArguments, namedArguments) {
        var $name, nbArgs;
        $name = symbolName.get$_name();
        switch (type) {
          case 1:
            return $name;
          case 2:
            return H.S($name) + "=";
          case 0:
            if (!J.$eq(namedArguments.get$length(namedArguments), 0))
              return H.S($name) + "*";
            nbArgs = positionalArguments.length;
            return H.S($name) + ":" + nbArgs;
        }
        throw H.wrapException(new H.RuntimeError("Could not compute reflective name for " + H.S($name)));
      },
      _getCachedInvocation$5: function($name, type, reflectiveName, positionalArguments, namedArguments) {
        var cache, cacheEntry;
        cache = this.get$_classInvocationCache();
        cacheEntry = cache[reflectiveName];
        if (cacheEntry == null) {
          cacheEntry = new H.JSInvocationMirror($name, $.get$reflectiveNames().$index(0, reflectiveName), type, positionalArguments, C.List_empty, null).__js_helper$_getCachedInvocation$1(this.reflectee);
          cache[reflectiveName] = cacheEntry;
        }
        return cacheEntry;
      },
      _invoke$4: function($name, type, positionalArguments, namedArguments) {
        var reflectiveName, cacheEntry, t1, getterCacheEntry;
        reflectiveName = this._computeReflectiveName$4($name, type, positionalArguments, namedArguments);
        if (!J.$eq(namedArguments.get$length(namedArguments), 0))
          return this._invokeMethodWithNamedArguments$3(reflectiveName, positionalArguments, namedArguments);
        cacheEntry = this._getCachedInvocation$5($name, type, reflectiveName, positionalArguments, namedArguments);
        if (!cacheEntry.get$isNoSuchMethod())
          t1 = !("$reflectable" in cacheEntry.get$jsFunction() || this.reflectee instanceof H.TearOffClosure);
        else
          t1 = true;
        if (t1) {
          if (type === 0) {
            getterCacheEntry = this._getCachedInvocation$5($name, 1, this._computeReflectiveName$4($name, 1, C.List_empty, C.Map_empty), C.List_empty, C.Map_empty);
            t1 = !getterCacheEntry.get$isNoSuchMethod() && !getterCacheEntry.get$isGetterStub();
          } else
            t1 = false;
          if (t1)
            return this.getField$1($name).invoke$3(C.Symbol_call, positionalArguments, namedArguments);
          if (type === 2)
            $name = H.s(H.S($name.get$_name()) + "=");
          if (!cacheEntry.get$isNoSuchMethod())
            H.throwInvalidReflectionError(reflectiveName);
          return H.reflect(cacheEntry.invokeOn$2(this.reflectee, new H.JSInvocationMirror($name, $.get$reflectiveNames().$index(0, reflectiveName), type, positionalArguments, [], null)));
        } else
          return H.reflect(cacheEntry.invokeOn$2(this.reflectee, positionalArguments));
      },
      getField$1: function(fieldName) {
        var cache, getter, value, result;
        $FASTPATH$0: {
          cache = this._getterCache;
          if (typeof cache == "number" || typeof fieldName.$p == "undefined")
            break $FASTPATH$0;
          getter = fieldName.$p(cache);
          if (typeof getter == "undefined")
            break $FASTPATH$0;
          value = getter(this.reflectee);
          if (value === getter.v)
            return getter.m;
          else {
            result = H.reflect(value);
            getter.v = value;
            getter.m = result;
            return result;
          }
        }
        return this._getFieldSlow$1(fieldName);
      },
      _getFieldSlow$1: function(fieldName) {
        var result, $name, cacheEntry, cache, mangledName, getter;
        result = this._invoke$4(fieldName, 1, C.List_empty, C.Map_empty);
        $name = fieldName.get$_name();
        cacheEntry = this.get$_classInvocationCache()[$name];
        if (cacheEntry.get$isNoSuchMethod())
          return result;
        cache = this._getterCache;
        if (typeof cache == "number") {
          cache = J.$sub$n(cache, 1);
          this._getterCache = cache;
          if (!J.$eq(cache, 0))
            return result;
          cache = Object.create(null);
          this._getterCache = cache;
        }
        if (typeof fieldName.$p == "undefined")
          fieldName.$p = this._newProbeFn$2($name, true);
        mangledName = cacheEntry.get$mangledName();
        getter = cacheEntry.get$isIntercepted() ? this._newInterceptedGetterFn$2(mangledName, true) : this._newGetterFn$2(mangledName, true);
        cache[$name] = getter;
        getter.v = getter.m = cache;
        return result;
      },
      _newProbeFn$2: function(id, useEval) {
        if (useEval)
          return new Function("c", "return c." + H.S(id) + ";");
        else
          return function(n) {
            return function(c) {
              return c[n];
            };
          }(id);
      },
      _newGetterFn$2: function($name, useEval) {
        if (!useEval)
          return function(n) {
            return function(o) {
              return o[n]();
            };
          }($name);
        return new Function("o", "/* " + this.reflectee.constructor.name + " */ return o." + H.S($name) + "();");
      },
      _newInterceptedGetterFn$2: function($name, useEval) {
        var interceptor, functionName;
        interceptor = J.getInterceptor(this.reflectee);
        if (!useEval)
          return function(n, i) {
            return function(o) {
              return i[n](o);
            };
          }($name, interceptor);
        functionName = interceptor.constructor.name + "$" + H.S($name);
        return new Function("i", "  function " + functionName + "(o){return i." + H.S($name) + "(o)}  return " + functionName + ";")(interceptor);
      },
      $eq: function(_, other) {
        var t1, t2;
        if (other == null)
          return false;
        if (other instanceof H.JsInstanceMirror) {
          t1 = this.reflectee;
          t2 = other.reflectee;
          t2 = t1 == null ? t2 == null : t1 === t2;
          t1 = t2;
        } else
          t1 = false;
        return t1;
      },
      get$hashCode: function(_) {
        return J.$xor$n(H.objectHashCode(this.reflectee), 909522486);
      },
      toString$0: function(_) {
        return "InstanceMirror on " + H.S(P.Error_safeToString(this.reflectee));
      }
    },
    JsInstanceMirror__invokeMethodWithNamedArguments_closure: {
      "^": "Closure:22;_captured_defaultArguments_0",
      call$2: function(symbol, value) {
        var parameter, t1;
        parameter = symbol.get$_name();
        t1 = this._captured_defaultArguments_0;
        if (t1.containsKey$1(parameter))
          t1.$indexSet(0, parameter, value);
        else
          throw H.wrapException(new H.UnimplementedNoSuchMethodError("Invoking noSuchMethod with named arguments not implemented"));
      }
    },
    JsTypeBoundClassMirror: {
      "^": "JsDeclarationMirror;_class,_typeArguments,_cachedTypeArguments,_cachedDeclarations,_cachedMembers,_cachedConstructors,_cachedVariables,_cachedGetters,_cachedSetters,_cachedMethodsMap,_cachedMethods,_superclass,_cachedSuperinterfaces,_cachedInstanceMembers,_cachedStaticMembers,simpleName",
      get$_prettyName: function() {
        return "ClassMirror";
      },
      toString$0: function(_) {
        var result, t1, t2;
        result = "ClassMirror on " + H.S(this._class.get$simpleName()._name);
        if (this.get$typeArguments() != null) {
          t1 = result + "<";
          t2 = this.get$typeArguments();
          result = t1 + t2.join$1(t2, ", ") + ">";
        }
        return result;
      },
      get$_mangledName: function() {
        for (var t1 = this.get$typeArguments(), t1 = t1.get$iterator(t1); t1.moveNext$0();)
          if (!J.$eq(t1.__internal$_current, $.get$JsMirrorSystem__dynamicType()))
            return H.S(this._class.get$_mangledName()) + "<" + this._typeArguments + ">";
        return this._class.get$_mangledName();
      },
      get$typeVariables: function() {
        return this._class.get$typeVariables();
      },
      get$typeArguments: function() {
        var t1, result, t2, t3, level, currentTypeArgument, i, character;
        t1 = this._cachedTypeArguments;
        if (t1 != null)
          return t1;
        result = [];
        t1 = new H.JsTypeBoundClassMirror_typeArguments_addTypeArgument(result);
        t2 = this._typeArguments;
        if (C.JSString_methods.indexOf$1(t2, "<") === -1)
          C.JSArray_methods.forEach$1(t2.split(","), new H.JsTypeBoundClassMirror_typeArguments_closure(t1));
        else {
          for (t3 = t2.length, level = 0, currentTypeArgument = "", i = 0; i < t3; ++i) {
            character = t2[i];
            if (character === " ")
              continue;
            else if (character === "<") {
              currentTypeArgument += character;
              ++level;
            } else if (character === ">") {
              currentTypeArgument += character;
              --level;
            } else if (character === ",")
              if (level > 0)
                currentTypeArgument += character;
              else {
                t1.call$1(currentTypeArgument);
                currentTypeArgument = "";
              }
            else
              currentTypeArgument += character;
          }
          t1.call$1(currentTypeArgument);
        }
        t1 = new P.UnmodifiableListView(result);
        t1.$builtinTypeInfo = [null];
        this._cachedTypeArguments = t1;
        return t1;
      },
      get$_methods: function() {
        var t1 = this._cachedMethods;
        if (t1 != null)
          return t1;
        t1 = this._class._getMethodsWithOwner$1(this);
        this._cachedMethods = t1;
        return t1;
      },
      getField$1: function(fieldName) {
        return this._class.getField$1(fieldName);
      },
      get$owner: function() {
        return this._class.get$owner();
      },
      invoke$3: function(memberName, positionalArguments, namedArguments) {
        return this._class.invoke$3(memberName, positionalArguments, namedArguments);
      },
      invoke$2: function(memberName, positionalArguments) {
        return this.invoke$3(memberName, positionalArguments, null);
      },
      get$isOriginalDeclaration: function() {
        return false;
      },
      get$originalDeclaration: function() {
        return this._class;
      },
      get$qualifiedName: function() {
        return this._class.get$qualifiedName();
      },
      get$simpleName: function() {
        return this._class.get$simpleName();
      },
      $isClassMirror: 1
    },
    JsTypeBoundClassMirror_typeArguments_addTypeArgument: {
      "^": "Closure:13;_captured_result_0",
      call$1: function(typeArgument) {
        var parsedIndex, t1, typeVariable;
        parsedIndex = H.Primitives_parseInt(typeArgument, null, new H.JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure());
        t1 = this._captured_result_0;
        if (J.$eq(parsedIndex, -1))
          t1.push(H.reflectClassByMangledName(J.trim$0$s(typeArgument)));
        else {
          typeVariable = init.metadata[parsedIndex];
          t1.push(new H.JsTypeVariableMirror(P.reflectClass(typeVariable.get$owner()), typeVariable, parsedIndex, null, H.s(J.get$name$x(typeVariable))));
        }
      }
    },
    JsTypeBoundClassMirror_typeArguments_addTypeArgument_closure: {
      "^": "Closure:8;",
      call$1: function(_) {
        return -1;
      }
    },
    JsTypeBoundClassMirror_typeArguments_closure: {
      "^": "Closure:8;_captured_addTypeArgument_1",
      call$1: function(t) {
        return this._captured_addTypeArgument_1.call$1(t);
      }
    },
    JsClassMirror: {
      "^": "JsTypeMirror_JsObjectMirror0;_mangledName<,_jsConstructor<,_fieldsDescriptor,_fieldsMetadata,_jsConstructorCache,_metadata,_superclass,_cachedMethods,_cachedFields,_cachedConstructors,_cachedMethodsMap,_cachedGetters,_cachedSetters,_cachedVariables,_cachedMembers,_cachedDeclarations,_cachedMetadata,_cachedSuperinterfaces,_cachedTypeVariables,_cachedInstanceMembers,_cachedStaticMembers,_owner,simpleName",
      get$_prettyName: function() {
        return "ClassMirror";
      },
      _getMethodsWithOwner$1: function(methodOwner) {
        var $prototype, keys, result, t1, _i, key, simpleName, $function, stubName, mirror, mangledName, jsFunction, reflectionName, isConstructor, t2;
        $prototype = this._jsConstructor.prototype;
        $prototype.$deferredAction();
        keys = H.extractKeys($prototype);
        result = [];
        result.$builtinTypeInfo = [H.JsMethodMirror];
        for (t1 = keys.length, _i = 0; _i < t1; ++_i) {
          key = keys[_i];
          if (H.isReflectiveDataInPrototype(key))
            continue;
          simpleName = $.get$mangledNames().$index(0, key);
          if (simpleName == null)
            continue;
          $function = $prototype[key];
          if (!($function.$reflectable === 1))
            continue;
          stubName = $function.$stubName;
          if (stubName != null && !J.$eq(key, stubName))
            continue;
          mirror = H.JsMethodMirror_JsMethodMirror$fromUnmangledName(simpleName, $function, false, false);
          result.push(mirror);
          mirror._owner = methodOwner;
        }
        keys = H.extractKeys(init.statics[this._mangledName]);
        for (t1 = keys.length, _i = 0; _i < t1; ++_i) {
          mangledName = keys[_i];
          if (H.isReflectiveDataInPrototype(mangledName))
            continue;
          jsFunction = this.get$owner()._globalObject[mangledName];
          if ("$reflectable" in jsFunction) {
            reflectionName = jsFunction.$reflectionName;
            if (reflectionName == null)
              continue;
            isConstructor = C.JSString_methods.startsWith$1(reflectionName, "new ");
            if (isConstructor) {
              t2 = C.JSString_methods.substring$1(reflectionName, 4);
              reflectionName = H.stringReplaceAllUnchecked(t2, "$", ".");
            }
          } else
            continue;
          mirror = H.JsMethodMirror_JsMethodMirror$fromUnmangledName(reflectionName, jsFunction, !isConstructor, isConstructor);
          result.push(mirror);
          mirror._owner = methodOwner;
        }
        return result;
      },
      get$_methods: function() {
        var t1 = this._cachedMethods;
        if (t1 != null)
          return t1;
        t1 = this._getMethodsWithOwner$1(this);
        this._cachedMethods = t1;
        return t1;
      },
      _getFieldsWithOwner$1: function(fieldOwner) {
        var result, t1, instanceFieldSpecfication, staticDescriptor;
        result = [];
        result.$builtinTypeInfo = [P.VariableMirror];
        t1 = this._fieldsDescriptor.split(";");
        if (1 >= t1.length)
          return H.ioore(t1, 1);
        instanceFieldSpecfication = t1[1];
        t1 = this._fieldsMetadata;
        if (t1 != null) {
          instanceFieldSpecfication = [instanceFieldSpecfication];
          C.JSArray_methods.addAll$1(instanceFieldSpecfication, t1);
        }
        H.parseCompactFieldSpecification(fieldOwner, instanceFieldSpecfication, false, result);
        staticDescriptor = init.statics[this._mangledName];
        if (staticDescriptor != null)
          H.parseCompactFieldSpecification(fieldOwner, staticDescriptor["^"], true, result);
        return result;
      },
      get$_fields: function() {
        var t1 = this._cachedFields;
        if (t1 != null)
          return t1;
        t1 = this._getFieldsWithOwner$1(this);
        this._cachedFields = t1;
        return t1;
      },
      get$__methods: function() {
        var t1 = this._cachedMethodsMap;
        if (t1 != null)
          return t1;
        t1 = new P.UnmodifiableMapView(H.filterMethods(this.get$_methods()));
        t1.$builtinTypeInfo = [P.Symbol0, P.MethodMirror];
        this._cachedMethodsMap = t1;
        return t1;
      },
      get$__getters: function() {
        var t1 = this._cachedGetters;
        if (t1 != null)
          return t1;
        t1 = new P.UnmodifiableMapView(H.filterGetters(this.get$_methods(), this.get$__variables()));
        t1.$builtinTypeInfo = [P.Symbol0, P.MethodMirror];
        this._cachedGetters = t1;
        return t1;
      },
      get$__variables: function() {
        var t1, result, t2, _i, mirror;
        t1 = this._cachedVariables;
        if (t1 != null)
          return t1;
        result = P.LinkedHashMap_LinkedHashMap(null, null, null, null, null);
        for (t1 = this.get$_fields(), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          mirror = t1[_i];
          result.$indexSet(0, mirror.simpleName, mirror);
        }
        t1 = new P.UnmodifiableMapView(result);
        t1.$builtinTypeInfo = [P.Symbol0, P.VariableMirror];
        this._cachedVariables = t1;
        return t1;
      },
      _staticFieldExists$1: function(fieldName) {
        var mirror, getter;
        mirror = this.get$__variables()._map.$index(0, fieldName);
        if (mirror != null)
          return mirror.get$isStatic();
        getter = this.get$__getters()._map.$index(0, fieldName);
        return getter != null && getter.get$isStatic();
      },
      getField$1: function(fieldName) {
        var mirror, jsName, lazies, getterName, getter, method;
        mirror = this.get$__variables()._map.$index(0, fieldName);
        if (mirror != null && mirror.get$isStatic()) {
          jsName = mirror.get$_jsName();
          if (!(jsName in $))
            throw H.wrapException(new H.RuntimeError("Cannot find \"" + jsName + "\" in current isolate."));
          lazies = init.lazies;
          if (jsName in lazies) {
            getterName = lazies[jsName];
            return H.reflect($[getterName]());
          } else
            return H.reflect($[jsName]);
        }
        getter = this.get$__getters()._map.$index(0, fieldName);
        if (getter != null && getter.get$isStatic())
          return H.reflect(getter._invoke$2(C.List_empty, C.Map_empty));
        method = this.get$__methods()._map.$index(0, fieldName);
        if (method != null && method.get$isStatic()) {
          getter = method.get$_jsFunction().$getter;
          if (getter == null)
            throw H.wrapException(new P.UnimplementedError(null));
          return H.reflect(getter());
        }
        throw H.wrapException(H.NoSuchStaticMethodError$method(null, fieldName, null, null));
      },
      get$owner: function() {
        var t1, t2;
        t1 = this._owner;
        if (t1 == null) {
          t1 = H.JsMirrorSystem_librariesByName();
          t1 = t1.get$values(t1);
          t2 = new H.MappedIterator(null, J.get$iterator$ax(t1._iterable), t1._f);
          t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t1, 0), H.getTypeArgumentByIndex(t1, 1)];
          for (; t2.moveNext$0();)
            for (t1 = J.get$iterator$ax(t2.__internal$_current); t1.moveNext$0();)
              t1.get$current().get$__classes();
          t1 = this._owner;
          if (t1 == null)
            throw H.wrapException(new P.StateError("Class \"" + H.S(H.n(this.simpleName)) + "\" has no owner"));
        }
        return t1;
      },
      invoke$3: function(memberName, positionalArguments, namedArguments) {
        var mirror, t1;
        mirror = this.get$__methods()._map.$index(0, memberName);
        t1 = mirror == null;
        if (t1 && this._staticFieldExists$1(memberName))
          return this.getField$1(memberName).invoke$3(C.Symbol_call, positionalArguments, namedArguments);
        if (t1 || !mirror.get$isStatic())
          throw H.wrapException(H.NoSuchStaticMethodError$method(null, memberName, positionalArguments, namedArguments));
        if (!mirror.canInvokeReflectively$0())
          H.throwInvalidReflectionError(memberName.get$_name());
        return H.reflect(mirror._invoke$2(positionalArguments, namedArguments));
      },
      invoke$2: function(memberName, positionalArguments) {
        return this.invoke$3(memberName, positionalArguments, null);
      },
      get$isOriginalDeclaration: function() {
        return true;
      },
      get$originalDeclaration: function() {
        return this;
      },
      get$typeVariables: function() {
        var t1, result, typeVariables, i, typeVariable;
        t1 = this._cachedTypeVariables;
        if (t1 != null)
          return t1;
        result = [];
        typeVariables = this._jsConstructor.prototype["<>"];
        if (typeVariables == null)
          return result;
        for (i = 0; i < typeVariables.length; ++i) {
          t1 = typeVariables[i];
          typeVariable = init.metadata[t1];
          result.push(new H.JsTypeVariableMirror(this, typeVariable, t1, null, H.s(J.get$name$x(typeVariable))));
        }
        t1 = new P.UnmodifiableListView(result);
        t1.$builtinTypeInfo = [null];
        this._cachedTypeVariables = t1;
        return t1;
      },
      get$typeArguments: function() {
        return C.List_empty1;
      },
      $isClassMirror: 1
    },
    JsTypeMirror_JsObjectMirror0: {
      "^": "JsTypeMirror+JsObjectMirror;"
    },
    JsVariableMirror: {
      "^": "JsDeclarationMirror;_jsName<,isFinal,isStatic<,_metadataFunction,_owner,_type<,_metadata,simpleName",
      get$_prettyName: function() {
        return "VariableMirror";
      },
      get$type: function(_) {
        return H.typeMirrorFromRuntimeTypeRepresentation(this._owner, init.types[this._type]);
      },
      get$owner: function() {
        return this._owner;
      },
      _getField$1: function(receiver) {
        return $[this._jsName];
      },
      static: {JsVariableMirror_JsVariableMirror$from: function(descriptor, metadataFunction, owner, isStatic) {
          var fieldInformation, t1, field, $length, t2, code, isFinal, jsName, divider, accessorName, result, unmangledName, setterName, _i;
          fieldInformation = J.split$1$s(descriptor, "-");
          t1 = fieldInformation.length;
          if (t1 === 1)
            return;
          if (0 >= t1)
            return H.ioore(fieldInformation, 0);
          field = fieldInformation[0];
          t1 = J.getInterceptor$asx(field);
          $length = t1.get$length(field);
          t2 = J.getInterceptor$n($length);
          code = H.JsVariableMirror_fieldCode(t1.codeUnitAt$1(field, t2.$sub($length, 1)));
          if (code === 0)
            return;
          isFinal = C.JSInt_methods._shrOtherPositive$1(code, 2) === 0;
          jsName = t1.substring$2(field, 0, t2.$sub($length, 1));
          divider = t1.indexOf$1(field, ":");
          t2 = J.getInterceptor$n(divider);
          if (t2.$gt(divider, 0)) {
            accessorName = C.JSString_methods.substring$2(jsName, 0, divider);
            jsName = t1.substring$1(field, t2.$add(divider, 1));
          } else
            accessorName = jsName;
          if (isStatic) {
            result = $.get$mangledGlobalNames()._jsMangledNames[accessorName];
            unmangledName = typeof result !== "string" ? null : result;
          } else
            unmangledName = $.get$mangledNames().$index(0, "get$" + accessorName);
          if (unmangledName == null)
            unmangledName = accessorName;
          if (isFinal) {
            setterName = H.s(H.S(unmangledName) + "=");
            t1 = owner.get$_methods();
            t2 = t1.length;
            _i = 0;
            while (true) {
              if (!(_i < t1.length)) {
                isFinal = true;
                break;
              }
              if (J.$eq(t1[_i].get$simpleName(), setterName)) {
                isFinal = false;
                break;
              }
              t1.length === t2 || (0, H.throwConcurrentModificationError)(t1);
              ++_i;
            }
          }
          if (1 >= fieldInformation.length)
            return H.ioore(fieldInformation, 1);
          return new H.JsVariableMirror(jsName, isFinal, isStatic, metadataFunction, owner, H.Primitives_parseInt(fieldInformation[1], null, null), null, H.s(unmangledName));
        }, JsVariableMirror_fieldCode: function(code) {
          if (code >= 60 && code <= 64)
            return code - 59;
          if (code >= 123 && code <= 126)
            return code - 117;
          if (code >= 37 && code <= 43)
            return code - 27;
          return 0;
        }}
    },
    JsClosureMirror: {
      "^": "JsInstanceMirror;reflectee,_getterCache",
      toString$0: function(_) {
        return "ClosureMirror on '" + H.S(P.Error_safeToString(this.reflectee)) + "'";
      }
    },
    JsMethodMirror: {
      "^": "JsDeclarationMirror;_jsFunction<,_requiredParameterCount,_optionalParameterCount,isGetter<,isSetter<,isStatic<,isConstructor<,isOperator,_owner,_metadata,_returnType,_parameters,simpleName",
      get$_prettyName: function() {
        return "MethodMirror";
      },
      get$parameters: function() {
        var t1 = this._parameters;
        if (t1 != null)
          return t1;
        this.get$metadata();
        return this._parameters;
      },
      canInvokeReflectively$0: function() {
        return "$reflectable" in this._jsFunction;
      },
      get$owner: function() {
        return this._owner;
      },
      get$metadata: function() {
        var t1, raw, t2, formals, info, functionType, type, isNamed, t3, t4, t5, i, parameter, $name, result, p, defaultValue, i0;
        t1 = this._metadata;
        if (t1 == null) {
          t1 = this._jsFunction;
          raw = H.extractMetadata(t1);
          t2 = J.$add$ns(this._requiredParameterCount, this._optionalParameterCount);
          if (typeof t2 !== "number")
            return H.iae(t2);
          formals = Array(t2);
          info = H.ReflectionInfo_ReflectionInfo(t1);
          if (info != null) {
            functionType = info.functionType;
            if (typeof functionType === "number" && Math.floor(functionType) === functionType)
              type = new H.JsFunctionTypeMirror(info.computeFunctionRti$1(null), null, null, null, this);
            else
              type = this.get$owner() != null && !!J.getInterceptor(this.get$owner()).$isLibraryMirror ? new H.JsFunctionTypeMirror(info.computeFunctionRti$1(null), null, null, null, this._owner) : new H.JsFunctionTypeMirror(info.computeFunctionRti$1(this._owner.get$originalDeclaration().get$_jsConstructor()), null, null, null, this._owner);
            if (this.isConstructor)
              this._returnType = this._owner;
            else
              this._returnType = type.get$returnType();
            isNamed = info.areOptionalParametersNamed;
            for (t1 = type.get$parameters(), t1 = t1.get$iterator(t1), t2 = formals.length, t3 = info.requiredParameterCount, t4 = info.data, t5 = info.optionalParameterCount, i = 0; t1.moveNext$0(); i = i0) {
              parameter = t1.__internal$_current;
              $name = info.parameterName$1(i);
              result = t4[2 * i + t5 + 3 + 1];
              if (i < t3)
                p = new H.JsParameterMirror(this, parameter.get$_type(), false, false, null, result, H.s($name));
              else {
                defaultValue = info.defaultValue$1(0, i);
                p = new H.JsParameterMirror(this, parameter.get$_type(), true, isNamed, defaultValue, result, H.s($name));
              }
              i0 = i + 1;
              if (i >= t2)
                return H.ioore(formals, i);
              formals[i] = p;
            }
          }
          t1 = new P.UnmodifiableListView(formals);
          t1.$builtinTypeInfo = [P.ParameterMirror];
          this._parameters = t1;
          t1 = new P.UnmodifiableListView(J.map$1$ax(raw, H.reflect$closure()));
          t1.$builtinTypeInfo = [null];
          this._metadata = t1;
        }
        return t1;
      },
      _invoke$2: function(positionalArguments, namedArguments) {
        var positionalLength, t1, i;
        if (namedArguments != null && !J.$eq(namedArguments.get$length(namedArguments), 0))
          throw H.wrapException(new P.UnsupportedError("Named arguments are not implemented."));
        if (!this.isStatic && !this.isConstructor)
          throw H.wrapException(new H.RuntimeError("Cannot invoke instance method without receiver."));
        positionalLength = positionalArguments.length;
        t1 = this._requiredParameterCount;
        if (typeof t1 !== "number")
          return H.iae(t1);
        if (positionalLength < t1 || positionalLength > t1 + this._optionalParameterCount || this._jsFunction == null)
          throw H.wrapException(P.NoSuchMethodError$(this.get$owner(), this.simpleName, positionalArguments, namedArguments, null));
        if (positionalLength < t1 + this._optionalParameterCount) {
          t1 = positionalArguments.slice();
          t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(positionalArguments, 0)];
          positionalArguments = t1;
          i = positionalLength;
          while (true) {
            t1 = J.get$length$asx(this.get$parameters()._collection$_source);
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(i < t1))
              break;
            positionalArguments.push(J.get$defaultValue$x(J.elementAt$1$ax(this.get$parameters()._collection$_source, i)).get$reflectee());
            ++i;
          }
        }
        return this._jsFunction.apply($, P.List_List$from(positionalArguments, true, null));
      },
      _getField$1: function(receiver) {
        if (this.isGetter)
          return this._invoke$2([], null);
        else
          throw H.wrapException(new P.UnimplementedError("getField on " + receiver.toString$0(0)));
      },
      $isMirror: 1,
      $isMethodMirror: 1,
      static: {JsMethodMirror_JsMethodMirror$fromUnmangledName: function($name, jsFunction, isStatic, isConstructor) {
          var info, isOperator, isSetter, requiredParameterCount, isGetter, optionalParameterCount, reflectionInfo;
          info = $name.split(":");
          if (0 >= info.length)
            return H.ioore(info, 0);
          $name = info[0];
          isOperator = H.isOperatorName($name);
          isSetter = !isOperator && J.endsWith$1$s($name, "=");
          if (info.length === 1) {
            if (isSetter) {
              requiredParameterCount = 1;
              isGetter = false;
            } else {
              requiredParameterCount = 0;
              isGetter = true;
            }
            optionalParameterCount = 0;
          } else {
            reflectionInfo = H.ReflectionInfo_ReflectionInfo(jsFunction);
            requiredParameterCount = reflectionInfo.requiredParameterCount;
            optionalParameterCount = reflectionInfo.optionalParameterCount;
            isGetter = false;
          }
          return new H.JsMethodMirror(jsFunction, requiredParameterCount, optionalParameterCount, isGetter, isSetter, isStatic, isConstructor, isOperator, null, null, null, null, H.s($name));
        }}
    },
    JsParameterMirror: {
      "^": "JsDeclarationMirror;owner<,_type<,isOptional,isNamed,_defaultValue,metadataList,simpleName",
      get$_prettyName: function() {
        return "ParameterMirror";
      },
      get$type: function(_) {
        return H.typeMirrorFromRuntimeTypeRepresentation(this.owner, this._type);
      },
      get$isStatic: function() {
        return false;
      },
      get$defaultValue: function(_) {
        var t1 = this._defaultValue;
        return t1 != null ? H.reflect(init.metadata[t1]) : null;
      }
    },
    JsTypedefMirror: {
      "^": "JsDeclarationMirror;_mangledName<,referent,simpleName",
      get$value: function(_) {
        return this.referent;
      },
      get$_prettyName: function() {
        return "TypedefMirror";
      },
      get$typeVariables: function() {
        return H.throwExpression(new P.UnimplementedError(null));
      },
      get$originalDeclaration: function() {
        return this;
      },
      get$owner: function() {
        return H.throwExpression(new P.UnimplementedError(null));
      },
      $isTypedefMirror: 1
    },
    BrokenClassMirror: {
      "^": "Object;",
      invoke$3: function(memberName, positionalArguments, namedArguments) {
        return H.throwExpression(new P.UnimplementedError(null));
      },
      invoke$2: function(memberName, positionalArguments) {
        return this.invoke$3(memberName, positionalArguments, null);
      },
      getField$1: function(fieldName) {
        return H.throwExpression(new P.UnimplementedError(null));
      },
      get$typeVariables: function() {
        return H.throwExpression(new P.UnimplementedError(null));
      },
      get$typeArguments: function() {
        return H.throwExpression(new P.UnimplementedError(null));
      },
      get$originalDeclaration: function() {
        return H.throwExpression(new P.UnimplementedError(null));
      },
      get$simpleName: function() {
        return H.throwExpression(new P.UnimplementedError(null));
      },
      get$qualifiedName: function() {
        return H.throwExpression(new P.UnimplementedError(null));
      }
    },
    JsFunctionTypeMirror: {
      "^": "BrokenClassMirror;_typeData,_cachedToString,_cachedReturnType,_cachedParameters,owner<",
      get$isOriginalDeclaration: function() {
        return true;
      },
      get$returnType: function() {
        var t1 = this._cachedReturnType;
        if (t1 != null)
          return t1;
        t1 = this._typeData;
        if (!!t1.void) {
          t1 = $.get$JsMirrorSystem__voidType();
          this._cachedReturnType = t1;
          return t1;
        }
        if (!("ret" in t1)) {
          t1 = $.get$JsMirrorSystem__dynamicType();
          this._cachedReturnType = t1;
          return t1;
        }
        t1 = H.typeMirrorFromRuntimeTypeRepresentation(this.owner, t1.ret);
        this._cachedReturnType = t1;
        return t1;
      },
      get$parameters: function() {
        var t1, result, t2, t3, parameterCount, _i, parameterCount0, $name;
        t1 = this._cachedParameters;
        if (t1 != null)
          return t1;
        result = [];
        t1 = this._typeData;
        if ("args" in t1)
          for (t2 = t1.args, t3 = t2.length, parameterCount = 0, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i, parameterCount = parameterCount0) {
            parameterCount0 = parameterCount + 1;
            result.push(new H.JsParameterMirror(this, t2[_i], false, false, null, C.List_empty0, H.s("argument" + parameterCount)));
          }
        else
          parameterCount = 0;
        if ("opt" in t1)
          for (t2 = t1.opt, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i, parameterCount = parameterCount0) {
            parameterCount0 = parameterCount + 1;
            result.push(new H.JsParameterMirror(this, t2[_i], false, false, null, C.List_empty0, H.s("argument" + parameterCount)));
          }
        if ("named" in t1)
          for (t2 = H.extractKeys(t1.named), t3 = t2.length, _i = 0; _i < t3; ++_i) {
            $name = t2[_i];
            result.push(new H.JsParameterMirror(this, t1.named[$name], false, false, null, C.List_empty0, H.s($name)));
          }
        t1 = new P.UnmodifiableListView(result);
        t1.$builtinTypeInfo = [P.ParameterMirror];
        this._cachedParameters = t1;
        return t1;
      },
      _unmangleIfPreserved$1: function(mangled) {
        var result = init.mangledGlobalNames[mangled];
        if (result != null)
          return result;
        return mangled;
      },
      toString$0: function(_) {
        var t1, t2, t3, s, sep, _i, argument, $name;
        t1 = this._cachedToString;
        if (t1 != null)
          return t1;
        t1 = this._typeData;
        if ("args" in t1)
          for (t2 = t1.args, t3 = t2.length, s = "FunctionTypeMirror on '(", sep = "", _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i, sep = ", ") {
            argument = t2[_i];
            s = C.JSString_methods.$add(s + sep, this._unmangleIfPreserved$1(H.runtimeTypeToString(argument, null)));
          }
        else {
          s = "FunctionTypeMirror on '(";
          sep = "";
        }
        if ("opt" in t1) {
          s += sep + "[";
          for (t2 = t1.opt, t3 = t2.length, sep = "", _i = 0; _i < t2.length; t2.length === t3 || (0, H.throwConcurrentModificationError)(t2), ++_i, sep = ", ") {
            argument = t2[_i];
            s = C.JSString_methods.$add(s + sep, this._unmangleIfPreserved$1(H.runtimeTypeToString(argument, null)));
          }
          s += "]";
        }
        if ("named" in t1) {
          s += sep + "{";
          for (t2 = H.extractKeys(t1.named), t3 = t2.length, sep = "", _i = 0; _i < t3; ++_i, sep = ", ") {
            $name = t2[_i];
            s = C.JSString_methods.$add(s + sep + (H.S($name) + ": "), this._unmangleIfPreserved$1(H.runtimeTypeToString(t1.named[$name], null)));
          }
          s += "}";
        }
        s += ") -> ";
        if (!!t1.void)
          s += "void";
        else
          s = "ret" in t1 ? C.JSString_methods.$add(s, this._unmangleIfPreserved$1(H.runtimeTypeToString(t1.ret, null))) : s + "dynamic";
        t1 = s + "'";
        this._cachedToString = t1;
        return t1;
      },
      get$callMethod: function() {
        return H.throwExpression(new P.UnimplementedError(null));
      },
      callMethod$2: function(arg0, arg1) {
        return this.get$callMethod().call$2(arg0, arg1);
      },
      callMethod$1: function(arg0) {
        return this.get$callMethod().call$1(arg0);
      },
      $isClassMirror: 1
    },
    typeMirrorFromRuntimeTypeRepresentation_getTypeArgument: {
      "^": "Closure:23;__js_mirrors$_box_0",
      call$1: function(index) {
        var typeVariable, t1, variableIndex;
        typeVariable = init.metadata[index];
        t1 = this.__js_mirrors$_box_0;
        variableIndex = H.findTypeVariableIndex(t1._captured_ownerClass_0.get$typeVariables(), J.get$name$x(typeVariable));
        return J.$index$asx(t1._captured_ownerClass_0.get$typeArguments(), variableIndex);
      }
    },
    typeMirrorFromRuntimeTypeRepresentation_substituteTypeVariable: {
      "^": "Closure:24;_captured_getTypeArgument_1",
      call$1: function(index) {
        var typeArgument, t1;
        typeArgument = this._captured_getTypeArgument_1.call$1(index);
        t1 = J.getInterceptor(typeArgument);
        if (!!t1.$isJsTypeVariableMirror)
          return H.S(typeArgument._metadataIndex);
        if (!t1.$isJsClassMirror && !t1.$isJsTypeBoundClassMirror)
          if (t1.$eq(typeArgument, $.get$JsMirrorSystem__dynamicType()))
            return "dynamic";
          else if (t1.$eq(typeArgument, $.get$JsMirrorSystem__voidType()))
            return "void";
          else
            return "dynamic";
        return typeArgument.get$_mangledName();
      }
    },
    extractMetadata_closure: {
      "^": "Closure:19;",
      call$1: [function(i) {
        return init.metadata[i];
      }, null, null, 2, 0, null, 24, [], "call"]
    },
    NoSuchStaticMethodError: {
      "^": "Error;_cls,__js_mirrors$_name,_positionalArguments,__js_mirrors$_namedArguments,__js_mirrors$_kind",
      toString$0: function(_) {
        switch (this.__js_mirrors$_kind) {
          case 0:
            return "NoSuchMethodError: No constructor named '" + H.S(this.__js_mirrors$_name.get$_name()) + "' in class '" + H.S(this._cls.get$qualifiedName().get$_name()) + "'.";
          case 1:
            return "NoSuchMethodError: No top-level method named '" + H.S(this.__js_mirrors$_name.get$_name()) + "'.";
          default:
            return "NoSuchMethodError";
        }
      },
      static: {NoSuchStaticMethodError$method: function(_cls, _name, _positionalArguments, _namedArguments) {
          return new H.NoSuchStaticMethodError(_cls, _name, _positionalArguments, _namedArguments, 1);
        }}
    }
  }], ["dart._js_names", "dart:_js_names",, H, {
    "^": "",
    extractKeys: function(victim) {
      var t1 = victim ? Object.keys(victim) : [];
      t1.$builtinTypeInfo = [null];
      t1.fixed$length = Array;
      return t1;
    },
    _LazyMangledNamesMap: {
      "^": "Object;_jsMangledNames",
      $index: ["super$_LazyMangledNamesMap$$index", function(_, key) {
        var result = this._jsMangledNames[key];
        return typeof result !== "string" ? null : result;
      }]
    },
    _LazyMangledInstanceNamesMap: {
      "^": "_LazyMangledNamesMap;_jsMangledNames",
      $index: function(_, key) {
        var result = this.super$_LazyMangledNamesMap$$index(this, key);
        if (result == null && J.startsWith$1$s(key, "set$")) {
          result = this.super$_LazyMangledNamesMap$$index(this, "get$" + J.substring$1$s(key, 4));
          return result != null ? result + "=" : null;
        }
        return result;
      }
    },
    _LazyReflectiveNamesMap: {
      "^": "Object;_jsMangledNames,_isInstance,_cacheLength,_cache",
      _updateReflectiveNames$0: function() {
        var result, t1, t2, t3, key, reflectiveName;
        result = P.LinkedHashMap_LinkedHashMap$_empty(P.String, P.String);
        t1 = this._jsMangledNames;
        for (t2 = J.get$iterator$ax(Object.keys(t1)), t3 = this._isInstance; t2.moveNext$0();) {
          key = t2.get$current();
          reflectiveName = t1[key];
          if (typeof reflectiveName !== "string")
            continue;
          result.$indexSet(0, reflectiveName, key);
          if (t3 && J.startsWith$1$s(key, "get$"))
            result.$indexSet(0, H.S(reflectiveName) + "=", "set$" + J.substring$1$s(key, 4));
        }
        return result;
      },
      $index: function(_, key) {
        if (this._cache == null || Object.keys(this._jsMangledNames).length !== this._cacheLength) {
          this._cache = this._updateReflectiveNames$0();
          this._cacheLength = Object.keys(this._jsMangledNames).length;
        }
        return this._cache.$index(0, key);
      }
    }
  }], ["dart.async", "dart:async",, P, {
    "^": "",
    _AsyncRun__initializeScheduleImmediate: function() {
      var t1, div, span;
      t1 = {};
      if (self.scheduleImmediate != null)
        return P._AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1._captured_storedCallback_0 = null;
        new self.MutationObserver(H.convertDartClosureToJS(new P._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new P._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return P._AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return P._AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride: [function(callback) {
      ++init.globalState.topEventLoop._activeJsAsyncCount;
      self.scheduleImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateJsOverride_internalCallback(callback), 0));
    }, "call$1", "_AsyncRun__scheduleImmediateJsOverride$closure", 2, 0, 58],
    _AsyncRun__scheduleImmediateWithSetImmediate: [function(callback) {
      ++init.globalState.topEventLoop._activeJsAsyncCount;
      self.setImmediate(H.convertDartClosureToJS(new P._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(callback), 0));
    }, "call$1", "_AsyncRun__scheduleImmediateWithSetImmediate$closure", 2, 0, 58],
    _AsyncRun__scheduleImmediateWithTimer: [function(callback) {
      P.Timer__createTimer(C.Duration_0, callback);
    }, "call$1", "_AsyncRun__scheduleImmediateWithTimer$closure", 2, 0, 58],
    _registerErrorHandler: function(errorHandler, zone) {
      var t1 = H.getDynamicRuntimeType();
      t1 = H.buildFunctionType(t1, [t1, t1])._isTest$1(errorHandler);
      if (t1)
        return zone.registerBinaryCallback$1(errorHandler);
      else
        return zone.registerUnaryCallback$1(errorHandler);
    },
    _completeWithErrorCallback: function(result, error, stackTrace) {
      var replacement = $.Zone__current.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = J.get$error$x(replacement);
        error = error != null ? error : new P.NullThrownError();
        stackTrace = replacement.get$stackTrace();
      }
      result._completeError$2(error, stackTrace);
    },
    _microtaskLoop: function() {
      var t1, t2;
      for (; t1 = $._nextCallback, t1 != null;) {
        $._lastPriorityCallback = null;
        t2 = t1.get$next();
        $._nextCallback = t2;
        if (t2 == null)
          $._lastCallback = null;
        $.Zone__current = t1.get$zone();
        t1.callback$0();
      }
    },
    _microtaskLoopEntry: [function() {
      $._isInCallbackLoop = true;
      try {
        P._microtaskLoop();
      } finally {
        $.Zone__current = C.C__RootZone;
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.get$_AsyncRun_scheduleImmediateClosure().call$1(P._microtaskLoopEntry$closure());
      }
    }, "call$0", "_microtaskLoopEntry$closure", 0, 0, 7],
    _scheduleAsyncCallback: function(newEntry) {
      if ($._nextCallback == null) {
        $._lastCallback = newEntry;
        $._nextCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.get$_AsyncRun_scheduleImmediateClosure().call$1(P._microtaskLoopEntry$closure());
      } else {
        $._lastCallback.next = newEntry;
        $._lastCallback = newEntry;
      }
    },
    scheduleMicrotask: function(callback) {
      var currentZone, t1;
      currentZone = $.Zone__current;
      if (C.C__RootZone === currentZone) {
        P._rootScheduleMicrotask(null, null, C.C__RootZone, callback);
        return;
      }
      if (C.C__RootZone === currentZone.get$_scheduleMicrotask().zone)
        t1 = C.C__RootZone.get$errorZone() === currentZone.get$errorZone();
      else
        t1 = false;
      if (t1) {
        P._rootScheduleMicrotask(null, null, currentZone, currentZone.registerCallback$1(callback));
        return;
      }
      t1 = $.Zone__current;
      t1.scheduleMicrotask$1(t1.bindCallback$2$runGuarded(callback, true));
    },
    Stream_Stream$fromFuture: function(future, $T) {
      var controller, t1;
      controller = P.StreamController_StreamController(null, null, null, null, true, $T);
      future.then$2$onError(new P.Stream_Stream$fromFuture_closure(controller), new P.Stream_Stream$fromFuture_closure0(controller));
      t1 = new P._ControllerStream(controller);
      t1.$builtinTypeInfo = [null];
      return t1;
    },
    StreamIterator_StreamIterator: function(stream, $T) {
      var t1, t2, t3;
      t1 = new P._StreamIteratorImpl(null, null, null, 0);
      t1.$builtinTypeInfo = [$T];
      t2 = t1.get$_onData();
      t3 = t1.get$_onError();
      t1._subscription = stream.listen$4$cancelOnError$onDone$onError(t2, true, t1.get$_onDone(), t3);
      return t1;
    },
    StreamController_StreamController: function(onCancel, onListen, onPause, onResume, sync, $T) {
      var t1;
      if (onCancel == null)
        return sync ? new P._NoCallbackSyncStreamController(null, 0, null) : new P._NoCallbackAsyncStreamController(null, 0, null);
      if (sync) {
        t1 = new P._SyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null);
        t1.$builtinTypeInfo = [$T];
      } else {
        t1 = new P._AsyncStreamController(onListen, onPause, onResume, onCancel, null, 0, null);
        t1.$builtinTypeInfo = [$T];
      }
      return t1;
    },
    StreamController_StreamController$broadcast: function(onCancel, onListen, sync, $T) {
      var t1;
      if (sync) {
        t1 = new P._SyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null);
        t1.$builtinTypeInfo = [$T];
        t1._async$_previous = t1;
        t1._async$_next = t1;
      } else {
        t1 = new P._AsyncBroadcastStreamController(onListen, onCancel, 0, null, null, null, null);
        t1.$builtinTypeInfo = [$T];
        t1._async$_previous = t1;
        t1._async$_next = t1;
      }
      return t1;
    },
    _runGuarded: function(notificationHandler) {
      var result, e, s, exception, t1;
      if (notificationHandler == null)
        return;
      try {
        result = notificationHandler.call$0();
        if (!!J.getInterceptor(result).$isFuture)
          return result;
        return;
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = H.getTraceFromException(exception);
        $.Zone__current.handleUncaughtError$2(e, s);
      }
    },
    _nullDataHandler: [function(value) {
    }, "call$1", "_nullDataHandler$closure", 2, 0, 20, 22, []],
    _nullErrorHandler: [function(error, stackTrace) {
      $.Zone__current.handleUncaughtError$2(error, stackTrace);
    }, function(error) {
      return P._nullErrorHandler(error, null);
    }, "call$2", "call$1", "_nullErrorHandler$closure", 2, 2, 34, 35, 17, [], 18, []],
    _nullDoneHandler: [function() {
    }, "call$0", "_nullDoneHandler$closure", 0, 0, 7],
    _runUserCode: function(userCode, onSuccess, onError) {
      var e, s, replacement, error, stackTrace, exception, t1, error0;
      try {
        onSuccess.call$1(userCode.call$0());
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        s = H.getTraceFromException(exception);
        replacement = $.Zone__current.errorCallback$2(e, s);
        if (replacement == null)
          onError.call$2(e, s);
        else {
          error0 = J.get$error$x(replacement);
          error = error0 != null ? error0 : new P.NullThrownError();
          stackTrace = replacement.get$stackTrace();
          onError.call$2(error, stackTrace);
        }
      }
    },
    _cancelAndError: function(subscription, future, error, stackTrace) {
      var cancelFuture = subscription.cancel$0();
      if (!!J.getInterceptor(cancelFuture).$isFuture)
        cancelFuture.whenComplete$1(new P._cancelAndError_closure(future, error, stackTrace));
      else
        future._completeError$2(error, stackTrace);
    },
    _cancelAndErrorClosure: function(subscription, future) {
      return new P._cancelAndErrorClosure_closure(subscription, future);
    },
    _cancelAndValue: function(subscription, future, value) {
      var cancelFuture = subscription.cancel$0();
      if (!!J.getInterceptor(cancelFuture).$isFuture)
        cancelFuture.whenComplete$1(new P._cancelAndValue_closure(future, value));
      else
        future._complete$1(value);
    },
    _addErrorWithReplacement: function(sink, error, stackTrace) {
      var replacement = $.Zone__current.errorCallback$2(error, stackTrace);
      if (replacement != null) {
        error = J.get$error$x(replacement);
        error = error != null ? error : new P.NullThrownError();
        stackTrace = replacement.get$stackTrace();
      }
      sink._addError$2(error, stackTrace);
    },
    Timer_Timer: function(duration, callback) {
      var t1;
      if (J.$eq($.Zone__current, C.C__RootZone))
        return $.Zone__current.createTimer$2(duration, callback);
      t1 = $.Zone__current;
      return t1.createTimer$2(duration, t1.bindCallback$2$runGuarded(callback, true));
    },
    Timer_Timer$periodic: function(duration, callback) {
      var t1;
      if (J.$eq($.Zone__current, C.C__RootZone))
        return $.Zone__current.createPeriodicTimer$2(duration, callback);
      t1 = $.Zone__current;
      return t1.createPeriodicTimer$2(duration, t1.bindUnaryCallback$2$runGuarded(callback, true));
    },
    Timer__createTimer: function(duration, callback) {
      var milliseconds = duration.get$inMilliseconds();
      return H.TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    Timer__createPeriodicTimer: function(duration, callback) {
      var milliseconds = duration.get$inMilliseconds();
      return H.TimerImpl$periodic(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    Zone__enter: function(zone) {
      var previous = $.Zone__current;
      $.Zone__current = zone;
      return previous;
    },
    _parentDelegate: function(zone) {
      if (zone.get$parent(zone) == null)
        return;
      return zone.get$parent(zone).get$_async$_delegate();
    },
    _rootHandleUncaughtError: [function($self, $parent, zone, error, stackTrace) {
      var entry, t1, t2;
      entry = new P._AsyncCallbackEntry(new P._rootHandleUncaughtError_closure(error, stackTrace), C.C__RootZone, null);
      t1 = $._nextCallback;
      if (t1 == null) {
        P._scheduleAsyncCallback(entry);
        $._lastPriorityCallback = $._lastCallback;
      } else {
        t2 = $._lastPriorityCallback;
        if (t2 == null) {
          entry.next = t1;
          $._lastPriorityCallback = entry;
          $._nextCallback = entry;
        } else {
          entry.next = t2.next;
          t2.next = entry;
          $._lastPriorityCallback = entry;
          if (entry.next == null)
            $._lastCallback = entry;
        }
      }
    }, "call$5", "_rootHandleUncaughtError$closure", 10, 0, 195, 43, [], 44, [], 45, [], 17, [], 18, []],
    _rootRun: [function($self, $parent, zone, f) {
      var old, t1;
      if (J.$eq($.Zone__current, zone))
        return f.call$0();
      old = P.Zone__enter(zone);
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    }, "call$4", "_rootRun$closure", 8, 0, 196, 43, [], 44, [], 45, [], 42, []],
    _rootRunUnary: [function($self, $parent, zone, f, arg) {
      var old, t1;
      if (J.$eq($.Zone__current, zone))
        return f.call$1(arg);
      old = P.Zone__enter(zone);
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    }, "call$5", "_rootRunUnary$closure", 10, 0, 197, 43, [], 44, [], 45, [], 42, [], 46, []],
    _rootRunBinary: [function($self, $parent, zone, f, arg1, arg2) {
      var old, t1;
      if (J.$eq($.Zone__current, zone))
        return f.call$2(arg1, arg2);
      old = P.Zone__enter(zone);
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    }, "call$6", "_rootRunBinary$closure", 12, 0, 198, 43, [], 44, [], 45, [], 42, [], 12, [], 13, []],
    _rootRegisterCallback: [function($self, $parent, zone, f) {
      return f;
    }, "call$4", "_rootRegisterCallback$closure", 8, 0, 199, 43, [], 44, [], 45, [], 42, []],
    _rootRegisterUnaryCallback: [function($self, $parent, zone, f) {
      return f;
    }, "call$4", "_rootRegisterUnaryCallback$closure", 8, 0, 200, 43, [], 44, [], 45, [], 42, []],
    _rootRegisterBinaryCallback: [function($self, $parent, zone, f) {
      return f;
    }, "call$4", "_rootRegisterBinaryCallback$closure", 8, 0, 201, 43, [], 44, [], 45, [], 42, []],
    _rootErrorCallback: [function($self, $parent, zone, error, stackTrace) {
      return;
    }, "call$5", "_rootErrorCallback$closure", 10, 0, 202, 43, [], 44, [], 45, [], 17, [], 18, []],
    _rootScheduleMicrotask: [function($self, $parent, zone, f) {
      var t1 = C.C__RootZone !== zone;
      if (t1) {
        f = zone.bindCallback$2$runGuarded(f, !(!t1 || C.C__RootZone.get$errorZone() === zone.get$errorZone()));
        zone = C.C__RootZone;
      }
      P._scheduleAsyncCallback(new P._AsyncCallbackEntry(f, zone, null));
    }, "call$4", "_rootScheduleMicrotask$closure", 8, 0, 203, 43, [], 44, [], 45, [], 42, []],
    _rootCreateTimer: [function($self, $parent, zone, duration, callback) {
      return P.Timer__createTimer(duration, C.C__RootZone !== zone ? zone.bindCallback$1(callback) : callback);
    }, "call$5", "_rootCreateTimer$closure", 10, 0, 204, 43, [], 44, [], 45, [], 36, [], 47, []],
    _rootCreatePeriodicTimer: [function($self, $parent, zone, duration, callback) {
      return P.Timer__createPeriodicTimer(duration, C.C__RootZone !== zone ? zone.bindUnaryCallback$1(callback) : callback);
    }, "call$5", "_rootCreatePeriodicTimer$closure", 10, 0, 205, 43, [], 44, [], 45, [], 36, [], 47, []],
    _rootPrint: [function($self, $parent, zone, line) {
      H.printString(H.S(line));
    }, "call$4", "_rootPrint$closure", 8, 0, 206, 43, [], 44, [], 45, [], 48, []],
    _printToZone: [function(line) {
      J.print$1$x($.Zone__current, line);
    }, "call$1", "_printToZone$closure", 2, 0, 61],
    _rootFork: [function($self, $parent, zone, specification, zoneValues) {
      var valueMap, t1;
      $.printToZone = P._printToZone$closure();
      if (specification == null)
        specification = C._ZoneSpecification_ALf;
      else if (!(specification instanceof P._ZoneSpecification))
        throw H.wrapException(P.ArgumentError$("ZoneSpecifications must be instantiated with the provided constructor."));
      if (zoneValues == null)
        valueMap = zone instanceof P._Zone ? zone.get$_async$_map() : P.HashMap_HashMap(null, null, null, null, null);
      else
        valueMap = P.HashMap_HashMap$from(zoneValues, null, null);
      t1 = new P._CustomZone(null, null, null, null, null, null, null, null, null, null, null, null, null, null, zone, valueMap);
      specification.get$run();
      t1._run = zone.get$_run();
      specification.get$runUnary();
      t1._runUnary = zone.get$_runUnary();
      specification.get$runBinary();
      t1._runBinary = zone.get$_runBinary();
      specification.get$registerCallback();
      t1._registerCallback = zone.get$_registerCallback();
      specification.get$registerUnaryCallback();
      t1._registerUnaryCallback = zone.get$_registerUnaryCallback();
      specification.get$registerBinaryCallback();
      t1._registerBinaryCallback = zone.get$_registerBinaryCallback();
      specification.get$errorCallback();
      t1._errorCallback = zone.get$_errorCallback();
      specification.get$scheduleMicrotask();
      t1._scheduleMicrotask = zone.get$_scheduleMicrotask();
      specification.get$createTimer();
      t1._createTimer = zone.get$_createTimer();
      specification.get$createPeriodicTimer();
      t1._createPeriodicTimer = zone.get$_createPeriodicTimer();
      J.get$print$x(specification);
      t1._print = zone.get$_print();
      specification.get$fork();
      t1._fork = zone.get$_fork();
      t1._handleUncaughtError = specification.get$handleUncaughtError() != null ? new P._ZoneFunction(t1, specification.get$handleUncaughtError()) : zone.get$_handleUncaughtError();
      return t1;
    }, "call$5", "_rootFork$closure", 10, 0, 207, 43, [], 44, [], 45, [], 49, [], 50, []],
    runZoned: function(body, onError, zoneSpecification, zoneValues) {
      var zone;
      zoneSpecification = new P._ZoneSpecification(null, null, null, null, null, null, null, null, null, null, null, null, null);
      zone = $.Zone__current.fork$2$specification$zoneValues(zoneSpecification, zoneValues);
      return zone.run$1(body);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: {
      "^": "Closure:8;_async$_box_0",
      call$1: [function(_) {
        var t1, f;
        H.leaveJsAsync();
        t1 = this._async$_box_0;
        f = t1._captured_storedCallback_0;
        t1._captured_storedCallback_0 = null;
        f.call$0();
      }, null, null, 2, 0, null, 51, [], "call"]
    },
    _AsyncRun__initializeScheduleImmediate_closure: {
      "^": "Closure:25;_async$_box_0,_captured_div_1,_captured_span_2",
      call$1: function(callback) {
        var t1, t2;
        ++init.globalState.topEventLoop._activeJsAsyncCount;
        this._async$_box_0._captured_storedCallback_0 = callback;
        t1 = this._captured_div_1;
        t2 = this._captured_span_2;
        t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
      }
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: {
      "^": "Closure:5;_captured_callback_0",
      call$0: [function() {
        H.leaveJsAsync();
        this._captured_callback_0.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: {
      "^": "Closure:5;_captured_callback_0",
      call$0: [function() {
        H.leaveJsAsync();
        this._captured_callback_0.call$0();
      }, null, null, 0, 0, null, "call"]
    },
    _UncaughtAsyncError: {
      "^": "AsyncError;error,stackTrace",
      toString$0: function(_) {
        var result, t1;
        result = "Uncaught Error: " + H.S(this.error);
        t1 = this.stackTrace;
        return t1 != null ? result + ("\nStack Trace:\n" + H.S(t1)) : result;
      },
      static: {_UncaughtAsyncError__getBestStackTrace: function(error, stackTrace) {
          if (stackTrace != null)
            return stackTrace;
          if (!!J.getInterceptor(error).$isError)
            return error.get$stackTrace();
          return;
        }}
    },
    _BroadcastStream: {
      "^": "_ControllerStream;_async$_controller",
      get$isBroadcast: function() {
        return true;
      }
    },
    _BroadcastSubscription: {
      "^": "_ControllerSubscription;_eventState@,_async$_next@,_async$_previous@,_async$_controller,_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
      get$_async$_controller: function() {
        return this._async$_controller;
      },
      _expectsEvent$1: function(eventId) {
        var t1 = this._eventState;
        if (typeof t1 !== "number")
          return t1.$and();
        return (t1 & 1) === eventId;
      },
      _toggleEventId$0: function() {
        var t1 = this._eventState;
        if (typeof t1 !== "number")
          return t1.$xor();
        this._eventState = t1 ^ 1;
      },
      get$_isFiring: function() {
        var t1 = this._eventState;
        if (typeof t1 !== "number")
          return t1.$and();
        return (t1 & 2) !== 0;
      },
      _setRemoveAfterFiring$0: function() {
        var t1 = this._eventState;
        if (typeof t1 !== "number")
          return t1.$or();
        this._eventState = t1 | 4;
      },
      get$_removeAfterFiring: function() {
        var t1 = this._eventState;
        if (typeof t1 !== "number")
          return t1.$and();
        return (t1 & 4) !== 0;
      },
      _onPause$0: [function() {
      }, "call$0", "get$_onPause", 0, 0, 7],
      _onResume$0: [function() {
      }, "call$0", "get$_onResume", 0, 0, 7],
      $is_EventSink: 1,
      $isStreamSubscription: 1
    },
    _BroadcastStreamController: {
      "^": "Object;_async$_next@,_async$_previous@",
      get$stream: function(_) {
        var t1 = new P._BroadcastStream(this);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      get$isClosed: function() {
        return (this._state & 4) !== 0;
      },
      get$isPaused: function() {
        return false;
      },
      get$_isFiring: function() {
        return (this._state & 2) !== 0;
      },
      get$_mayAddEvent: function() {
        return this._state < 4;
      },
      _ensureDoneFuture$0: function() {
        var t1 = this._doneFuture;
        if (t1 != null)
          return t1;
        t1 = new P._Future(0, $.Zone__current, null);
        t1.$builtinTypeInfo = [null];
        this._doneFuture = t1;
        return t1;
      },
      _removeListener$1: function(subscription) {
        var previous, next;
        previous = subscription.get$_async$_previous();
        next = subscription.get$_async$_next();
        previous.set$_async$_next(next);
        next.set$_async$_previous(previous);
        subscription.set$_async$_previous(subscription);
        subscription.set$_async$_next(subscription);
      },
      _subscribe$4: function(onData, onError, onDone, cancelOnError) {
        var t1, subscription;
        if ((this._state & 4) !== 0) {
          if (onDone == null)
            onDone = P._nullDoneHandler$closure();
          t1 = new P._DoneStreamSubscription($.Zone__current, 0, onDone);
          t1.$builtinTypeInfo = this.$builtinTypeInfo;
          t1._schedule$0();
          return t1;
        }
        t1 = $.Zone__current;
        subscription = new P._BroadcastSubscription(null, null, null, this, null, null, null, t1, cancelOnError ? 1 : 0, null, null);
        subscription.$builtinTypeInfo = this.$builtinTypeInfo;
        subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, H.getTypeArgumentByIndex(this, 0));
        subscription._async$_previous = subscription;
        subscription._async$_next = subscription;
        t1 = this._async$_previous;
        subscription._async$_previous = t1;
        subscription._async$_next = this;
        t1.set$_async$_next(subscription);
        this._async$_previous = subscription;
        subscription._eventState = this._state & 1;
        if (this._async$_next === subscription)
          P._runGuarded(this._onListen);
        return subscription;
      },
      _recordCancel$1: function(subscription) {
        if (subscription.get$_async$_next() === subscription)
          return;
        if (subscription.get$_isFiring())
          subscription._setRemoveAfterFiring$0();
        else {
          this._removeListener$1(subscription);
          if ((this._state & 2) === 0 && this._async$_next === this)
            this._callOnCancel$0();
        }
        return;
      },
      _recordPause$1: function(subscription) {
      },
      _recordResume$1: function(subscription) {
      },
      _addEventError$0: ["super$_BroadcastStreamController$_addEventError$0", function() {
        if ((this._state & 4) !== 0)
          return new P.StateError("Cannot add new events after calling close");
        return new P.StateError("Cannot add new events while doing an addStream");
      }],
      add$1: ["super$_BroadcastStreamController$add$1", function(_, data) {
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        this._sendData$1(data);
      }, "call$1", "get$add", 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, void: true, args: [T]};
        }, this.$receiver, "_BroadcastStreamController");
      }, 52, []],
      addError$2: [function(error, stackTrace) {
        var replacement;
        error = error != null ? error : new P.NullThrownError();
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = J.get$error$x(replacement);
          error = error != null ? error : new P.NullThrownError();
          stackTrace = replacement.get$stackTrace();
        }
        this._sendError$2(error, stackTrace);
      }, function(error) {
        return this.addError$2(error, null);
      }, "addError$1", "call$2", "call$1", "get$addError", 2, 2, 26, 35, 17, [], 18, []],
      close$0: ["super$_BroadcastStreamController$close$0", function(_) {
        var doneFuture;
        if ((this._state & 4) !== 0)
          return this._doneFuture;
        if (!this.get$_mayAddEvent())
          throw H.wrapException(this._addEventError$0());
        this._state |= 4;
        doneFuture = this._ensureDoneFuture$0();
        this._sendDone$0();
        return doneFuture;
      }],
      get$done: function() {
        return this._ensureDoneFuture$0();
      },
      _async$_add$1: function(data) {
        this._sendData$1(data);
      },
      _addError$2: function(error, stackTrace) {
        this._sendError$2(error, stackTrace);
      },
      _async$_close$0: function() {
        var addState = this._addStreamState;
        this._addStreamState = null;
        this._state &= 4294967287;
        C.JSNull_methods.complete$0(addState);
      },
      _forEachListener$1: function(action) {
        var t1, link, id, link0;
        t1 = this._state;
        if ((t1 & 2) !== 0)
          throw H.wrapException(new P.StateError("Cannot fire new event. Controller is already firing an event"));
        link = this._async$_next;
        if (link === this)
          return;
        id = t1 & 1;
        this._state = t1 ^ 3;
        for (; link !== this;)
          if (link._expectsEvent$1(id)) {
            t1 = link.get$_eventState();
            if (typeof t1 !== "number")
              return t1.$or();
            link.set$_eventState(t1 | 2);
            action.call$1(link);
            link._toggleEventId$0();
            link0 = link.get$_async$_next();
            if (link.get$_removeAfterFiring())
              this._removeListener$1(link);
            t1 = link.get$_eventState();
            if (typeof t1 !== "number")
              return t1.$and();
            link.set$_eventState(t1 & 4294967293);
            link = link0;
          } else
            link = link.get$_async$_next();
        this._state &= 4294967293;
        if (this._async$_next === this)
          this._callOnCancel$0();
      },
      _callOnCancel$0: ["super$_BroadcastStreamController$_callOnCancel$0", function() {
        if ((this._state & 4) !== 0 && this._doneFuture._state === 0)
          this._doneFuture._asyncComplete$1(null);
        P._runGuarded(this._onCancel);
      }]
    },
    _SyncBroadcastStreamController: {
      "^": "_BroadcastStreamController;_onListen,_onCancel,_state,_async$_next,_async$_previous,_addStreamState,_doneFuture",
      get$_mayAddEvent: function() {
        return P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;
      },
      _addEventError$0: function() {
        if ((this._state & 2) !== 0)
          return new P.StateError("Cannot fire new event. Controller is already firing an event");
        return this.super$_BroadcastStreamController$_addEventError$0();
      },
      _sendData$1: function(data) {
        var t1 = this._async$_next;
        if (t1 === this)
          return;
        if (t1.get$_async$_next() === this) {
          this._state |= 2;
          this._async$_next._async$_add$1(data);
          this._state &= 4294967293;
          if (this._async$_next === this)
            this._callOnCancel$0();
          return;
        }
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendData_closure(this, data));
      },
      _sendError$2: function(error, stackTrace) {
        if (this._async$_next === this)
          return;
        this._forEachListener$1(new P._SyncBroadcastStreamController__sendError_closure(this, error, stackTrace));
      },
      _sendDone$0: function() {
        if (this._async$_next !== this)
          this._forEachListener$1(new P._SyncBroadcastStreamController__sendDone_closure(this));
        else
          this._doneFuture._asyncComplete$1(null);
      }
    },
    _SyncBroadcastStreamController__sendData_closure: {
      "^": "Closure;_async$_captured_this_0,_captured_data_1",
      call$1: function(subscription) {
        subscription._async$_add$1(this._captured_data_1);
      },
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [[P._BufferingStreamSubscription, T]]};
        }, this._async$_captured_this_0, "_SyncBroadcastStreamController");
      }
    },
    _SyncBroadcastStreamController__sendError_closure: {
      "^": "Closure;_async$_captured_this_0,_captured_error_1,_captured_stackTrace_2",
      call$1: function(subscription) {
        subscription._addError$2(this._captured_error_1, this._captured_stackTrace_2);
      },
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [[P._BufferingStreamSubscription, T]]};
        }, this._async$_captured_this_0, "_SyncBroadcastStreamController");
      }
    },
    _SyncBroadcastStreamController__sendDone_closure: {
      "^": "Closure;_async$_captured_this_0",
      call$1: function(subscription) {
        subscription._async$_close$0();
      },
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [[P._BroadcastSubscription, T]]};
        }, this._async$_captured_this_0, "_SyncBroadcastStreamController");
      }
    },
    _AsyncBroadcastStreamController: {
      "^": "_BroadcastStreamController;_onListen,_onCancel,_state,_async$_next,_async$_previous,_addStreamState,_doneFuture",
      _sendData$1: function(data) {
        var link, t1;
        for (link = this._async$_next; link !== this; link = link.get$_async$_next()) {
          t1 = new P._DelayedData(data, null);
          t1.$builtinTypeInfo = [null];
          link._addPending$1(t1);
        }
      },
      _sendError$2: function(error, stackTrace) {
        var link;
        for (link = this._async$_next; link !== this; link = link.get$_async$_next())
          link._addPending$1(new P._DelayedError(error, stackTrace, null));
      },
      _sendDone$0: function() {
        var link = this._async$_next;
        if (link !== this)
          for (; link !== this; link = link.get$_async$_next())
            link._addPending$1(C.C__DelayedDone);
        else
          this._doneFuture._asyncComplete$1(null);
      }
    },
    _AsBroadcastStreamController: {
      "^": "_SyncBroadcastStreamController;_pending,_onListen,_onCancel,_state,_async$_next,_async$_previous,_addStreamState,_doneFuture",
      _addPendingEvent$1: function($event) {
        var t1 = this._pending;
        if (t1 == null) {
          t1 = new P._StreamImplEvents(null, null, 0);
          this._pending = t1;
        }
        t1.add$1(0, $event);
      },
      add$1: [function(_, data) {
        var t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          t1 = new P._DelayedData(data, null);
          t1.$builtinTypeInfo = this.$builtinTypeInfo;
          this._addPendingEvent$1(t1);
          return;
        }
        this.super$_BroadcastStreamController$add$1(this, data);
        while (true) {
          t1 = this._pending;
          if (!(t1 != null && t1.lastPendingEvent != null))
            break;
          t1.handleNext$1(this);
        }
      }, "call$1", "get$add", 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, void: true, args: [T]};
        }, this.$receiver, "_AsBroadcastStreamController");
      }, 52, []],
      addError$2: [function(error, stackTrace) {
        var t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          this._addPendingEvent$1(new P._DelayedError(error, stackTrace, null));
          return;
        }
        if (!(P._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0))
          throw H.wrapException(this._addEventError$0());
        this._sendError$2(error, stackTrace);
        while (true) {
          t1 = this._pending;
          if (!(t1 != null && t1.lastPendingEvent != null))
            break;
          t1.handleNext$1(this);
        }
      }, function(error) {
        return this.addError$2(error, null);
      }, "addError$1", "call$2", "call$1", "get$addError", 2, 2, 26, 35, 17, [], 18, []],
      close$0: [function(_) {
        var t1 = this._state;
        if ((t1 & 4) === 0 && (t1 & 2) !== 0) {
          this._addPendingEvent$1(C.C__DelayedDone);
          this._state |= 4;
          return P._BroadcastStreamController.prototype.get$done.call(this);
        }
        return this.super$_BroadcastStreamController$close$0(this);
      }, "call$0", "get$close", 0, 0, 27],
      _callOnCancel$0: function() {
        var t1 = this._pending;
        if (t1 != null && t1.lastPendingEvent != null) {
          t1.clear$0(0);
          this._pending = null;
        }
        this.super$_BroadcastStreamController$_callOnCancel$0();
      }
    },
    Future: {
      "^": "Object;",
      "<>": [1],
      static: {"^": "Future__nullFuture<-294", Future_Future: [function(computation, $T) {
          var result = new P._Future(0, $.Zone__current, null);
          result.$builtinTypeInfo = [$T];
          P.Timer_Timer(C.Duration_0, new P.Future_Future_closure(computation, result));
          return result;
        }, null, null, 2, 0, function() {
          return H.computeSignature(function(T) {
            return {func: 1, ret: [P.Future, T], args: [{func: 1}]};
          }, this.$receiver, "Future");
        }, 34, [], "new Future"], Future_Future$microtask: [function(computation, $T) {
          var result = new P._Future(0, $.Zone__current, null);
          result.$builtinTypeInfo = [$T];
          P.scheduleMicrotask(new P.Future_Future$microtask_closure(computation, result));
          return result;
        }, null, null, 2, 0, function() {
          return H.computeSignature(function(T) {
            return {func: 1, ret: [P.Future, T], args: [{func: 1}]};
          }, this.$receiver, "Future");
        }, 34, [], "new Future$microtask"], Future_Future$sync: [function(computation, $T) {
          var result, T0, error, stackTrace, t1, exception, replacement;
          try {
            result = computation.call$0();
            t1 = new P._Future(0, $.Zone__current, null);
            t1.$builtinTypeInfo = [T0];
            t1._asyncComplete$1(result);
            return t1;
          } catch (exception) {
            t1 = H.unwrapException(exception);
            error = t1;
            stackTrace = H.getTraceFromException(exception);
            error = error;
            stackTrace = stackTrace;
            error = error != null ? error : new P.NullThrownError();
            t1 = $.Zone__current;
            if (t1 !== C.C__RootZone) {
              replacement = t1.errorCallback$2(error, stackTrace);
              if (replacement != null) {
                error = J.get$error$x(replacement);
                error = error != null ? error : new P.NullThrownError();
                stackTrace = replacement.get$stackTrace();
              }
            }
            t1 = new P._Future(0, $.Zone__current, null);
            t1.$builtinTypeInfo = [T0];
            t1._asyncCompleteError$2(error, stackTrace);
            return t1;
          }
        }, null, null, 2, 0, function() {
          return H.computeSignature(function(T) {
            return {func: 1, ret: [P.Future, T], args: [{func: 1}]};
          }, this.$receiver, "Future");
        }, 34, [], "new Future$sync"], Future_Future$value: [function(value, $T) {
          var t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [$T];
          t1._asyncComplete$1(value);
          return t1;
        }, null, null, 0, 2, function() {
          return H.computeSignature(function(T) {
            return {func: 1, ret: [P.Future, T], opt: [,]};
          }, this.$receiver, "Future");
        }, 35, 22, [], "new Future$value"], Future_Future$error: [function(error, stackTrace, $T) {
          var t1, replacement;
          error = error != null ? error : new P.NullThrownError();
          t1 = $.Zone__current;
          if (t1 !== C.C__RootZone) {
            replacement = t1.errorCallback$2(error, stackTrace);
            if (replacement != null) {
              error = J.get$error$x(replacement);
              error = error != null ? error : new P.NullThrownError();
              stackTrace = replacement.get$stackTrace();
            }
          }
          t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [$T];
          t1._asyncCompleteError$2(error, stackTrace);
          return t1;
        }, null, null, 2, 2, function() {
          return H.computeSignature(function(T) {
            return {func: 1, ret: [P.Future, T], args: [P.Object], opt: [P.StackTrace]};
          }, this.$receiver, "Future");
        }, 35, 17, [], 18, [], "new Future$error"], Future_Future$delayed: [function(duration, computation, $T) {
          var result = new P._Future(0, $.Zone__current, null);
          result.$builtinTypeInfo = [$T];
          P.Timer_Timer(duration, new P.Future_Future$delayed_closure(computation, result));
          return result;
        }, null, null, 2, 2, function() {
          return H.computeSignature(function(T) {
            return {func: 1, ret: [P.Future, T], args: [P.Duration], opt: [{func: 1, ret: T}]};
          }, this.$receiver, "Future");
        }, 35, 36, [], 34, [], "new Future$delayed"], Future_wait: [function(futures, cleanUp, eagerError) {
          var t1, result, t2, t3, values;
          t1 = {};
          result = new P._Future(0, $.Zone__current, null);
          result.$builtinTypeInfo = [P.List];
          t1._captured_values_0 = null;
          t1._captured_remaining_1 = 0;
          t1._captured_error_2 = null;
          t1._captured_stackTrace_3 = null;
          t2 = new P.Future_wait_handleError(t1, eagerError, cleanUp, result);
          for (t3 = J.get$iterator$ax(futures); t3.moveNext$0();)
            t3.get$current().then$2$onError(new P.Future_wait_closure(t1, eagerError, cleanUp, result, t1._captured_remaining_1++), t2);
          t2 = t1._captured_remaining_1;
          if (t2 === 0) {
            t1 = new P._Future(0, $.Zone__current, null);
            t1.$builtinTypeInfo = [null];
            t1._asyncComplete$1(C.List_empty);
            return t1;
          }
          values = Array(t2);
          values.fixed$length = Array;
          t1._captured_values_0 = values;
          return result;
        }, function(futures) {
          return P.Future_wait(futures, null, false);
        }, "call$3$cleanUp$eagerError", "call$1", "Future_wait$closure", 2, 5, 192, 37, 35, 38, [], 39, [], 40, [], "wait"], Future_forEach: [function(input, f) {
          return P.Future_doWhile(new P.Future_forEach_closure(f, J.get$iterator$ax(input)));
        }, "call$2", "Future_forEach$closure", 4, 0, 193, 41, [], 42, [], "forEach"], Future_doWhile: [function(f) {
          var t1, doneSignal, nextIteration;
          t1 = {};
          doneSignal = new P._Future(0, $.Zone__current, null);
          doneSignal.$builtinTypeInfo = [null];
          t1._captured_nextIteration_0 = null;
          nextIteration = $.Zone__current.bindUnaryCallback$2$runGuarded(new P.Future_doWhile_closure(t1, f, doneSignal), true);
          t1._captured_nextIteration_0 = nextIteration;
          nextIteration.call$1(true);
          return doneSignal;
        }, "call$1", "Future_doWhile$closure", 2, 0, 194, 42, [], "doWhile"]}
    },
    "+Future": [0],
    Future_Future_closure: {
      "^": "Closure:5;_captured_computation_0,_async$_captured_result_1",
      call$0: [function() {
        var e, s, exception, t1;
        try {
          this._async$_captured_result_1._complete$1(this._captured_computation_0.call$0());
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._completeWithErrorCallback(this._async$_captured_result_1, e, s);
        }
      }, null, null, 0, 0, 5, "call"]
    },
    Future_Future$microtask_closure: {
      "^": "Closure:5;_captured_computation_0,_async$_captured_result_1",
      call$0: [function() {
        var e, s, exception, t1;
        try {
          this._async$_captured_result_1._complete$1(this._captured_computation_0.call$0());
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._completeWithErrorCallback(this._async$_captured_result_1, e, s);
        }
      }, null, null, 0, 0, 5, "call"]
    },
    Future_Future$delayed_closure: {
      "^": "Closure:5;_captured_computation_0,_async$_captured_result_1",
      call$0: [function() {
        var e, s, t1, exception;
        try {
          t1 = this._captured_computation_0;
          t1 = t1 == null ? null : t1.call$0();
          this._async$_captured_result_1._complete$1(t1);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._completeWithErrorCallback(this._async$_captured_result_1, e, s);
        }
      }, null, null, 0, 0, 5, "call"]
    },
    Future_wait_handleError: {
      "^": "Closure:28;_async$_box_0,_captured_eagerError_1,_captured_cleanUp_2,_captured_result_3",
      call$2: [function(theError, theStackTrace) {
        var t1, t2, t3, t4, _i, value;
        t1 = this._async$_box_0;
        t2 = --t1._captured_remaining_1;
        t3 = t1._captured_values_0;
        if (t3 != null) {
          t2 = this._captured_cleanUp_2;
          if (t2 != null)
            for (t4 = t3.length, _i = 0; _i < t4; ++_i) {
              value = t3[_i];
              if (value != null)
                P.Future_Future$sync(new P.Future_wait_handleError_closure(t2, value), null);
            }
          t1._captured_values_0 = null;
          if (t1._captured_remaining_1 === 0 || this._captured_eagerError_1 === true)
            this._captured_result_3._completeError$2(theError, theStackTrace);
          else {
            t1._captured_error_2 = theError;
            t1._captured_stackTrace_3 = theStackTrace;
          }
        } else if (t2 === 0 && this._captured_eagerError_1 !== true)
          this._captured_result_3._completeError$2(t1._captured_error_2, t1._captured_stackTrace_3);
      }, null, null, 4, 0, 28, 53, [], 54, [], "call"]
    },
    Future_wait_handleError_closure: {
      "^": "Closure:5;_captured_cleanUp_4,_captured_value_5",
      call$0: [function() {
        this._captured_cleanUp_4.call$1(this._captured_value_5);
      }, null, null, 0, 0, 5, "call"]
    },
    Future_wait_closure: {
      "^": "Closure:29;_async$_box_0,_captured_eagerError_6,_captured_cleanUp_7,_captured_result_8,_captured_pos_9",
      call$1: [function(value) {
        var t1, t2, t3;
        t1 = this._async$_box_0;
        t2 = --t1._captured_remaining_1;
        t3 = t1._captured_values_0;
        if (t3 != null) {
          t1 = this._captured_pos_9;
          if (t1 < 0 || t1 >= t3.length)
            return H.ioore(t3, t1);
          t3[t1] = value;
          if (t2 === 0)
            this._captured_result_8._completeWithValue$1(t3);
        } else {
          t2 = this._captured_cleanUp_7;
          if (t2 != null && value != null)
            P.Future_Future$sync(new P.Future_wait__closure(t2, value), null);
          if (t1._captured_remaining_1 === 0 && this._captured_eagerError_6 !== true)
            this._captured_result_8._completeError$2(t1._captured_error_2, t1._captured_stackTrace_3);
        }
      }, null, null, 2, 0, 29, 22, [], "call"]
    },
    Future_wait__closure: {
      "^": "Closure:5;_captured_cleanUp_10,_captured_value_11",
      call$0: [function() {
        this._captured_cleanUp_10.call$1(this._captured_value_11);
      }, null, null, 0, 0, 5, "call"]
    },
    Future_forEach_closure: {
      "^": "Closure:5;_captured_f_0,_captured_iterator_1",
      call$0: [function() {
        var t1 = this._captured_iterator_1;
        if (!t1.moveNext$0())
          return false;
        return P.Future_Future$sync(new P.Future_forEach__closure(this._captured_f_0, t1), null).then$1(new P.Future_forEach__closure0());
      }, null, null, 0, 0, 5, "call"]
    },
    Future_forEach__closure: {
      "^": "Closure:5;_captured_f_2,_captured_iterator_3",
      call$0: [function() {
        return this._captured_f_2.call$1(this._captured_iterator_3.get$current());
      }, null, null, 0, 0, 5, "call"]
    },
    Future_forEach__closure0: {
      "^": "Closure:8;",
      call$1: [function(_) {
        return true;
      }, null, null, 2, 0, 8, 51, [], "call"]
    },
    Future_doWhile_closure: {
      "^": "Closure:30;_async$_box_0,_captured_f_1,_captured_doneSignal_2",
      call$1: [function(keepGoing) {
        var t1 = this._captured_doneSignal_2;
        if (keepGoing === true)
          P.Future_Future$sync(this._captured_f_1, null).then$2$onError(this._async$_box_0._captured_nextIteration_0, t1.get$_completeError());
        else
          t1._complete$1(null);
      }, null, null, 2, 0, 30, 55, [], "call"]
    },
    TimeoutException: {
      "^": "Object;message>,duration>",
      toString$0: function(_) {
        var t1, result;
        t1 = this.duration;
        result = t1 != null ? "TimeoutException after " + H.S(t1) : "TimeoutException";
        return result + ": " + this.message;
      }
    },
    Completer: {
      "^": "Object;",
      "<>": [0],
      static: {Completer_Completer: [function($T) {
          var t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [$T];
          t1 = new P._AsyncCompleter(t1);
          t1.$builtinTypeInfo = [$T];
          return t1;
        }, null, null, 0, 0, function() {
          return H.computeSignature(function(T) {
            return {func: 1, ret: [P.Completer, T]};
          }, this.$receiver, "Completer");
        }, "new Completer"], Completer_Completer$sync: [function($T) {
          var t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [$T];
          t1 = new P._SyncCompleter(t1);
          t1.$builtinTypeInfo = [$T];
          return t1;
        }, null, null, 0, 0, function() {
          return H.computeSignature(function(T) {
            return {func: 1, ret: [P.Completer, T]};
          }, this.$receiver, "Completer");
        }, "new Completer$sync"]}
    },
    "+Completer": [0],
    _Completer: {
      "^": "Object;future<-295",
      completeError$2: [function(error, stackTrace) {
        var replacement;
        error = error != null ? error : new P.NullThrownError();
        if (!this.future.get$_mayComplete())
          throw H.wrapException(new P.StateError("Future already completed"));
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = J.get$error$x(replacement);
          error = error != null ? error : new P.NullThrownError();
          stackTrace = replacement.get$stackTrace();
        }
        this._completeError$2(error, stackTrace);
      }, function(error) {
        return this.completeError$2(error, null);
      }, "completeError$1", "call$2", "call$1", "get$completeError", 2, 2, 26, 35, 17, [], 18, [], "completeError"],
      get$isCompleted: [function() {
        return !this.future.get$_mayComplete();
      }, null, null, 1, 0, 31, "isCompleted"]
    },
    _AsyncCompleter: {
      "^": "_Completer;future-295",
      complete$1: [function(_, value) {
        var t1 = this.future;
        if (!t1.get$_mayComplete())
          throw H.wrapException(new P.StateError("Future already completed"));
        t1._asyncComplete$1(value);
      }, function($receiver) {
        return this.complete$1($receiver, null);
      }, "complete$0", "call$1", "call$0", "get$complete", 0, 2, 32, 35, 22, [], "complete"],
      _completeError$2: function(error, stackTrace) {
        this.future._asyncCompleteError$2(error, stackTrace);
      }
    },
    _SyncCompleter: {
      "^": "_Completer;future-295",
      complete$1: [function(_, value) {
        var t1 = this.future;
        if (!t1.get$_mayComplete())
          throw H.wrapException(new P.StateError("Future already completed"));
        t1._complete$1(value);
      }, function($receiver) {
        return this.complete$1($receiver, null);
      }, "complete$0", "call$1", "call$0", "get$complete", 0, 2, 32, 35, 22, [], "complete"],
      _completeError$2: function(error, stackTrace) {
        this.future._completeError$2(error, stackTrace);
      }
    },
    _FutureListener: {
      "^": "Object;_nextListener@,result>,state,callback<,errorCallback<",
      get$_zone: function() {
        return this.result.get$_zone();
      },
      get$handlesValue: function() {
        return (this.state & 1) !== 0;
      },
      get$hasErrorTest: function() {
        return this.state === 6;
      },
      get$handlesComplete: function() {
        return this.state === 8;
      },
      get$_onValue: function() {
        return this.callback;
      },
      get$_onError: function() {
        return this.errorCallback;
      },
      get$_errorTest: function() {
        return this.callback;
      },
      get$_whenCompleteAction: function() {
        return this.callback;
      },
      callback$0: function() {
        return this.callback.call$0();
      },
      callback$1: function(arg0) {
        return this.callback.call$1(arg0);
      },
      errorCallback$2: function(arg0, arg1) {
        return this.errorCallback.call$2(arg0, arg1);
      }
    },
    _Future: {
      "^": "Object;_state,_zone<,_resultOrListeners",
      get$_mayComplete: function() {
        return this._state === 0;
      },
      get$_hasError: function() {
        return this._state === 8;
      },
      set$_isChained: function(value) {
        if (value)
          this._state = 2;
        else
          this._state = 0;
      },
      then$2$onError: [function(f, onError) {
        var t1, result;
        t1 = $.Zone__current;
        result = new P._Future(0, t1, null);
        result.$builtinTypeInfo = [null];
        if (t1 !== C.C__RootZone) {
          f = t1.registerUnaryCallback$1(f);
          if (onError != null)
            onError = P._registerErrorHandler(onError, t1);
        }
        this._addListener$1(new P._FutureListener(null, result, onError == null ? 1 : 3, f, onError));
        return result;
      }, function(f) {
        return this.then$2$onError(f, null);
      }, "then$1", "call$2$onError", "call$1", "get$then", 2, 3, function() {
        return H.computeSignature(function(T) {
          return {func: 1, ret: P.Future, args: [{func: 1, args: [T]}], named: {onError: P.Function}};
        }, this.$receiver, "_Future");
      }, 35, 42, [], 57, [], "then"],
      catchError$2$test: [function(onError, test) {
        var t1, result;
        t1 = $.Zone__current;
        result = new P._Future(0, t1, null);
        result.$builtinTypeInfo = [null];
        if (t1 !== C.C__RootZone) {
          onError = P._registerErrorHandler(onError, t1);
          if (test != null)
            test = t1.registerUnaryCallback$1(test);
        }
        this._addListener$1(new P._FutureListener(null, result, test == null ? 2 : 6, test, onError));
        return result;
      }, function(onError) {
        return this.catchError$2$test(onError, null);
      }, "catchError$1", "call$2$test", "call$1", "get$catchError", 2, 3, 33, 35, 57, [], 58, [], "catchError"],
      whenComplete$1: [function(action) {
        var t1, result;
        t1 = $.Zone__current;
        result = new P._Future(0, t1, null);
        result.$builtinTypeInfo = this.$builtinTypeInfo;
        this._addListener$1(new P._FutureListener(null, result, 8, t1 !== C.C__RootZone ? t1.registerCallback$1(action) : action, null));
        return result;
      }, "call$1", "get$whenComplete", 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, ret: [P.Future, T], args: [{func: 1}]};
        }, this.$receiver, "_Future");
      }, 59, [], "whenComplete"],
      asStream$0: [function() {
        return P.Stream_Stream$fromFuture(this, null);
      }, "call$0", "get$asStream", 0, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, ret: [P.Stream, T]};
        }, this.$receiver, "_Future");
      }, "asStream"],
      _markPendingCompletion$0: function() {
        if (this._state !== 0)
          throw H.wrapException(new P.StateError("Future already completed"));
        this._state = 1;
      },
      get$_async$_value: function() {
        return this._resultOrListeners;
      },
      get$_error: function() {
        return this._resultOrListeners;
      },
      _setValue$1: function(value) {
        this._state = 4;
        this._resultOrListeners = value;
      },
      _setErrorObject$1: function(error) {
        this._state = 8;
        this._resultOrListeners = error;
      },
      _setError$2: function(error, stackTrace) {
        this._setErrorObject$1(new P.AsyncError(error, stackTrace));
      },
      _addListener$1: function(listener) {
        if (this._state >= 4)
          this._zone.scheduleMicrotask$1(new P._Future__addListener_closure(this, listener));
        else {
          listener._nextListener = this._resultOrListeners;
          this._resultOrListeners = listener;
        }
      },
      _removeListeners$0: function() {
        var current, prev, next;
        current = this._resultOrListeners;
        this._resultOrListeners = null;
        for (prev = null; current != null; prev = current, current = next) {
          next = current.get$_nextListener();
          current.set$_nextListener(prev);
        }
        return prev;
      },
      _complete$1: function(value) {
        var t1, listeners;
        t1 = J.getInterceptor(value);
        if (!!t1.$isFuture)
          if (!!t1.$is_Future)
            P._Future__chainCoreFuture(value, this);
          else
            P._Future__chainForeignFuture(value, this);
        else {
          listeners = this._removeListeners$0();
          this._setValue$1(value);
          P._Future__propagateToListeners(this, listeners);
        }
      },
      _completeWithValue$1: function(value) {
        var listeners = this._removeListeners$0();
        this._setValue$1(value);
        P._Future__propagateToListeners(this, listeners);
      },
      _completeError$2: [function(error, stackTrace) {
        var listeners = this._removeListeners$0();
        this._setErrorObject$1(new P.AsyncError(error, stackTrace));
        P._Future__propagateToListeners(this, listeners);
      }, function(error) {
        return this._completeError$2(error, null);
      }, "_completeError$1", "call$2", "call$1", "get$_completeError", 2, 2, 34, 35, 17, [], 18, []],
      _asyncComplete$1: function(value) {
        var t1;
        if (value == null)
          ;
        else {
          t1 = J.getInterceptor(value);
          if (!!t1.$isFuture) {
            if (!!t1.$is_Future) {
              t1 = value._state;
              if (t1 >= 4 && t1 === 8) {
                this._markPendingCompletion$0();
                this._zone.scheduleMicrotask$1(new P._Future__asyncComplete_closure(this, value));
              } else
                P._Future__chainCoreFuture(value, this);
            } else
              P._Future__chainForeignFuture(value, this);
            return;
          }
        }
        this._markPendingCompletion$0();
        this._zone.scheduleMicrotask$1(new P._Future__asyncComplete_closure0(this, value));
      },
      _asyncCompleteError$2: function(error, stackTrace) {
        this._markPendingCompletion$0();
        this._zone.scheduleMicrotask$1(new P._Future__asyncCompleteError_closure(this, error, stackTrace));
      },
      timeout$2$onTimeout: [function(timeLimit, onTimeout) {
        var t1, result, zone;
        t1 = {};
        t1._captured_onTimeout_0 = onTimeout;
        if (this._state >= 4) {
          t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [null];
          t1._asyncComplete$1(this);
          return t1;
        }
        result = new P._Future(0, $.Zone__current, null);
        result.$builtinTypeInfo = [null];
        t1._captured_timer_1 = null;
        if (onTimeout == null)
          t1._captured_timer_1 = P.Timer_Timer(timeLimit, new P._Future_timeout_closure(timeLimit, result));
        else {
          zone = $.Zone__current;
          t1._captured_onTimeout_0 = zone.registerCallback$1(onTimeout);
          t1._captured_timer_1 = P.Timer_Timer(timeLimit, new P._Future_timeout_closure0(t1, result, zone));
        }
        this.then$2$onError(new P._Future_timeout_closure1(t1, this, result), new P._Future_timeout_closure2(t1, result));
        return result;
      }, function(timeLimit) {
        return this.timeout$2$onTimeout(timeLimit, null);
      }, "timeout$1", "call$2$onTimeout", "call$1", "get$timeout", 2, 3, 35, 35, 60, [], 61, [], "timeout"],
      $isFuture: 1,
      static: {_Future__chainForeignFuture: function(source, target) {
          var e, s, exception, t1;
          target.set$_isChained(true);
          try {
            source.then$2$onError(new P._Future__chainForeignFuture_closure(target), new P._Future__chainForeignFuture_closure0(target));
          } catch (exception) {
            t1 = H.unwrapException(exception);
            e = t1;
            s = H.getTraceFromException(exception);
            P.scheduleMicrotask(new P._Future__chainForeignFuture_closure1(target, e, s));
          }
        }, _Future__chainCoreFuture: function(source, target) {
          var listener;
          target.set$_isChained(true);
          listener = new P._FutureListener(null, target, 0, null, null);
          if (source._state >= 4)
            P._Future__propagateToListeners(source, listener);
          else
            source._addListener$1(listener);
        }, _Future__propagateToListeners: function(source, listeners) {
          var t1, t2, t3, hasError, asyncError, listeners0, sourceValue, zone, oldZone, chainSource, result;
          t1 = {};
          t1._captured_source_4 = source;
          for (t2 = source; true;) {
            t3 = {};
            hasError = t2.get$_hasError();
            if (listeners == null) {
              if (hasError) {
                asyncError = t1._captured_source_4.get$_error();
                t1._captured_source_4.get$_zone().handleUncaughtError$2(J.get$error$x(asyncError), asyncError.get$stackTrace());
              }
              return;
            }
            for (; listeners.get$_nextListener() != null; listeners = listeners0) {
              listeners0 = listeners.get$_nextListener();
              listeners.set$_nextListener(null);
              P._Future__propagateToListeners(t1._captured_source_4, listeners);
            }
            t3._captured_listenerHasValue_1 = true;
            sourceValue = hasError ? null : t1._captured_source_4.get$_async$_value();
            t3._captured_listenerValueOrError_2 = sourceValue;
            t3._captured_isPropagationAborted_3 = false;
            t2 = !hasError;
            if (!t2 || listeners.get$handlesValue() || listeners.get$handlesComplete()) {
              zone = listeners.get$_zone();
              if (hasError && !t1._captured_source_4.get$_zone().inSameErrorZone$1(zone)) {
                asyncError = t1._captured_source_4.get$_error();
                t1._captured_source_4.get$_zone().handleUncaughtError$2(J.get$error$x(asyncError), asyncError.get$stackTrace());
                return;
              }
              oldZone = $.Zone__current;
              if (oldZone == null ? zone != null : oldZone !== zone)
                $.Zone__current = zone;
              else
                oldZone = null;
              if (t2) {
                if (listeners.get$handlesValue())
                  t3._captured_listenerHasValue_1 = new P._Future__propagateToListeners_handleValueCallback(t3, listeners, sourceValue, zone).call$0();
              } else
                new P._Future__propagateToListeners_handleError(t1, t3, listeners, zone).call$0();
              if (listeners.get$handlesComplete())
                new P._Future__propagateToListeners_handleWhenCompleteCallback(t1, t3, hasError, listeners, zone).call$0();
              if (oldZone != null)
                $.Zone__current = oldZone;
              if (t3._captured_isPropagationAborted_3)
                return;
              if (t3._captured_listenerHasValue_1 === true) {
                t2 = t3._captured_listenerValueOrError_2;
                t2 = (sourceValue == null ? t2 != null : sourceValue !== t2) && !!J.getInterceptor(t2).$isFuture;
              } else
                t2 = false;
              if (t2) {
                chainSource = t3._captured_listenerValueOrError_2;
                result = J.get$result$x(listeners);
                if (chainSource instanceof P._Future)
                  if (chainSource._state >= 4) {
                    result.set$_isChained(true);
                    t1._captured_source_4 = chainSource;
                    listeners = new P._FutureListener(null, result, 0, null, null);
                    t2 = chainSource;
                    continue;
                  } else
                    P._Future__chainCoreFuture(chainSource, result);
                else
                  P._Future__chainForeignFuture(chainSource, result);
                return;
              }
            }
            result = J.get$result$x(listeners);
            listeners = result._removeListeners$0();
            t2 = t3._captured_listenerHasValue_1;
            t3 = t3._captured_listenerValueOrError_2;
            if (t2 === true)
              result._setValue$1(t3);
            else
              result._setErrorObject$1(t3);
            t1._captured_source_4 = result;
            t2 = result;
          }
        }}
    },
    _Future__addListener_closure: {
      "^": "Closure:5;_async$_captured_this_0,_captured_listener_1",
      call$0: [function() {
        P._Future__propagateToListeners(this._async$_captured_this_0, this._captured_listener_1);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__chainForeignFuture_closure: {
      "^": "Closure:8;_captured_target_0",
      call$1: [function(value) {
        this._captured_target_0._completeWithValue$1(value);
      }, null, null, 2, 0, null, 22, [], "call"]
    },
    _Future__chainForeignFuture_closure0: {
      "^": "Closure:36;_captured_target_1",
      call$2: [function(error, stackTrace) {
        this._captured_target_1._completeError$2(error, stackTrace);
      }, function(error) {
        return this.call$2(error, null);
      }, "call$1", null, null, null, 2, 2, null, 35, 17, [], 18, [], "call"]
    },
    _Future__chainForeignFuture_closure1: {
      "^": "Closure:5;_captured_target_2,_captured_e_3,_captured_s_4",
      call$0: [function() {
        this._captured_target_2._completeError$2(this._captured_e_3, this._captured_s_4);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__asyncComplete_closure: {
      "^": "Closure:5;_async$_captured_this_0,_captured_coreFuture_1",
      call$0: [function() {
        P._Future__chainCoreFuture(this._captured_coreFuture_1, this._async$_captured_this_0);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__asyncComplete_closure0: {
      "^": "Closure:5;_captured_this_2,_captured_value_3",
      call$0: [function() {
        this._captured_this_2._completeWithValue$1(this._captured_value_3);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__asyncCompleteError_closure: {
      "^": "Closure:5;_async$_captured_this_0,_captured_error_1,_captured_stackTrace_2",
      call$0: [function() {
        this._async$_captured_this_0._completeError$2(this._captured_error_1, this._captured_stackTrace_2);
      }, null, null, 0, 0, null, "call"]
    },
    _Future__propagateToListeners_handleValueCallback: {
      "^": "Closure:31;_box_1,_captured_listener_3,_captured_sourceValue_4,_captured_zone_5",
      call$0: function() {
        var e, s, exception, t1;
        try {
          this._box_1._captured_listenerValueOrError_2 = this._captured_zone_5.runUnary$2(this._captured_listener_3.get$_onValue(), this._captured_sourceValue_4);
          return true;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          this._box_1._captured_listenerValueOrError_2 = new P.AsyncError(e, s);
          return false;
        }
      }
    },
    _Future__propagateToListeners_handleError: {
      "^": "Closure:7;_box_2,_box_1,_captured_listener_6,_captured_zone_7",
      call$0: function() {
        var asyncError, matchesTest, test, e, s, errorCallback, e0, s0, t1, exception, t2, listenerValueOrError, t3, t4;
        asyncError = this._box_2._captured_source_4.get$_error();
        matchesTest = true;
        t1 = this._captured_listener_6;
        if (t1.get$hasErrorTest()) {
          test = t1.get$_errorTest();
          try {
            matchesTest = this._captured_zone_7.runUnary$2(test, J.get$error$x(asyncError));
          } catch (exception) {
            t1 = H.unwrapException(exception);
            e = t1;
            s = H.getTraceFromException(exception);
            t1 = J.get$error$x(asyncError);
            t2 = e;
            listenerValueOrError = (t1 == null ? t2 == null : t1 === t2) ? asyncError : new P.AsyncError(e, s);
            t1 = this._box_1;
            t1._captured_listenerValueOrError_2 = listenerValueOrError;
            t1._captured_listenerHasValue_1 = false;
            return;
          }
        }
        errorCallback = t1.get$_onError();
        if (matchesTest === true && errorCallback != null) {
          try {
            t1 = errorCallback;
            t2 = H.getDynamicRuntimeType();
            t2 = H.buildFunctionType(t2, [t2, t2])._isTest$1(t1);
            t3 = this._captured_zone_7;
            t4 = this._box_1;
            if (t2)
              t4._captured_listenerValueOrError_2 = t3.runBinary$3(errorCallback, J.get$error$x(asyncError), asyncError.get$stackTrace());
            else
              t4._captured_listenerValueOrError_2 = t3.runUnary$2(errorCallback, J.get$error$x(asyncError));
          } catch (exception) {
            t1 = H.unwrapException(exception);
            e0 = t1;
            s0 = H.getTraceFromException(exception);
            t1 = J.get$error$x(asyncError);
            t2 = e0;
            listenerValueOrError = (t1 == null ? t2 == null : t1 === t2) ? asyncError : new P.AsyncError(e0, s0);
            t1 = this._box_1;
            t1._captured_listenerValueOrError_2 = listenerValueOrError;
            t1._captured_listenerHasValue_1 = false;
            return;
          }
          this._box_1._captured_listenerHasValue_1 = true;
        } else {
          t1 = this._box_1;
          t1._captured_listenerValueOrError_2 = asyncError;
          t1._captured_listenerHasValue_1 = false;
        }
      }
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: {
      "^": "Closure:7;_box_2,_box_1,_captured_hasError_8,_captured_listener_9,_captured_zone_10",
      call$0: function() {
        var t1, e, s, completeResult, t2, exception, result;
        t1 = {};
        t1._captured_completeResult_0 = null;
        try {
          completeResult = this._captured_zone_10.run$1(this._captured_listener_9.get$_whenCompleteAction());
          t1._captured_completeResult_0 = completeResult;
          t2 = completeResult;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          if (this._captured_hasError_8) {
            t1 = J.get$error$x(this._box_2._captured_source_4.get$_error());
            t2 = e;
            t2 = t1 == null ? t2 == null : t1 === t2;
            t1 = t2;
          } else
            t1 = false;
          t2 = this._box_1;
          if (t1)
            t2._captured_listenerValueOrError_2 = this._box_2._captured_source_4.get$_error();
          else
            t2._captured_listenerValueOrError_2 = new P.AsyncError(e, s);
          t2._captured_listenerHasValue_1 = false;
          return;
        }
        if (!!J.getInterceptor(t2).$isFuture) {
          result = J.get$result$x(this._captured_listener_9);
          result.set$_isChained(true);
          this._box_1._captured_isPropagationAborted_3 = true;
          t2.then$2$onError(new P._Future__propagateToListeners_handleWhenCompleteCallback_closure(this._box_2, result), new P._Future__propagateToListeners_handleWhenCompleteCallback_closure0(t1, result));
        }
      }
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: {
      "^": "Closure:8;_box_2,_captured_result_11",
      call$1: [function(ignored) {
        P._Future__propagateToListeners(this._box_2._captured_source_4, new P._FutureListener(null, this._captured_result_11, 0, null, null));
      }, null, null, 2, 0, null, 62, [], "call"]
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure0: {
      "^": "Closure:36;_async$_box_0,_captured_result_12",
      call$2: [function(error, stackTrace) {
        var t1, completeResult;
        t1 = this._async$_box_0;
        if (!(t1._captured_completeResult_0 instanceof P._Future)) {
          completeResult = new P._Future(0, $.Zone__current, null);
          completeResult.$builtinTypeInfo = [null];
          t1._captured_completeResult_0 = completeResult;
          completeResult._setError$2(error, stackTrace);
        }
        P._Future__propagateToListeners(t1._captured_completeResult_0, new P._FutureListener(null, this._captured_result_12, 0, null, null));
      }, function(error) {
        return this.call$2(error, null);
      }, "call$1", null, null, null, 2, 2, null, 35, 17, [], 18, [], "call"]
    },
    _Future_timeout_closure: {
      "^": "Closure:5;_captured_timeLimit_1,_captured_result_2",
      call$0: [function() {
        this._captured_result_2._completeError$1(new P.TimeoutException("Future not completed", this._captured_timeLimit_1));
      }, null, null, 0, 0, null, "call"]
    },
    _Future_timeout_closure0: {
      "^": "Closure:5;_async$_box_0,_captured_result_3,_captured_zone_4",
      call$0: [function() {
        var e, s, exception, t1;
        try {
          this._captured_result_3._complete$1(this._captured_zone_4.run$1(this._async$_box_0._captured_onTimeout_0));
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          this._captured_result_3._completeError$2(e, s);
        }
      }, null, null, 0, 0, null, "call"]
    },
    _Future_timeout_closure1: {
      "^": "Closure;_async$_box_0,_captured_this_5,_captured_result_6",
      call$1: [function(v) {
        var t1 = this._async$_box_0;
        if (t1._captured_timer_1.get$isActive()) {
          t1._captured_timer_1.cancel$0();
          this._captured_result_6._completeWithValue$1(v);
        }
      }, null, null, 2, 0, null, 63, [], "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._captured_this_5, "_Future");
      }
    },
    _Future_timeout_closure2: {
      "^": "Closure:15;_async$_box_0,_captured_result_7",
      call$2: [function(e, s) {
        var t1 = this._async$_box_0;
        if (t1._captured_timer_1.get$isActive()) {
          t1._captured_timer_1.cancel$0();
          this._captured_result_7._completeError$2(e, s);
        }
      }, null, null, 4, 0, null, 6, [], 64, [], "call"]
    },
    _AsyncCallbackEntry: {
      "^": "Object;callback<,zone<,next@",
      callback$0: function() {
        return this.callback.call$0();
      },
      callback$1: function(arg0) {
        return this.callback.call$1(arg0);
      }
    },
    Stream: {
      "^": "Object;",
      get$isBroadcast: function() {
        return false;
      },
      where$1: function(_, test) {
        var t1 = new P._WhereStream(test, this);
        t1.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "Stream", 0)];
        return t1;
      },
      map$1: function(_, convert) {
        var t1 = new P._MapStream(convert, this);
        t1.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "Stream", 0), null];
        return t1;
      },
      fold$2: function(_, initialValue, combine) {
        var t1, result;
        t1 = {};
        result = new P._Future(0, $.Zone__current, null);
        result.$builtinTypeInfo = [null];
        t1._captured_value_0 = initialValue;
        t1._captured_subscription_1 = null;
        t1._captured_subscription_1 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_fold_closure(t1, this, combine, result), true, new P.Stream_fold_closure0(t1, result), new P.Stream_fold_closure1(result));
        return result;
      },
      join$1: function(_, separator) {
        var t1, result, buffer;
        t1 = {};
        result = new P._Future(0, $.Zone__current, null);
        result.$builtinTypeInfo = [P.String];
        buffer = new P.StringBuffer("");
        t1._captured_subscription_0 = null;
        t1._captured_first_1 = true;
        t1._captured_subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_join_closure(t1, this, separator, result, buffer), true, new P.Stream_join_closure0(result, buffer), new P.Stream_join_closure1(result));
        return result;
      },
      contains$1: function(_, needle) {
        var t1, future;
        t1 = {};
        future = new P._Future(0, $.Zone__current, null);
        future.$builtinTypeInfo = [P.bool];
        t1._captured_subscription_0 = null;
        t1._captured_subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_contains_closure(t1, this, needle, future), true, new P.Stream_contains_closure0(future), future.get$_completeError());
        return future;
      },
      forEach$1: function(_, action) {
        var t1, future;
        t1 = {};
        future = new P._Future(0, $.Zone__current, null);
        future.$builtinTypeInfo = [null];
        t1._captured_subscription_0 = null;
        t1._captured_subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_forEach_closure(t1, this, action, future), true, new P.Stream_forEach_closure0(future), future.get$_completeError());
        return future;
      },
      get$length: function(_) {
        var t1, future;
        t1 = {};
        future = new P._Future(0, $.Zone__current, null);
        future.$builtinTypeInfo = [P.$int];
        t1._captured_count_0 = 0;
        this.listen$4$cancelOnError$onDone$onError(new P.Stream_length_closure(t1), true, new P.Stream_length_closure0(t1, future), future.get$_completeError());
        return future;
      },
      get$isEmpty: function(_) {
        var t1, future;
        t1 = {};
        future = new P._Future(0, $.Zone__current, null);
        future.$builtinTypeInfo = [P.bool];
        t1._captured_subscription_0 = null;
        t1._captured_subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_isEmpty_closure(t1, future), true, new P.Stream_isEmpty_closure0(future), future.get$_completeError());
        return future;
      },
      toList$0: function(_) {
        var result, future;
        result = [];
        result.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "Stream", 0)];
        future = new P._Future(0, $.Zone__current, null);
        future.$builtinTypeInfo = [[P.List, H.getRuntimeTypeArgument(this, "Stream", 0)]];
        this.listen$4$cancelOnError$onDone$onError(new P.Stream_toList_closure(this, result), true, new P.Stream_toList_closure0(result, future), future.get$_completeError());
        return future;
      },
      get$first: function(_) {
        var t1, future;
        t1 = {};
        future = new P._Future(0, $.Zone__current, null);
        future.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "Stream", 0)];
        t1._captured_subscription_0 = null;
        t1._captured_subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_first_closure(t1, this, future), true, new P.Stream_first_closure0(future), future.get$_completeError());
        return future;
      },
      get$last: function(_) {
        var t1, future;
        t1 = {};
        future = new P._Future(0, $.Zone__current, null);
        future.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "Stream", 0)];
        t1._captured_result_0 = null;
        t1._captured_foundResult_1 = false;
        this.listen$4$cancelOnError$onDone$onError(new P.Stream_last_closure(t1, this), true, new P.Stream_last_closure0(t1, future), future.get$_completeError());
        return future;
      },
      elementAt$1: function(_, index) {
        var t1, future;
        t1 = {};
        if (typeof index !== "number" || Math.floor(index) !== index || index < 0)
          throw H.wrapException(P.ArgumentError$(index));
        future = new P._Future(0, $.Zone__current, null);
        future.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "Stream", 0)];
        t1._captured_subscription_0 = null;
        t1._captured_elementIndex_1 = 0;
        t1._captured_subscription_0 = this.listen$4$cancelOnError$onDone$onError(new P.Stream_elementAt_closure(t1, this, index, future), true, new P.Stream_elementAt_closure0(t1, this, index, future), future.get$_completeError());
        return future;
      },
      timeout$2$onTimeout: function(timeLimit, onTimeout) {
        var t1, t2, t3, controller;
        t1 = {};
        t1._captured_onTimeout_0 = onTimeout;
        t1._captured_controller_1 = null;
        t1._captured_subscription_2 = null;
        t1._captured_timer_3 = null;
        t1._captured_zone_4 = null;
        t1._captured_timeout_5 = null;
        t2 = new P.Stream_timeout_onListen(t1, this, timeLimit, new P.Stream_timeout_onData(t1, this, timeLimit), new P.Stream_timeout_onError(t1, this, timeLimit), new P.Stream_timeout_onDone(t1));
        t3 = new P.Stream_timeout_onCancel(t1);
        if (this.get$isBroadcast()) {
          controller = new P._SyncBroadcastStreamController(t2, t3, 0, null, null, null, null);
          controller.$builtinTypeInfo = [null];
          controller._async$_previous = controller;
          controller._async$_next = controller;
        } else {
          controller = new P._SyncStreamController(t2, new P.Stream_timeout_closure(t1), new P.Stream_timeout_closure0(t1, timeLimit), t3, null, 0, null);
          controller.$builtinTypeInfo = [null];
        }
        t1._captured_controller_1 = controller;
        return controller.get$stream(controller);
      }
    },
    Stream_Stream$fromFuture_closure: {
      "^": "Closure:8;_captured_controller_0",
      call$1: [function(value) {
        var t1 = this._captured_controller_0;
        t1._async$_add$1(value);
        t1._closeUnchecked$0();
      }, null, null, 2, 0, null, 22, [], "call"]
    },
    Stream_Stream$fromFuture_closure0: {
      "^": "Closure:15;_captured_controller_1",
      call$2: [function(error, stackTrace) {
        var t1 = this._captured_controller_1;
        t1._addError$2(error, stackTrace);
        t1._closeUnchecked$0();
      }, null, null, 4, 0, null, 17, [], 18, [], "call"]
    },
    Stream_fold_closure: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1,_captured_combine_2,_captured_result_3",
      call$1: [function(element) {
        var t1 = this._async$_box_0;
        P._runUserCode(new P.Stream_fold__closure(t1, this._captured_combine_2, element), new P.Stream_fold__closure0(t1), P._cancelAndErrorClosure(t1._captured_subscription_1, this._captured_result_3));
      }, null, null, 2, 0, null, 65, [], "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_fold__closure: {
      "^": "Closure:5;_async$_box_0,_captured_combine_4,_captured_element_5",
      call$0: function() {
        return this._captured_combine_4.call$2(this._async$_box_0._captured_value_0, this._captured_element_5);
      }
    },
    Stream_fold__closure0: {
      "^": "Closure:8;_async$_box_0",
      call$1: function(newValue) {
        this._async$_box_0._captured_value_0 = newValue;
      }
    },
    Stream_fold_closure1: {
      "^": "Closure:15;_captured_result_6",
      call$2: [function(e, st) {
        this._captured_result_6._completeError$2(e, st);
      }, null, null, 4, 0, null, 6, [], 66, [], "call"]
    },
    Stream_fold_closure0: {
      "^": "Closure:5;_async$_box_0,_captured_result_7",
      call$0: [function() {
        this._captured_result_7._complete$1(this._async$_box_0._captured_value_0);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_join_closure: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1,_captured_separator_2,_captured_result_3,_captured_buffer_4",
      call$1: [function(element) {
        var e, s, t1, exception, t2, error, stackTrace, replacement;
        t1 = this._async$_box_0;
        if (!t1._captured_first_1)
          this._captured_buffer_4._contents += this._captured_separator_2;
        t1._captured_first_1 = false;
        try {
          this._captured_buffer_4._contents += H.S(element);
        } catch (exception) {
          t2 = H.unwrapException(exception);
          e = t2;
          s = H.getTraceFromException(exception);
          t1 = t1._captured_subscription_0;
          error = e;
          stackTrace = s;
          replacement = $.Zone__current.errorCallback$2(error, stackTrace);
          if (replacement != null) {
            error = J.get$error$x(replacement);
            error = error != null ? error : new P.NullThrownError();
            stackTrace = replacement.get$stackTrace();
          }
          P._cancelAndError(t1, this._captured_result_3, error, stackTrace);
        }
      }, null, null, 2, 0, null, 65, [], "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_join_closure1: {
      "^": "Closure:8;_captured_result_5",
      call$1: [function(e) {
        this._captured_result_5._completeError$1(e);
      }, null, null, 2, 0, null, 6, [], "call"]
    },
    Stream_join_closure0: {
      "^": "Closure:5;_captured_result_6,_captured_buffer_7",
      call$0: [function() {
        var t1 = this._captured_buffer_7._contents;
        this._captured_result_6._complete$1(t1.charCodeAt(0) == 0 ? t1 : t1);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_contains_closure: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1,_captured_needle_2,_captured_future_3",
      call$1: [function(element) {
        var t1, t2;
        t1 = this._async$_box_0;
        t2 = this._captured_future_3;
        P._runUserCode(new P.Stream_contains__closure(this._captured_needle_2, element), new P.Stream_contains__closure0(t1, t2), P._cancelAndErrorClosure(t1._captured_subscription_0, t2));
      }, null, null, 2, 0, null, 65, [], "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_contains__closure: {
      "^": "Closure:5;_captured_needle_4,_captured_element_5",
      call$0: function() {
        return J.$eq(this._captured_element_5, this._captured_needle_4);
      }
    },
    Stream_contains__closure0: {
      "^": "Closure:30;_async$_box_0,_captured_future_6",
      call$1: function(isMatch) {
        if (isMatch === true)
          P._cancelAndValue(this._async$_box_0._captured_subscription_0, this._captured_future_6, true);
      }
    },
    Stream_contains_closure0: {
      "^": "Closure:5;_captured_future_7",
      call$0: [function() {
        this._captured_future_7._complete$1(false);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_forEach_closure: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1,_captured_action_2,_captured_future_3",
      call$1: [function(element) {
        P._runUserCode(new P.Stream_forEach__closure(this._captured_action_2, element), new P.Stream_forEach__closure0(), P._cancelAndErrorClosure(this._async$_box_0._captured_subscription_0, this._captured_future_3));
      }, null, null, 2, 0, null, 65, [], "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_forEach__closure: {
      "^": "Closure:5;_captured_action_4,_captured_element_5",
      call$0: function() {
        return this._captured_action_4.call$1(this._captured_element_5);
      }
    },
    Stream_forEach__closure0: {
      "^": "Closure:8;",
      call$1: function(_) {
      }
    },
    Stream_forEach_closure0: {
      "^": "Closure:5;_captured_future_6",
      call$0: [function() {
        this._captured_future_6._complete$1(null);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_length_closure: {
      "^": "Closure:8;_async$_box_0",
      call$1: [function(_) {
        ++this._async$_box_0._captured_count_0;
      }, null, null, 2, 0, null, 51, [], "call"]
    },
    Stream_length_closure0: {
      "^": "Closure:5;_async$_box_0,_captured_future_1",
      call$0: [function() {
        this._captured_future_1._complete$1(this._async$_box_0._captured_count_0);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_isEmpty_closure: {
      "^": "Closure:8;_async$_box_0,_captured_future_1",
      call$1: [function(_) {
        P._cancelAndValue(this._async$_box_0._captured_subscription_0, this._captured_future_1, false);
      }, null, null, 2, 0, null, 51, [], "call"]
    },
    Stream_isEmpty_closure0: {
      "^": "Closure:5;_captured_future_2",
      call$0: [function() {
        this._captured_future_2._complete$1(true);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_toList_closure: {
      "^": "Closure;_async$_captured_this_0,_async$_captured_result_1",
      call$1: [function(data) {
        this._async$_captured_result_1.push(data);
      }, null, null, 2, 0, null, 52, [], "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_0, "Stream");
      }
    },
    Stream_toList_closure0: {
      "^": "Closure:5;_captured_result_2,_captured_future_3",
      call$0: [function() {
        this._captured_future_3._complete$1(this._captured_result_2);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_first_closure: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1,_captured_future_2",
      call$1: [function(value) {
        P._cancelAndValue(this._async$_box_0._captured_subscription_0, this._captured_future_2, value);
      }, null, null, 2, 0, null, 22, [], "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_first_closure0: {
      "^": "Closure:5;_captured_future_3",
      call$0: [function() {
        var e, s, t1, exception;
        try {
          t1 = H.IterableElementError_noElement();
          throw H.wrapException(t1);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._completeWithErrorCallback(this._captured_future_3, e, s);
        }
      }, null, null, 0, 0, null, "call"]
    },
    Stream_last_closure: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1",
      call$1: [function(value) {
        var t1 = this._async$_box_0;
        t1._captured_foundResult_1 = true;
        t1._captured_result_0 = value;
      }, null, null, 2, 0, null, 22, [], "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_last_closure0: {
      "^": "Closure:5;_async$_box_0,_captured_future_2",
      call$0: [function() {
        var e, s, t1, exception;
        t1 = this._async$_box_0;
        if (t1._captured_foundResult_1) {
          this._captured_future_2._complete$1(t1._captured_result_0);
          return;
        }
        try {
          t1 = H.IterableElementError_noElement();
          throw H.wrapException(t1);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._completeWithErrorCallback(this._captured_future_2, e, s);
        }
      }, null, null, 0, 0, null, "call"]
    },
    Stream_elementAt_closure: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1,_captured_index_2,_captured_future_3",
      call$1: [function(value) {
        var t1 = this._async$_box_0;
        if (J.$eq(this._captured_index_2, t1._captured_elementIndex_1)) {
          P._cancelAndValue(t1._captured_subscription_0, this._captured_future_3, value);
          return;
        }
        ++t1._captured_elementIndex_1;
      }, null, null, 2, 0, null, 22, [], "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_elementAt_closure0: {
      "^": "Closure:5;_async$_box_0,_captured_this_4,_captured_index_5,_captured_future_6",
      call$0: [function() {
        this._captured_future_6._completeError$1(P.IndexError$(this._captured_index_5, this._captured_this_4, "index", null, this._async$_box_0._captured_elementIndex_1));
      }, null, null, 0, 0, null, "call"]
    },
    Stream_timeout_onData: {
      "^": "Closure;_async$_box_0,_async$_captured_this_1,_captured_timeLimit_2",
      call$1: [function($event) {
        var t1 = this._async$_box_0;
        t1._captured_timer_3.cancel$0();
        t1._captured_controller_1.add$1(0, $event);
        t1._captured_timer_3 = t1._captured_zone_4.createTimer$2(this._captured_timeLimit_2, t1._captured_timeout_5);
      }, null, null, 2, 0, null, 67, [], "call"],
      $signature: function() {
        return H.computeSignature(function(T) {
          return {func: 1, void: true, args: [T]};
        }, this._async$_captured_this_1, "Stream");
      }
    },
    Stream_timeout_onError: {
      "^": "Closure:6;_async$_box_0,_async$_captured_this_3,_captured_timeLimit_4",
      call$2: [function(error, stackTrace) {
        var t1 = this._async$_box_0;
        t1._captured_timer_3.cancel$0();
        t1._captured_controller_1._addError$2(error, stackTrace);
        t1._captured_timer_3 = t1._captured_zone_4.createTimer$2(this._captured_timeLimit_4, t1._captured_timeout_5);
      }, null, null, 4, 0, null, 17, [], 18, [], "call"]
    },
    Stream_timeout_onDone: {
      "^": "Closure:7;_async$_box_0",
      call$0: [function() {
        var t1 = this._async$_box_0;
        t1._captured_timer_3.cancel$0();
        t1._captured_controller_1.close$0(0);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_timeout_onListen: {
      "^": "Closure:7;_async$_box_0,_captured_this_5,_captured_timeLimit_6,_captured_onData_7,_captured_onError_8,_captured_onDone_9",
      call$0: function() {
        var zone, t1, t2, wrapper;
        zone = $.Zone__current;
        t1 = this._async$_box_0;
        t1._captured_zone_4 = zone;
        t2 = t1._captured_onTimeout_0;
        if (t2 == null)
          t1._captured_timeout_5 = new P.Stream_timeout_onListen_closure(t1, this._captured_timeLimit_6);
        else {
          t1._captured_onTimeout_0 = zone.registerUnaryCallback$1(t2);
          wrapper = new P._ControllerEventSinkWrapper(null);
          wrapper.$builtinTypeInfo = [null];
          t1._captured_timeout_5 = new P.Stream_timeout_onListen_closure0(t1, wrapper);
        }
        t1._captured_subscription_2 = this._captured_this_5.listen$3$onDone$onError(this._captured_onData_7, this._captured_onDone_9, this._captured_onError_8);
        t1._captured_timer_3 = t1._captured_zone_4.createTimer$2(this._captured_timeLimit_6, t1._captured_timeout_5);
      }
    },
    Stream_timeout_onListen_closure: {
      "^": "Closure:5;_async$_box_0,_captured_timeLimit_10",
      call$0: [function() {
        this._async$_box_0._captured_controller_1.addError$2(new P.TimeoutException("No stream event", this._captured_timeLimit_10), null);
      }, null, null, 0, 0, null, "call"]
    },
    Stream_timeout_onListen_closure0: {
      "^": "Closure:5;_async$_box_0,_captured_wrapper_11",
      call$0: [function() {
        var t1, t2;
        t1 = this._captured_wrapper_11;
        t2 = this._async$_box_0;
        t1._async$_sink = t2._captured_controller_1;
        t2._captured_zone_4.runUnaryGuarded$2(t2._captured_onTimeout_0, t1);
        t1._async$_sink = null;
      }, null, null, 0, 0, null, "call"]
    },
    Stream_timeout_onCancel: {
      "^": "Closure:27;_async$_box_0",
      call$0: [function() {
        var t1, result;
        t1 = this._async$_box_0;
        t1._captured_timer_3.cancel$0();
        result = t1._captured_subscription_2.cancel$0();
        t1._captured_subscription_2 = null;
        return result;
      }, null, null, 0, 0, null, "call"]
    },
    Stream_timeout_closure: {
      "^": "Closure:5;_async$_box_0",
      call$0: function() {
        var t1 = this._async$_box_0;
        t1._captured_timer_3.cancel$0();
        t1._captured_subscription_2.pause$0(0);
      }
    },
    Stream_timeout_closure0: {
      "^": "Closure:5;_async$_box_0,_captured_timeLimit_12",
      call$0: function() {
        var t1 = this._async$_box_0;
        t1._captured_subscription_2.resume$0();
        t1._captured_timer_3 = t1._captured_zone_4.createTimer$2(this._captured_timeLimit_12, t1._captured_timeout_5);
      }
    },
    StreamSubscription: {
      "^": "Object;"
    },
    _ControllerEventSinkWrapper: {
      "^": "Object;_async$_sink",
      add$1: function(_, data) {
        this._async$_sink.add$1(0, data);
      },
      close$0: function(_) {
        this._async$_sink.close$0(0);
      }
    },
    _StreamController: {
      "^": "Object;",
      get$stream: function(_) {
        var t1 = new P._ControllerStream(this);
        t1.$builtinTypeInfo = [null];
        return t1;
      },
      get$isClosed: function() {
        return (this._state & 4) !== 0;
      },
      get$isPaused: function() {
        var t1 = this._state;
        return (t1 & 1) !== 0 ? this.get$_subscription().get$_isInputPaused() : (t1 & 2) === 0;
      },
      get$_pendingEvents: function() {
        if ((this._state & 8) === 0)
          return this._varData;
        return this._varData.get$varData();
      },
      _ensurePendingEvents$0: function() {
        var t1, state;
        if ((this._state & 8) === 0) {
          t1 = this._varData;
          if (t1 == null) {
            t1 = new P._StreamImplEvents(null, null, 0);
            this._varData = t1;
          }
          return t1;
        }
        state = this._varData;
        state.get$varData();
        return state.get$varData();
      },
      get$_subscription: function() {
        if ((this._state & 8) !== 0)
          return this._varData.get$varData();
        return this._varData;
      },
      _badEventState$0: function() {
        if ((this._state & 4) !== 0)
          return new P.StateError("Cannot add event after closing");
        return new P.StateError("Cannot add event while adding a stream");
      },
      get$done: function() {
        return this._ensureDoneFuture$0();
      },
      _ensureDoneFuture$0: function() {
        var t1 = this._doneFuture;
        if (t1 == null) {
          if ((this._state & 2) !== 0)
            t1 = $.get$Future__nullFuture();
          else {
            t1 = new P._Future(0, $.Zone__current, null);
            t1.$builtinTypeInfo = [null];
          }
          this._doneFuture = t1;
        }
        return t1;
      },
      add$1: function(_, value) {
        if (this._state >= 4)
          throw H.wrapException(this._badEventState$0());
        this._async$_add$1(value);
      },
      addError$2: function(error, stackTrace) {
        var replacement;
        if (this._state >= 4)
          throw H.wrapException(this._badEventState$0());
        error = error != null ? error : new P.NullThrownError();
        replacement = $.Zone__current.errorCallback$2(error, stackTrace);
        if (replacement != null) {
          error = J.get$error$x(replacement);
          error = error != null ? error : new P.NullThrownError();
          stackTrace = replacement.get$stackTrace();
        }
        this._addError$2(error, stackTrace);
      },
      addError$1: function(error) {
        return this.addError$2(error, null);
      },
      close$0: function(_) {
        var t1 = this._state;
        if ((t1 & 4) !== 0)
          return this._ensureDoneFuture$0();
        if (t1 >= 4)
          throw H.wrapException(this._badEventState$0());
        this._closeUnchecked$0();
        return this._ensureDoneFuture$0();
      },
      _closeUnchecked$0: function() {
        var t1 = this._state |= 4;
        if ((t1 & 1) !== 0)
          this._sendDone$0();
        else if ((t1 & 3) === 0)
          this._ensurePendingEvents$0().add$1(0, C.C__DelayedDone);
      },
      _async$_add$1: function(value) {
        var t1, t2;
        t1 = this._state;
        if ((t1 & 1) !== 0)
          this._sendData$1(value);
        else if ((t1 & 3) === 0) {
          t1 = this._ensurePendingEvents$0();
          t2 = new P._DelayedData(value, null);
          t2.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "_StreamController", 0)];
          t1.add$1(0, t2);
        }
      },
      _addError$2: function(error, stackTrace) {
        var t1 = this._state;
        if ((t1 & 1) !== 0)
          this._sendError$2(error, stackTrace);
        else if ((t1 & 3) === 0)
          this._ensurePendingEvents$0().add$1(0, new P._DelayedError(error, stackTrace, null));
      },
      _async$_close$0: function() {
        var addState = this._varData;
        this._varData = addState.get$varData();
        this._state &= 4294967287;
        addState.complete$0(0);
      },
      _subscribe$4: function(onData, onError, onDone, cancelOnError) {
        var t1, subscription, pendingEvents, addState;
        if ((this._state & 3) !== 0)
          throw H.wrapException(new P.StateError("Stream has already been listened to."));
        t1 = $.Zone__current;
        subscription = new P._ControllerSubscription(this, null, null, null, t1, cancelOnError ? 1 : 0, null, null);
        subscription.$builtinTypeInfo = [null];
        subscription._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, null);
        pendingEvents = this.get$_pendingEvents();
        t1 = this._state |= 1;
        if ((t1 & 8) !== 0) {
          addState = this._varData;
          addState.set$varData(subscription);
          addState.resume$0();
        } else
          this._varData = subscription;
        subscription._setPendingEvents$1(pendingEvents);
        subscription._guardCallback$1(new P._StreamController__subscribe_closure(this));
        return subscription;
      },
      _recordCancel$1: function(subscription) {
        var result, e, s, exception, t1, result0;
        result = null;
        if ((this._state & 8) !== 0)
          result = this._varData.cancel$0();
        this._varData = null;
        this._state = this._state & 4294967286 | 2;
        if (this.get$_onCancel() != null)
          if (result == null)
            try {
              result = this._onCancel$0();
            } catch (exception) {
              t1 = H.unwrapException(exception);
              e = t1;
              s = H.getTraceFromException(exception);
              result0 = new P._Future(0, $.Zone__current, null);
              result0.$builtinTypeInfo = [null];
              result0._asyncCompleteError$2(e, s);
              result = result0;
            }
          else
            result = result.whenComplete$1(this.get$_onCancel());
        t1 = new P._StreamController__recordCancel_complete(this);
        if (result != null)
          result = result.whenComplete$1(t1);
        else
          t1.call$0();
        return result;
      },
      _recordPause$1: function(subscription) {
        if ((this._state & 8) !== 0)
          this._varData.pause$0(0);
        P._runGuarded(this.get$_onPause());
      },
      _recordResume$1: function(subscription) {
        if ((this._state & 8) !== 0)
          this._varData.resume$0();
        P._runGuarded(this.get$_onResume());
      }
    },
    _StreamController__subscribe_closure: {
      "^": "Closure:5;_async$_captured_this_0",
      call$0: function() {
        P._runGuarded(this._async$_captured_this_0.get$_onListen());
      }
    },
    _StreamController__recordCancel_complete: {
      "^": "Closure:7;_async$_captured_this_0",
      call$0: [function() {
        var t1 = this._async$_captured_this_0._doneFuture;
        if (t1 != null && t1._state === 0)
          t1._asyncComplete$1(null);
      }, null, null, 0, 0, null, "call"]
    },
    _SyncStreamControllerDispatch: {
      "^": "Object;",
      _sendData$1: function(data) {
        this.get$_subscription()._async$_add$1(data);
      },
      _sendError$2: function(error, stackTrace) {
        this.get$_subscription()._addError$2(error, stackTrace);
      },
      _sendDone$0: function() {
        this.get$_subscription()._async$_close$0();
      }
    },
    _AsyncStreamControllerDispatch: {
      "^": "Object;",
      _sendData$1: function(data) {
        var t1, t2;
        t1 = this.get$_subscription();
        t2 = new P._DelayedData(data, null);
        t2.$builtinTypeInfo = [null];
        t1._addPending$1(t2);
      },
      _sendError$2: function(error, stackTrace) {
        this.get$_subscription()._addPending$1(new P._DelayedError(error, stackTrace, null));
      },
      _sendDone$0: function() {
        this.get$_subscription()._addPending$1(C.C__DelayedDone);
      }
    },
    _AsyncStreamController: {
      "^": "_StreamController__AsyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture",
      _onCancel$0: function() {
        return this._onCancel.call$0();
      }
    },
    _StreamController__AsyncStreamControllerDispatch: {
      "^": "_StreamController+_AsyncStreamControllerDispatch;"
    },
    _SyncStreamController: {
      "^": "_StreamController__SyncStreamControllerDispatch;_onListen<,_onPause<,_onResume<,_onCancel<,_varData,_state,_doneFuture",
      _onCancel$0: function() {
        return this._onCancel.call$0();
      }
    },
    _StreamController__SyncStreamControllerDispatch: {
      "^": "_StreamController+_SyncStreamControllerDispatch;"
    },
    _NoCallbacks: {
      "^": "Object;",
      get$_onListen: function() {
        return;
      },
      get$_onPause: function() {
        return;
      },
      get$_onResume: function() {
        return;
      },
      get$_onCancel: function() {
        return;
      },
      _onCancel$0: function() {
        return this.get$_onCancel().call$0();
      }
    },
    _NoCallbackAsyncStreamController: {
      "^": "_StreamController__AsyncStreamControllerDispatch0+_NoCallbacks;_varData,_state,_doneFuture"
    },
    _StreamController__AsyncStreamControllerDispatch0: {
      "^": "_StreamController+_AsyncStreamControllerDispatch;",
      $as_StreamController: functionThatReturnsNull
    },
    _NoCallbackSyncStreamController: {
      "^": "_StreamController__SyncStreamControllerDispatch0+_NoCallbacks;_varData,_state,_doneFuture"
    },
    _StreamController__SyncStreamControllerDispatch0: {
      "^": "_StreamController+_SyncStreamControllerDispatch;",
      $as_StreamController: functionThatReturnsNull
    },
    _ControllerStream: {
      "^": "_StreamImpl;_async$_controller",
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        return this._async$_controller._subscribe$4(onData, onError, onDone, cancelOnError);
      },
      get$hashCode: function(_) {
        return (H.Primitives_objectHashCode(this._async$_controller) ^ 892482866) >>> 0;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (this === other)
          return true;
        if (!(other instanceof P._ControllerStream))
          return false;
        return other._async$_controller === this._async$_controller;
      }
    },
    _ControllerSubscription: {
      "^": "_BufferingStreamSubscription;_async$_controller<,_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
      _onCancel$0: function() {
        return this.get$_async$_controller()._recordCancel$1(this);
      },
      _onPause$0: [function() {
        this.get$_async$_controller()._recordPause$1(this);
      }, "call$0", "get$_onPause", 0, 0, 7],
      _onResume$0: [function() {
        this.get$_async$_controller()._recordResume$1(this);
      }, "call$0", "get$_onResume", 0, 0, 7]
    },
    _EventSink: {
      "^": "Object;"
    },
    _BufferingStreamSubscription: {
      "^": "Object;_onData,_onError<,_onDone,_zone<,_state,_cancelFuture,_pending",
      _setPendingEvents$1: function(pendingEvents) {
        if (pendingEvents == null)
          return;
        this._pending = pendingEvents;
        if (!pendingEvents.get$isEmpty(pendingEvents)) {
          this._state = (this._state | 64) >>> 0;
          this._pending.schedule$1(this);
        }
      },
      onData$1: function(handleData) {
        this._onData = this._zone.registerUnaryCallback$1(handleData);
      },
      onError$1: function(_, handleError) {
        if (handleError == null)
          handleError = P._nullErrorHandler$closure();
        this._onError = P._registerErrorHandler(handleError, this._zone);
      },
      onDone$1: function(handleDone) {
        if (handleDone == null)
          handleDone = P._nullDoneHandler$closure();
        this._onDone = this._zone.registerCallback$1(handleDone);
      },
      pause$1: function(_, resumeSignal) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        this._state = (t1 + 128 | 4) >>> 0;
        if (t1 < 128 && this._pending != null)
          this._pending.cancelSchedule$0();
        if ((t1 & 4) === 0 && (this._state & 32) === 0)
          this._guardCallback$1(this.get$_onPause());
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function() {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        if (t1 >= 128) {
          t1 -= 128;
          this._state = t1;
          if (t1 < 128) {
            if ((t1 & 64) !== 0) {
              t1 = this._pending;
              t1 = !t1.get$isEmpty(t1);
            } else
              t1 = false;
            if (t1)
              this._pending.schedule$1(this);
            else {
              t1 = (this._state & 4294967291) >>> 0;
              this._state = t1;
              if ((t1 & 32) === 0)
                this._guardCallback$1(this.get$_onResume());
            }
          }
        }
      },
      cancel$0: function() {
        var t1 = (this._state & 4294967279) >>> 0;
        this._state = t1;
        if ((t1 & 8) !== 0)
          return this._cancelFuture;
        this._cancel$0();
        return this._cancelFuture;
      },
      asFuture$1: function(futureValue) {
        var result = new P._Future(0, $.Zone__current, null);
        result.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "_BufferingStreamSubscription", 0)];
        this._onDone = new P._BufferingStreamSubscription_asFuture_closure(futureValue, result);
        this._onError = new P._BufferingStreamSubscription_asFuture_closure0(this, result);
        return result;
      },
      get$_isInputPaused: function() {
        return (this._state & 4) !== 0;
      },
      get$isPaused: function() {
        return this._state >= 128;
      },
      _cancel$0: function() {
        var t1 = (this._state | 8) >>> 0;
        this._state = t1;
        if ((t1 & 64) !== 0)
          this._pending.cancelSchedule$0();
        if ((this._state & 32) === 0)
          this._pending = null;
        this._cancelFuture = this._onCancel$0();
      },
      _async$_add$1: ["super$_BufferingStreamSubscription$_async$_add$1", function(data) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        if (t1 < 32)
          this._sendData$1(data);
        else {
          t1 = new P._DelayedData(data, null);
          t1.$builtinTypeInfo = [null];
          this._addPending$1(t1);
        }
      }],
      _addError$2: ["super$_BufferingStreamSubscription$_addError$2", function(error, stackTrace) {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        if (t1 < 32)
          this._sendError$2(error, stackTrace);
        else
          this._addPending$1(new P._DelayedError(error, stackTrace, null));
      }],
      _async$_close$0: function() {
        var t1 = this._state;
        if ((t1 & 8) !== 0)
          return;
        t1 = (t1 | 2) >>> 0;
        this._state = t1;
        if (t1 < 32)
          this._sendDone$0();
        else
          this._addPending$1(C.C__DelayedDone);
      },
      _onPause$0: [function() {
      }, "call$0", "get$_onPause", 0, 0, 7],
      _onResume$0: [function() {
      }, "call$0", "get$_onResume", 0, 0, 7],
      _onCancel$0: function() {
        return;
      },
      _addPending$1: function($event) {
        var pending, t1;
        pending = this._pending;
        if (pending == null) {
          pending = new P._StreamImplEvents(null, null, 0);
          this._pending = pending;
        }
        pending.add$1(0, $event);
        t1 = this._state;
        if ((t1 & 64) === 0) {
          t1 = (t1 | 64) >>> 0;
          this._state = t1;
          if (t1 < 128)
            this._pending.schedule$1(this);
        }
      },
      _sendData$1: function(data) {
        var t1 = this._state;
        this._state = (t1 | 32) >>> 0;
        this._zone.runUnaryGuarded$2(this._onData, data);
        this._state = (this._state & 4294967263) >>> 0;
        this._checkState$1((t1 & 4) !== 0);
      },
      _sendError$2: function(error, stackTrace) {
        var t1, t2;
        t1 = this._state;
        t2 = new P._BufferingStreamSubscription__sendError_sendError(this, error, stackTrace);
        if ((t1 & 1) !== 0) {
          this._state = (t1 | 16) >>> 0;
          this._cancel$0();
          t1 = this._cancelFuture;
          if (!!J.getInterceptor(t1).$isFuture)
            t1.whenComplete$1(t2);
          else
            t2.call$0();
        } else {
          t2.call$0();
          this._checkState$1((t1 & 4) !== 0);
        }
      },
      _sendDone$0: function() {
        var t1, t2;
        t1 = new P._BufferingStreamSubscription__sendDone_sendDone(this);
        this._cancel$0();
        this._state = (this._state | 16) >>> 0;
        t2 = this._cancelFuture;
        if (!!J.getInterceptor(t2).$isFuture)
          t2.whenComplete$1(t1);
        else
          t1.call$0();
      },
      _guardCallback$1: function(callback) {
        var t1 = this._state;
        this._state = (t1 | 32) >>> 0;
        callback.call$0();
        this._state = (this._state & 4294967263) >>> 0;
        this._checkState$1((t1 & 4) !== 0);
      },
      _checkState$1: function(wasInputPaused) {
        var t1, isInputPaused;
        if ((this._state & 64) !== 0) {
          t1 = this._pending;
          t1 = t1.get$isEmpty(t1);
        } else
          t1 = false;
        if (t1) {
          t1 = (this._state & 4294967231) >>> 0;
          this._state = t1;
          if ((t1 & 4) !== 0)
            if (t1 < 128) {
              t1 = this._pending;
              t1 = t1 == null || t1.get$isEmpty(t1);
            } else
              t1 = false;
          else
            t1 = false;
          if (t1)
            this._state = (this._state & 4294967291) >>> 0;
        }
        for (; true; wasInputPaused = isInputPaused) {
          t1 = this._state;
          if ((t1 & 8) !== 0) {
            this._pending = null;
            return;
          }
          isInputPaused = (t1 & 4) !== 0;
          if (wasInputPaused === isInputPaused)
            break;
          this._state = (t1 ^ 32) >>> 0;
          if (isInputPaused)
            this._onPause$0();
          else
            this._onResume$0();
          this._state = (this._state & 4294967263) >>> 0;
        }
        t1 = this._state;
        if ((t1 & 64) !== 0 && t1 < 128)
          this._pending.schedule$1(this);
      },
      _BufferingStreamSubscription$4: function(onData, onError, onDone, cancelOnError, $T) {
        var t1 = this._zone;
        this._onData = t1.registerUnaryCallback$1(onData);
        this._onError = P._registerErrorHandler(onError == null ? P._nullErrorHandler$closure() : onError, t1);
        this._onDone = t1.registerCallback$1(onDone == null ? P._nullDoneHandler$closure() : onDone);
      },
      $is_EventSink: 1,
      $isStreamSubscription: 1,
      static: {_BufferingStreamSubscription$: function(onData, onError, onDone, cancelOnError, $T) {
          var t1 = $.Zone__current;
          t1 = new P._BufferingStreamSubscription(null, null, null, t1, cancelOnError ? 1 : 0, null, null);
          t1.$builtinTypeInfo = [$T];
          t1._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
          return t1;
        }}
    },
    _BufferingStreamSubscription_asFuture_closure: {
      "^": "Closure:5;_captured_futureValue_0,_async$_captured_result_1",
      call$0: [function() {
        this._async$_captured_result_1._complete$1(this._captured_futureValue_0);
      }, null, null, 0, 0, null, "call"]
    },
    _BufferingStreamSubscription_asFuture_closure0: {
      "^": "Closure:15;_captured_this_2,_captured_result_3",
      call$2: [function(error, stackTrace) {
        this._captured_this_2.cancel$0();
        this._captured_result_3._completeError$2(error, stackTrace);
      }, null, null, 4, 0, null, 17, [], 18, [], "call"]
    },
    _BufferingStreamSubscription__sendError_sendError: {
      "^": "Closure:7;_async$_captured_this_0,_captured_error_1,_captured_stackTrace_2",
      call$0: [function() {
        var t1, t2, t3, t4, t5, t6;
        t1 = this._async$_captured_this_0;
        t2 = t1._state;
        if ((t2 & 8) !== 0 && (t2 & 16) === 0)
          return;
        t1._state = (t2 | 32) >>> 0;
        t2 = t1._onError;
        t3 = H.getDynamicRuntimeType();
        t3 = H.buildFunctionType(t3, [t3, t3])._isTest$1(t2);
        t4 = t1._zone;
        t5 = this._captured_error_1;
        t6 = t1._onError;
        if (t3)
          t4.runBinaryGuarded$3(t6, t5, this._captured_stackTrace_2);
        else
          t4.runUnaryGuarded$2(t6, t5);
        t1._state = (t1._state & 4294967263) >>> 0;
      }, null, null, 0, 0, null, "call"]
    },
    _BufferingStreamSubscription__sendDone_sendDone: {
      "^": "Closure:7;_async$_captured_this_0",
      call$0: [function() {
        var t1, t2;
        t1 = this._async$_captured_this_0;
        t2 = t1._state;
        if ((t2 & 16) === 0)
          return;
        t1._state = (t2 | 42) >>> 0;
        t1._zone.runGuarded$1(t1._onDone);
        t1._state = (t1._state & 4294967263) >>> 0;
      }, null, null, 0, 0, null, "call"]
    },
    _StreamImpl: {
      "^": "Stream;",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        return this._createSubscription$4(onData, onError, onDone, true === cancelOnError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$2$onDone: function(onData, onDone) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
      },
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        return P._BufferingStreamSubscription$(onData, onError, onDone, cancelOnError, H.getTypeArgumentByIndex(this, 0));
      }
    },
    _DelayedEvent: {
      "^": "Object;next@"
    },
    _DelayedData: {
      "^": "_DelayedEvent;value>,next",
      perform$1: function(dispatch) {
        dispatch._sendData$1(this.value);
      }
    },
    _DelayedError: {
      "^": "_DelayedEvent;error>,stackTrace<,next",
      perform$1: function(dispatch) {
        dispatch._sendError$2(this.error, this.stackTrace);
      }
    },
    _DelayedDone: {
      "^": "Object;",
      perform$1: function(dispatch) {
        dispatch._sendDone$0();
      },
      get$next: function() {
        return;
      },
      set$next: function(_) {
        throw H.wrapException(new P.StateError("No events after a done."));
      }
    },
    _PendingEvents: {
      "^": "Object;",
      schedule$1: function(dispatch) {
        var t1 = this._state;
        if (t1 === 1)
          return;
        if (t1 >= 1) {
          this._state = 1;
          return;
        }
        P.scheduleMicrotask(new P._PendingEvents_schedule_closure(this, dispatch));
        this._state = 1;
      },
      cancelSchedule$0: function() {
        if (this._state === 1)
          this._state = 3;
      }
    },
    _PendingEvents_schedule_closure: {
      "^": "Closure:5;_async$_captured_this_0,_captured_dispatch_1",
      call$0: [function() {
        var t1, oldState;
        t1 = this._async$_captured_this_0;
        oldState = t1._state;
        t1._state = 0;
        if (oldState === 3)
          return;
        t1.handleNext$1(this._captured_dispatch_1);
      }, null, null, 0, 0, null, "call"]
    },
    _StreamImplEvents: {
      "^": "_PendingEvents;firstPendingEvent,lastPendingEvent,_state",
      get$isEmpty: function(_) {
        return this.lastPendingEvent == null;
      },
      add$1: function(_, $event) {
        var t1 = this.lastPendingEvent;
        if (t1 == null) {
          this.lastPendingEvent = $event;
          this.firstPendingEvent = $event;
        } else {
          t1.set$next($event);
          this.lastPendingEvent = $event;
        }
      },
      handleNext$1: function(dispatch) {
        var $event, t1;
        $event = this.firstPendingEvent;
        t1 = $event.get$next();
        this.firstPendingEvent = t1;
        if (t1 == null)
          this.lastPendingEvent = null;
        $event.perform$1(dispatch);
      },
      clear$0: function(_) {
        if (this._state === 1)
          this._state = 3;
        this.lastPendingEvent = null;
        this.firstPendingEvent = null;
      }
    },
    _DoneStreamSubscription: {
      "^": "Object;_zone<,_state,_onDone",
      get$isPaused: function() {
        return this._state >= 4;
      },
      _schedule$0: function() {
        if ((this._state & 2) !== 0)
          return;
        this._zone.scheduleMicrotask$1(this.get$_sendDone());
        this._state = (this._state | 2) >>> 0;
      },
      onData$1: function(handleData) {
      },
      onError$1: function(_, handleError) {
      },
      onDone$1: function(handleDone) {
        this._onDone = handleDone;
      },
      pause$1: function(_, resumeSignal) {
        this._state += 4;
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function() {
        var t1 = this._state;
        if (t1 >= 4) {
          t1 -= 4;
          this._state = t1;
          if (t1 < 4 && (t1 & 1) === 0)
            this._schedule$0();
        }
      },
      cancel$0: function() {
        return;
      },
      asFuture$1: function(futureValue) {
        var result = new P._Future(0, $.Zone__current, null);
        result.$builtinTypeInfo = [null];
        this._onDone = new P._DoneStreamSubscription_asFuture_closure(result);
        return result;
      },
      _sendDone$0: [function() {
        var t1 = (this._state & 4294967293) >>> 0;
        this._state = t1;
        if (t1 >= 4)
          return;
        this._state = (t1 | 1) >>> 0;
        t1 = this._onDone;
        if (t1 != null)
          this._zone.runGuarded$1(t1);
      }, "call$0", "get$_sendDone", 0, 0, 7]
    },
    _DoneStreamSubscription_asFuture_closure: {
      "^": "Closure:5;_async$_captured_result_0",
      call$0: [function() {
        this._async$_captured_result_0._completeWithValue$1(null);
      }, null, null, 0, 0, null, "call"]
    },
    _AsBroadcastStream: {
      "^": "Stream;_async$_source,_onListenHandler,_onCancelHandler,_zone<,_async$_controller,_subscription",
      get$isBroadcast: function() {
        return true;
      },
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1, t2, t3;
        t1 = this._async$_controller;
        if (t1 == null || (t1._state & 4) !== 0) {
          t1 = new P._DoneStreamSubscription($.Zone__current, 0, onDone);
          t1.$builtinTypeInfo = this.$builtinTypeInfo;
          t1._schedule$0();
          return t1;
        }
        if (this._subscription == null) {
          t1 = t1.get$add(t1);
          t2 = this._async$_controller.get$addError();
          t3 = this._async$_controller;
          this._subscription = this._async$_source.listen$3$onDone$onError(t1, t3.get$close(t3), t2);
        }
        return this._async$_controller._subscribe$4(onData, onError, onDone, true === cancelOnError);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$2$onDone: function(onData, onDone) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
      },
      _onCancel$0: [function() {
        var t1, shutdown, t2;
        t1 = this._async$_controller;
        shutdown = t1 == null || (t1._state & 4) !== 0;
        t1 = this._onCancelHandler;
        if (t1 != null) {
          t2 = new P._BroadcastSubscriptionWrapper(this);
          t2.$builtinTypeInfo = [null];
          this._zone.runUnary$2(t1, t2);
        }
        if (shutdown) {
          t1 = this._subscription;
          if (t1 != null) {
            t1.cancel$0();
            this._subscription = null;
          }
        }
      }, "call$0", "get$_onCancel", 0, 0, 7],
      _onListen$0: [function() {
        var t1, t2;
        t1 = this._onListenHandler;
        if (t1 != null) {
          t2 = new P._BroadcastSubscriptionWrapper(this);
          t2.$builtinTypeInfo = [null];
          this._zone.runUnary$2(t1, t2);
        }
      }, "call$0", "get$_onListen", 0, 0, 7],
      _cancelSubscription$0: function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        this._subscription = null;
        this._async$_controller = null;
        t1.cancel$0();
      },
      _pauseSubscription$1: function(resumeSignal) {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.pause$1(0, resumeSignal);
      },
      _resumeSubscription$0: function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.resume$0();
      },
      get$_isSubscriptionPaused: function() {
        var t1 = this._subscription;
        if (t1 == null)
          return false;
        return t1.get$isPaused();
      }
    },
    _BroadcastSubscriptionWrapper: {
      "^": "Object;_stream",
      onData$1: function(handleData) {
        throw H.wrapException(new P.UnsupportedError("Cannot change handlers of asBroadcastStream source subscription."));
      },
      onError$1: function(_, handleError) {
        throw H.wrapException(new P.UnsupportedError("Cannot change handlers of asBroadcastStream source subscription."));
      },
      onDone$1: function(handleDone) {
        throw H.wrapException(new P.UnsupportedError("Cannot change handlers of asBroadcastStream source subscription."));
      },
      pause$1: function(_, resumeSignal) {
        this._stream._pauseSubscription$1(resumeSignal);
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      resume$0: function() {
        this._stream._resumeSubscription$0();
      },
      cancel$0: function() {
        this._stream._cancelSubscription$0();
        return;
      },
      get$isPaused: function() {
        return this._stream.get$_isSubscriptionPaused();
      },
      asFuture$1: function(futureValue) {
        throw H.wrapException(new P.UnsupportedError("Cannot change handlers of asBroadcastStream source subscription."));
      }
    },
    _StreamIteratorImpl: {
      "^": "Object;_subscription,_async$_current,_futureOrPrefetch,_state",
      _clear$0: function() {
        this._subscription = null;
        this._futureOrPrefetch = null;
        this._async$_current = null;
        this._state = 1;
      },
      cancel$0: function() {
        var subscription, hasNext;
        subscription = this._subscription;
        if (subscription == null)
          return;
        if (this._state === 2) {
          hasNext = this._futureOrPrefetch;
          this._clear$0();
          hasNext._complete$1(false);
        } else
          this._clear$0();
        return subscription.cancel$0();
      },
      _onData$1: [function(data) {
        var hasNext;
        if (this._state === 2) {
          this._async$_current = data;
          hasNext = this._futureOrPrefetch;
          this._futureOrPrefetch = null;
          this._state = 0;
          hasNext._complete$1(true);
          return;
        }
        this._subscription.pause$0(0);
        this._futureOrPrefetch = data;
        this._state = 3;
      }, "call$1", "get$_onData", 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, void: true, args: [T]};
        }, this.$receiver, "_StreamIteratorImpl");
      }, 52, []],
      _onError$2: [function(error, stackTrace) {
        var hasNext;
        if (this._state === 2) {
          hasNext = this._futureOrPrefetch;
          this._clear$0();
          hasNext._completeError$2(error, stackTrace);
          return;
        }
        this._subscription.pause$0(0);
        this._futureOrPrefetch = new P.AsyncError(error, stackTrace);
        this._state = 4;
      }, function(error) {
        return this._onError$2(error, null);
      }, "_onError$1", "call$2", "call$1", "get$_onError", 2, 2, 26, 35, 17, [], 18, []],
      _onDone$0: [function() {
        if (this._state === 2) {
          var hasNext = this._futureOrPrefetch;
          this._clear$0();
          hasNext._complete$1(false);
          return;
        }
        this._subscription.pause$0(0);
        this._futureOrPrefetch = null;
        this._state = 5;
      }, "call$0", "get$_onDone", 0, 0, 7]
    },
    _cancelAndError_closure: {
      "^": "Closure:5;_captured_future_0,_captured_error_1,_captured_stackTrace_2",
      call$0: [function() {
        return this._captured_future_0._completeError$2(this._captured_error_1, this._captured_stackTrace_2);
      }, null, null, 0, 0, null, "call"]
    },
    _cancelAndErrorClosure_closure: {
      "^": "Closure:11;_captured_subscription_0,_captured_future_1",
      call$2: function(error, stackTrace) {
        return P._cancelAndError(this._captured_subscription_0, this._captured_future_1, error, stackTrace);
      }
    },
    _cancelAndValue_closure: {
      "^": "Closure:5;_captured_future_0,_captured_value_1",
      call$0: [function() {
        return this._captured_future_0._complete$1(this._captured_value_1);
      }, null, null, 0, 0, null, "call"]
    },
    _ForwardingStream: {
      "^": "Stream;",
      get$isBroadcast: function() {
        return this._async$_source.get$isBroadcast();
      },
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        return this._createSubscription$4(onData, onError, onDone, true === cancelOnError);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$2$onDone: function(onData, onDone) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
      },
      _createSubscription$4: function(onData, onError, onDone, cancelOnError) {
        return P._ForwardingStreamSubscription$(this, onData, onError, onDone, cancelOnError, H.getRuntimeTypeArgument(this, "_ForwardingStream", 0), H.getRuntimeTypeArgument(this, "_ForwardingStream", 1));
      },
      _handleData$2: function(data, sink) {
        sink._async$_add$1(data);
      },
      $asStream: function($S, $T) {
        return [$T];
      }
    },
    _ForwardingStreamSubscription: {
      "^": "_BufferingStreamSubscription;_stream,_subscription,_onData,_onError,_onDone,_zone,_state,_cancelFuture,_pending",
      _async$_add$1: function(data) {
        if ((this._state & 2) !== 0)
          return;
        this.super$_BufferingStreamSubscription$_async$_add$1(data);
      },
      _addError$2: function(error, stackTrace) {
        if ((this._state & 2) !== 0)
          return;
        this.super$_BufferingStreamSubscription$_addError$2(error, stackTrace);
      },
      _onPause$0: [function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.pause$0(0);
      }, "call$0", "get$_onPause", 0, 0, 7],
      _onResume$0: [function() {
        var t1 = this._subscription;
        if (t1 == null)
          return;
        t1.resume$0();
      }, "call$0", "get$_onResume", 0, 0, 7],
      _onCancel$0: function() {
        var t1 = this._subscription;
        if (t1 != null) {
          this._subscription = null;
          t1.cancel$0();
        }
        return;
      },
      _handleData$1: [function(data) {
        this._stream._handleData$2(data, this);
      }, "call$1", "get$_handleData", 2, 0, function() {
        return H.computeSignature(function(S, T) {
          return {func: 1, void: true, args: [S]};
        }, this.$receiver, "_ForwardingStreamSubscription");
      }, 52, []],
      _handleError$2: [function(error, stackTrace) {
        this._addError$2(error, stackTrace);
      }, "call$2", "get$_handleError", 4, 0, 6, 17, [], 18, []],
      _handleDone$0: [function() {
        this._async$_close$0();
      }, "call$0", "get$_handleDone", 0, 0, 7],
      _ForwardingStreamSubscription$5: function(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
        var t1, t2;
        t1 = this.get$_handleData();
        t2 = this.get$_handleError();
        this._subscription = this._stream._async$_source.listen$3$onDone$onError(t1, this.get$_handleDone(), t2);
      },
      $as_BufferingStreamSubscription: function($S, $T) {
        return [$T];
      },
      static: {_ForwardingStreamSubscription$: function(_stream, onData, onError, onDone, cancelOnError, $S, $T) {
          var t1 = $.Zone__current;
          t1 = new P._ForwardingStreamSubscription(_stream, null, null, null, null, t1, cancelOnError ? 1 : 0, null, null);
          t1.$builtinTypeInfo = [$S, $T];
          t1._BufferingStreamSubscription$4(onData, onError, onDone, cancelOnError, $T);
          t1._ForwardingStreamSubscription$5(_stream, onData, onError, onDone, cancelOnError, $S, $T);
          return t1;
        }}
    },
    _WhereStream: {
      "^": "_ForwardingStream;_test,_async$_source",
      _handleData$2: function(inputEvent, sink) {
        var satisfies, e, s, exception, t1;
        satisfies = null;
        try {
          satisfies = this._test$1(inputEvent);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._addErrorWithReplacement(sink, e, s);
          return;
        }
        if (satisfies === true)
          sink._async$_add$1(inputEvent);
      },
      _test$1: function(arg0) {
        return this._test.call$1(arg0);
      },
      $as_ForwardingStream: function($T) {
        return [$T, $T];
      },
      $asStream: null
    },
    _MapStream: {
      "^": "_ForwardingStream;_transform,_async$_source",
      _handleData$2: function(inputEvent, sink) {
        var outputEvent, e, s, exception, t1;
        outputEvent = null;
        try {
          outputEvent = this._transform$1(inputEvent);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          P._addErrorWithReplacement(sink, e, s);
          return;
        }
        sink._async$_add$1(outputEvent);
      },
      _transform$1: function(arg0) {
        return this._transform.call$1(arg0);
      }
    },
    Timer: {
      "^": "Object;"
    },
    AsyncError: {
      "^": "Object;error>,stackTrace<",
      toString$0: function(_) {
        return H.S(this.error);
      },
      $isError: 1
    },
    _ZoneFunction: {
      "^": "Object;zone<,$function"
    },
    ZoneSpecification: {
      "^": "Object;"
    },
    _ZoneSpecification: {
      "^": "Object;handleUncaughtError<,run<,runUnary<,runBinary<,registerCallback<,registerUnaryCallback<,registerBinaryCallback<,errorCallback<,scheduleMicrotask<,createTimer<,createPeriodicTimer<,print>,fork<",
      handleUncaughtError$2: function(arg0, arg1) {
        return this.handleUncaughtError.call$2(arg0, arg1);
      },
      handleUncaughtError$3: function(arg0, arg1, arg2) {
        return this.handleUncaughtError.call$3(arg0, arg1, arg2);
      },
      run$1: function(arg0) {
        return this.run.call$1(arg0);
      },
      runUnary$2: function(arg0, arg1) {
        return this.runUnary.call$2(arg0, arg1);
      },
      runBinary$3: function(arg0, arg1, arg2) {
        return this.runBinary.call$3(arg0, arg1, arg2);
      },
      registerCallback$1: function(arg0) {
        return this.registerCallback.call$1(arg0);
      },
      registerUnaryCallback$1: function(arg0) {
        return this.registerUnaryCallback.call$1(arg0);
      },
      registerBinaryCallback$1: function(arg0) {
        return this.registerBinaryCallback.call$1(arg0);
      },
      errorCallback$2: function(arg0, arg1) {
        return this.errorCallback.call$2(arg0, arg1);
      },
      scheduleMicrotask$1: function(arg0) {
        return this.scheduleMicrotask.call$1(arg0);
      },
      createTimer$2: function(arg0, arg1) {
        return this.createTimer.call$2(arg0, arg1);
      },
      createPeriodicTimer$2: function(arg0, arg1) {
        return this.createPeriodicTimer.call$2(arg0, arg1);
      },
      print$1: function($receiver, arg0) {
        return this.print.call$1(arg0);
      },
      fork$2$specification$zoneValues: function(arg0, arg1) {
        return this.fork.call$2$specification$zoneValues(arg0, arg1);
      }
    },
    ZoneDelegate: {
      "^": "Object;"
    },
    Zone: {
      "^": "Object;"
    },
    _ZoneDelegate: {
      "^": "Object;_delegationTarget",
      handleUncaughtError$3: [function(zone, error, stackTrace) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_handleUncaughtError();
        implZone = implementation.zone;
        return implementation.$function.call$5(implZone, P._parentDelegate(implZone), zone, error, stackTrace);
      }, "call$3", "get$handleUncaughtError", 6, 0, 37],
      run$2: [function(zone, f) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_run();
        implZone = implementation.zone;
        return implementation.$function.call$4(implZone, P._parentDelegate(implZone), zone, f);
      }, "call$2", "get$run", 4, 0, 38],
      runUnary$3: [function(zone, f, arg) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_runUnary();
        implZone = implementation.zone;
        return implementation.$function.call$5(implZone, P._parentDelegate(implZone), zone, f, arg);
      }, "call$3", "get$runUnary", 6, 0, 39],
      runBinary$4: [function(zone, f, arg1, arg2) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_runBinary();
        implZone = implementation.zone;
        return implementation.$function.call$6(implZone, P._parentDelegate(implZone), zone, f, arg1, arg2);
      }, "call$4", "get$runBinary", 8, 0, 40],
      registerCallback$2: [function(zone, f) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_registerCallback();
        implZone = implementation.zone;
        return implementation.$function.call$4(implZone, P._parentDelegate(implZone), zone, f);
      }, "call$2", "get$registerCallback", 4, 0, 41],
      registerUnaryCallback$2: [function(zone, f) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_registerUnaryCallback();
        implZone = implementation.zone;
        return implementation.$function.call$4(implZone, P._parentDelegate(implZone), zone, f);
      }, "call$2", "get$registerUnaryCallback", 4, 0, 42],
      registerBinaryCallback$2: [function(zone, f) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_registerBinaryCallback();
        implZone = implementation.zone;
        return implementation.$function.call$4(implZone, P._parentDelegate(implZone), zone, f);
      }, "call$2", "get$registerBinaryCallback", 4, 0, 43],
      errorCallback$3: [function(zone, error, stackTrace) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_errorCallback();
        implZone = implementation.zone;
        if (implZone === C.C__RootZone)
          return;
        return implementation.$function.call$5(implZone, P._parentDelegate(implZone), zone, error, stackTrace);
      }, "call$3", "get$errorCallback", 6, 0, 44],
      scheduleMicrotask$2: [function(zone, f) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_scheduleMicrotask();
        implZone = implementation.zone;
        implementation.$function.call$4(implZone, P._parentDelegate(implZone), zone, f);
      }, "call$2", "get$scheduleMicrotask", 4, 0, 45],
      createTimer$3: [function(zone, duration, f) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_createTimer();
        implZone = implementation.zone;
        return implementation.$function.call$5(implZone, P._parentDelegate(implZone), zone, duration, f);
      }, "call$3", "get$createTimer", 6, 0, 46],
      createPeriodicTimer$3: [function(zone, period, f) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_createPeriodicTimer();
        implZone = implementation.zone;
        return implementation.$function.call$5(implZone, P._parentDelegate(implZone), zone, period, f);
      }, "call$3", "get$createPeriodicTimer", 6, 0, 47],
      print$2: [function(_, zone, line) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_print();
        implZone = implementation.zone;
        implementation.$function.call$4(implZone, P._parentDelegate(implZone), zone, line);
      }, "call$2", "get$print", 4, 0, 48],
      fork$3: [function(zone, specification, zoneValues) {
        var implementation, implZone;
        implementation = this._delegationTarget.get$_fork();
        implZone = implementation.zone;
        return implementation.$function.call$5(implZone, P._parentDelegate(implZone), zone, specification, zoneValues);
      }, "call$3", "get$fork", 6, 0, 49]
    },
    _Zone: {
      "^": "Object;",
      inSameErrorZone$1: function(otherZone) {
        return this === otherZone || this.get$errorZone() === otherZone.get$errorZone();
      }
    },
    _CustomZone: {
      "^": "_Zone;_runUnary<,_run<,_runBinary<,_registerCallback<,_registerUnaryCallback<,_registerBinaryCallback<,_errorCallback<,_scheduleMicrotask<,_createTimer<,_createPeriodicTimer<,_print<,_fork<,_handleUncaughtError<,_delegateCache,parent>,_async$_map<",
      get$_async$_delegate: function() {
        var t1 = this._delegateCache;
        if (t1 != null)
          return t1;
        t1 = new P._ZoneDelegate(this);
        this._delegateCache = t1;
        return t1;
      },
      get$errorZone: function() {
        return this._handleUncaughtError.zone;
      },
      runGuarded$1: function(f) {
        var e, s, t1, exception;
        try {
          t1 = this.run$1(f);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          return this.handleUncaughtError$2(e, s);
        }
      },
      runUnaryGuarded$2: function(f, arg) {
        var e, s, t1, exception;
        try {
          t1 = this.runUnary$2(f, arg);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          return this.handleUncaughtError$2(e, s);
        }
      },
      runBinaryGuarded$3: function(f, arg1, arg2) {
        var e, s, t1, exception;
        try {
          t1 = this.runBinary$3(f, arg1, arg2);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          return this.handleUncaughtError$2(e, s);
        }
      },
      bindCallback$2$runGuarded: function(f, runGuarded) {
        var registered = this.registerCallback$1(f);
        if (runGuarded)
          return new P._CustomZone_bindCallback_closure(this, registered);
        else
          return new P._CustomZone_bindCallback_closure0(this, registered);
      },
      bindCallback$1: function(f) {
        return this.bindCallback$2$runGuarded(f, true);
      },
      bindUnaryCallback$2$runGuarded: function(f, runGuarded) {
        var registered = this.registerUnaryCallback$1(f);
        if (runGuarded)
          return new P._CustomZone_bindUnaryCallback_closure(this, registered);
        else
          return new P._CustomZone_bindUnaryCallback_closure0(this, registered);
      },
      bindUnaryCallback$1: function(f) {
        return this.bindUnaryCallback$2$runGuarded(f, true);
      },
      $index: function(_, key) {
        var t1, result, t2, value;
        t1 = this._async$_map;
        result = t1.$index(0, key);
        if (result != null || t1.containsKey$1(key))
          return result;
        t2 = this.parent;
        if (t2 != null) {
          value = J.$index$asx(t2, key);
          if (value != null)
            t1.$indexSet(0, key, value);
          return value;
        }
        return;
      },
      handleUncaughtError$2: [function(error, stackTrace) {
        var implementation, t1, parentDelegate;
        implementation = this._handleUncaughtError;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, error, stackTrace);
      }, "call$2", "get$handleUncaughtError", 4, 0, 11],
      fork$2$specification$zoneValues: [function(specification, zoneValues) {
        var implementation, t1, parentDelegate;
        implementation = this._fork;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, specification, zoneValues);
      }, function() {
        return this.fork$2$specification$zoneValues(null, null);
      }, "fork$0", "call$2$specification$zoneValues", "call$0", "get$fork", 0, 5, 50, 35, 35],
      run$1: [function(f) {
        var implementation, t1, parentDelegate;
        implementation = this._run;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$4(t1, parentDelegate, this, f);
      }, "call$1", "get$run", 2, 0, 51],
      runUnary$2: [function(f, arg) {
        var implementation, t1, parentDelegate;
        implementation = this._runUnary;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, f, arg);
      }, "call$2", "get$runUnary", 4, 0, 52],
      runBinary$3: [function(f, arg1, arg2) {
        var implementation, t1, parentDelegate;
        implementation = this._runBinary;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$6(t1, parentDelegate, this, f, arg1, arg2);
      }, "call$3", "get$runBinary", 6, 0, 53],
      registerCallback$1: [function(f) {
        var implementation, t1, parentDelegate;
        implementation = this._registerCallback;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$4(t1, parentDelegate, this, f);
      }, "call$1", "get$registerCallback", 2, 0, 54],
      registerUnaryCallback$1: [function(f) {
        var implementation, t1, parentDelegate;
        implementation = this._registerUnaryCallback;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$4(t1, parentDelegate, this, f);
      }, "call$1", "get$registerUnaryCallback", 2, 0, 55],
      registerBinaryCallback$1: [function(f) {
        var implementation, t1, parentDelegate;
        implementation = this._registerBinaryCallback;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$4(t1, parentDelegate, this, f);
      }, "call$1", "get$registerBinaryCallback", 2, 0, 56],
      errorCallback$2: [function(error, stackTrace) {
        var implementation, implementationZone, parentDelegate;
        implementation = this._errorCallback;
        implementationZone = implementation.zone;
        if (implementationZone === C.C__RootZone)
          return;
        parentDelegate = P._parentDelegate(implementationZone);
        return implementation.$function.call$5(implementationZone, parentDelegate, this, error, stackTrace);
      }, "call$2", "get$errorCallback", 4, 0, 57],
      scheduleMicrotask$1: [function(f) {
        var implementation, t1, parentDelegate;
        implementation = this._scheduleMicrotask;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$4(t1, parentDelegate, this, f);
      }, "call$1", "get$scheduleMicrotask", 2, 0, 58],
      createTimer$2: [function(duration, f) {
        var implementation, t1, parentDelegate;
        implementation = this._createTimer;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, duration, f);
      }, "call$2", "get$createTimer", 4, 0, 59],
      createPeriodicTimer$2: [function(duration, f) {
        var implementation, t1, parentDelegate;
        implementation = this._createPeriodicTimer;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$5(t1, parentDelegate, this, duration, f);
      }, "call$2", "get$createPeriodicTimer", 4, 0, 60],
      print$1: [function(_, line) {
        var implementation, t1, parentDelegate;
        implementation = this._print;
        t1 = implementation.zone;
        parentDelegate = P._parentDelegate(t1);
        return implementation.$function.call$4(t1, parentDelegate, this, line);
      }, "call$1", "get$print", 2, 0, 61]
    },
    _CustomZone_bindCallback_closure: {
      "^": "Closure:5;_async$_captured_this_0,_captured_registered_1",
      call$0: [function() {
        return this._async$_captured_this_0.runGuarded$1(this._captured_registered_1);
      }, null, null, 0, 0, null, "call"]
    },
    _CustomZone_bindCallback_closure0: {
      "^": "Closure:5;_captured_this_2,_captured_registered_3",
      call$0: [function() {
        return this._captured_this_2.run$1(this._captured_registered_3);
      }, null, null, 0, 0, null, "call"]
    },
    _CustomZone_bindUnaryCallback_closure: {
      "^": "Closure:8;_async$_captured_this_0,_captured_registered_1",
      call$1: [function(arg) {
        return this._async$_captured_this_0.runUnaryGuarded$2(this._captured_registered_1, arg);
      }, null, null, 2, 0, null, 46, [], "call"]
    },
    _CustomZone_bindUnaryCallback_closure0: {
      "^": "Closure:8;_captured_this_2,_captured_registered_3",
      call$1: [function(arg) {
        return this._captured_this_2.runUnary$2(this._captured_registered_3, arg);
      }, null, null, 2, 0, null, 46, [], "call"]
    },
    _rootHandleUncaughtError_closure: {
      "^": "Closure:5;_async$_captured_error_0,_captured_stackTrace_1",
      call$0: function() {
        var t1 = this._async$_captured_error_0;
        throw H.wrapException(new P._UncaughtAsyncError(t1, P._UncaughtAsyncError__getBestStackTrace(t1, this._captured_stackTrace_1)));
      }
    },
    _RootZone: {
      "^": "_Zone;",
      get$_run: function() {
        return C._ZoneFunction__RootZone__rootRun;
      },
      get$_runUnary: function() {
        return C._ZoneFunction__RootZone__rootRunUnary;
      },
      get$_runBinary: function() {
        return C._ZoneFunction__RootZone__rootRunBinary;
      },
      get$_registerCallback: function() {
        return C._ZoneFunction__RootZone__rootRegisterCallback;
      },
      get$_registerUnaryCallback: function() {
        return C._ZoneFunction_Eeh;
      },
      get$_registerBinaryCallback: function() {
        return C._ZoneFunction_7G2;
      },
      get$_errorCallback: function() {
        return C._ZoneFunction__RootZone__rootErrorCallback;
      },
      get$_scheduleMicrotask: function() {
        return C._ZoneFunction__RootZone__rootScheduleMicrotask;
      },
      get$_createTimer: function() {
        return C._ZoneFunction__RootZone__rootCreateTimer;
      },
      get$_createPeriodicTimer: function() {
        return C._ZoneFunction_3bB;
      },
      get$_print: function() {
        return C._ZoneFunction__RootZone__rootPrint;
      },
      get$_fork: function() {
        return C._ZoneFunction__RootZone__rootFork;
      },
      get$_handleUncaughtError: function() {
        return C._ZoneFunction_NMc;
      },
      get$parent: function(_) {
        return;
      },
      get$_async$_map: function() {
        return $.get$_RootZone__rootMap();
      },
      get$_async$_delegate: function() {
        var t1 = $._RootZone__rootDelegate;
        if (t1 != null)
          return t1;
        t1 = new P._ZoneDelegate(this);
        $._RootZone__rootDelegate = t1;
        return t1;
      },
      get$errorZone: function() {
        return this;
      },
      runGuarded$1: function(f) {
        var e, s, t1, exception;
        try {
          if (C.C__RootZone === $.Zone__current) {
            t1 = f.call$0();
            return t1;
          }
          t1 = P._rootRun(null, null, this, f);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          return P._rootHandleUncaughtError(null, null, this, e, s);
        }
      },
      runUnaryGuarded$2: function(f, arg) {
        var e, s, t1, exception;
        try {
          if (C.C__RootZone === $.Zone__current) {
            t1 = f.call$1(arg);
            return t1;
          }
          t1 = P._rootRunUnary(null, null, this, f, arg);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          return P._rootHandleUncaughtError(null, null, this, e, s);
        }
      },
      runBinaryGuarded$3: function(f, arg1, arg2) {
        var e, s, t1, exception;
        try {
          if (C.C__RootZone === $.Zone__current) {
            t1 = f.call$2(arg1, arg2);
            return t1;
          }
          t1 = P._rootRunBinary(null, null, this, f, arg1, arg2);
          return t1;
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          s = H.getTraceFromException(exception);
          return P._rootHandleUncaughtError(null, null, this, e, s);
        }
      },
      bindCallback$2$runGuarded: function(f, runGuarded) {
        if (runGuarded)
          return new P._RootZone_bindCallback_closure(this, f);
        else
          return new P._RootZone_bindCallback_closure0(this, f);
      },
      bindCallback$1: function(f) {
        return this.bindCallback$2$runGuarded(f, true);
      },
      bindUnaryCallback$2$runGuarded: function(f, runGuarded) {
        if (runGuarded)
          return new P._RootZone_bindUnaryCallback_closure(this, f);
        else
          return new P._RootZone_bindUnaryCallback_closure0(this, f);
      },
      bindUnaryCallback$1: function(f) {
        return this.bindUnaryCallback$2$runGuarded(f, true);
      },
      $index: function(_, key) {
        return;
      },
      handleUncaughtError$2: [function(error, stackTrace) {
        return P._rootHandleUncaughtError(null, null, this, error, stackTrace);
      }, "call$2", "get$handleUncaughtError", 4, 0, 11],
      fork$2$specification$zoneValues: [function(specification, zoneValues) {
        return P._rootFork(null, null, this, specification, zoneValues);
      }, function() {
        return this.fork$2$specification$zoneValues(null, null);
      }, "fork$0", "call$2$specification$zoneValues", "call$0", "get$fork", 0, 5, 50, 35, 35],
      run$1: [function(f) {
        if ($.Zone__current === C.C__RootZone)
          return f.call$0();
        return P._rootRun(null, null, this, f);
      }, "call$1", "get$run", 2, 0, 51],
      runUnary$2: [function(f, arg) {
        if ($.Zone__current === C.C__RootZone)
          return f.call$1(arg);
        return P._rootRunUnary(null, null, this, f, arg);
      }, "call$2", "get$runUnary", 4, 0, 52],
      runBinary$3: [function(f, arg1, arg2) {
        if ($.Zone__current === C.C__RootZone)
          return f.call$2(arg1, arg2);
        return P._rootRunBinary(null, null, this, f, arg1, arg2);
      }, "call$3", "get$runBinary", 6, 0, 53],
      registerCallback$1: [function(f) {
        return f;
      }, "call$1", "get$registerCallback", 2, 0, 54],
      registerUnaryCallback$1: [function(f) {
        return f;
      }, "call$1", "get$registerUnaryCallback", 2, 0, 55],
      registerBinaryCallback$1: [function(f) {
        return f;
      }, "call$1", "get$registerBinaryCallback", 2, 0, 56],
      errorCallback$2: [function(error, stackTrace) {
        return;
      }, "call$2", "get$errorCallback", 4, 0, 57],
      scheduleMicrotask$1: [function(f) {
        P._rootScheduleMicrotask(null, null, this, f);
      }, "call$1", "get$scheduleMicrotask", 2, 0, 58],
      createTimer$2: [function(duration, f) {
        return P.Timer__createTimer(duration, f);
      }, "call$2", "get$createTimer", 4, 0, 59],
      createPeriodicTimer$2: [function(duration, f) {
        return P.Timer__createPeriodicTimer(duration, f);
      }, "call$2", "get$createPeriodicTimer", 4, 0, 60],
      print$1: [function(_, line) {
        H.printString(line);
      }, "call$1", "get$print", 2, 0, 61]
    },
    _RootZone_bindCallback_closure: {
      "^": "Closure:5;_async$_captured_this_0,_captured_f_1",
      call$0: [function() {
        return this._async$_captured_this_0.runGuarded$1(this._captured_f_1);
      }, null, null, 0, 0, null, "call"]
    },
    _RootZone_bindCallback_closure0: {
      "^": "Closure:5;_captured_this_2,_captured_f_3",
      call$0: [function() {
        return this._captured_this_2.run$1(this._captured_f_3);
      }, null, null, 0, 0, null, "call"]
    },
    _RootZone_bindUnaryCallback_closure: {
      "^": "Closure:8;_async$_captured_this_0,_captured_f_1",
      call$1: [function(arg) {
        return this._async$_captured_this_0.runUnaryGuarded$2(this._captured_f_1, arg);
      }, null, null, 2, 0, null, 46, [], "call"]
    },
    _RootZone_bindUnaryCallback_closure0: {
      "^": "Closure:8;_captured_this_2,_captured_f_3",
      call$1: [function(arg) {
        return this._captured_this_2.runUnary$2(this._captured_f_3, arg);
      }, null, null, 2, 0, null, 46, [], "call"]
    }
  }], ["dart.collection", "dart:collection",, P, {
    "^": "",
    LinkedHashMap_LinkedHashMap$_empty: function($K, $V) {
      var t1 = new H.JsLinkedHashMap(0, null, null, null, null, null, 0);
      t1.$builtinTypeInfo = [$K, $V];
      return t1;
    },
    LinkedHashMap__makeEmpty: function() {
      var t1 = new H.JsLinkedHashMap(0, null, null, null, null, null, 0);
      t1.$builtinTypeInfo = [null, null];
      return t1;
    },
    LinkedHashMap__makeLiteral: function(keyValuePairs) {
      var t1 = new H.JsLinkedHashMap(0, null, null, null, null, null, 0);
      t1.$builtinTypeInfo = [null, null];
      return H.fillLiteralMap(keyValuePairs, t1);
    },
    _defaultEquals: [function(a, b) {
      return J.$eq(a, b);
    }, "call$2", "_defaultEquals$closure", 4, 0, 208],
    _defaultHashCode: [function(a) {
      return J.get$hashCode$(a);
    }, "call$1", "_defaultHashCode$closure", 2, 0, 185, 23, []],
    HashMap_HashMap: function(equals, hashCode, isValidKey, $K, $V) {
      var t1 = new P._HashMap(0, null, null, null, null);
      t1.$builtinTypeInfo = [$K, $V];
      return t1;
    },
    HashMap_HashMap$from: function(other, $K, $V) {
      var result = P.HashMap_HashMap(null, null, null, $K, $V);
      J.forEach$1$ax(other, new P.HashMap_HashMap$from_closure(result));
      return result;
    },
    HashSet_HashSet: function(equals, hashCode, isValidKey, $E) {
      var t1 = new P._HashSet(0, null, null, null, null);
      t1.$builtinTypeInfo = [$E];
      return t1;
    },
    IterableBase_iterableToShortString: function(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (P._isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = [];
      t1 = $.get$_toStringVisiting();
      t1.push(iterable);
      try {
        P._iterablePartsToStrings(iterable, parts);
      } finally {
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t1.pop();
      }
      t1 = P.StringBuffer__writeAll(leftDelimiter, parts, ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    IterableBase_iterableToFullString: function(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1, t2;
      if (P._isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new P.StringBuffer(leftDelimiter);
      t1 = $.get$_toStringVisiting();
      t1.push(iterable);
      try {
        t2 = buffer;
        t2.set$_contents(P.StringBuffer__writeAll(t2.get$_contents(), iterable, ", "));
      } finally {
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t1.pop();
      }
      t1 = buffer;
      t1.set$_contents(t1.get$_contents() + rightDelimiter);
      t1 = buffer.get$_contents();
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _isToStringVisiting: function(o) {
      var i, t1;
      for (i = 0; t1 = $.get$_toStringVisiting(), i < t1.length; ++i) {
        t1 = t1[i];
        if (o == null ? t1 == null : o === t1)
          return true;
      }
      return false;
    },
    _iterablePartsToStrings: function(iterable, parts) {
      var it, $length, count, next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision;
      it = iterable.get$iterator(iterable);
      $length = 0;
      count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = H.S(it.get$current());
        parts.push(next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        if (0 >= parts.length)
          return H.ioore(parts, 0);
        ultimateString = parts.pop();
        if (0 >= parts.length)
          return H.ioore(parts, 0);
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            parts.push(H.S(penultimate));
            return;
          }
          ultimateString = H.S(penultimate);
          if (0 >= parts.length)
            return H.ioore(parts, 0);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                if (0 >= parts.length)
                  return H.ioore(parts, 0);
                $length -= parts.pop().length + 2;
                --count;
              }
              parts.push("...");
              return;
            }
          }
          penultimateString = H.S(penultimate);
          ultimateString = H.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        if (0 >= parts.length)
          return H.ioore(parts, 0);
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        parts.push(elision);
      parts.push(penultimateString);
      parts.push(ultimateString);
    },
    LinkedHashMap_LinkedHashMap: function(equals, hashCode, isValidKey, $K, $V) {
      var t1 = new H.JsLinkedHashMap(0, null, null, null, null, null, 0);
      t1.$builtinTypeInfo = [$K, $V];
      return t1;
    },
    LinkedHashMap_LinkedHashMap$identity: function($K, $V) {
      var t1 = new P._LinkedIdentityHashMap(0, null, null, null, null, null, 0);
      t1.$builtinTypeInfo = [$K, $V];
      return t1;
    },
    LinkedHashMap_LinkedHashMap$from: function(other, $K, $V) {
      var result = P.LinkedHashMap_LinkedHashMap(null, null, null, $K, $V);
      J.forEach$1$ax(other, new P.LinkedHashMap_LinkedHashMap$from_closure(result));
      return result;
    },
    LinkedHashSet_LinkedHashSet: function(equals, hashCode, isValidKey, $E) {
      var t1 = new P._LinkedHashSet(0, null, null, null, null, null, 0);
      t1.$builtinTypeInfo = [$E];
      return t1;
    },
    LinkedHashSet_LinkedHashSet$from: function(elements, $E) {
      var result, t1;
      result = P.LinkedHashSet_LinkedHashSet(null, null, null, $E);
      for (t1 = elements.get$iterator(elements); t1.moveNext$0();)
        result.add$1(0, t1.get$current());
      return result;
    },
    Maps_mapToString: function(m) {
      var t1, result, t2;
      t1 = {};
      if (P._isToStringVisiting(m))
        return "{...}";
      result = new P.StringBuffer("");
      try {
        $.get$_toStringVisiting().push(m);
        t2 = result;
        t2.set$_contents(t2.get$_contents() + "{");
        t1._captured_first_0 = true;
        J.forEach$1$ax(m, new P.Maps_mapToString_closure(t1, result));
        t1 = result;
        t1.set$_contents(t1.get$_contents() + "}");
      } finally {
        t1 = $.get$_toStringVisiting();
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t1.pop();
      }
      t1 = result.get$_contents();
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _HashMap: {
      "^": "Object;_collection$_length,_collection$_strings,_collection$_nums,_collection$_rest,_collection$_keys",
      get$length: function(_) {
        return this._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._collection$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._collection$_length !== 0;
      },
      get$keys: function() {
        var t1 = new P.HashMapKeyIterable(this);
        t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
        return t1;
      },
      containsKey$1: function(key) {
        var strings, nums;
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          return strings == null ? false : strings[key] != null;
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          return nums == null ? false : nums[key] != null;
        } else
          return this._containsKey$1(key);
      },
      _containsKey$1: function(key) {
        var rest = this._collection$_rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(key)], key) >= 0;
      },
      addAll$1: function(_, other) {
        J.forEach$1$ax(other, new P._HashMap_addAll_closure(this));
      },
      $index: function(_, key) {
        var strings, t1, entry, nums;
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null)
            t1 = null;
          else {
            entry = strings[key];
            t1 = entry === strings ? null : entry;
          }
          return t1;
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          if (nums == null)
            t1 = null;
          else {
            entry = nums[key];
            t1 = entry === nums ? null : entry;
          }
          return t1;
        } else
          return this._get$1(key);
      },
      _get$1: function(key) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        return index < 0 ? null : bucket[index + 1];
      },
      $indexSet: function(_, key, value) {
        var strings, nums;
        if (typeof key === "string" && key !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null) {
            strings = P._HashMap__newHashTable();
            this._collection$_strings = strings;
          }
          this._collection$_addHashTableEntry$3(strings, key, value);
        } else if (typeof key === "number" && (key & 0x3ffffff) === key) {
          nums = this._collection$_nums;
          if (nums == null) {
            nums = P._HashMap__newHashTable();
            this._collection$_nums = nums;
          }
          this._collection$_addHashTableEntry$3(nums, key, value);
        } else
          this._set$2(key, value);
      },
      _set$2: function(key, value) {
        var rest, hash, bucket, index;
        rest = this._collection$_rest;
        if (rest == null) {
          rest = P._HashMap__newHashTable();
          this._collection$_rest = rest;
        }
        hash = this._computeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null) {
          P._HashMap__setTableEntry(rest, hash, [key, value]);
          ++this._collection$_length;
          this._collection$_keys = null;
        } else {
          index = this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index + 1] = value;
          else {
            bucket.push(key, value);
            ++this._collection$_length;
            this._collection$_keys = null;
          }
        }
      },
      remove$1: function(_, key) {
        if (typeof key === "string" && key !== "__proto__")
          return this._collection$_removeHashTableEntry$2(this._collection$_strings, key);
        else if (typeof key === "number" && (key & 0x3ffffff) === key)
          return this._collection$_removeHashTableEntry$2(this._collection$_nums, key);
        else
          return this._remove$1(key);
      },
      _remove$1: function(key) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(key)];
        index = this._findBucketIndex$2(bucket, key);
        if (index < 0)
          return;
        --this._collection$_length;
        this._collection$_keys = null;
        return bucket.splice(index, 2)[1];
      },
      clear$0: function(_) {
        if (this._collection$_length > 0) {
          this._collection$_keys = null;
          this._collection$_rest = null;
          this._collection$_nums = null;
          this._collection$_strings = null;
          this._collection$_length = 0;
        }
      },
      forEach$1: function(_, action) {
        var keys, $length, i, key;
        keys = this._collection$_computeKeys$0();
        for ($length = keys.length, i = 0; i < $length; ++i) {
          key = keys[i];
          action.call$2(key, this.$index(0, key));
          if (keys !== this._collection$_keys)
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
      },
      _collection$_computeKeys$0: function() {
        var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
        t1 = this._collection$_keys;
        if (t1 != null)
          return t1;
        result = Array(this._collection$_length);
        result.fixed$length = Array;
        strings = this._collection$_strings;
        if (strings != null) {
          names = Object.getOwnPropertyNames(strings);
          entries = names.length;
          for (index = 0, i = 0; i < entries; ++i) {
            result[index] = names[i];
            ++index;
          }
        } else
          index = 0;
        nums = this._collection$_nums;
        if (nums != null) {
          names = Object.getOwnPropertyNames(nums);
          entries = names.length;
          for (i = 0; i < entries; ++i) {
            result[index] = +names[i];
            ++index;
          }
        }
        rest = this._collection$_rest;
        if (rest != null) {
          names = Object.getOwnPropertyNames(rest);
          entries = names.length;
          for (i = 0; i < entries; ++i) {
            bucket = rest[names[i]];
            $length = bucket.length;
            for (i0 = 0; i0 < $length; i0 += 2) {
              result[index] = bucket[i0];
              ++index;
            }
          }
        }
        this._collection$_keys = result;
        return result;
      },
      _collection$_addHashTableEntry$3: function(table, key, value) {
        if (table[key] == null) {
          ++this._collection$_length;
          this._collection$_keys = null;
        }
        P._HashMap__setTableEntry(table, key, value);
      },
      _collection$_removeHashTableEntry$2: function(table, key) {
        var value;
        if (table != null && table[key] != null) {
          value = P._HashMap__getTableEntry(table, key);
          delete table[key];
          --this._collection$_length;
          this._collection$_keys = null;
          return value;
        } else
          return;
      },
      _computeHashCode$1: function(key) {
        return J.get$hashCode$(key) & 0x3ffffff;
      },
      _findBucketIndex$2: function(bucket, key) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; i += 2)
          if (J.$eq(bucket[i], key))
            return i;
        return -1;
      },
      $isMap: 1,
      static: {_HashMap__getTableEntry: function(table, key) {
          var entry = table[key];
          return entry === table ? null : entry;
        }, _HashMap__setTableEntry: function(table, key, value) {
          if (value == null)
            table[key] = table;
          else
            table[key] = value;
        }, _HashMap__newHashTable: function() {
          var table = Object.create(null);
          P._HashMap__setTableEntry(table, "<non-identifier-key>", table);
          delete table["<non-identifier-key>"];
          return table;
        }}
    },
    _HashMap_addAll_closure: {
      "^": "Closure;_collection$_captured_this_0",
      call$2: [function(key, value) {
        this._collection$_captured_this_0.$indexSet(0, key, value);
      }, null, null, 4, 0, null, 21, [], 22, [], "call"],
      $signature: function() {
        return H.computeSignature(function(K, V) {
          return {func: 1, args: [K, V]};
        }, this._collection$_captured_this_0, "_HashMap");
      }
    },
    _IdentityHashMap: {
      "^": "_HashMap;_collection$_length,_collection$_strings,_collection$_nums,_collection$_rest,_collection$_keys",
      _computeHashCode$1: function(key) {
        return H.objectHashCode(key) & 0x3ffffff;
      },
      _findBucketIndex$2: function(bucket, key) {
        var $length, i, t1;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; i += 2) {
          t1 = bucket[i];
          if (t1 == null ? key == null : t1 === key)
            return i;
        }
        return -1;
      }
    },
    HashMapKeyIterable: {
      "^": "Iterable;_map",
      get$length: function(_) {
        return this._map._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._map._collection$_length === 0;
      },
      get$iterator: function(_) {
        var t1 = this._map;
        t1 = new P.HashMapKeyIterator(t1, t1._collection$_computeKeys$0(), 0, null);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      contains$1: function(_, element) {
        return this._map.containsKey$1(element);
      },
      forEach$1: function(_, f) {
        var t1, keys, $length, i;
        t1 = this._map;
        keys = t1._collection$_computeKeys$0();
        for ($length = keys.length, i = 0; i < $length; ++i) {
          f.call$1(keys[i]);
          if (keys !== t1._collection$_keys)
            throw H.wrapException(new P.ConcurrentModificationError(t1));
        }
      },
      $isEfficientLength: 1
    },
    HashMapKeyIterator: {
      "^": "Object;_map,_collection$_keys,_offset,_collection$_current",
      get$current: function() {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var keys, offset, t1;
        keys = this._collection$_keys;
        offset = this._offset;
        t1 = this._map;
        if (keys !== t1._collection$_keys)
          throw H.wrapException(new P.ConcurrentModificationError(t1));
        else if (offset >= keys.length) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = keys[offset];
          this._offset = offset + 1;
          return true;
        }
      }
    },
    _LinkedIdentityHashMap: {
      "^": "JsLinkedHashMap;__js_helper$_length,_strings,_nums,_rest,_first,_last,_modifications",
      internalComputeHashCode$1: function(key) {
        return H.objectHashCode(key) & 0x3ffffff;
      },
      internalFindBucketIndex$2: function(bucket, key) {
        var $length, i, t1;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i) {
          t1 = bucket[i].get$hashMapCellKey();
          if (t1 == null ? key == null : t1 === key)
            return i;
        }
        return -1;
      }
    },
    _HashSet: {
      "^": "_HashSetBase;_collection$_length,_collection$_strings,_collection$_nums,_collection$_rest,_elements",
      get$iterator: function(_) {
        var t1 = new P.HashSetIterator(this, this._computeElements$0(), 0, null);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      get$length: function(_) {
        return this._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._collection$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._collection$_length !== 0;
      },
      contains$1: function(_, object) {
        var strings, nums;
        if (typeof object === "string" && object !== "__proto__") {
          strings = this._collection$_strings;
          return strings == null ? false : strings[object] != null;
        } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
          nums = this._collection$_nums;
          return nums == null ? false : nums[object] != null;
        } else
          return this._contains$1(object);
      },
      _contains$1: function(object) {
        var rest = this._collection$_rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      },
      lookup$1: function(object) {
        var t1;
        if (!(typeof object === "string" && object !== "__proto__"))
          t1 = typeof object === "number" && (object & 0x3ffffff) === object;
        else
          t1 = true;
        if (t1)
          return this.contains$1(0, object) ? object : null;
        return this._lookup$1(object);
      },
      _lookup$1: function(object) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return;
        return J.$index$asx(bucket, index);
      },
      add$1: function(_, element) {
        var strings, table, nums;
        if (typeof element === "string" && element !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null) {
            table = Object.create(null);
            table["<non-identifier-key>"] = table;
            delete table["<non-identifier-key>"];
            this._collection$_strings = table;
            strings = table;
          }
          return this._collection$_addHashTableEntry$2(strings, element);
        } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
          nums = this._collection$_nums;
          if (nums == null) {
            table = Object.create(null);
            table["<non-identifier-key>"] = table;
            delete table["<non-identifier-key>"];
            this._collection$_nums = table;
            nums = table;
          }
          return this._collection$_addHashTableEntry$2(nums, element);
        } else
          return this._add$1(element);
      },
      _add$1: function(element) {
        var rest, hash, bucket;
        rest = this._collection$_rest;
        if (rest == null) {
          rest = P._HashSet__newHashTable();
          this._collection$_rest = rest;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [element];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(element);
        }
        ++this._collection$_length;
        this._elements = null;
        return true;
      },
      addAll$1: function(_, objects) {
        var t1;
        for (t1 = J.get$iterator$ax(objects); t1.moveNext$0();)
          this.add$1(0, t1.get$current());
      },
      remove$1: function(_, object) {
        if (typeof object === "string" && object !== "__proto__")
          return this._collection$_removeHashTableEntry$2(this._collection$_strings, object);
        else if (typeof object === "number" && (object & 0x3ffffff) === object)
          return this._collection$_removeHashTableEntry$2(this._collection$_nums, object);
        else
          return this._remove$1(object);
      },
      _remove$1: function(object) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return false;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return false;
        --this._collection$_length;
        this._elements = null;
        bucket.splice(index, 1);
        return true;
      },
      clear$0: function(_) {
        if (this._collection$_length > 0) {
          this._elements = null;
          this._collection$_rest = null;
          this._collection$_nums = null;
          this._collection$_strings = null;
          this._collection$_length = 0;
        }
      },
      _computeElements$0: function() {
        var t1, result, strings, names, entries, index, i, nums, rest, bucket, $length, i0;
        t1 = this._elements;
        if (t1 != null)
          return t1;
        result = Array(this._collection$_length);
        result.fixed$length = Array;
        strings = this._collection$_strings;
        if (strings != null) {
          names = Object.getOwnPropertyNames(strings);
          entries = names.length;
          for (index = 0, i = 0; i < entries; ++i) {
            result[index] = names[i];
            ++index;
          }
        } else
          index = 0;
        nums = this._collection$_nums;
        if (nums != null) {
          names = Object.getOwnPropertyNames(nums);
          entries = names.length;
          for (i = 0; i < entries; ++i) {
            result[index] = +names[i];
            ++index;
          }
        }
        rest = this._collection$_rest;
        if (rest != null) {
          names = Object.getOwnPropertyNames(rest);
          entries = names.length;
          for (i = 0; i < entries; ++i) {
            bucket = rest[names[i]];
            $length = bucket.length;
            for (i0 = 0; i0 < $length; ++i0) {
              result[index] = bucket[i0];
              ++index;
            }
          }
        }
        this._elements = result;
        return result;
      },
      _collection$_addHashTableEntry$2: function(table, element) {
        if (table[element] != null)
          return false;
        table[element] = 0;
        ++this._collection$_length;
        this._elements = null;
        return true;
      },
      _collection$_removeHashTableEntry$2: function(table, element) {
        if (table != null && table[element] != null) {
          delete table[element];
          --this._collection$_length;
          this._elements = null;
          return true;
        } else
          return false;
      },
      _computeHashCode$1: function(element) {
        return J.get$hashCode$(element) & 0x3ffffff;
      },
      _findBucketIndex$2: function(bucket, element) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i)
          if (J.$eq(bucket[i], element))
            return i;
        return -1;
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null,
      static: {_HashSet__newHashTable: function() {
          var table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          return table;
        }}
    },
    HashSetIterator: {
      "^": "Object;_set,_elements,_offset,_collection$_current",
      get$current: function() {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var elements, offset, t1;
        elements = this._elements;
        offset = this._offset;
        t1 = this._set;
        if (elements !== t1._elements)
          throw H.wrapException(new P.ConcurrentModificationError(t1));
        else if (offset >= elements.length) {
          this._collection$_current = null;
          return false;
        } else {
          this._collection$_current = elements[offset];
          this._offset = offset + 1;
          return true;
        }
      }
    },
    _LinkedHashSet: {
      "^": "_HashSetBase;_collection$_length,_collection$_strings,_collection$_nums,_collection$_rest,_collection$_first,_collection$_last,_collection$_modifications",
      get$iterator: function(_) {
        var t1 = new P.LinkedHashSetIterator(this, this._collection$_modifications, null, null);
        t1.$builtinTypeInfo = [null];
        t1._collection$_cell = this._collection$_first;
        return t1;
      },
      get$length: function(_) {
        return this._collection$_length;
      },
      get$isEmpty: function(_) {
        return this._collection$_length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._collection$_length !== 0;
      },
      contains$1: function(_, object) {
        var strings, nums;
        if (typeof object === "string" && object !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null)
            return false;
          return strings[object] != null;
        } else if (typeof object === "number" && (object & 0x3ffffff) === object) {
          nums = this._collection$_nums;
          if (nums == null)
            return false;
          return nums[object] != null;
        } else
          return this._contains$1(object);
      },
      _contains$1: function(object) {
        var rest = this._collection$_rest;
        if (rest == null)
          return false;
        return this._findBucketIndex$2(rest[this._computeHashCode$1(object)], object) >= 0;
      },
      lookup$1: function(object) {
        var t1;
        if (!(typeof object === "string" && object !== "__proto__"))
          t1 = typeof object === "number" && (object & 0x3ffffff) === object;
        else
          t1 = true;
        if (t1)
          return this.contains$1(0, object) ? object : null;
        else
          return this._lookup$1(object);
      },
      _lookup$1: function(object) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return;
        return J.$index$asx(bucket, index).get$_element();
      },
      forEach$1: function(_, action) {
        var cell, modifications;
        cell = this._collection$_first;
        modifications = this._collection$_modifications;
        for (; cell != null;) {
          action.call$1(cell.get$_element());
          if (modifications !== this._collection$_modifications)
            throw H.wrapException(new P.ConcurrentModificationError(this));
          cell = cell.get$_collection$_next();
        }
      },
      get$first: function(_) {
        var t1 = this._collection$_first;
        if (t1 == null)
          throw H.wrapException(new P.StateError("No elements"));
        return t1.get$_element();
      },
      get$last: function(_) {
        var t1 = this._collection$_last;
        if (t1 == null)
          throw H.wrapException(new P.StateError("No elements"));
        return t1.get$_element();
      },
      add$1: function(_, element) {
        var strings, table, nums;
        if (typeof element === "string" && element !== "__proto__") {
          strings = this._collection$_strings;
          if (strings == null) {
            table = Object.create(null);
            table["<non-identifier-key>"] = table;
            delete table["<non-identifier-key>"];
            this._collection$_strings = table;
            strings = table;
          }
          return this._collection$_addHashTableEntry$2(strings, element);
        } else if (typeof element === "number" && (element & 0x3ffffff) === element) {
          nums = this._collection$_nums;
          if (nums == null) {
            table = Object.create(null);
            table["<non-identifier-key>"] = table;
            delete table["<non-identifier-key>"];
            this._collection$_nums = table;
            nums = table;
          }
          return this._collection$_addHashTableEntry$2(nums, element);
        } else
          return this._add$1(element);
      },
      _add$1: function(element) {
        var rest, hash, bucket;
        rest = this._collection$_rest;
        if (rest == null) {
          rest = P._LinkedHashSet__newHashTable();
          this._collection$_rest = rest;
        }
        hash = this._computeHashCode$1(element);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [this._collection$_newLinkedCell$1(element)];
        else {
          if (this._findBucketIndex$2(bucket, element) >= 0)
            return false;
          bucket.push(this._collection$_newLinkedCell$1(element));
        }
        return true;
      },
      remove$1: function(_, object) {
        if (typeof object === "string" && object !== "__proto__")
          return this._collection$_removeHashTableEntry$2(this._collection$_strings, object);
        else if (typeof object === "number" && (object & 0x3ffffff) === object)
          return this._collection$_removeHashTableEntry$2(this._collection$_nums, object);
        else
          return this._remove$1(object);
      },
      _remove$1: function(object) {
        var rest, bucket, index;
        rest = this._collection$_rest;
        if (rest == null)
          return false;
        bucket = rest[this._computeHashCode$1(object)];
        index = this._findBucketIndex$2(bucket, object);
        if (index < 0)
          return false;
        this._collection$_unlinkCell$1(bucket.splice(index, 1)[0]);
        return true;
      },
      clear$0: function(_) {
        if (this._collection$_length > 0) {
          this._collection$_last = null;
          this._collection$_first = null;
          this._collection$_rest = null;
          this._collection$_nums = null;
          this._collection$_strings = null;
          this._collection$_length = 0;
          this._collection$_modifications = this._collection$_modifications + 1 & 67108863;
        }
      },
      _collection$_addHashTableEntry$2: function(table, element) {
        if (table[element] != null)
          return false;
        table[element] = this._collection$_newLinkedCell$1(element);
        return true;
      },
      _collection$_removeHashTableEntry$2: function(table, element) {
        var cell;
        if (table == null)
          return false;
        cell = table[element];
        if (cell == null)
          return false;
        this._collection$_unlinkCell$1(cell);
        delete table[element];
        return true;
      },
      _collection$_newLinkedCell$1: function(element) {
        var cell, last;
        cell = new P.LinkedHashSetCell(element, null, null);
        if (this._collection$_first == null) {
          this._collection$_last = cell;
          this._collection$_first = cell;
        } else {
          last = this._collection$_last;
          cell._collection$_previous = last;
          last.set$_collection$_next(cell);
          this._collection$_last = cell;
        }
        ++this._collection$_length;
        this._collection$_modifications = this._collection$_modifications + 1 & 67108863;
        return cell;
      },
      _collection$_unlinkCell$1: function(cell) {
        var previous, next;
        previous = cell.get$_collection$_previous();
        next = cell.get$_collection$_next();
        if (previous == null)
          this._collection$_first = next;
        else
          previous.set$_collection$_next(next);
        if (next == null)
          this._collection$_last = previous;
        else
          next.set$_collection$_previous(previous);
        --this._collection$_length;
        this._collection$_modifications = this._collection$_modifications + 1 & 67108863;
      },
      _computeHashCode$1: function(element) {
        return J.get$hashCode$(element) & 0x3ffffff;
      },
      _findBucketIndex$2: function(bucket, element) {
        var $length, i;
        if (bucket == null)
          return -1;
        $length = bucket.length;
        for (i = 0; i < $length; ++i)
          if (J.$eq(bucket[i].get$_element(), element))
            return i;
        return -1;
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null,
      static: {_LinkedHashSet__newHashTable: function() {
          var table = Object.create(null);
          table["<non-identifier-key>"] = table;
          delete table["<non-identifier-key>"];
          return table;
        }}
    },
    LinkedHashSetCell: {
      "^": "Object;_element<,_collection$_next@,_collection$_previous@"
    },
    LinkedHashSetIterator: {
      "^": "Object;_set,_collection$_modifications,_collection$_cell,_collection$_current",
      get$current: function() {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var t1 = this._set;
        if (this._collection$_modifications !== t1._collection$_modifications)
          throw H.wrapException(new P.ConcurrentModificationError(t1));
        else {
          t1 = this._collection$_cell;
          if (t1 == null) {
            this._collection$_current = null;
            return false;
          } else {
            this._collection$_current = t1.get$_element();
            this._collection$_cell = this._collection$_cell.get$_collection$_next();
            return true;
          }
        }
      }
    },
    UnmodifiableListView: {
      "^": "UnmodifiableListBase;_collection$_source",
      get$length: function(_) {
        return J.get$length$asx(this._collection$_source);
      },
      $index: function(_, index) {
        return J.elementAt$1$ax(this._collection$_source, index);
      }
    },
    HashMap_HashMap$from_closure: {
      "^": "Closure:15;_collection$_captured_result_0",
      call$2: [function(k, v) {
        this._collection$_captured_result_0.$indexSet(0, k, v);
      }, null, null, 4, 0, null, 30, [], 63, [], "call"]
    },
    _HashSetBase: {
      "^": "SetBase;"
    },
    IterableBase: {
      "^": "Iterable;"
    },
    LinkedHashMap_LinkedHashMap$from_closure: {
      "^": "Closure:15;_collection$_captured_result_0",
      call$2: [function(k, v) {
        this._collection$_captured_result_0.$indexSet(0, k, v);
      }, null, null, 4, 0, null, 30, [], 63, [], "call"]
    },
    LinkedList: {
      "^": "Iterable;_modificationCount,_collection$_length,_collection$_next@,_collection$_previous@",
      addFirst$1: function(entry) {
        this._insertAfter$2(this, entry);
      },
      add$1: function(_, entry) {
        this._insertAfter$2(this._collection$_previous, entry);
      },
      addAll$1: function(_, entries) {
        J.forEach$1$ax(entries, new P.LinkedList_addAll_closure(this));
      },
      remove$1: function(_, entry) {
        if (entry.get$_list() !== this)
          return false;
        this._unlink$1(entry);
        return true;
      },
      get$iterator: function(_) {
        var t1 = new P._LinkedListIterator(this, this._modificationCount, null, this._collection$_next);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      get$length: function(_) {
        return this._collection$_length;
      },
      clear$0: function(_) {
        var next, next0;
        ++this._modificationCount;
        next = this._collection$_next;
        for (; next !== this; next = next0) {
          next0 = next.get$_collection$_next();
          next.set$_list(null);
          next.set$_collection$_previous(null);
          next.set$_collection$_next(null);
        }
        this._collection$_previous = this;
        this._collection$_next = this;
        this._collection$_length = 0;
      },
      get$first: function(_) {
        var t1 = this._collection$_next;
        if (t1 === this)
          throw H.wrapException(new P.StateError("No such element"));
        return t1;
      },
      get$last: function(_) {
        var t1 = this._collection$_previous;
        if (t1 === this)
          throw H.wrapException(new P.StateError("No such element"));
        return t1;
      },
      forEach$1: function(_, action) {
        var modificationCount, current;
        modificationCount = this._modificationCount;
        current = this._collection$_next;
        for (; current !== this;) {
          action.call$1(current);
          if (modificationCount !== this._modificationCount)
            throw H.wrapException(new P.ConcurrentModificationError(this));
          current = current.get$_collection$_next();
        }
      },
      get$isEmpty: function(_) {
        return this._collection$_length === 0;
      },
      _insertAfter$2: function(entry, newEntry) {
        var successor;
        if (J.get$list$x(newEntry) != null)
          throw H.wrapException(new P.StateError("LinkedListEntry is already in a LinkedList"));
        ++this._modificationCount;
        newEntry.set$_list(this);
        successor = entry.get$_collection$_next();
        successor.set$_collection$_previous(newEntry);
        newEntry.set$_collection$_previous(entry);
        newEntry.set$_collection$_next(successor);
        entry.set$_collection$_next(newEntry);
        ++this._collection$_length;
      },
      _unlink$1: function(entry) {
        ++this._modificationCount;
        entry.get$_collection$_next().set$_collection$_previous(entry.get$_collection$_previous());
        entry.get$_collection$_previous().set$_collection$_next(entry.get$_collection$_next());
        --this._collection$_length;
        entry.set$_collection$_previous(null);
        entry.set$_collection$_next(null);
        entry.set$_list(null);
      },
      LinkedList$0: function($E) {
        this._collection$_previous = this;
        this._collection$_next = this;
      }
    },
    LinkedList_addAll_closure: {
      "^": "Closure:8;_collection$_captured_this_0",
      call$1: [function(entry) {
        var t1 = this._collection$_captured_this_0;
        return t1._insertAfter$2(t1._collection$_previous, entry);
      }, null, null, 2, 0, null, 68, [], "call"]
    },
    _LinkedListIterator: {
      "^": "Object;_list<,_modificationCount,_collection$_current,_collection$_next@",
      get$current: function() {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var t1, t2;
        t1 = this._collection$_next;
        t2 = this._list;
        if (t1 === t2) {
          this._collection$_current = null;
          return false;
        }
        if (this._modificationCount !== t2._modificationCount)
          throw H.wrapException(new P.ConcurrentModificationError(this));
        this._collection$_current = t1;
        this._collection$_next = t1.get$_collection$_next();
        return true;
      }
    },
    LinkedListEntry: {
      "^": "Object;_list@,_collection$_next@,_collection$_previous@",
      get$list: function(_) {
        return this._list;
      },
      unlink$0: function() {
        this._list._unlink$1(this);
      },
      get$next: function() {
        var t1, t2;
        t1 = this._collection$_next;
        t2 = this._list;
        if (t1 == null ? t2 == null : t1 === t2)
          return;
        return t1;
      },
      insertBefore$1: function(_, entry) {
        this._list._insertAfter$2(this._collection$_previous, entry);
      },
      list$1: function($receiver, arg0) {
        return this.get$list(this).call$1(arg0);
      }
    },
    ListBase: {
      "^": "Object_ListMixin;"
    },
    Object_ListMixin: {
      "^": "Object+ListMixin;",
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    ListMixin: {
      "^": "Object;",
      get$iterator: function(receiver) {
        var t1 = new H.ListIterator(receiver, this.get$length(receiver), 0, null);
        t1.$builtinTypeInfo = [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)];
        return t1;
      },
      elementAt$1: function(receiver, index) {
        return this.$index(receiver, index);
      },
      forEach$1: function(receiver, action) {
        var $length, i;
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          action.call$1(this.$index(receiver, i));
          if ($length !== this.get$length(receiver))
            throw H.wrapException(new P.ConcurrentModificationError(receiver));
        }
      },
      get$isEmpty: function(receiver) {
        return J.$eq(this.get$length(receiver), 0);
      },
      get$isNotEmpty: function(receiver) {
        return !this.get$isEmpty(receiver);
      },
      get$first: function(receiver) {
        if (J.$eq(this.get$length(receiver), 0))
          throw H.wrapException(H.IterableElementError_noElement());
        return this.$index(receiver, 0);
      },
      get$last: function(receiver) {
        if (J.$eq(this.get$length(receiver), 0))
          throw H.wrapException(H.IterableElementError_noElement());
        return this.$index(receiver, J.$sub$n(this.get$length(receiver), 1));
      },
      contains$1: function(receiver, element) {
        var $length, t1, i, t2;
        $length = this.get$length(receiver);
        t1 = J.getInterceptor($length);
        i = 0;
        while (true) {
          t2 = this.get$length(receiver);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          if (J.$eq(this.$index(receiver, i), element))
            return true;
          if (!t1.$eq($length, this.get$length(receiver)))
            throw H.wrapException(new P.ConcurrentModificationError(receiver));
          ++i;
        }
        return false;
      },
      join$1: function(receiver, separator) {
        var t1;
        if (J.$eq(this.get$length(receiver), 0))
          return "";
        t1 = P.StringBuffer__writeAll("", receiver, separator);
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      where$1: function(receiver, test) {
        var t1 = new H.WhereIterable(receiver, test);
        t1.$builtinTypeInfo = [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)];
        return t1;
      },
      map$1: function(receiver, f) {
        var t1 = new H.MappedListIterable(receiver, f);
        t1.$builtinTypeInfo = [null, null];
        return t1;
      },
      fold$2: function(receiver, initialValue, combine) {
        var $length, value, i;
        $length = this.get$length(receiver);
        if (typeof $length !== "number")
          return H.iae($length);
        value = initialValue;
        i = 0;
        for (; i < $length; ++i) {
          value = combine.call$2(value, this.$index(receiver, i));
          if ($length !== this.get$length(receiver))
            throw H.wrapException(new P.ConcurrentModificationError(receiver));
        }
        return value;
      },
      skip$1: function(receiver, count) {
        return H.SubListIterable$(receiver, count, null, H.getRuntimeTypeArgument(receiver, "ListMixin", 0));
      },
      toList$1$growable: function(receiver, growable) {
        var result, t1, i;
        if (growable) {
          result = [];
          result.$builtinTypeInfo = [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)];
          C.JSArray_methods.set$length(result, this.get$length(receiver));
        } else {
          t1 = this.get$length(receiver);
          if (typeof t1 !== "number")
            return H.iae(t1);
          result = Array(t1);
          result.fixed$length = Array;
          result.$builtinTypeInfo = [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)];
        }
        i = 0;
        while (true) {
          t1 = this.get$length(receiver);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          t1 = this.$index(receiver, i);
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = t1;
          ++i;
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      add$1: function(receiver, element) {
        var t1 = this.get$length(receiver);
        this.set$length(receiver, J.$add$ns(t1, 1));
        this.$indexSet(receiver, t1, element);
      },
      addAll$1: function(receiver, iterable) {
        var t1, element, t2;
        for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0();) {
          element = t1.get$current();
          t2 = this.get$length(receiver);
          this.set$length(receiver, J.$add$ins(t2, 1));
          this.$indexSet(receiver, t2, element);
        }
      },
      remove$1: function(receiver, element) {
        var i, t1;
        i = 0;
        while (true) {
          t1 = this.get$length(receiver);
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(i < t1))
            break;
          if (J.$eq(this.$index(receiver, i), element)) {
            this.setRange$4(receiver, i, J.$sub$in(this.get$length(receiver), 1), receiver, i + 1);
            this.set$length(receiver, J.$sub$in(this.get$length(receiver), 1));
            return true;
          }
          ++i;
        }
        return false;
      },
      clear$0: function(receiver) {
        this.set$length(receiver, 0);
      },
      sublist$2: function(receiver, start, end) {
        var listLength, $length, result, i, t1;
        listLength = this.get$length(receiver);
        if (end == null)
          end = listLength;
        P.RangeError_checkValidRange(start, end, listLength, null, null, null);
        $length = J.$sub$n(end, start);
        result = [];
        result.$builtinTypeInfo = [H.getRuntimeTypeArgument(receiver, "ListMixin", 0)];
        C.JSArray_methods.set$length(result, $length);
        if (typeof $length !== "number")
          return H.iae($length);
        i = 0;
        for (; i < $length; ++i) {
          t1 = this.$index(receiver, start + i);
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = t1;
        }
        return result;
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      getRange$2: function(receiver, start, end) {
        P.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null, null);
        return H.SubListIterable$(receiver, start, end, H.getRuntimeTypeArgument(receiver, "ListMixin", 0));
      },
      removeRange$2: function(receiver, start, end) {
        var $length;
        P.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null, null);
        $length = J.$sub$in(end, start);
        this.setRange$4(receiver, start, J.$sub$in(this.get$length(receiver), $length), receiver, end);
        this.set$length(receiver, J.$sub$in(this.get$length(receiver), $length));
      },
      fillRange$3: function(receiver, start, end, fill) {
        var i;
        P.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null, null);
        for (i = start; i < end; ++i)
          this.$indexSet(receiver, i, fill);
      },
      setRange$4: ["super$ListMixin$setRange$4", function(receiver, start, end, iterable, skipCount) {
        var $length, t1, t2, otherStart, otherList, t3, i, t4;
        P.RangeError_checkValidRange(start, end, this.get$length(receiver), null, null, null);
        $length = J.$sub$n(end, start);
        t1 = J.getInterceptor($length);
        if (t1.$eq($length, 0))
          return;
        if (J.$lt$in(skipCount, 0))
          H.throwExpression(P.RangeError$range(skipCount, 0, null, "skipCount", null));
        t2 = J.getInterceptor(iterable);
        if (!!t2.$isList) {
          otherStart = skipCount;
          otherList = iterable;
        } else {
          otherList = t2.skip$1(iterable, skipCount).toList$1$growable(0, false);
          otherStart = 0;
        }
        t2 = J.getInterceptor$ins(otherStart);
        t3 = J.getInterceptor$asx(otherList);
        if (J.$gt$n(t2.$add(otherStart, $length), t3.get$length(otherList)))
          throw H.wrapException(H.IterableElementError_tooFew());
        if (t2.$lt(otherStart, start))
          for (i = t1.$sub($length, 1), t1 = J.getInterceptor$ins(start); t4 = J.getInterceptor$n(i), t4.$ge(i, 0); i = t4.$sub(i, 1))
            this.$indexSet(receiver, t1.$add(start, i), t3.$index(otherList, t2.$add(otherStart, i)));
        else {
          if (typeof $length !== "number")
            return H.iae($length);
          t1 = J.getInterceptor$ins(start);
          i = 0;
          for (; i < $length; ++i)
            this.$indexSet(receiver, t1.$add(start, i), t3.$index(otherList, t2.$add(otherStart, i)));
        }
      }, function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      }, "setRange$3", null, null, "get$setRange", 6, 2, null, 69],
      indexOf$2: function(receiver, element, startIndex) {
        var t1, i;
        t1 = J.getInterceptor$n(startIndex);
        if (t1.$ge(startIndex, this.get$length(receiver)))
          return -1;
        if (t1.$lt(startIndex, 0))
          startIndex = 0;
        for (i = startIndex; t1 = J.getInterceptor$n(i), t1.$lt(i, this.get$length(receiver)); i = t1.$add(i, 1))
          if (J.$eq(this.$index(receiver, i), element))
            return i;
        return -1;
      },
      indexOf$1: function($receiver, element) {
        return this.indexOf$2($receiver, element, 0);
      },
      lastIndexOf$2: function(receiver, element, startIndex) {
        var i, t1;
        startIndex = J.$sub$in(this.get$length(receiver), 1);
        for (i = startIndex; t1 = J.getInterceptor$in(i), t1.$ge(i, 0); i = t1.$sub(i, 1))
          if (J.$eq(this.$index(receiver, i), element))
            return i;
        return -1;
      },
      lastIndexOf$1: function($receiver, element) {
        return this.lastIndexOf$2($receiver, element, null);
      },
      removeAt$1: function(receiver, index) {
        var result = this.$index(receiver, index);
        this.setRange$4(receiver, index, J.$sub$in(this.get$length(receiver), 1), receiver, index + 1);
        this.set$length(receiver, J.$sub$in(this.get$length(receiver), 1));
        return result;
      },
      setAll$2: function(receiver, index, iterable) {
        this.setRange$3(receiver, index, index + iterable.length, iterable);
      },
      toString$0: function(receiver) {
        return P.IterableBase_iterableToFullString(receiver, "[", "]");
      },
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    _UnmodifiableMapMixin: {
      "^": "Object;",
      $indexSet: function(_, key, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify unmodifiable map"));
      },
      addAll$1: function(_, other) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify unmodifiable map"));
      },
      clear$0: function(_) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify unmodifiable map"));
      },
      remove$1: function(_, key) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify unmodifiable map"));
      },
      $isMap: 1
    },
    MapView: {
      "^": "Object;",
      $index: function(_, key) {
        return this._map.$index(0, key);
      },
      $indexSet: function(_, key, value) {
        this._map.$indexSet(0, key, value);
      },
      addAll$1: function(_, other) {
        this._map.addAll$1(0, other);
      },
      clear$0: function(_) {
        this._map.clear$0(0);
      },
      containsKey$1: function(key) {
        return this._map.containsKey$1(key);
      },
      forEach$1: function(_, action) {
        this._map.forEach$1(0, action);
      },
      get$isEmpty: function(_) {
        var t1 = this._map;
        return t1.get$isEmpty(t1);
      },
      get$isNotEmpty: function(_) {
        var t1 = this._map;
        return t1.get$isNotEmpty(t1);
      },
      get$length: function(_) {
        var t1 = this._map;
        return t1.get$length(t1);
      },
      get$keys: function() {
        return this._map.get$keys();
      },
      remove$1: function(_, key) {
        return this._map.remove$1(0, key);
      },
      toString$0: function(_) {
        return this._map.toString$0(0);
      },
      $isMap: 1
    },
    UnmodifiableMapView: {
      "^": "MapView+_UnmodifiableMapMixin;_map",
      $isMap: 1
    },
    Maps_mapToString_closure: {
      "^": "Closure:15;_box_0,_captured_result_1",
      call$2: function(k, v) {
        var t1, t2;
        t1 = this._box_0;
        if (!t1._captured_first_0)
          this._captured_result_1._contents += ", ";
        t1._captured_first_0 = false;
        t1 = this._captured_result_1;
        t2 = t1._contents += H.S(k);
        t1._contents = t2 + ": ";
        t1._contents += H.S(v);
      }
    },
    ListQueue: {
      "^": "Iterable;_table,_head,_tail,_modificationCount",
      get$iterator: function(_) {
        var t1 = new P._ListQueueIterator(this, this._tail, this._modificationCount, this._head, null);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      forEach$1: function(_, action) {
        var modificationCount, i, t1;
        modificationCount = this._modificationCount;
        for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
          t1 = this._table;
          if (i < 0 || i >= t1.length)
            return H.ioore(t1, i);
          action.call$1(t1[i]);
          if (modificationCount !== this._modificationCount)
            H.throwExpression(new P.ConcurrentModificationError(this));
        }
      },
      get$isEmpty: function(_) {
        return this._head === this._tail;
      },
      get$length: function(_) {
        return J.$and$n(J.$sub$n(this._tail, this._head), this._table.length - 1);
      },
      get$first: function(_) {
        var t1, t2;
        t1 = this._head;
        if (t1 === this._tail)
          throw H.wrapException(H.IterableElementError_noElement());
        t2 = this._table;
        if (t1 >= t2.length)
          return H.ioore(t2, t1);
        return t2[t1];
      },
      get$last: function(_) {
        var t1, t2;
        t1 = this._head;
        t2 = this._tail;
        if (t1 === t2)
          throw H.wrapException(H.IterableElementError_noElement());
        t1 = this._table;
        t2 = J.$and$n(J.$sub$n(t2, 1), this._table.length - 1);
        if (t2 >>> 0 !== t2 || t2 >= t1.length)
          return H.ioore(t1, t2);
        return t1[t2];
      },
      elementAt$1: function(_, index) {
        var $length, t1, t2, t3;
        $length = this.get$length(this);
        t1 = J.getInterceptor$n(index);
        if (t1.$lt(index, 0) || t1.$ge(index, $length))
          H.throwExpression(P.IndexError$(index, this, "index", null, $length));
        t1 = this._table;
        t2 = this._head;
        if (typeof index !== "number")
          return H.iae(index);
        t3 = t1.length;
        t2 = (t2 + index & t3 - 1) >>> 0;
        if (t2 < 0 || t2 >= t3)
          return H.ioore(t1, t2);
        return t1[t2];
      },
      toList$1$growable: function(_, growable) {
        var list, t1;
        if (growable) {
          list = [];
          list.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
          C.JSArray_methods.set$length(list, this.get$length(this));
        } else {
          t1 = this.get$length(this);
          if (typeof t1 !== "number")
            return H.iae(t1);
          list = Array(t1);
          list.fixed$length = Array;
          list.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
        }
        this._writeToList$1(list);
        return list;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      add$1: function(_, value) {
        this._add$1(value);
      },
      addAll$1: function(_, elements) {
        var t1, addCount, $length, t2, t3, newCapacity, newTable, endSpace, preSpace;
        t1 = J.getInterceptor(elements);
        if (!!t1.$isList) {
          addCount = t1.get$length(elements);
          $length = this.get$length(this);
          t1 = J.getInterceptor$ins($length);
          if (J.$ge$in(t1.$add($length, addCount), this._table.length)) {
            t2 = t1.$add($length, addCount);
            t3 = J.getInterceptor$in(t2);
            newCapacity = P.ListQueue__nextPowerOf2(t3.$add(t2, t3.$shr(t2, 1)));
            if (typeof newCapacity !== "number")
              return H.iae(newCapacity);
            newTable = Array(newCapacity);
            newTable.fixed$length = Array;
            newTable.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
            this._tail = this._writeToList$1(newTable);
            this._table = newTable;
            this._head = 0;
            C.JSArray_methods.setRange$4(newTable, $length, t1.$add($length, addCount), elements, 0);
            this._tail = J.$add$ins(this._tail, addCount);
          } else {
            t1 = this._table;
            t2 = this._tail;
            if (typeof t2 !== "number")
              return H.iae(t2);
            endSpace = t1.length - t2;
            t1 = J.getInterceptor$in(addCount);
            if (t1.$lt(addCount, endSpace)) {
              t1 = this._table;
              t2 = this._tail;
              C.JSArray_methods.setRange$4(t1, t2, J.$add$ins(t2, addCount), elements, 0);
              this._tail = J.$add$ins(this._tail, addCount);
            } else {
              preSpace = t1.$sub(addCount, endSpace);
              t1 = this._table;
              t2 = this._tail;
              C.JSArray_methods.setRange$4(t1, t2, J.$add$ins(t2, endSpace), elements, 0);
              C.JSArray_methods.setRange$4(this._table, 0, preSpace, elements, endSpace);
              this._tail = preSpace;
            }
          }
          ++this._modificationCount;
        } else
          for (t1 = t1.get$iterator(elements); t1.moveNext$0();)
            this._add$1(t1.get$current());
      },
      remove$1: function(_, value) {
        var i, t1;
        for (i = this._head; i !== this._tail; i = (i + 1 & this._table.length - 1) >>> 0) {
          t1 = this._table;
          if (i < 0 || i >= t1.length)
            return H.ioore(t1, i);
          if (J.$eq(t1[i], value)) {
            this._remove$1(i);
            ++this._modificationCount;
            return true;
          }
        }
        return false;
      },
      clear$0: function(_) {
        var i, t1, t2, t3, t4;
        i = this._head;
        t1 = this._tail;
        if (i !== t1) {
          for (t2 = this._table, t3 = t2.length, t4 = t3 - 1; i !== t1; i = (i + 1 & t4) >>> 0) {
            if (i < 0 || i >= t3)
              return H.ioore(t2, i);
            t2[i] = null;
          }
          this._tail = 0;
          this._head = 0;
          ++this._modificationCount;
        }
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToFullString(this, "{", "}");
      },
      addFirst$1: function(value) {
        var t1, t2, t3;
        t1 = this._head;
        t2 = this._table;
        t3 = t2.length;
        t1 = (t1 - 1 & t3 - 1) >>> 0;
        this._head = t1;
        if (t1 < 0 || t1 >= t3)
          return H.ioore(t2, t1);
        t2[t1] = value;
        if (t1 === this._tail)
          this._grow$0();
        ++this._modificationCount;
      },
      removeFirst$0: function() {
        var t1, t2, t3, result;
        t1 = this._head;
        if (t1 === this._tail)
          throw H.wrapException(H.IterableElementError_noElement());
        ++this._modificationCount;
        t2 = this._table;
        t3 = t2.length;
        if (t1 >= t3)
          return H.ioore(t2, t1);
        result = t2[t1];
        t2[t1] = null;
        this._head = (t1 + 1 & t3 - 1) >>> 0;
        return result;
      },
      _add$1: function(element) {
        var t1, t2;
        t1 = this._table;
        t2 = this._tail;
        if (t2 >>> 0 !== t2 || t2 >= t1.length)
          return H.ioore(t1, t2);
        t1[t2] = element;
        t2 = (t2 + 1 & this._table.length - 1) >>> 0;
        this._tail = t2;
        if (this._head === t2)
          this._grow$0();
        ++this._modificationCount;
      },
      _remove$1: function(offset) {
        var mask, t1, endDistance, t2, t3, i, prevOffset, t4, nextOffset;
        mask = this._table.length - 1;
        t1 = this._head;
        endDistance = J.$and$in(J.$sub$in(this._tail, offset), mask);
        if (typeof endDistance !== "number")
          return H.iae(endDistance);
        if ((offset - t1 & mask) >>> 0 < endDistance) {
          for (t1 = this._head, t2 = this._table, t3 = t2.length, i = offset; i !== t1; i = prevOffset) {
            prevOffset = (i - 1 & mask) >>> 0;
            if (prevOffset < 0 || prevOffset >= t3)
              return H.ioore(t2, prevOffset);
            t4 = t2[prevOffset];
            if (i < 0 || i >= t3)
              return H.ioore(t2, i);
            t2[i] = t4;
          }
          if (t1 >= t3)
            return H.ioore(t2, t1);
          t2[t1] = null;
          this._head = (t1 + 1 & mask) >>> 0;
          return (offset + 1 & mask) >>> 0;
        } else {
          t1 = J.$and$in(J.$sub$in(this._tail, 1), mask);
          this._tail = t1;
          for (t2 = this._table, t3 = t2.length, i = offset; i !== t1; i = nextOffset) {
            nextOffset = (i + 1 & mask) >>> 0;
            if (nextOffset < 0 || nextOffset >= t3)
              return H.ioore(t2, nextOffset);
            t4 = t2[nextOffset];
            if (i < 0 || i >= t3)
              return H.ioore(t2, i);
            t2[i] = t4;
          }
          if (t1 >>> 0 !== t1 || t1 >= t3)
            return H.ioore(t2, t1);
          t2[t1] = null;
          return offset;
        }
      },
      _grow$0: function() {
        var newTable, t1, t2, split;
        newTable = Array(this._table.length * 2);
        newTable.fixed$length = Array;
        newTable.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
        t1 = this._table;
        t2 = this._head;
        split = t1.length - t2;
        C.JSArray_methods.setRange$4(newTable, 0, split, t1, t2);
        C.JSArray_methods.setRange$4(newTable, split, split + this._head, this._table, 0);
        this._head = 0;
        this._tail = this._table.length;
        this._table = newTable;
      },
      _writeToList$1: function(target) {
        var t1, t2, $length, firstPartSize;
        t1 = this._head;
        t2 = this._tail;
        if (typeof t2 !== "number")
          return H.iae(t2);
        if (t1 <= t2) {
          $length = t2 - t1;
          C.JSArray_methods.setRange$4(target, 0, $length, this._table, this._head);
          return $length;
        } else {
          t2 = this._table;
          firstPartSize = t2.length - t1;
          C.JSArray_methods.setRange$4(target, 0, firstPartSize, t2, t1);
          t1 = this._tail;
          if (typeof t1 !== "number")
            return H.iae(t1);
          C.JSArray_methods.setRange$4(target, firstPartSize, firstPartSize + t1, this._table, 0);
          return J.$add$ins(this._tail, firstPartSize);
        }
      },
      ListQueue$1: function(initialCapacity, $E) {
        var t1 = Array(8);
        t1.fixed$length = Array;
        t1.$builtinTypeInfo = [$E];
        this._table = t1;
      },
      $isEfficientLength: 1,
      $asIterable: null,
      static: {ListQueue$: function(initialCapacity, $E) {
          var t1 = new P.ListQueue(null, 0, 0, 0);
          t1.$builtinTypeInfo = [$E];
          t1.ListQueue$1(initialCapacity, $E);
          return t1;
        }, ListQueue__nextPowerOf2: function(number) {
          var t1, nextNumber;
          number = J.$sub$in(J.$shl$in(number, 1), 1);
          for (; true; number = nextNumber) {
            t1 = J.getInterceptor$in(number);
            nextNumber = t1.$and(number, t1.$sub(number, 1));
            if (J.$eq(nextNumber, 0))
              return number;
          }
        }}
    },
    _ListQueueIterator: {
      "^": "Object;_queue,_end,_modificationCount,_collection$_position,_collection$_current",
      get$current: function() {
        return this._collection$_current;
      },
      moveNext$0: function() {
        var t1, t2, t3;
        t1 = this._queue;
        if (this._modificationCount !== t1._modificationCount)
          H.throwExpression(new P.ConcurrentModificationError(t1));
        t2 = this._collection$_position;
        if (t2 === this._end) {
          this._collection$_current = null;
          return false;
        }
        t1 = t1._table;
        t3 = t1.length;
        if (t2 >= t3)
          return H.ioore(t1, t2);
        this._collection$_current = t1[t2];
        this._collection$_position = (t2 + 1 & t3 - 1) >>> 0;
        return true;
      }
    },
    SetMixin: {
      "^": "Object;",
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      get$isNotEmpty: function(_) {
        return this.get$length(this) !== 0;
      },
      clear$0: function(_) {
        this.removeAll$1(this.toList$0(0));
      },
      addAll$1: function(_, elements) {
        var t1;
        for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
          this.add$1(0, t1.get$current());
      },
      removeAll$1: function(elements) {
        var t1, _i;
        for (t1 = elements.length, _i = 0; _i < elements.length; elements.length === t1 || (0, H.throwConcurrentModificationError)(elements), ++_i)
          this.remove$1(0, elements[_i]);
      },
      toList$1$growable: function(_, growable) {
        var result, t1, i, element, i0;
        if (growable) {
          result = [];
          result.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
          C.JSArray_methods.set$length(result, this.get$length(this));
        } else {
          result = Array(this.get$length(this));
          result.fixed$length = Array;
          result.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0)];
        }
        for (t1 = this.get$iterator(this), i = 0; t1.moveNext$0(); i = i0) {
          element = t1.get$current();
          i0 = i + 1;
          if (i >= result.length)
            return H.ioore(result, i);
          result[i] = element;
        }
        return result;
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      map$1: function(_, f) {
        var t1 = new H.EfficientLengthMappedIterable(this, f);
        t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(this, 0), null];
        return t1;
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToFullString(this, "{", "}");
      },
      where$1: function(_, f) {
        var t1 = new H.WhereIterable(this, f);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        return t1;
      },
      forEach$1: function(_, f) {
        var t1;
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          f.call$1(t1.get$current());
      },
      fold$2: function(_, initialValue, combine) {
        var t1, value;
        for (t1 = this.get$iterator(this), value = initialValue; t1.moveNext$0();)
          value = combine.call$2(value, t1.get$current());
        return value;
      },
      join$1: function(_, separator) {
        var iterator, buffer, t1;
        iterator = this.get$iterator(this);
        if (!iterator.moveNext$0())
          return "";
        buffer = new P.StringBuffer("");
        if (separator === "") {
          do
            buffer._contents += H.S(iterator.get$current());
          while (iterator.moveNext$0());
        } else {
          buffer._contents = H.S(iterator.get$current());
          for (; iterator.moveNext$0();) {
            buffer._contents += separator;
            buffer._contents += H.S(iterator.get$current());
          }
        }
        t1 = buffer._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      get$first: function(_) {
        var it = this.get$iterator(this);
        if (!it.moveNext$0())
          throw H.wrapException(H.IterableElementError_noElement());
        return it.get$current();
      },
      get$last: function(_) {
        var it, result;
        it = this.get$iterator(this);
        if (!it.moveNext$0())
          throw H.wrapException(H.IterableElementError_noElement());
        do
          result = it.get$current();
        while (it.moveNext$0());
        return result;
      },
      elementAt$1: function(_, index) {
        var t1, elementIndex, element;
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(P.ArgumentError$notNull("index"));
        if (index < 0)
          H.throwExpression(P.RangeError$range(index, 0, null, "index", null));
        for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
          element = t1.get$current();
          if (index === elementIndex)
            return element;
          ++elementIndex;
        }
        throw H.wrapException(P.IndexError$(index, this, "index", null, elementIndex));
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    SetBase: {
      "^": "SetMixin;"
    }
  }], ["dart.convert", "dart:convert",, P, {
    "^": "",
    _convertJsonToDart: function(json, reviver) {
      return reviver.call$2(null, new P._convertJsonToDart_walk(reviver).call$1(json));
    },
    _convertJsonToDartLazy: function(object) {
      var i;
      if (object == null)
        return;
      if (typeof object != "object")
        return object;
      if (Object.getPrototypeOf(object) !== Array.prototype)
        return new P._JsonMap(object, Object.create(null), null);
      for (i = 0; i < object.length; ++i)
        object[i] = P._convertJsonToDartLazy(object[i]);
      return object;
    },
    _parseJson: function(source, reviver) {
      var parsed, e, t1, exception;
      t1 = source;
      if (typeof t1 !== "string")
        throw H.wrapException(P.ArgumentError$(source));
      parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        t1 = H.unwrapException(exception);
        e = t1;
        throw H.wrapException(new P.FormatException(String(e), null, null));
      }
      if (reviver == null)
        return P._convertJsonToDartLazy(parsed);
      else
        return P._convertJsonToDart(parsed, reviver);
    },
    _defaultToEncodable: [function(object) {
      return object.toJson$0();
    }, "call$1", "_defaultToEncodable$closure", 2, 0, 209, 4, []],
    _convertJsonToDart_walk: {
      "^": "Closure:8;_captured_reviver_0",
      call$1: function(e) {
        var t1, i, map, keys, t2, key;
        if (e == null || typeof e != "object")
          return e;
        if (Object.getPrototypeOf(e) === Array.prototype) {
          for (t1 = this._captured_reviver_0, i = 0; i < e.length; ++i)
            e[i] = t1.call$2(i, this.call$1(e[i]));
          return e;
        }
        t1 = Object.create(null);
        map = new P._JsonMap(e, t1, null);
        keys = map._computeKeys$0();
        for (t2 = this._captured_reviver_0, i = 0; i < keys.length; ++i) {
          key = keys[i];
          t1[key] = t2.call$2(key, this.call$1(e[key]));
        }
        map._original = t1;
        return map;
      }
    },
    _JsonMap: {
      "^": "Object;_original,_processed,_data",
      $index: function(_, key) {
        var t1, result;
        t1 = this._processed;
        if (t1 == null)
          return this._data.$index(0, key);
        else if (typeof key !== "string")
          return;
        else {
          result = t1[key];
          return typeof result == "undefined" ? this._process$1(key) : result;
        }
      },
      get$length: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          t1 = t1.get$length(t1);
        } else
          t1 = this._computeKeys$0().length;
        return t1;
      },
      get$isEmpty: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          t1 = t1.get$length(t1);
        } else
          t1 = this._computeKeys$0().length;
        return t1 === 0;
      },
      get$isNotEmpty: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          t1 = t1.get$length(t1);
        } else
          t1 = this._computeKeys$0().length;
        return t1 > 0;
      },
      get$keys: function() {
        if (this._processed == null)
          return this._data.get$keys();
        return new P._JsonMapKeyIterable(this);
      },
      get$values: function(_) {
        var t1;
        if (this._processed == null) {
          t1 = this._data;
          return t1.get$values(t1);
        }
        return H.MappedIterable_MappedIterable(this._computeKeys$0(), new P._JsonMap_values_closure(this), null, null);
      },
      $indexSet: function(_, key, value) {
        var processed, original;
        if (this._processed == null)
          this._data.$indexSet(0, key, value);
        else if (this.containsKey$1(key)) {
          processed = this._processed;
          processed[key] = value;
          original = this._original;
          if (original == null ? processed != null : original !== processed)
            original[key] = null;
        } else
          this._upgrade$0().$indexSet(0, key, value);
      },
      addAll$1: function(_, other) {
        J.forEach$1$ax(other, new P._JsonMap_addAll_closure(this));
      },
      containsKey$1: function(key) {
        if (this._processed == null)
          return this._data.containsKey$1(key);
        if (typeof key !== "string")
          return false;
        return Object.prototype.hasOwnProperty.call(this._original, key);
      },
      putIfAbsent$2: function(key, ifAbsent) {
        var value;
        if (this.containsKey$1(key))
          return this.$index(0, key);
        value = ifAbsent.call$0();
        this.$indexSet(0, key, value);
        return value;
      },
      remove$1: function(_, key) {
        if (this._processed != null && !this.containsKey$1(key))
          return;
        return this._upgrade$0().remove$1(0, key);
      },
      clear$0: function(_) {
        var t1;
        if (this._processed == null)
          this._data.clear$0(0);
        else {
          t1 = this._data;
          if (t1 != null)
            J.clear$0$ax(t1);
          this._processed = null;
          this._original = null;
          this._data = P.LinkedHashMap__makeEmpty();
        }
      },
      forEach$1: function(_, f) {
        var keys, i, key, value;
        if (this._processed == null)
          return this._data.forEach$1(0, f);
        keys = this._computeKeys$0();
        for (i = 0; i < keys.length; ++i) {
          key = keys[i];
          value = this._processed[key];
          if (typeof value == "undefined") {
            value = P._convertJsonToDartLazy(this._original[key]);
            this._processed[key] = value;
          }
          f.call$2(key, value);
          if (keys !== this._data)
            throw H.wrapException(new P.ConcurrentModificationError(this));
        }
      },
      toString$0: function(_) {
        return P.Maps_mapToString(this);
      },
      _computeKeys$0: function() {
        var keys = this._data;
        if (keys == null) {
          keys = Object.keys(this._original);
          this._data = keys;
        }
        return keys;
      },
      _upgrade$0: function() {
        var result, keys, i, t1, key;
        if (this._processed == null)
          return this._data;
        result = P.LinkedHashMap__makeEmpty();
        keys = this._computeKeys$0();
        for (i = 0; t1 = keys.length, i < t1; ++i) {
          key = keys[i];
          result.$indexSet(0, key, this.$index(0, key));
        }
        if (t1 === 0)
          keys.push(null);
        else
          C.JSArray_methods.set$length(keys, 0);
        this._processed = null;
        this._original = null;
        this._data = result;
        return result;
      },
      _process$1: function(key) {
        var result;
        if (!Object.prototype.hasOwnProperty.call(this._original, key))
          return;
        result = P._convertJsonToDartLazy(this._original[key]);
        return this._processed[key] = result;
      },
      $isMap: 1,
      $asMap: functionThatReturnsNull
    },
    _JsonMap_values_closure: {
      "^": "Closure:8;_convert$_captured_this_0",
      call$1: [function(each) {
        return this._convert$_captured_this_0.$index(0, each);
      }, null, null, 2, 0, null, 20, [], "call"]
    },
    _JsonMap_addAll_closure: {
      "^": "Closure:15;_convert$_captured_this_0",
      call$2: [function(key, value) {
        this._convert$_captured_this_0.$indexSet(0, key, value);
      }, null, null, 4, 0, null, 21, [], 22, [], "call"]
    },
    _JsonMapKeyIterable: {
      "^": "ListIterable;_parent",
      get$length: function(_) {
        var t1 = this._parent;
        if (t1._processed == null) {
          t1 = t1._data;
          t1 = t1.get$length(t1);
        } else
          t1 = t1._computeKeys$0().length;
        return t1;
      },
      elementAt$1: function(_, index) {
        var t1 = this._parent;
        if (t1._processed == null)
          t1 = t1.get$keys().elementAt$1(0, index);
        else {
          t1 = t1._computeKeys$0();
          if (index >>> 0 !== index || index >= t1.length)
            return H.ioore(t1, index);
          t1 = t1[index];
        }
        return t1;
      },
      get$iterator: function(_) {
        var t1, t2;
        t1 = this._parent;
        if (t1._processed == null) {
          t1 = t1.get$keys();
          t1 = t1.get$iterator(t1);
        } else {
          t1 = t1._computeKeys$0();
          t2 = new J.ArrayIterator(t1, t1.length, 0, null);
          t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t1, 0)];
          t1 = t2;
        }
        return t1;
      },
      contains$1: function(_, key) {
        return this._parent.containsKey$1(key);
      },
      $asListIterable: functionThatReturnsNull,
      $asIterable: functionThatReturnsNull
    },
    Codec: {
      "^": "Object;",
      encode$1: function(input) {
        return this.get$encoder().convert$1(input);
      }
    },
    Converter: {
      "^": "Object;"
    },
    Encoding: {
      "^": "Codec;",
      $asCodec: function() {
        return [P.String, [P.List, P.$int]];
      }
    },
    JsonUnsupportedObjectError: {
      "^": "Error;unsupportedObject,cause",
      toString$0: function(_) {
        if (this.cause != null)
          return "Converting object to an encodable object failed.";
        else
          return "Converting object did not return an encodable object.";
      }
    },
    JsonCyclicError: {
      "^": "JsonUnsupportedObjectError;unsupportedObject,cause",
      toString$0: function(_) {
        return "Cyclic error in JSON stringify";
      }
    },
    JsonCodec: {
      "^": "Codec;_reviver,_toEncodable",
      encode$2$toEncodable: function(value, toEncodable) {
        var t1, t2, output, stringifier;
        t1 = this.get$encoder();
        t2 = t1._toEncodable;
        t1 = t1.indent;
        output = new P.StringBuffer("");
        if (t1 == null) {
          t1 = t2 != null ? t2 : P._defaultToEncodable$closure();
          stringifier = new P._JsonStringStringifier(output, [], t1);
        } else {
          t2 = t2 != null ? t2 : P._defaultToEncodable$closure();
          stringifier = new P._JsonStringStringifierPretty(t1, 0, output, [], t2);
        }
        stringifier.writeObject$1(value);
        t1 = output._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      encode$1: function(value) {
        return this.encode$2$toEncodable(value, null);
      },
      get$encoder: function() {
        return C.JsonEncoder_null_null;
      },
      $asCodec: function() {
        return [P.Object, P.String];
      }
    },
    JsonEncoder: {
      "^": "Converter;indent,_toEncodable",
      convert$1: function(object) {
        var t1, t2, output, stringifier;
        t1 = this._toEncodable;
        t2 = this.indent;
        output = new P.StringBuffer("");
        if (t2 == null) {
          t1 = t1 != null ? t1 : P._defaultToEncodable$closure();
          stringifier = new P._JsonStringStringifier(output, [], t1);
        } else {
          t1 = t1 != null ? t1 : P._defaultToEncodable$closure();
          stringifier = new P._JsonStringStringifierPretty(t2, 0, output, [], t1);
        }
        stringifier.writeObject$1(object);
        t1 = output._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      $asConverter: function() {
        return [P.Object, P.String];
      },
      static: {JsonEncoder$: function(toEncodable) {
          return new P.JsonEncoder(null, toEncodable);
        }}
    },
    JsonDecoder: {
      "^": "Converter;_reviver",
      $asConverter: function() {
        return [P.String, P.Object];
      },
      static: {JsonDecoder$: function(reviver) {
          return new P.JsonDecoder(reviver);
        }}
    },
    _JsonStringifier: {
      "^": "Object;",
      writeStringContent$1: function(s) {
        var t1, $length, offset, i, charCode, t2;
        t1 = J.getInterceptor$asx(s);
        $length = t1.get$length(s);
        if (typeof $length !== "number")
          return H.iae($length);
        offset = 0;
        i = 0;
        for (; i < $length; ++i) {
          charCode = t1.codeUnitAt$1(s, i);
          if (charCode > 92)
            continue;
          if (charCode < 32) {
            if (i > offset)
              this.writeStringSlice$3(s, offset, i);
            offset = i + 1;
            this.writeCharCode$1(92);
            switch (charCode) {
              case 8:
                this.writeCharCode$1(98);
                break;
              case 9:
                this.writeCharCode$1(116);
                break;
              case 10:
                this.writeCharCode$1(110);
                break;
              case 12:
                this.writeCharCode$1(102);
                break;
              case 13:
                this.writeCharCode$1(114);
                break;
              default:
                this.writeCharCode$1(117);
                this.writeCharCode$1(48);
                this.writeCharCode$1(48);
                t2 = charCode >>> 4 & 15;
                this.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);
                t2 = charCode & 15;
                this.writeCharCode$1(t2 < 10 ? 48 + t2 : 87 + t2);
                break;
            }
          } else if (charCode === 34 || charCode === 92) {
            if (i > offset)
              this.writeStringSlice$3(s, offset, i);
            offset = i + 1;
            this.writeCharCode$1(92);
            this.writeCharCode$1(charCode);
          }
        }
        if (offset === 0)
          this.writeString$1(s);
        else if (offset < $length)
          this.writeStringSlice$3(s, offset, $length);
      },
      _checkCycle$1: function(object) {
        var t1, t2, i, t3;
        for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
          t3 = t1[i];
          if (object == null ? t3 == null : object === t3)
            throw H.wrapException(new P.JsonCyclicError(object, null));
        }
        t1.push(object);
      },
      _removeSeen$1: function(object) {
        var t1 = this._seen;
        if (0 >= t1.length)
          return H.ioore(t1, 0);
        t1.pop();
      },
      writeObject$1: function(object) {
        var customJson, e, t1, exception;
        if (this.writeJsonValue$1(object))
          return;
        this._checkCycle$1(object);
        try {
          customJson = this._toEncodable$1(object);
          if (!this.writeJsonValue$1(customJson))
            throw H.wrapException(new P.JsonUnsupportedObjectError(object, null));
          t1 = this._seen;
          if (0 >= t1.length)
            return H.ioore(t1, 0);
          t1.pop();
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          throw H.wrapException(new P.JsonUnsupportedObjectError(object, e));
        }
      },
      writeJsonValue$1: function(object) {
        var t1, success;
        if (typeof object === "number") {
          if (!C.JSNumber_methods.get$isFinite(object))
            return false;
          this.writeNumber$1(object);
          return true;
        } else if (object === true) {
          this.writeString$1("true");
          return true;
        } else if (object === false) {
          this.writeString$1("false");
          return true;
        } else if (object == null) {
          this.writeString$1("null");
          return true;
        } else if (typeof object === "string") {
          this.writeString$1("\"");
          this.writeStringContent$1(object);
          this.writeString$1("\"");
          return true;
        } else {
          t1 = J.getInterceptor(object);
          if (!!t1.$isList) {
            this._checkCycle$1(object);
            this.writeList$1(object);
            this._removeSeen$1(object);
            return true;
          } else if (!!t1.$isMap) {
            this._checkCycle$1(object);
            success = this.writeMap$1(object);
            this._removeSeen$1(object);
            return success;
          } else
            return false;
        }
      },
      writeList$1: function(list) {
        var t1, i, t2;
        this.writeString$1("[");
        t1 = J.getInterceptor$asx(list);
        if (J.$gt$n(t1.get$length(list), 0)) {
          this.writeObject$1(t1.$index(list, 0));
          i = 1;
          while (true) {
            t2 = t1.get$length(list);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (!(i < t2))
              break;
            this.writeString$1(",");
            this.writeObject$1(t1.$index(list, i));
            ++i;
          }
        }
        this.writeString$1("]");
      },
      writeMap$1: function(map) {
        var t1, t2, keyValueList, separator, i;
        t1 = {};
        if (map.get$isEmpty(map)) {
          this.writeString$1("{}");
          return true;
        }
        t2 = J.$mul$ins(map.get$length(map), 2);
        if (typeof t2 !== "number")
          return H.iae(t2);
        keyValueList = Array(t2);
        t1._captured_i_0 = 0;
        t1._captured_allStringKeys_1 = true;
        map.forEach$1(0, new P._JsonStringifier_writeMap_closure(t1, keyValueList));
        if (!t1._captured_allStringKeys_1)
          return false;
        this.writeString$1("{");
        for (t1 = keyValueList.length, separator = "\"", i = 0; i < t1; i += 2, separator = ",\"") {
          this.writeString$1(separator);
          this.writeStringContent$1(keyValueList[i]);
          this.writeString$1("\":");
          t2 = i + 1;
          if (t2 >= t1)
            return H.ioore(keyValueList, t2);
          this.writeObject$1(keyValueList[t2]);
        }
        this.writeString$1("}");
        return true;
      },
      _toEncodable$1: function(arg0) {
        return this._toEncodable.call$1(arg0);
      }
    },
    _JsonStringifier_writeMap_closure: {
      "^": "Closure:15;_convert$_box_0,_captured_keyValueList_1",
      call$2: function(key, value) {
        var t1, t2, t3, i, t4;
        if (typeof key !== "string")
          this._convert$_box_0._captured_allStringKeys_1 = false;
        t1 = this._captured_keyValueList_1;
        t2 = this._convert$_box_0;
        t3 = t2._captured_i_0;
        i = t3 + 1;
        t2._captured_i_0 = i;
        t4 = t1.length;
        if (t3 >= t4)
          return H.ioore(t1, t3);
        t1[t3] = key;
        t2._captured_i_0 = i + 1;
        if (i >= t4)
          return H.ioore(t1, i);
        t1[i] = value;
      }
    },
    _JsonPrettyPrintMixin: {
      "^": "Object;",
      writeList$1: function(list) {
        var t1, i, t2;
        t1 = J.getInterceptor$asx(list);
        if (t1.get$isEmpty(list))
          this.writeString$1("[]");
        else {
          this.writeString$1("[\n");
          this.writeIndentation$1(++this._JsonPrettyPrintMixin__indentLevel);
          this.writeObject$1(t1.$index(list, 0));
          i = 1;
          while (true) {
            t2 = t1.get$length(list);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (!(i < t2))
              break;
            this.writeString$1(",\n");
            this.writeIndentation$1(this._JsonPrettyPrintMixin__indentLevel);
            this.writeObject$1(t1.$index(list, i));
            ++i;
          }
          this.writeString$1("\n");
          this.writeIndentation$1(--this._JsonPrettyPrintMixin__indentLevel);
          this.writeString$1("]");
        }
      },
      writeMap$1: function(map) {
        var t1, t2, keyValueList, separator, i;
        t1 = {};
        if (map.get$isEmpty(map)) {
          this.writeString$1("{}");
          return true;
        }
        t2 = J.$mul$ins(map.get$length(map), 2);
        if (typeof t2 !== "number")
          return H.iae(t2);
        keyValueList = Array(t2);
        t1._captured_i_0 = 0;
        t1._captured_allStringKeys_1 = true;
        map.forEach$1(0, new P._JsonPrettyPrintMixin_writeMap_closure(t1, keyValueList));
        if (!t1._captured_allStringKeys_1)
          return false;
        this.writeString$1("{\n");
        ++this._JsonPrettyPrintMixin__indentLevel;
        for (t1 = keyValueList.length, separator = "", i = 0; i < t1; i += 2, separator = ",\n") {
          this.writeString$1(separator);
          this.writeIndentation$1(this._JsonPrettyPrintMixin__indentLevel);
          this.writeString$1("\"");
          this.writeStringContent$1(keyValueList[i]);
          this.writeString$1("\": ");
          t2 = i + 1;
          if (t2 >= t1)
            return H.ioore(keyValueList, t2);
          this.writeObject$1(keyValueList[t2]);
        }
        this.writeString$1("\n");
        this.writeIndentation$1(--this._JsonPrettyPrintMixin__indentLevel);
        this.writeString$1("}");
        return true;
      }
    },
    _JsonPrettyPrintMixin_writeMap_closure: {
      "^": "Closure:15;_convert$_box_0,_captured_keyValueList_1",
      call$2: function(key, value) {
        var t1, t2, t3, i, t4;
        if (typeof key !== "string")
          this._convert$_box_0._captured_allStringKeys_1 = false;
        t1 = this._captured_keyValueList_1;
        t2 = this._convert$_box_0;
        t3 = t2._captured_i_0;
        i = t3 + 1;
        t2._captured_i_0 = i;
        t4 = t1.length;
        if (t3 >= t4)
          return H.ioore(t1, t3);
        t1[t3] = key;
        t2._captured_i_0 = i + 1;
        if (i >= t4)
          return H.ioore(t1, i);
        t1[i] = value;
      }
    },
    _JsonStringStringifier: {
      "^": "_JsonStringifier;_sink,_seen,_toEncodable",
      writeNumber$1: function(number) {
        this._sink._contents += C.JSNumber_methods.toString$0(number);
      },
      writeString$1: function(string) {
        this._sink._contents += H.S(string);
      },
      writeStringSlice$3: function(string, start, end) {
        this._sink._contents += J.substring$2$s(string, start, end);
      },
      writeCharCode$1: function(charCode) {
        this._sink._contents += H.Primitives_stringFromCharCode(charCode);
      }
    },
    _JsonStringStringifierPretty: {
      "^": "_JsonStringStringifier__JsonPrettyPrintMixin;_indent,_JsonPrettyPrintMixin__indentLevel,_sink,_seen,_toEncodable",
      writeIndentation$1: function(count) {
        var t1, t2, i;
        for (t1 = this._indent, t2 = this._sink, i = 0; i < count; ++i)
          t2._contents += t1;
      }
    },
    _JsonStringStringifier__JsonPrettyPrintMixin: {
      "^": "_JsonStringStringifier+_JsonPrettyPrintMixin;"
    },
    Utf8Codec: {
      "^": "Encoding;_allowMalformed",
      get$name: function(_) {
        return "utf-8";
      },
      decode$2$allowMalformed: function(codeUnits, allowMalformed) {
        return new P.Utf8Decoder(this._allowMalformed).convert$1(codeUnits);
      },
      decode$1: function(codeUnits) {
        return this.decode$2$allowMalformed(codeUnits, null);
      },
      get$encoder: function() {
        return new P.Utf8Encoder();
      }
    },
    Utf8Encoder: {
      "^": "Converter;",
      convert$3: function(string, start, end) {
        var t1, stringLength, t2, $length, t3, encoder;
        t1 = J.getInterceptor$asx(string);
        stringLength = t1.get$length(string);
        P.RangeError_checkValidRange(start, end, stringLength, null, null, null);
        t2 = J.getInterceptor$n(stringLength);
        $length = t2.$sub(stringLength, start);
        t3 = J.getInterceptor($length);
        if (t3.$eq($length, 0))
          return new Uint8Array(H._checkLength(0));
        t3 = new Uint8Array(H._checkLength(t3.$mul($length, 3)));
        encoder = new P._Utf8Encoder(0, 0, t3);
        if (encoder._fillBuffer$3(string, start, stringLength) !== stringLength)
          encoder._writeSurrogate$2(t1.codeUnitAt$1(string, t2.$sub(stringLength, 1)), 0);
        return C.NativeUint8List_methods.sublist$2(t3, 0, encoder._bufferIndex);
      },
      convert$1: function(string) {
        return this.convert$3(string, 0, null);
      },
      $asConverter: function() {
        return [P.String, [P.List, P.$int]];
      }
    },
    _Utf8Encoder: {
      "^": "Object;_carry,_bufferIndex,_buffer",
      _writeSurrogate$2: function(leadingSurrogate, nextCodeUnit) {
        var t1, t2, rune, t3, t4;
        t1 = this._buffer;
        t2 = this._bufferIndex;
        if ((nextCodeUnit & 64512) === 56320) {
          rune = 65536 + ((leadingSurrogate & 1023) << 10 >>> 0) | nextCodeUnit & 1023;
          t3 = t2 + 1;
          this._bufferIndex = t3;
          t4 = t1.length;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = (240 | rune >>> 18) >>> 0;
          t2 = t3 + 1;
          this._bufferIndex = t2;
          if (t3 >= t4)
            return H.ioore(t1, t3);
          t1[t3] = 128 | rune >>> 12 & 63;
          t3 = t2 + 1;
          this._bufferIndex = t3;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 128 | rune >>> 6 & 63;
          this._bufferIndex = t3 + 1;
          if (t3 >= t4)
            return H.ioore(t1, t3);
          t1[t3] = 128 | rune & 63;
          return true;
        } else {
          t3 = t2 + 1;
          this._bufferIndex = t3;
          t4 = t1.length;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 224 | leadingSurrogate >>> 12;
          t2 = t3 + 1;
          this._bufferIndex = t2;
          if (t3 >= t4)
            return H.ioore(t1, t3);
          t1[t3] = 128 | leadingSurrogate >>> 6 & 63;
          this._bufferIndex = t2 + 1;
          if (t2 >= t4)
            return H.ioore(t1, t2);
          t1[t2] = 128 | leadingSurrogate & 63;
          return false;
        }
      },
      _fillBuffer$3: function(str, start, end) {
        var t1, t2, t3, stringIndex, codeUnit, t4, stringIndex0, t5;
        if (start !== end && (J.codeUnitAt$1$s(str, J.$sub$n(end, 1)) & 64512) === 55296)
          end = J.$sub$n(end, 1);
        if (typeof end !== "number")
          return H.iae(end);
        t1 = this._buffer;
        t2 = t1.length;
        t3 = J.getInterceptor$s(str);
        stringIndex = start;
        for (; stringIndex < end; ++stringIndex) {
          codeUnit = t3.codeUnitAt$1(str, stringIndex);
          if (codeUnit <= 127) {
            t4 = this._bufferIndex;
            if (t4 >= t2)
              break;
            this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit;
          } else if ((codeUnit & 64512) === 55296) {
            if (this._bufferIndex + 3 >= t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (this._writeSurrogate$2(codeUnit, t3.codeUnitAt$1(str, stringIndex0)))
              stringIndex = stringIndex0;
          } else if (codeUnit <= 2047) {
            t4 = this._bufferIndex;
            t5 = t4 + 1;
            if (t5 >= t2)
              break;
            this._bufferIndex = t5;
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = 192 | codeUnit >>> 6;
            this._bufferIndex = t5 + 1;
            t1[t5] = 128 | codeUnit & 63;
          } else {
            t4 = this._bufferIndex;
            if (t4 + 2 >= t2)
              break;
            t5 = t4 + 1;
            this._bufferIndex = t5;
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = 224 | codeUnit >>> 12;
            t4 = t5 + 1;
            this._bufferIndex = t4;
            if (t5 >= t2)
              return H.ioore(t1, t5);
            t1[t5] = 128 | codeUnit >>> 6 & 63;
            this._bufferIndex = t4 + 1;
            if (t4 >= t2)
              return H.ioore(t1, t4);
            t1[t4] = 128 | codeUnit & 63;
          }
        }
        return stringIndex;
      }
    },
    Utf8Decoder: {
      "^": "Converter;_allowMalformed",
      convert$3: function(codeUnits, start, end) {
        var $length, buffer, decoder, t1;
        $length = J.get$length$asx(codeUnits);
        P.RangeError_checkValidRange(start, end, $length, null, null, null);
        buffer = new P.StringBuffer("");
        decoder = new P._Utf8Decoder(this._allowMalformed, buffer, true, 0, 0, 0);
        decoder.convert$3(codeUnits, start, $length);
        decoder.flush$0();
        t1 = buffer._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      convert$1: function(codeUnits) {
        return this.convert$3(codeUnits, 0, null);
      },
      $asConverter: function() {
        return [[P.List, P.$int], P.String];
      }
    },
    _Utf8Decoder: {
      "^": "Object;_allowMalformed,_stringSink,_isFirstCharacter,_value,_expectedUnits,_extraUnits",
      close$0: function(_) {
        this.flush$0();
      },
      flush$0: function() {
        if (this._expectedUnits > 0) {
          if (!this._allowMalformed)
            throw H.wrapException(new P.FormatException("Unfinished UTF-8 octet sequence", null, null));
          this._stringSink._contents += H.Primitives_stringFromCharCode(65533);
          this._value = 0;
          this._expectedUnits = 0;
          this._extraUnits = 0;
        }
      },
      convert$3: function(codeUnits, startIndex, endIndex) {
        var value, expectedUnits, extraUnits, t1, t2, t3, t4, t5, i, unit, t6, t7, oneBytes, i0;
        value = this._value;
        expectedUnits = this._expectedUnits;
        extraUnits = this._extraUnits;
        this._value = 0;
        this._expectedUnits = 0;
        this._extraUnits = 0;
        t1 = new P._Utf8Decoder_convert_scanOneByteCharacters(endIndex);
        t2 = new P._Utf8Decoder_convert_addSingleBytes(this, codeUnits, startIndex, endIndex);
        $loop$0:
          for (t3 = this._stringSink, t4 = !this._allowMalformed, t5 = J.getInterceptor$asx(codeUnits), i = startIndex; true; i = i0) {
            $multibyte$2:
              if (expectedUnits > 0) {
                do {
                  if (i === endIndex)
                    break $loop$0;
                  unit = t5.$index(codeUnits, i);
                  t6 = J.getInterceptor$in(unit);
                  if (!J.$eq(t6.$and(unit, 192), 128)) {
                    if (t4)
                      throw H.wrapException(new P.FormatException("Bad UTF-8 encoding 0x" + t6.toRadixString$1(unit, 16), null, null));
                    this._isFirstCharacter = false;
                    t3._contents += H.Primitives_stringFromCharCode(65533);
                    expectedUnits = 0;
                    break $multibyte$2;
                  } else {
                    value = J.$or$n(J.$shl$in(value, 6), t6.$and(unit, 63));
                    --expectedUnits;
                    ++i;
                  }
                } while (expectedUnits > 0);
                t6 = extraUnits - 1;
                if (t6 < 0 || t6 >= 4)
                  return H.ioore(C.List_127_2047_65535_1114111, t6);
                t7 = J.getInterceptor$in(value);
                if (t7.$le(value, C.List_127_2047_65535_1114111[t6])) {
                  if (t4)
                    throw H.wrapException(new P.FormatException("Overlong encoding of 0x" + t7.toRadixString$1(value, 16), null, null));
                  value = 65533;
                  expectedUnits = 0;
                  extraUnits = 0;
                }
                t6 = J.getInterceptor$n(value);
                if (t6.$gt(value, 1114111)) {
                  if (t4)
                    throw H.wrapException(new P.FormatException("Character outside valid Unicode range: 0x" + t6.toRadixString$1(value, 16), null, null));
                  value = 65533;
                }
                if (!this._isFirstCharacter || !J.$eq(value, 65279))
                  t3._contents += H.Primitives_stringFromCharCode(value);
                this._isFirstCharacter = false;
              }
            if (typeof endIndex !== "number")
              return H.iae(endIndex);
            for (; i < endIndex; i = i0) {
              oneBytes = t1.call$2(codeUnits, i);
              if (J.$gt$n(oneBytes, 0)) {
                this._isFirstCharacter = false;
                if (typeof oneBytes !== "number")
                  return H.iae(oneBytes);
                i0 = i + oneBytes;
                t2.call$2(i, i0);
                if (i0 === endIndex)
                  break;
                i = i0;
              }
              i0 = i + 1;
              unit = t5.$index(codeUnits, i);
              t6 = J.getInterceptor$in(unit);
              if (t6.$lt(unit, 0)) {
                if (t4)
                  throw H.wrapException(new P.FormatException("Negative UTF-8 code unit: -0x" + J.toRadixString$1$n(t6.$negate(unit), 16), null, null));
                t3._contents += H.Primitives_stringFromCharCode(65533);
              } else {
                if (J.$eq(t6.$and(unit, 224), 192)) {
                  value = t6.$and(unit, 31);
                  expectedUnits = 1;
                  extraUnits = 1;
                  continue $loop$0;
                }
                if (J.$eq(t6.$and(unit, 240), 224)) {
                  value = t6.$and(unit, 15);
                  expectedUnits = 2;
                  extraUnits = 2;
                  continue $loop$0;
                }
                if (J.$eq(t6.$and(unit, 248), 240) && t6.$lt(unit, 245)) {
                  value = t6.$and(unit, 7);
                  expectedUnits = 3;
                  extraUnits = 3;
                  continue $loop$0;
                }
                if (t4)
                  throw H.wrapException(new P.FormatException("Bad UTF-8 encoding 0x" + t6.toRadixString$1(unit, 16), null, null));
                this._isFirstCharacter = false;
                t3._contents += H.Primitives_stringFromCharCode(65533);
                value = 65533;
                expectedUnits = 0;
                extraUnits = 0;
              }
            }
            break $loop$0;
          }
        if (expectedUnits > 0) {
          this._value = value;
          this._expectedUnits = expectedUnits;
          this._extraUnits = extraUnits;
        }
      }
    },
    _Utf8Decoder_convert_scanOneByteCharacters: {
      "^": "Closure:62;_captured_endIndex_0",
      call$2: function(units, from) {
        var to, t1, i, unit;
        to = this._captured_endIndex_0;
        if (typeof to !== "number")
          return H.iae(to);
        t1 = J.getInterceptor$asx(units);
        i = from;
        for (; i < to; ++i) {
          unit = t1.$index(units, i);
          if (!J.$eq(J.$and$in(unit, 127), unit))
            return i - from;
        }
        return to - from;
      }
    },
    _Utf8Decoder_convert_addSingleBytes: {
      "^": "Closure:63;_captured_this_1,_captured_codeUnits_2,_captured_startIndex_3,_captured_endIndex_4",
      call$2: function(from, to) {
        this._captured_this_1._stringSink._contents += P.String_String$fromCharCodes(this._captured_codeUnits_2, from, to);
      }
    }
  }], ["dart.core", "dart:core",, P, {
    "^": "",
    String__stringFromIterable: function(charCodes, start, end) {
      var t1, it, i, list;
      if (start < 0)
        throw H.wrapException(P.RangeError$range(start, 0, J.get$length$asx(charCodes), null, null));
      t1 = end == null;
      if (!t1 && end < start)
        throw H.wrapException(P.RangeError$range(end, start, J.get$length$asx(charCodes), null, null));
      it = J.get$iterator$ax(charCodes);
      for (i = 0; i < start; ++i)
        if (!it.moveNext$0())
          throw H.wrapException(P.RangeError$range(start, 0, i, null, null));
      list = [];
      if (t1)
        for (; it.moveNext$0();)
          list.push(it.get$current());
      else
        for (i = start; i < end; ++i) {
          if (!it.moveNext$0())
            throw H.wrapException(P.RangeError$range(end, start, i, null, null));
          list.push(it.get$current());
        }
      return H.Primitives_stringFromCharCodes(list);
    },
    Comparable_compare: [function(a, b) {
      return J.compareTo$1$ns(a, b);
    }, "call$2", "Comparable_compare$closure", 4, 0, 210],
    Error_safeToString: function(object) {
      if (typeof object === "number" || typeof object === "boolean" || null == object)
        return J.toString$0(object);
      if (typeof object === "string")
        return JSON.stringify(object);
      return P.Error__objectToString(object);
    },
    Error__objectToString: function(object) {
      var t1 = J.getInterceptor(object);
      if (!!t1.$isClosure)
        return t1.toString$0(object);
      return H.Primitives_objectToHumanReadableString(object);
    },
    Exception_Exception: function(message) {
      return new P._ExceptionImplementation(message);
    },
    identical: [function(a, b) {
      return a == null ? b == null : a === b;
    }, "call$2", "identical$closure", 4, 0, 211],
    identityHashCode: [function(object) {
      return H.objectHashCode(object);
    }, "call$1", "identityHashCode$closure", 2, 0, 212],
    List_List$filled: function($length, fill, $E) {
      var result, t1, i;
      result = J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (t1 = result.length, i = 0; i < t1; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from: function(elements, growable, $E) {
      var list, t1;
      list = [];
      list.$builtinTypeInfo = [$E];
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current());
      if (growable)
        return list;
      list.fixed$length = Array;
      return list;
    },
    List_List$generate: function($length, generator, growable, $E) {
      var result, i, t1;
      if (growable) {
        result = [];
        result.$builtinTypeInfo = [$E];
        C.JSArray_methods.set$length(result, $length);
      } else {
        result = Array($length);
        result.$builtinTypeInfo = [$E];
      }
      for (i = 0; i < $length; ++i) {
        t1 = generator.call$1(i);
        if (i >= result.length)
          return H.ioore(result, i);
        result[i] = t1;
      }
      return result;
    },
    print: function(object) {
      var line, t1;
      line = H.S(object);
      t1 = $.printToZone;
      if (t1 == null)
        H.printString(line);
      else
        t1.call$1(line);
    },
    RegExp_RegExp: function(source, caseSensitive, multiLine) {
      return new H.JSSyntaxRegExp(source, H.JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, false), null, null);
    },
    String_String$fromCharCodes: function(charCodes, start, end) {
      var len;
      if (typeof charCodes === "object" && charCodes !== null && charCodes.constructor === Array) {
        len = charCodes.length;
        end = P.RangeError_checkValidRange(start, end, len, null, null, null);
        return H.Primitives_stringFromCharCodes(start > 0 || J.$lt$n(end, len) ? C.JSArray_methods.sublist$2(charCodes, start, end) : charCodes);
      }
      if (!!J.getInterceptor(charCodes).$isNativeUint8List)
        return H.Primitives_stringFromNativeUint8List(charCodes, start, P.RangeError_checkValidRange(start, end, charCodes.length, null, null, null));
      return P.String__stringFromIterable(charCodes, start, end);
    },
    NoSuchMethodError_toString_closure: {
      "^": "Closure:22;_core$_box_0,_captured_sb_1",
      call$2: function(key, value) {
        var t1, t2, t3;
        t1 = this._captured_sb_1;
        t2 = this._core$_box_0;
        t1._contents += t2._captured_comma_0;
        t3 = t1._contents += H.S(key.get$_name());
        t1._contents = t3 + ": ";
        t1._contents += H.S(P.Error_safeToString(value));
        t2._captured_comma_0 = ", ";
      }
    },
    Deprecated: {
      "^": "Object;expires",
      toString$0: function(_) {
        return "Deprecated feature. Will be removed " + this.expires;
      }
    },
    _Override: {
      "^": "Object;"
    },
    bool: {
      "^": "Object;",
      toString$0: function(_) {
        return this ? "true" : "false";
      }
    },
    "+bool": 0,
    Comparable: {
      "^": "Object;"
    },
    DateTime: {
      "^": "Object;millisecondsSinceEpoch<,isUtc",
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!(other instanceof P.DateTime))
          return false;
        return this.millisecondsSinceEpoch === other.millisecondsSinceEpoch && this.isUtc === other.isUtc;
      },
      compareTo$1: function(_, other) {
        return C.JSNumber_methods.compareTo$1(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
      },
      get$hashCode: function(_) {
        return this.millisecondsSinceEpoch;
      },
      toUtc$0: function() {
        if (this.isUtc)
          return this;
        return P.DateTime$fromMillisecondsSinceEpoch(this.millisecondsSinceEpoch, true);
      },
      toString$0: function(_) {
        var y, m, d, h, min, sec, ms;
        y = P.DateTime__fourDigits(H.Primitives_getYear(this));
        m = P.DateTime__twoDigits(H.Primitives_getMonth(this));
        d = P.DateTime__twoDigits(H.Primitives_getDay(this));
        h = P.DateTime__twoDigits(H.Primitives_getHours(this));
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(this));
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(this));
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(this));
        if (this.isUtc)
          return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
        else
          return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms;
      },
      toIso8601String$0: function() {
        var y, m, d, h, min, sec, ms;
        y = H.Primitives_getYear(this) >= -9999 && H.Primitives_getYear(this) <= 9999 ? P.DateTime__fourDigits(H.Primitives_getYear(this)) : P.DateTime__sixDigits(H.Primitives_getYear(this));
        m = P.DateTime__twoDigits(H.Primitives_getMonth(this));
        d = P.DateTime__twoDigits(H.Primitives_getDay(this));
        h = P.DateTime__twoDigits(H.Primitives_getHours(this));
        min = P.DateTime__twoDigits(H.Primitives_getMinutes(this));
        sec = P.DateTime__twoDigits(H.Primitives_getSeconds(this));
        ms = P.DateTime__threeDigits(H.Primitives_getMilliseconds(this));
        if (this.isUtc)
          return y + "-" + m + "-" + d + "T" + h + ":" + min + ":" + sec + "." + ms + "Z";
        else
          return y + "-" + m + "-" + d + "T" + h + ":" + min + ":" + sec + "." + ms;
      },
      add$1: function(_, duration) {
        return P.DateTime$fromMillisecondsSinceEpoch(this.millisecondsSinceEpoch + duration.get$inMilliseconds(), this.isUtc);
      },
      get$timeZoneOffset: function() {
        if (this.isUtc)
          return P.Duration$(0, 0, 0, 0, 0, 0);
        return P.Duration$(0, 0, 0, 0, -H.Primitives_lazyAsJsDate(this).getTimezoneOffset(), 0);
      },
      DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
        if (C.JSNumber_methods.abs$0(millisecondsSinceEpoch) > 864e13)
          throw H.wrapException(P.ArgumentError$(millisecondsSinceEpoch));
      },
      $isComparable: 1,
      $asComparable: functionThatReturnsNull,
      static: {DateTime$fromMillisecondsSinceEpoch: function(millisecondsSinceEpoch, isUtc) {
          var t1 = new P.DateTime(millisecondsSinceEpoch, isUtc);
          t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
          return t1;
        }, DateTime__fourDigits: function(n) {
          var absN, sign;
          absN = Math.abs(n);
          sign = n < 0 ? "-" : "";
          if (absN >= 1000)
            return "" + n;
          if (absN >= 100)
            return sign + "0" + H.S(absN);
          if (absN >= 10)
            return sign + "00" + H.S(absN);
          return sign + "000" + H.S(absN);
        }, DateTime__sixDigits: function(n) {
          var absN, sign;
          absN = Math.abs(n);
          sign = n < 0 ? "-" : "+";
          if (absN >= 100000)
            return sign + H.S(absN);
          return sign + "0" + H.S(absN);
        }, DateTime__threeDigits: function(n) {
          if (n >= 100)
            return "" + n;
          if (n >= 10)
            return "0" + n;
          return "00" + n;
        }, DateTime__twoDigits: function(n) {
          if (n >= 10)
            return "" + n;
          return "0" + n;
        }}
    },
    $double: {
      "^": "num;",
      $isComparable: 1,
      $asComparable: function() {
        return [P.num];
      }
    },
    "+double": 0,
    Duration: {
      "^": "Object;_duration<",
      $add: function(_, other) {
        return new P.Duration(this._duration + other.get$_duration());
      },
      $sub: function(_, other) {
        return new P.Duration(this._duration - other.get$_duration());
      },
      $mul: function(_, factor) {
        if (typeof factor !== "number")
          return H.iae(factor);
        return new P.Duration(C.JSNumber_methods.round$0(this._duration * factor));
      },
      $tdiv: function(_, quotient) {
        if (J.$eq(quotient, 0))
          throw H.wrapException(new P.IntegerDivisionByZeroException());
        if (typeof quotient !== "number")
          return H.iae(quotient);
        return new P.Duration(C.JSNumber_methods.$tdiv(this._duration, quotient));
      },
      $lt: function(_, other) {
        return this._duration < other.get$_duration();
      },
      $gt: function(_, other) {
        return this._duration > other.get$_duration();
      },
      $le: function(_, other) {
        return this._duration <= other.get$_duration();
      },
      $ge: function(_, other) {
        return this._duration >= other.get$_duration();
      },
      get$inMilliseconds: function() {
        return C.JSNumber_methods._tdivFast$1(this._duration, 1000);
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        if (!(other instanceof P.Duration))
          return false;
        return this._duration === other._duration;
      },
      get$hashCode: function(_) {
        return this._duration & 0x1FFFFFFF;
      },
      compareTo$1: function(_, other) {
        return C.JSNumber_methods.compareTo$1(this._duration, other.get$_duration());
      },
      toString$0: function(_) {
        var t1, t2, twoDigitMinutes, twoDigitSeconds, sixDigitUs;
        t1 = new P.Duration_toString_twoDigits();
        t2 = this._duration;
        if (t2 < 0)
          return "-" + new P.Duration(-t2).toString$0(0);
        twoDigitMinutes = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods._tdivFast$1(t2, 60000000), 60));
        twoDigitSeconds = t1.call$1(C.JSNumber_methods.remainder$1(C.JSNumber_methods._tdivFast$1(t2, 1000000), 60));
        sixDigitUs = new P.Duration_toString_sixDigits().call$1(C.JSNumber_methods.remainder$1(t2, 1000000));
        return H.S(C.JSNumber_methods._tdivFast$1(t2, 3600000000)) + ":" + H.S(twoDigitMinutes) + ":" + H.S(twoDigitSeconds) + "." + H.S(sixDigitUs);
      },
      abs$0: function(_) {
        return new P.Duration(Math.abs(this._duration));
      },
      $negate: function(_) {
        return new P.Duration(-this._duration);
      },
      $isComparable: 1,
      $asComparable: function() {
        return [P.Duration];
      },
      static: {Duration$: function(days, hours, microseconds, milliseconds, minutes, seconds) {
          if (typeof hours !== "number")
            return H.iae(hours);
          if (typeof minutes !== "number")
            return H.iae(minutes);
          if (typeof seconds !== "number")
            return H.iae(seconds);
          if (typeof milliseconds !== "number")
            return H.iae(milliseconds);
          return new P.Duration(864e8 * days + 3600000000 * hours + 60000000 * minutes + 1000000 * seconds + 1000 * milliseconds + microseconds);
        }}
    },
    Duration_toString_sixDigits: {
      "^": "Closure:24;",
      call$1: function(n) {
        if (n >= 100000)
          return H.S(n);
        if (n >= 10000)
          return "0" + H.S(n);
        if (n >= 1000)
          return "00" + H.S(n);
        if (n >= 100)
          return "000" + H.S(n);
        if (n >= 10)
          return "0000" + H.S(n);
        return "00000" + H.S(n);
      }
    },
    Duration_toString_twoDigits: {
      "^": "Closure:24;",
      call$1: function(n) {
        if (n >= 10)
          return "" + n;
        return "0" + n;
      }
    },
    Error: {
      "^": "Object;",
      get$stackTrace: function() {
        return H.getTraceFromException(this.$thrownJsError);
      }
    },
    NullThrownError: {
      "^": "Error;",
      toString$0: function(_) {
        return "Throw of null.";
      }
    },
    ArgumentError: {
      "^": "Error;_hasValue,invalidValue,name>,message>",
      get$_errorName: function() {
        return "Invalid argument" + (!this._hasValue ? "(s)" : "");
      },
      get$_errorExplanation: function() {
        return "";
      },
      toString$0: function(_) {
        var t1, nameString, message, prefix, explanation, errorValue;
        t1 = this.name;
        nameString = t1 != null ? " (" + H.S(t1) + ")" : "";
        t1 = this.message;
        message = t1 == null ? "" : ": " + H.S(t1);
        prefix = this.get$_errorName() + nameString + message;
        if (!this._hasValue)
          return prefix;
        explanation = this.get$_errorExplanation();
        errorValue = P.Error_safeToString(this.invalidValue);
        return prefix + explanation + ": " + H.S(errorValue);
      },
      static: {ArgumentError$: function(message) {
          return new P.ArgumentError(false, null, null, message);
        }, ArgumentError$notNull: function($name) {
          return new P.ArgumentError(true, null, $name, "Must not be null");
        }}
    },
    RangeError: {
      "^": "ArgumentError;start,end,_hasValue,invalidValue,name,message",
      get$_errorName: function() {
        return "RangeError";
      },
      get$_errorExplanation: function() {
        var t1, explanation, t2, t3;
        t1 = this.start;
        if (t1 == null) {
          t1 = this.end;
          explanation = t1 != null ? ": Not less than or equal to " + H.S(t1) : "";
        } else {
          t2 = this.end;
          if (t2 == null)
            explanation = ": Not greater than or equal to " + H.S(t1);
          else {
            t3 = J.getInterceptor$n(t2);
            if (t3.$gt(t2, t1))
              explanation = ": Not in range " + H.S(t1) + ".." + H.S(t2) + ", inclusive";
            else
              explanation = t3.$lt(t2, t1) ? ": Valid value range is empty" : ": Only valid value is " + H.S(t1);
          }
        }
        return explanation;
      },
      static: {RangeError$: function(message) {
          return new P.RangeError(null, null, false, null, null, message);
        }, RangeError$value: function(value, $name, message) {
          return new P.RangeError(null, null, true, value, $name, "Value not in range");
        }, RangeError$range: function(invalidValue, minValue, maxValue, $name, message) {
          return new P.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
        }, RangeError_checkValueInInterval: function(value, minValue, maxValue, $name, message) {
          var t1;
          if (value >= minValue) {
            if (typeof maxValue !== "number")
              return H.iae(maxValue);
            t1 = value > maxValue;
          } else
            t1 = true;
          if (t1)
            throw H.wrapException(P.RangeError$range(value, minValue, maxValue, $name, message));
        }, RangeError_checkValidRange: function(start, end, $length, startName, endName, message) {
          var t1;
          if (typeof start !== "number")
            return H.iae(start);
          if (!(0 > start)) {
            if (typeof $length !== "number")
              return H.iae($length);
            t1 = start > $length;
          } else
            t1 = true;
          if (t1)
            throw H.wrapException(P.RangeError$range(start, 0, $length, "start", message));
          if (end != null) {
            if (typeof end !== "number")
              return H.iae(end);
            if (!(start > end)) {
              if (typeof $length !== "number")
                return H.iae($length);
              t1 = end > $length;
            } else
              t1 = true;
            if (t1)
              throw H.wrapException(P.RangeError$range(end, start, $length, "end", message));
            return end;
          }
          return $length;
        }}
    },
    IndexError: {
      "^": "ArgumentError;indexable,length>,_hasValue,invalidValue,name,message",
      get$_errorName: function() {
        return "RangeError";
      },
      get$_errorExplanation: function() {
        P.Error_safeToString(this.indexable);
        var explanation = ": index should be less than " + H.S(this.length);
        return J.$lt$n(this.invalidValue, 0) ? ": index must not be negative" : explanation;
      },
      static: {IndexError$: function(invalidValue, indexable, $name, message, $length) {
          var t1 = $length != null ? $length : J.get$length$asx(indexable);
          return new P.IndexError(indexable, t1, true, invalidValue, $name, "Index out of range");
        }}
    },
    NoSuchMethodError: {
      "^": "Error;_receiver,_core$_memberName,_core$_arguments,_namedArguments,_existingArgumentNames",
      toString$0: function(_) {
        var t1, sb, t2, argument, memberName, receiverText, actualParameters, formalParameters;
        t1 = {};
        sb = new P.StringBuffer("");
        t1._captured_comma_0 = "";
        t2 = this._core$_arguments;
        if (t2 != null)
          for (t2 = J.get$iterator$ax(t2); t2.moveNext$0();) {
            argument = t2.get$current();
            sb._contents += t1._captured_comma_0;
            sb._contents += H.S(P.Error_safeToString(argument));
            t1._captured_comma_0 = ", ";
          }
        t2 = this._namedArguments;
        if (t2 != null)
          t2.forEach$1(0, new P.NoSuchMethodError_toString_closure(t1, sb));
        memberName = this._core$_memberName.get$_name();
        receiverText = P.Error_safeToString(this._receiver);
        actualParameters = H.S(sb);
        t1 = this._existingArgumentNames;
        if (t1 == null)
          return "NoSuchMethodError: method not found: '" + H.S(memberName) + "'\nReceiver: " + H.S(receiverText) + "\nArguments: [" + actualParameters + "]";
        else {
          formalParameters = J.join$1$ax(t1, ", ");
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + H.S(memberName) + "'\nReceiver: " + H.S(receiverText) + "\nTried calling: " + H.S(memberName) + "(" + actualParameters + ")\nFound: " + H.S(memberName) + "(" + H.S(formalParameters) + ")";
        }
      },
      static: {NoSuchMethodError$: function(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames) {
          return new P.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments, existingArgumentNames);
        }}
    },
    UnsupportedError: {
      "^": "Error;message>",
      toString$0: function(_) {
        return "Unsupported operation: " + this.message;
      }
    },
    UnimplementedError: {
      "^": "Error;message>",
      toString$0: function(_) {
        var t1 = this.message;
        return t1 != null ? "UnimplementedError: " + H.S(t1) : "UnimplementedError";
      }
    },
    StateError: {
      "^": "Error;message>",
      toString$0: function(_) {
        return "Bad state: " + this.message;
      }
    },
    ConcurrentModificationError: {
      "^": "Error;modifiedObject",
      toString$0: function(_) {
        var t1 = this.modifiedObject;
        if (t1 == null)
          return "Concurrent modification during iteration.";
        return "Concurrent modification during iteration: " + H.S(P.Error_safeToString(t1)) + ".";
      }
    },
    OutOfMemoryError: {
      "^": "Object;",
      toString$0: function(_) {
        return "Out of Memory";
      },
      get$stackTrace: function() {
        return;
      },
      $isError: 1
    },
    StackOverflowError: {
      "^": "Object;",
      toString$0: function(_) {
        return "Stack Overflow";
      },
      get$stackTrace: function() {
        return;
      },
      $isError: 1
    },
    CyclicInitializationError: {
      "^": "Error;variableName",
      toString$0: function(_) {
        return "Reading static variable '" + this.variableName + "' during its initialization";
      }
    },
    _ExceptionImplementation: {
      "^": "Object;message>",
      toString$0: function(_) {
        var t1 = this.message;
        if (t1 == null)
          return "Exception";
        return "Exception: " + H.S(t1);
      }
    },
    FormatException: {
      "^": "Object;message>,source,offset",
      toString$0: function(_) {
        var t1, report, offset, source, lineNum, lineStart, lastWasCR, i, $char, lineEnd, t2, end, start, prefix, postfix, slice;
        t1 = this.message;
        report = t1 != null && "" !== t1 ? "FormatException: " + H.S(t1) : "FormatException";
        offset = this.offset;
        source = this.source;
        if (typeof source !== "string")
          return offset != null ? report + (" (at offset " + H.S(offset) + ")") : report;
        if (offset != null) {
          t1 = J.getInterceptor$n(offset);
          t1 = t1.$lt(offset, 0) || t1.$gt(offset, J.get$length$asx(source));
        } else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          t1 = J.getInterceptor$asx(source);
          if (J.$gt$n(t1.get$length(source), 78))
            source = t1.substring$2(source, 0, 75) + "...";
          return report + "\n" + H.S(source);
        }
        if (typeof offset !== "number")
          return H.iae(offset);
        t1 = J.getInterceptor$asx(source);
        lineNum = 1;
        lineStart = 0;
        lastWasCR = null;
        i = 0;
        for (; i < offset; ++i) {
          $char = t1.codeUnitAt$1(source, i);
          if ($char === 10) {
            if (lineStart !== i || lastWasCR !== true)
              ++lineNum;
            lineStart = i + 1;
            lastWasCR = false;
          } else if ($char === 13) {
            ++lineNum;
            lineStart = i + 1;
            lastWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + H.S(offset - lineStart + 1) + ")\n") : report + (" (at character " + H.S(offset + 1) + ")\n");
        lineEnd = t1.get$length(source);
        i = offset;
        while (true) {
          t2 = t1.get$length(source);
          if (typeof t2 !== "number")
            return H.iae(t2);
          if (!(i < t2))
            break;
          $char = t1.codeUnitAt$1(source, i);
          if ($char === 10 || $char === 13) {
            lineEnd = i;
            break;
          }
          ++i;
        }
        t2 = J.getInterceptor$n(lineEnd);
        if (J.$gt$n(t2.$sub(lineEnd, lineStart), 78))
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
            prefix = "";
            postfix = "...";
          } else {
            if (J.$lt$n(t2.$sub(lineEnd, offset), 75)) {
              start = t2.$sub(lineEnd, 75);
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
              postfix = "...";
            }
            prefix = "...";
          }
        else {
          end = lineEnd;
          start = lineStart;
          prefix = "";
          postfix = "";
        }
        slice = t1.substring$2(source, start, end);
        if (typeof start !== "number")
          return H.iae(start);
        return report + prefix + slice + postfix + "\n" + C.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      }
    },
    IntegerDivisionByZeroException: {
      "^": "Object;",
      toString$0: function(_) {
        return "IntegerDivisionByZeroException";
      }
    },
    Expando: {
      "^": "Object;name>",
      toString$0: function(_) {
        return "Expando:" + H.S(this.name);
      },
      $index: function(_, object) {
        var values = H.Primitives_getProperty(object, "expando$values");
        return values == null ? null : H.Primitives_getProperty(values, this._getKey$0());
      },
      $indexSet: function(_, object, value) {
        var values = H.Primitives_getProperty(object, "expando$values");
        if (values == null) {
          values = new P.Object();
          H.Primitives_setProperty(object, "expando$values", values);
        }
        H.Primitives_setProperty(values, this._getKey$0(), value);
      },
      _getKey$0: function() {
        var key, t1;
        key = H.Primitives_getProperty(this, "expando$key");
        if (key == null) {
          t1 = $.Expando__keyCount;
          $.Expando__keyCount = t1 + 1;
          key = "expando$key$" + t1;
          H.Primitives_setProperty(this, "expando$key", key);
        }
        return key;
      }
    },
    Function: {
      "^": "Object;"
    },
    $int: {
      "^": "num;",
      $isComparable: 1,
      $asComparable: function() {
        return [P.num];
      }
    },
    "+int": 0,
    Invocation: {
      "^": "Object;"
    },
    Iterable: {
      "^": "Object;",
      map$1: function(_, f) {
        return H.MappedIterable_MappedIterable(this, f, H.getRuntimeTypeArgument(this, "Iterable", 0), null);
      },
      where$1: ["super$Iterable$where$1", function(_, f) {
        var t1 = new H.WhereIterable(this, f);
        t1.$builtinTypeInfo = [H.getRuntimeTypeArgument(this, "Iterable", 0)];
        return t1;
      }],
      contains$1: function(_, element) {
        var t1;
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          if (J.$eq(t1.get$current(), element))
            return true;
        return false;
      },
      forEach$1: function(_, f) {
        var t1;
        for (t1 = this.get$iterator(this); t1.moveNext$0();)
          f.call$1(t1.get$current());
      },
      fold$2: function(_, initialValue, combine) {
        var t1, value;
        for (t1 = this.get$iterator(this), value = initialValue; t1.moveNext$0();)
          value = combine.call$2(value, t1.get$current());
        return value;
      },
      join$1: function(_, separator) {
        var iterator, buffer, t1;
        iterator = this.get$iterator(this);
        if (!iterator.moveNext$0())
          return "";
        buffer = new P.StringBuffer("");
        if (separator === "") {
          do
            buffer._contents += H.S(iterator.get$current());
          while (iterator.moveNext$0());
        } else {
          buffer._contents = H.S(iterator.get$current());
          for (; iterator.moveNext$0();) {
            buffer._contents += separator;
            buffer._contents += H.S(iterator.get$current());
          }
        }
        t1 = buffer._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      toList$1$growable: function(_, growable) {
        return P.List_List$from(this, growable, H.getRuntimeTypeArgument(this, "Iterable", 0));
      },
      toList$0: function($receiver) {
        return this.toList$1$growable($receiver, true);
      },
      get$length: function(_) {
        var it, count;
        it = this.get$iterator(this);
        for (count = 0; it.moveNext$0();)
          ++count;
        return count;
      },
      get$isEmpty: function(_) {
        return !this.get$iterator(this).moveNext$0();
      },
      get$isNotEmpty: function(_) {
        return this.get$isEmpty(this) !== true;
      },
      get$first: function(_) {
        var it = this.get$iterator(this);
        if (!it.moveNext$0())
          throw H.wrapException(H.IterableElementError_noElement());
        return it.get$current();
      },
      get$last: function(_) {
        var it, result;
        it = this.get$iterator(this);
        if (!it.moveNext$0())
          throw H.wrapException(H.IterableElementError_noElement());
        do
          result = it.get$current();
        while (it.moveNext$0());
        return result;
      },
      firstWhere$2$orElse: function(_, test, orElse) {
        var t1, element;
        for (t1 = this.get$iterator(this); t1.moveNext$0();) {
          element = t1.get$current();
          if (test.call$1(element) === true)
            return element;
        }
        return orElse.call$0();
      },
      elementAt$1: function(_, index) {
        var t1, elementIndex, element;
        if (typeof index !== "number" || Math.floor(index) !== index)
          throw H.wrapException(P.ArgumentError$notNull("index"));
        if (index < 0)
          H.throwExpression(P.RangeError$range(index, 0, null, "index", null));
        for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
          element = t1.get$current();
          if (index === elementIndex)
            return element;
          ++elementIndex;
        }
        throw H.wrapException(P.IndexError$(index, this, "index", null, elementIndex));
      },
      toString$0: function(_) {
        return P.IterableBase_iterableToShortString(this, "(", ")");
      },
      $asIterable: null
    },
    Iterator: {
      "^": "Object;"
    },
    List: {
      "^": "Object;",
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    "+List": 0,
    Map: {
      "^": "Object;"
    },
    Null: {
      "^": "Object;",
      toString$0: function(_) {
        return "null";
      }
    },
    "+Null": 0,
    num: {
      "^": "Object;",
      $isComparable: 1,
      $asComparable: function() {
        return [P.num];
      }
    },
    "+num": 0,
    Object: {
      "^": ";",
      $eq: [function(_, other) {
        return this === other;
      }, null, "get$==", 2, 0, 1, 2, [], "=="],
      get$hashCode: [function(_) {
        return H.Primitives_objectHashCode(this);
      }, null, null, 1, 0, 2, "hashCode"],
      toString$0: ["super$Object$toString$0", function(_) {
        return H.Primitives_objectToHumanReadableString(this);
      }, "call$0", "get$toString", 0, 0, 3, "toString"],
      noSuchMethod$1: [function(_, invocation) {
        throw H.wrapException(P.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
      }, "call$1", "get$noSuchMethod", 2, 0, 4, 3, [], "noSuchMethod"],
      get$runtimeType: [function(_) {
        return new H.TypeImpl(H.getRuntimeTypeString(this), null);
      }, null, null, 1, 0, 64, "runtimeType"]
    },
    Match: {
      "^": "Object;"
    },
    StackTrace: {
      "^": "Object;"
    },
    String: {
      "^": "Object;",
      $isComparable: 1,
      $asComparable: function() {
        return [P.String];
      }
    },
    "+String": 0,
    StringBuffer: {
      "^": "Object;_contents@",
      get$length: function(_) {
        return this._contents.length;
      },
      get$isEmpty: function(_) {
        return this._contents.length === 0;
      },
      get$isNotEmpty: function(_) {
        return this._contents.length !== 0;
      },
      write$1: function(obj) {
        this._contents += H.S(obj);
      },
      clear$0: function(_) {
        this._contents = "";
      },
      toString$0: function(_) {
        var t1 = this._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      static: {StringBuffer__writeAll: function(string, objects, separator) {
          var iterator = J.get$iterator$ax(objects);
          if (!iterator.moveNext$0())
            return string;
          if (separator.length === 0) {
            do
              string += H.S(iterator.get$current());
            while (iterator.moveNext$0());
          } else {
            string += H.S(iterator.get$current());
            for (; iterator.moveNext$0();)
              string = string + separator + H.S(iterator.get$current());
          }
          return string;
        }}
    },
    Symbol0: {
      "^": "Object;"
    },
    Type: {
      "^": "Object;"
    },
    Uri: {
      "^": "Object;_host,_port,_path,scheme,_userInfo,_query,_fragment,_pathSegments,_queryParameters",
      get$host: function(_) {
        var t1 = this._host;
        if (t1 == null)
          return "";
        if (J.getInterceptor$s(t1).startsWith$1(t1, "["))
          return C.JSString_methods.substring$2(t1, 1, t1.length - 1);
        return t1;
      },
      get$port: function(_) {
        var t1 = this._port;
        if (t1 == null)
          return P.Uri__defaultPort(this.scheme);
        return t1;
      },
      get$path: function(_) {
        return this._path;
      },
      get$pathSegments: function() {
        var t1, pathToSplit;
        t1 = this._pathSegments;
        if (t1 == null) {
          pathToSplit = this._path;
          if (pathToSplit.length !== 0 && C.JSString_methods.codeUnitAt$1(pathToSplit, 0) === 47)
            pathToSplit = C.JSString_methods.substring$1(pathToSplit, 1);
          if (pathToSplit === "")
            t1 = C.List_empty3;
          else {
            t1 = new H.MappedListIterable(pathToSplit.split("/"), P.Uri_decodeComponent$closure());
            t1.$builtinTypeInfo = [null, null];
            t1 = t1.toList$1$growable(0, false);
          }
          t1 = new P.UnmodifiableListView(t1);
          t1.$builtinTypeInfo = [null];
          this._pathSegments = t1;
        }
        return t1;
      },
      _merge$2: function(base, reference) {
        var backCount, refStart, baseEnd, newEnd, delta, t1;
        if (base.length === 0)
          return "/" + reference;
        for (backCount = 0, refStart = 0; C.JSString_methods.startsWith$2(reference, "../", refStart);) {
          refStart += 3;
          ++backCount;
        }
        baseEnd = C.JSString_methods.lastIndexOf$1(base, "/");
        while (true) {
          if (!(baseEnd > 0 && backCount > 0))
            break;
          newEnd = C.JSString_methods.lastIndexOf$2(base, "/", baseEnd - 1);
          if (newEnd < 0)
            break;
          delta = baseEnd - newEnd;
          t1 = delta !== 2;
          if (!t1 || delta === 3)
            if (C.JSString_methods.codeUnitAt$1(base, newEnd + 1) === 46)
              t1 = !t1 || C.JSString_methods.codeUnitAt$1(base, newEnd + 2) === 46;
            else
              t1 = false;
          else
            t1 = false;
          if (t1)
            break;
          --backCount;
          baseEnd = newEnd;
        }
        return C.JSString_methods.replaceRange$3(base, baseEnd + 1, null, C.JSString_methods.substring$1(reference, refStart - 3 * backCount));
      },
      _hasDotSegments$1: function(path) {
        if (path.length > 0 && C.JSString_methods.codeUnitAt$1(path, 0) === 46)
          return true;
        return C.JSString_methods.indexOf$1(path, "/.") !== -1;
      },
      _removeDotSegments$1: function(path) {
        var output, t1, t2, appendSlash, _i, segment, t3;
        if (!this._hasDotSegments$1(path))
          return path;
        output = [];
        for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          segment = t1[_i];
          if (J.$eq(segment, "..")) {
            t3 = output.length;
            if (t3 !== 0)
              if (t3 === 1) {
                if (0 >= t3)
                  return H.ioore(output, 0);
                t3 = !J.$eq(output[0], "");
              } else
                t3 = true;
            else
              t3 = false;
            if (t3) {
              if (0 >= output.length)
                return H.ioore(output, 0);
              output.pop();
            }
            appendSlash = true;
          } else if ("." === segment)
            appendSlash = true;
          else {
            output.push(segment);
            appendSlash = false;
          }
        }
        if (appendSlash)
          output.push("");
        return C.JSArray_methods.join$1(output, "/");
      },
      resolveUri$1: function(reference) {
        var targetScheme, targetUserInfo, targetHost, targetPort, targetPath, targetQuery, t1, fragment;
        targetScheme = reference.scheme;
        if (targetScheme.length !== 0) {
          if (reference._host != null) {
            targetUserInfo = reference._userInfo;
            targetHost = reference.get$host(reference);
            targetPort = reference._port != null ? reference.get$port(reference) : null;
          } else {
            targetUserInfo = "";
            targetHost = null;
            targetPort = null;
          }
          targetPath = this._removeDotSegments$1(reference._path);
          targetQuery = reference._query;
          if (targetQuery != null)
            ;
          else
            targetQuery = null;
        } else {
          targetScheme = this.scheme;
          if (reference._host != null) {
            targetUserInfo = reference._userInfo;
            targetHost = reference.get$host(reference);
            targetPort = P.Uri__makePort(reference._port != null ? reference.get$port(reference) : null, targetScheme);
            targetPath = this._removeDotSegments$1(reference._path);
            targetQuery = reference._query;
            if (targetQuery != null)
              ;
            else
              targetQuery = null;
          } else {
            t1 = reference._path;
            if (t1 === "") {
              targetPath = this._path;
              targetQuery = reference._query;
              if (targetQuery != null)
                ;
              else
                targetQuery = this._query;
            } else {
              targetPath = C.JSString_methods.startsWith$1(t1, "/") ? this._removeDotSegments$1(t1) : this._removeDotSegments$1(this._merge$2(this._path, t1));
              targetQuery = reference._query;
              if (targetQuery != null)
                ;
              else
                targetQuery = null;
            }
            targetUserInfo = this._userInfo;
            targetHost = this._host;
            targetPort = this._port;
          }
        }
        fragment = reference._fragment;
        if (fragment != null)
          ;
        else
          fragment = null;
        return new P.Uri(targetHost, targetPort, targetPath, targetScheme, targetUserInfo, targetQuery, fragment, null, null);
      },
      toFilePath$1$windows: function(windows) {
        var t1 = this.scheme;
        if (t1 !== "" && t1 !== "file")
          throw H.wrapException(new P.UnsupportedError("Cannot extract a file path from a " + t1 + " URI"));
        t1 = this._query;
        if ((t1 == null ? "" : t1) !== "")
          throw H.wrapException(new P.UnsupportedError("Cannot extract a file path from a URI with a query component"));
        t1 = this._fragment;
        if ((t1 == null ? "" : t1) !== "")
          throw H.wrapException(new P.UnsupportedError("Cannot extract a file path from a URI with a fragment component"));
        if (this.get$host(this) !== "")
          H.throwExpression(new P.UnsupportedError("Cannot extract a non-Windows file path from a file URI with an authority"));
        P.Uri__checkNonWindowsPathReservedCharacters(this.get$pathSegments(), false);
        t1 = this.get$_isPathAbsolute() ? "/" : "";
        t1 = P.StringBuffer__writeAll(t1, this.get$pathSegments(), "/");
        t1 = t1.charCodeAt(0) == 0 ? t1 : t1;
        return t1;
      },
      toFilePath$0: function() {
        return this.toFilePath$1$windows(null);
      },
      get$_isPathAbsolute: function() {
        if (this._path.length === 0)
          return false;
        return C.JSString_methods.startsWith$1(this._path, "/");
      },
      toString$0: function(_) {
        var t1, t2, t3, t4;
        t1 = this.scheme;
        t2 = "" !== t1 ? t1 + ":" : "";
        t3 = this._host;
        t4 = t3 == null;
        if (!t4 || C.JSString_methods.startsWith$1(this._path, "//") || t1 === "file") {
          t1 = t2 + "//";
          t2 = this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += H.S(t3);
          t2 = this._port;
          if (t2 != null)
            t1 = t1 + ":" + H.S(t2);
        } else
          t1 = t2;
        t1 += this._path;
        t2 = this._query;
        if (t2 != null)
          t1 = t1 + "?" + H.S(t2);
        t2 = this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + H.S(t2);
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      $eq: function(_, other) {
        var t1, t2, t3, t4;
        if (other == null)
          return false;
        t1 = J.getInterceptor(other);
        if (!t1.$isUri)
          return false;
        if (this.scheme === other.scheme)
          if (this._host != null === (other._host != null))
            if (this._userInfo === other._userInfo) {
              t2 = this.get$host(this);
              t3 = t1.get$host(other);
              if (t2 == null ? t3 == null : t2 === t3) {
                t2 = this.get$port(this);
                t1 = t1.get$port(other);
                if (t2 == null ? t1 == null : t2 === t1)
                  if (this._path === other._path) {
                    t1 = this._query;
                    t2 = t1 == null;
                    t3 = other._query;
                    t4 = t3 == null;
                    if (!t2 === !t4) {
                      if (t2)
                        t1 = "";
                      if (t1 == null ? (t4 ? "" : t3) == null : t1 === (t4 ? "" : t3)) {
                        t1 = this._fragment;
                        t2 = t1 == null;
                        t3 = other._fragment;
                        t4 = t3 == null;
                        if (!t2 === !t4) {
                          if (t2)
                            t1 = "";
                          t1 = t1 == null ? (t4 ? "" : t3) == null : t1 === (t4 ? "" : t3);
                        } else
                          t1 = false;
                      } else
                        t1 = false;
                    } else
                      t1 = false;
                  } else
                    t1 = false;
                else
                  t1 = false;
              } else
                t1 = false;
            } else
              t1 = false;
          else
            t1 = false;
        else
          t1 = false;
        return t1;
      },
      get$hashCode: function(_) {
        var t1, t2, t3, t4, t5;
        t1 = new P.Uri_hashCode_combine();
        t2 = this.get$host(this);
        t3 = this.get$port(this);
        t4 = this._query;
        if (t4 == null)
          t4 = "";
        t5 = this._fragment;
        return t1.call$2(this.scheme, t1.call$2(this._userInfo, t1.call$2(t2, t1.call$2(t3, t1.call$2(this._path, t1.call$2(t4, t1.call$2(t5 == null ? "" : t5, 1)))))));
      },
      static: {Uri__defaultPort: function(scheme) {
          if (scheme === "http")
            return 80;
          if (scheme === "https")
            return 443;
          return 0;
        }, Uri_parse: function(uri, start, end) {
          var t1, pathStart, state, t2, i, t3, $char, index, t4, path, numberSignIndex, query, fragment;
          t1 = {};
          t1._captured_end_0 = end;
          t1._captured_scheme_1 = "";
          t1._captured_userinfo_2 = "";
          t1._captured_host_3 = null;
          t1._captured_port_4 = null;
          t1._captured_end_0 = J.get$length$asx(uri);
          t1._captured_index_5 = start;
          t1._captured_char_6 = -1;
          t2 = J.getInterceptor$s(uri);
          i = start;
          while (true) {
            t3 = t1._captured_end_0;
            if (typeof t3 !== "number")
              return H.iae(t3);
            if (!(i < t3)) {
              pathStart = start;
              state = 0;
              break;
            }
            $char = t2.codeUnitAt$1(uri, i);
            t1._captured_char_6 = $char;
            if ($char === 63 || $char === 35) {
              pathStart = start;
              state = 0;
              break;
            }
            if ($char === 47) {
              state = i === start ? 2 : 1;
              pathStart = start;
              break;
            }
            if ($char === 58) {
              if (i === start)
                P.Uri__fail(uri, start, "Invalid empty scheme");
              t1._captured_scheme_1 = P.Uri__makeScheme(uri, start, i);
              ++i;
              if (i === t1._captured_end_0) {
                t1._captured_char_6 = -1;
                state = 0;
              } else {
                $char = t2.codeUnitAt$1(uri, i);
                t1._captured_char_6 = $char;
                if ($char === 63 || $char === 35)
                  state = 0;
                else
                  state = $char === 47 ? 2 : 1;
              }
              pathStart = i;
              break;
            }
            ++i;
            t1._captured_char_6 = -1;
          }
          t1._captured_index_5 = i;
          if (state === 2) {
            index = i + 1;
            t1._captured_index_5 = index;
            if (index === t1._captured_end_0) {
              t1._captured_char_6 = -1;
              state = 0;
            } else {
              $char = t2.codeUnitAt$1(uri, t1._captured_index_5);
              t1._captured_char_6 = $char;
              if ($char === 47) {
                t1._captured_index_5 = J.$add$ns(t1._captured_index_5, 1);
                new P.Uri_parse_parseAuth(t1, uri, -1).call$0();
                pathStart = t1._captured_index_5;
              }
              t3 = t1._captured_char_6;
              state = t3 === 63 || t3 === 35 || t3 === -1 ? 0 : 1;
            }
          }
          if (state === 1)
            for (; index = J.$add$ns(t1._captured_index_5, 1), t1._captured_index_5 = index, J.$lt$n(index, t1._captured_end_0);) {
              $char = t2.codeUnitAt$1(uri, t1._captured_index_5);
              t1._captured_char_6 = $char;
              if ($char === 63 || $char === 35)
                break;
              t1._captured_char_6 = -1;
            }
          t3 = t1._captured_scheme_1;
          t4 = t1._captured_host_3;
          path = P.Uri__makePath(uri, pathStart, t1._captured_index_5, null, t4 != null, t3 === "file");
          t3 = t1._captured_char_6;
          if (t3 === 63) {
            i = J.$add$ns(t1._captured_index_5, 1);
            while (true) {
              t3 = J.getInterceptor$n(i);
              if (!t3.$lt(i, t1._captured_end_0)) {
                numberSignIndex = -1;
                break;
              }
              if (t2.codeUnitAt$1(uri, i) === 35) {
                numberSignIndex = i;
                break;
              }
              i = t3.$add(i, 1);
            }
            t2 = J.getInterceptor$n(numberSignIndex);
            t3 = t2.$lt(numberSignIndex, 0);
            t4 = t1._captured_index_5;
            if (t3) {
              query = P.Uri__makeQuery(uri, J.$add$ns(t4, 1), t1._captured_end_0, null);
              fragment = null;
            } else {
              query = P.Uri__makeQuery(uri, J.$add$ns(t4, 1), numberSignIndex, null);
              fragment = P.Uri__makeFragment(uri, t2.$add(numberSignIndex, 1), t1._captured_end_0);
            }
          } else {
            fragment = t3 === 35 ? P.Uri__makeFragment(uri, J.$add$ns(t1._captured_index_5, 1), t1._captured_end_0) : null;
            query = null;
          }
          t2 = t1._captured_scheme_1;
          t3 = t1._captured_userinfo_2;
          return new P.Uri(t1._captured_host_3, t1._captured_port_4, path, t2, t3, query, fragment, null, null);
        }, Uri__fail: function(uri, index, message) {
          throw H.wrapException(new P.FormatException(message, uri, index));
        }, Uri__checkNonWindowsPathReservedCharacters: function(segments, argumentError) {
          segments.forEach$1(segments, new P.Uri__checkNonWindowsPathReservedCharacters_closure(argumentError));
        }, Uri__makePort: function(port, scheme) {
          if (port != null && port === P.Uri__defaultPort(scheme))
            return;
          return port;
        }, Uri__makeHost: function(host, start, end, strictIPv6) {
          var t1, t2, t3, i;
          if (host == null)
            return;
          t1 = J.getInterceptor(start);
          if (t1.$eq(start, end))
            return "";
          t2 = J.getInterceptor$s(host);
          if (t2.codeUnitAt$1(host, start) === 91) {
            t3 = J.getInterceptor$n(end);
            if (t2.codeUnitAt$1(host, t3.$sub(end, 1)) !== 93)
              P.Uri__fail(host, start, "Missing end `]` to match `[` in host");
            P.Uri_parseIPv6Address(host, t1.$add(start, 1), t3.$sub(end, 1));
            return t2.substring$2(host, start, end).toLowerCase();
          }
          if (!strictIPv6)
            for (i = start; t1 = J.getInterceptor$n(i), t1.$lt(i, end); i = t1.$add(i, 1))
              if (t2.codeUnitAt$1(host, i) === 58) {
                P.Uri_parseIPv6Address(host, start, end);
                return "[" + H.S(host) + "]";
              }
          return P.Uri__normalizeRegName(host, start, end);
        }, Uri__normalizeRegName: function(host, start, end) {
          var t1, index, sectionStart, buffer, isNormalized, t2, $char, replacement, t3, slice, sourceLength, tail;
          for (t1 = J.getInterceptor$s(host), index = start, sectionStart = index, buffer = null, isNormalized = true; t2 = J.getInterceptor$n(index), t2.$lt(index, end);) {
            $char = t1.codeUnitAt$1(host, index);
            if ($char === 37) {
              replacement = P.Uri__normalizeEscape(host, index, true);
              t3 = replacement == null;
              if (t3 && isNormalized) {
                index = t2.$add(index, 3);
                continue;
              }
              if (buffer == null)
                buffer = new P.StringBuffer("");
              slice = t1.substring$2(host, sectionStart, index);
              if (!isNormalized)
                slice = slice.toLowerCase();
              buffer._contents = buffer._contents + slice;
              if (t3) {
                replacement = t1.substring$2(host, index, t2.$add(index, 3));
                sourceLength = 3;
              } else if (replacement === "%") {
                replacement = "%25";
                sourceLength = 1;
              } else
                sourceLength = 3;
              buffer._contents += replacement;
              index = t2.$add(index, sourceLength);
              sectionStart = index;
              isNormalized = true;
            } else {
              if ($char < 127) {
                t3 = $char >>> 4;
                if (t3 >= 8)
                  return H.ioore(C.List_qNA, t3);
                t3 = (C.List_qNA[t3] & C.JSInt_methods._shlPositive$1(1, $char & 15)) !== 0;
              } else
                t3 = false;
              if (t3) {
                if (isNormalized && 65 <= $char && 90 >= $char) {
                  if (buffer == null)
                    buffer = new P.StringBuffer("");
                  if (J.$lt$n(sectionStart, index)) {
                    t3 = t1.substring$2(host, sectionStart, index);
                    buffer._contents = buffer._contents + t3;
                    sectionStart = index;
                  }
                  isNormalized = false;
                }
                index = t2.$add(index, 1);
              } else {
                if ($char <= 93) {
                  t3 = $char >>> 4;
                  if (t3 >= 8)
                    return H.ioore(C.List_2Vk, t3);
                  t3 = (C.List_2Vk[t3] & C.JSInt_methods._shlPositive$1(1, $char & 15)) !== 0;
                } else
                  t3 = false;
                if (t3)
                  P.Uri__fail(host, index, "Invalid character");
                else {
                  if (($char & 64512) === 55296 && J.$lt$n(t2.$add(index, 1), end)) {
                    tail = t1.codeUnitAt$1(host, t2.$add(index, 1));
                    if ((tail & 64512) === 56320) {
                      $char = (65536 | ($char & 1023) << 10 | tail & 1023) >>> 0;
                      sourceLength = 2;
                    } else
                      sourceLength = 1;
                  } else
                    sourceLength = 1;
                  if (buffer == null)
                    buffer = new P.StringBuffer("");
                  slice = t1.substring$2(host, sectionStart, index);
                  if (!isNormalized)
                    slice = slice.toLowerCase();
                  buffer._contents = buffer._contents + slice;
                  buffer._contents += P.Uri__escapeChar($char);
                  index = t2.$add(index, sourceLength);
                  sectionStart = index;
                }
              }
            }
          }
          if (buffer == null)
            return t1.substring$2(host, start, end);
          if (J.$lt$n(sectionStart, end)) {
            slice = t1.substring$2(host, sectionStart, end);
            buffer._contents += !isNormalized ? slice.toLowerCase() : slice;
          }
          t1 = buffer._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }, Uri__makeScheme: function(scheme, start, end) {
          var t1, firstCodeUnit, allLowercase, t2, i, codeUnit;
          if (start === end)
            return "";
          t1 = J.getInterceptor$s(scheme);
          firstCodeUnit = t1.codeUnitAt$1(scheme, start);
          allLowercase = firstCodeUnit >= 97;
          if (!(allLowercase && firstCodeUnit <= 122))
            t2 = firstCodeUnit >= 65 && firstCodeUnit <= 90;
          else
            t2 = true;
          if (!t2)
            P.Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
          if (typeof end !== "number")
            return H.iae(end);
          i = start;
          for (; i < end; ++i) {
            codeUnit = t1.codeUnitAt$1(scheme, i);
            if (codeUnit < 128) {
              t2 = codeUnit >>> 4;
              if (t2 >= 8)
                return H.ioore(C.List_JYB, t2);
              t2 = (C.List_JYB[t2] & C.JSInt_methods._shlPositive$1(1, codeUnit & 15)) !== 0;
            } else
              t2 = false;
            if (!t2)
              P.Uri__fail(scheme, i, "Illegal scheme character");
            if (codeUnit < 97 || codeUnit > 122)
              allLowercase = false;
          }
          scheme = t1.substring$2(scheme, start, end);
          return !allLowercase ? scheme.toLowerCase() : scheme;
        }, Uri__makeUserInfo: function(userInfo, start, end) {
          if (userInfo == null)
            return "";
          return P.Uri__normalize(userInfo, start, end, C.List_gRj);
        }, Uri__makePath: function(path, start, end, pathSegments, ensureLeadingSlash, isFile) {
          var t1, result;
          t1 = path == null;
          if (t1 && true)
            return isFile ? "/" : "";
          t1 = !t1;
          if (t1)
            ;
          result = t1 ? P.Uri__normalize(path, start, end, C.List_qg4) : C.JSNull_methods.map$1(pathSegments, new P.Uri__makePath_closure()).join$1(0, "/");
          if (result.length === 0) {
            if (isFile)
              return "/";
          } else if ((isFile || ensureLeadingSlash) && C.JSString_methods.codeUnitAt$1(result, 0) !== 47)
            return "/" + result;
          return result;
        }, Uri__makeQuery: function(query, start, end, queryParameters) {
          var t1, t2, result;
          t1 = {};
          t2 = query == null;
          if (t2 && queryParameters == null)
            return;
          t2 = !t2;
          if (t2 && queryParameters != null)
            throw H.wrapException(P.ArgumentError$("Both query and queryParameters specified"));
          if (t2)
            return P.Uri__normalize(query, start, end, C.List_CVk);
          result = new P.StringBuffer("");
          t1._captured_first_0 = true;
          queryParameters.forEach$1(0, new P.Uri__makeQuery_closure(t1, result));
          t1 = result._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }, Uri__makeFragment: function(fragment, start, end) {
          if (fragment == null)
            return;
          return P.Uri__normalize(fragment, start, end, C.List_CVk);
        }, Uri__isHexDigit: function($char) {
          if (57 >= $char)
            return 48 <= $char;
          $char |= 32;
          return 97 <= $char && 102 >= $char;
        }, Uri__hexValue: function($char) {
          if (57 >= $char)
            return $char - 48;
          return ($char | 32) - 87;
        }, Uri__normalizeEscape: function(source, index, lowerCase) {
          var t1, t2, firstDigit, secondDigit, value, t3;
          t1 = J.getInterceptor$ns(index);
          t2 = J.getInterceptor$asx(source);
          if (J.$ge$n(t1.$add(index, 2), t2.get$length(source)))
            return "%";
          firstDigit = t2.codeUnitAt$1(source, t1.$add(index, 1));
          secondDigit = t2.codeUnitAt$1(source, t1.$add(index, 2));
          if (!P.Uri__isHexDigit(firstDigit) || !P.Uri__isHexDigit(secondDigit))
            return "%";
          value = P.Uri__hexValue(firstDigit) * 16 + P.Uri__hexValue(secondDigit);
          if (value < 127) {
            t3 = C.JSInt_methods._shrOtherPositive$1(value, 4);
            if (t3 >= 8)
              return H.ioore(C.List_nxB, t3);
            t3 = (C.List_nxB[t3] & C.JSInt_methods._shlPositive$1(1, value & 15)) !== 0;
          } else
            t3 = false;
          if (t3)
            return H.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
          if (firstDigit >= 97 || secondDigit >= 97)
            return t2.substring$2(source, index, t1.$add(index, 3)).toUpperCase();
          return;
        }, Uri__escapeChar: function($char) {
          var codeUnits, flag, encodedBytes, t1, index, $byte, t2, t3;
          if ($char < 128) {
            codeUnits = Array(3);
            codeUnits.fixed$length = Array;
            codeUnits[0] = 37;
            codeUnits[1] = C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", $char >>> 4);
            codeUnits[2] = C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", $char & 15);
          } else {
            if ($char > 2047)
              if ($char > 65535) {
                flag = 240;
                encodedBytes = 4;
              } else {
                flag = 224;
                encodedBytes = 3;
              }
            else {
              flag = 192;
              encodedBytes = 2;
            }
            t1 = 3 * encodedBytes;
            codeUnits = Array(t1);
            codeUnits.fixed$length = Array;
            for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
              $byte = C.JSInt_methods._shrReceiverPositive$1($char, 6 * encodedBytes) & 63 | flag;
              if (index >= t1)
                return H.ioore(codeUnits, index);
              codeUnits[index] = 37;
              t2 = index + 1;
              t3 = C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", $byte >>> 4);
              if (t2 >= t1)
                return H.ioore(codeUnits, t2);
              codeUnits[t2] = t3;
              t3 = index + 2;
              t2 = C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", $byte & 15);
              if (t3 >= t1)
                return H.ioore(codeUnits, t3);
              codeUnits[t3] = t2;
              index += 3;
            }
          }
          return P.String_String$fromCharCodes(codeUnits, 0, null);
        }, Uri__normalize: function(component, start, end, charTable) {
          var t1, index, sectionStart, buffer, t2, $char, t3, replacement, sourceLength, tail;
          for (t1 = J.getInterceptor$s(component), index = start, sectionStart = index, buffer = null; t2 = J.getInterceptor$n(index), t2.$lt(index, end);) {
            $char = t1.codeUnitAt$1(component, index);
            if ($char < 127) {
              t3 = $char >>> 4;
              if (t3 >= 8)
                return H.ioore(charTable, t3);
              t3 = (charTable[t3] & C.JSInt_methods._shlPositive$1(1, $char & 15)) !== 0;
            } else
              t3 = false;
            if (t3)
              index = t2.$add(index, 1);
            else {
              if ($char === 37) {
                replacement = P.Uri__normalizeEscape(component, index, false);
                if (replacement == null) {
                  index = t2.$add(index, 3);
                  continue;
                }
                if ("%" === replacement) {
                  replacement = "%25";
                  sourceLength = 1;
                } else
                  sourceLength = 3;
              } else {
                if ($char <= 93) {
                  t3 = $char >>> 4;
                  if (t3 >= 8)
                    return H.ioore(C.List_2Vk, t3);
                  t3 = (C.List_2Vk[t3] & C.JSInt_methods._shlPositive$1(1, $char & 15)) !== 0;
                } else
                  t3 = false;
                if (t3) {
                  P.Uri__fail(component, index, "Invalid character");
                  replacement = null;
                  sourceLength = null;
                } else {
                  if (($char & 64512) === 55296)
                    if (J.$lt$n(t2.$add(index, 1), end)) {
                      tail = t1.codeUnitAt$1(component, t2.$add(index, 1));
                      if ((tail & 64512) === 56320) {
                        $char = (65536 | ($char & 1023) << 10 | tail & 1023) >>> 0;
                        sourceLength = 2;
                      } else
                        sourceLength = 1;
                    } else
                      sourceLength = 1;
                  else
                    sourceLength = 1;
                  replacement = P.Uri__escapeChar($char);
                }
              }
              if (buffer == null)
                buffer = new P.StringBuffer("");
              t3 = t1.substring$2(component, sectionStart, index);
              buffer._contents = buffer._contents + t3;
              buffer._contents += H.S(replacement);
              index = t2.$add(index, sourceLength);
              sectionStart = index;
            }
          }
          if (buffer == null)
            return t1.substring$2(component, start, end);
          if (J.$lt$n(sectionStart, end))
            buffer._contents += t1.substring$2(component, sectionStart, end);
          t1 = buffer._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }, Uri_decodeComponent: [function(encodedComponent) {
          return P.Uri__uriDecode(encodedComponent, C.Utf8Codec_false, false);
        }, "call$1", "Uri_decodeComponent$closure", 2, 0, 188, 70, []], Uri_parseIPv4Address: function(host) {
          var t1, bytes;
          t1 = new P.Uri_parseIPv4Address_error();
          bytes = host.split(".");
          if (bytes.length !== 4)
            t1.call$1("IPv4 address should contain exactly 4 parts");
          t1 = new H.MappedListIterable(bytes, new P.Uri_parseIPv4Address_closure(t1));
          t1.$builtinTypeInfo = [null, null];
          return t1.toList$0(0);
        }, Uri_parseIPv6Address: function(host, start, end) {
          var error, parseHex, parts, partStart, last, i, wildcardSeen, t1, atEnd, isLastWildcard, exception, bytes, index, value, wildCardLength, j, t2;
          if (end == null)
            end = J.get$length$asx(host);
          error = new P.Uri_parseIPv6Address_error(host);
          parseHex = new P.Uri_parseIPv6Address_parseHex(host, error);
          if (J.$lt$n(J.get$length$asx(host), 2))
            error.call$1("address is too short");
          parts = [];
          partStart = start;
          for (i = start, wildcardSeen = false; t1 = J.getInterceptor$n(i), t1.$lt(i, end); i = J.$add$ns(i, 1))
            if (J.codeUnitAt$1$s(host, i) === 58) {
              if (t1.$eq(i, start)) {
                i = t1.$add(i, 1);
                if (J.codeUnitAt$1$s(host, i) !== 58)
                  error.call$2("invalid start colon.", i);
                partStart = i;
              }
              t1 = J.getInterceptor(i);
              if (t1.$eq(i, partStart)) {
                if (wildcardSeen)
                  error.call$2("only one wildcard `::` is allowed", i);
                J.add$1$ax(parts, -1);
                wildcardSeen = true;
              } else
                J.add$1$ax(parts, parseHex.call$2(partStart, i));
              partStart = t1.$add(i, 1);
            }
          if (J.get$length$asx(parts) === 0)
            error.call$1("too few parts");
          atEnd = J.$eq(partStart, end);
          isLastWildcard = J.$eq(J.get$last$ax(parts), -1);
          if (atEnd && !isLastWildcard)
            error.call$2("expected a part after last `:`", end);
          if (!atEnd)
            try {
              J.add$1$ax(parts, parseHex.call$2(partStart, end));
            } catch (exception) {
              H.unwrapException(exception);
              try {
                last = P.Uri_parseIPv4Address(J.substring$2$s(host, partStart, end));
                J.add$1$ax(parts, J.$or$n(J.$shl$n(J.$index$asx(last, 0), 8), J.$index$asx(last, 1)));
                J.add$1$ax(parts, J.$or$n(J.$shl$n(J.$index$asx(last, 2), 8), J.$index$asx(last, 3)));
              } catch (exception) {
                H.unwrapException(exception);
                error.call$2("invalid end of IPv6 address.", partStart);
              }
            }
          if (wildcardSeen) {
            if (J.get$length$asx(parts) > 7)
              error.call$1("an address with a wildcard must have less than 7 parts");
          } else if (J.get$length$asx(parts) !== 8)
            error.call$1("an address without a wildcard must contain exactly 8 parts");
          bytes = Array(16);
          bytes.$builtinTypeInfo = [P.$int];
          i = 0;
          index = 0;
          while (true) {
            t1 = J.get$length$asx(parts);
            if (typeof t1 !== "number")
              return H.iae(t1);
            if (!(i < t1))
              break;
            value = J.$index$asx(parts, i);
            t1 = J.getInterceptor(value);
            if (t1.$eq(value, -1)) {
              wildCardLength = 9 - J.get$length$asx(parts);
              for (j = 0; j < wildCardLength; ++j) {
                if (index < 0 || index >= 16)
                  return H.ioore(bytes, index);
                bytes[index] = 0;
                t1 = index + 1;
                if (t1 >= 16)
                  return H.ioore(bytes, t1);
                bytes[t1] = 0;
                index += 2;
              }
            } else {
              t2 = t1.$shr(value, 8);
              if (index < 0 || index >= 16)
                return H.ioore(bytes, index);
              bytes[index] = t2;
              t2 = index + 1;
              t1 = t1.$and(value, 255);
              if (t2 >= 16)
                return H.ioore(bytes, t2);
              bytes[t2] = t1;
              index += 2;
            }
            ++i;
          }
          return bytes;
        }, Uri__uriEncode: function(canonicalTable, text, encoding, spaceToPlus) {
          var t1, result, bytes, t2, i, $byte, t3;
          t1 = new P.Uri__uriEncode_byteToHex();
          result = new P.StringBuffer("");
          bytes = encoding.get$encoder().convert$1(text);
          for (t2 = bytes.length, i = 0; i < t2; ++i) {
            $byte = bytes[i];
            if ($byte < 128) {
              t3 = $byte >>> 4;
              if (t3 >= 8)
                return H.ioore(canonicalTable, t3);
              t3 = (canonicalTable[t3] & C.JSInt_methods._shlPositive$1(1, $byte & 15)) !== 0;
            } else
              t3 = false;
            if (t3)
              result._contents += H.Primitives_stringFromCharCode($byte);
            else if (spaceToPlus && $byte === 32)
              result._contents += H.Primitives_stringFromCharCode(43);
            else {
              result._contents += H.Primitives_stringFromCharCode(37);
              t1.call$2($byte, result);
            }
          }
          t1 = result._contents;
          return t1.charCodeAt(0) == 0 ? t1 : t1;
        }, Uri__hexCharPairToByte: function(s, pos) {
          var t1, $byte, i, charCode;
          for (t1 = J.getInterceptor$s(s), $byte = 0, i = 0; i < 2; ++i) {
            charCode = t1.codeUnitAt$1(s, pos + i);
            if (48 <= charCode && charCode <= 57)
              $byte = $byte * 16 + charCode - 48;
            else {
              charCode |= 32;
              if (97 <= charCode && charCode <= 102)
                $byte = $byte * 16 + charCode - 87;
              else
                throw H.wrapException(P.ArgumentError$("Invalid URL encoding"));
            }
          }
          return $byte;
        }, Uri__uriDecode: function(text, encoding, plusToSpace) {
          var t1, simple, i, t2, codeUnit, bytes;
          t1 = J.getInterceptor$asx(text);
          simple = true;
          i = 0;
          while (true) {
            t2 = t1.get$length(text);
            if (typeof t2 !== "number")
              return H.iae(t2);
            if (!(i < t2 && simple))
              break;
            codeUnit = t1.codeUnitAt$1(text, i);
            simple = codeUnit !== 37 && codeUnit !== 43;
            ++i;
          }
          if (simple)
            if (encoding === C.Utf8Codec_false || false)
              return text;
            else
              bytes = t1.get$codeUnits(text);
          else {
            bytes = [];
            i = 0;
            while (true) {
              t2 = t1.get$length(text);
              if (typeof t2 !== "number")
                return H.iae(t2);
              if (!(i < t2))
                break;
              codeUnit = t1.codeUnitAt$1(text, i);
              if (codeUnit > 127)
                throw H.wrapException(P.ArgumentError$("Illegal percent encoding in URI"));
              if (codeUnit === 37) {
                t2 = t1.get$length(text);
                if (typeof t2 !== "number")
                  return H.iae(t2);
                if (i + 3 > t2)
                  throw H.wrapException(P.ArgumentError$("Truncated URI"));
                bytes.push(P.Uri__hexCharPairToByte(text, i + 1));
                i += 2;
              } else if (plusToSpace && codeUnit === 43)
                bytes.push(32);
              else
                bytes.push(codeUnit);
              ++i;
            }
          }
          return encoding.decode$1(bytes);
        }}
    },
    Uri_parse_parseAuth: {
      "^": "Closure:7;_core$_box_0,_captured_uri_1,_captured_EOI_2",
      call$0: function() {
        var t1, authStart, t2, t3, $char, lastColon, lastAt, char0, endBracket, hostEnd, t4, hostStart, i, portNumber, digit;
        t1 = this._core$_box_0;
        if (J.$eq(t1._captured_index_5, t1._captured_end_0)) {
          t1._captured_char_6 = this._captured_EOI_2;
          return;
        }
        authStart = t1._captured_index_5;
        t2 = this._captured_uri_1;
        t3 = J.getInterceptor$s(t2);
        t1._captured_char_6 = t3.codeUnitAt$1(t2, authStart);
        for ($char = this._captured_EOI_2, lastColon = -1, lastAt = -1; J.$lt$n(t1._captured_index_5, t1._captured_end_0);) {
          char0 = t3.codeUnitAt$1(t2, t1._captured_index_5);
          t1._captured_char_6 = char0;
          if (char0 === 47 || char0 === 63 || char0 === 35)
            break;
          if (char0 === 64) {
            lastAt = t1._captured_index_5;
            lastColon = -1;
          } else if (char0 === 58)
            lastColon = t1._captured_index_5;
          else if (char0 === 91) {
            endBracket = t3.indexOf$2(t2, "]", J.$add$ns(t1._captured_index_5, 1));
            if (J.$eq(endBracket, -1)) {
              t1._captured_index_5 = t1._captured_end_0;
              t1._captured_char_6 = $char;
              lastColon = -1;
              break;
            } else
              t1._captured_index_5 = endBracket;
            lastColon = -1;
          }
          t1._captured_index_5 = J.$add$ns(t1._captured_index_5, 1);
          t1._captured_char_6 = $char;
        }
        hostEnd = t1._captured_index_5;
        t4 = J.getInterceptor$n(lastAt);
        if (t4.$ge(lastAt, 0)) {
          t1._captured_userinfo_2 = P.Uri__makeUserInfo(t2, authStart, lastAt);
          hostStart = t4.$add(lastAt, 1);
        } else
          hostStart = authStart;
        t4 = J.getInterceptor$n(lastColon);
        if (t4.$ge(lastColon, 0)) {
          if (J.$lt$n(t4.$add(lastColon, 1), t1._captured_index_5))
            for (i = t4.$add(lastColon, 1), portNumber = 0; t4 = J.getInterceptor$n(i), t4.$lt(i, t1._captured_index_5); i = t4.$add(i, 1)) {
              digit = t3.codeUnitAt$1(t2, i);
              if (48 > digit || 57 < digit)
                P.Uri__fail(t2, i, "Invalid port number");
              portNumber = portNumber * 10 + (digit - 48);
            }
          else
            portNumber = null;
          t1._captured_port_4 = P.Uri__makePort(portNumber, t1._captured_scheme_1);
          hostEnd = lastColon;
        }
        t1._captured_host_3 = P.Uri__makeHost(t2, hostStart, hostEnd, true);
        if (J.$lt$n(t1._captured_index_5, t1._captured_end_0))
          t1._captured_char_6 = t3.codeUnitAt$1(t2, t1._captured_index_5);
      }
    },
    Uri__checkNonWindowsPathReservedCharacters_closure: {
      "^": "Closure:8;_captured_argumentError_0",
      call$1: function(segment) {
        if (J.contains$1$asx(segment, "/") === true)
          if (this._captured_argumentError_0)
            throw H.wrapException(P.ArgumentError$("Illegal path character " + H.S(segment)));
          else
            throw H.wrapException(new P.UnsupportedError("Illegal path character " + H.S(segment)));
      }
    },
    Uri__makePath_closure: {
      "^": "Closure:8;",
      call$1: function(s) {
        return P.Uri__uriEncode(C.List_qg40, s, C.Utf8Codec_false, false);
      }
    },
    Uri__makeQuery_closure: {
      "^": "Closure:15;_core$_box_0,_core$_captured_result_1",
      call$2: function(key, value) {
        var t1 = this._core$_box_0;
        if (!t1._captured_first_0)
          this._core$_captured_result_1._contents += "&";
        t1._captured_first_0 = false;
        t1 = this._core$_captured_result_1;
        t1._contents += P.Uri__uriEncode(C.List_nxB, key, C.Utf8Codec_false, true);
        if (value != null && J.get$isEmpty$asx(value) !== true) {
          t1._contents += "=";
          t1._contents += P.Uri__uriEncode(C.List_nxB, value, C.Utf8Codec_false, true);
        }
      }
    },
    Uri_hashCode_combine: {
      "^": "Closure:65;",
      call$2: function(part, current) {
        return current * 31 + J.get$hashCode$(part) & 1073741823;
      }
    },
    Uri_parseIPv4Address_error: {
      "^": "Closure:61;",
      call$1: function(msg) {
        throw H.wrapException(new P.FormatException("Illegal IPv4 address, " + msg, null, null));
      }
    },
    Uri_parseIPv4Address_closure: {
      "^": "Closure:8;_captured_error_0",
      call$1: [function(byteString) {
        var $byte, t1;
        $byte = H.Primitives_parseInt(byteString, null, null);
        t1 = J.getInterceptor$n($byte);
        if (t1.$lt($byte, 0) || t1.$gt($byte, 255))
          this._captured_error_0.call$1("each part must be in the range of `0..255`");
        return $byte;
      }, null, null, 2, 0, null, 71, [], "call"]
    },
    Uri_parseIPv6Address_error: {
      "^": "Closure:66;_captured_host_0",
      call$2: function(msg, position) {
        throw H.wrapException(new P.FormatException("Illegal IPv6 address, " + msg, this._captured_host_0, position));
      },
      call$1: function(msg) {
        return this.call$2(msg, null);
      }
    },
    Uri_parseIPv6Address_parseHex: {
      "^": "Closure:67;_captured_host_1,_captured_error_2",
      call$2: function(start, end) {
        var value, t1;
        if (J.$gt$n(J.$sub$n(end, start), 4))
          this._captured_error_2.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
        value = H.Primitives_parseInt(J.substring$2$s(this._captured_host_1, start, end), 16, null);
        t1 = J.getInterceptor$n(value);
        if (t1.$lt(value, 0) || t1.$gt(value, 65535))
          this._captured_error_2.call$2("each part must be in the range of `0x0..0xFFFF`", start);
        return value;
      }
    },
    Uri__uriEncode_byteToHex: {
      "^": "Closure:15;",
      call$2: function($byte, buffer) {
        var t1 = J.getInterceptor$n($byte);
        buffer._contents += H.Primitives_stringFromCharCode(C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", t1.$shr($byte, 4)));
        buffer._contents += H.Primitives_stringFromCharCode(C.JSString_methods.codeUnitAt$1("0123456789ABCDEF", t1.$and($byte, 15)));
      }
    }
  }], ["dart.dom.html", "dart:html",, W, {
    "^": "",
    _JenkinsSmiHash_combine: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_finish: function(hash) {
      hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    },
    _convertNativeToDart_Window: function(win) {
      if (win == null)
        return;
      return W._DOMWindowCrossFrame__createSafe(win);
    },
    _wrapZone: function(callback) {
      if (J.$eq($.Zone__current, C.C__RootZone))
        return callback;
      return $.Zone__current.bindUnaryCallback$2$runGuarded(callback, true);
    },
    HtmlElement: {
      "^": "Element;",
      $isHtmlElement: 1,
      $isElement: 1,
      $isNode: 1,
      $isObject: 1,
      "%": "HTMLAppletElement|HTMLBRElement|HTMLBaseElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLLabelElement|HTMLLegendElement|HTMLMarqueeElement|HTMLModElement|HTMLOptGroupElement|HTMLParagraphElement|HTMLPictureElement|HTMLPreElement|HTMLQuoteElement|HTMLShadowElement|HTMLSpanElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableDataCellElement|HTMLTableHeaderCellElement|HTMLTemplateElement|HTMLTitleElement|HTMLUListElement|HTMLUnknownElement;HTMLElement"
    },
    AnchorElement: {
      "^": "HtmlElement;type%",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isInterceptor: 1,
      "%": "HTMLAnchorElement"
    },
    ApplicationCacheErrorEvent: {
      "^": "Event;message=,status=,url=",
      "%": "ApplicationCacheErrorEvent"
    },
    AreaElement: {
      "^": "HtmlElement;",
      toString$0: function(receiver) {
        return String(receiver);
      },
      $isInterceptor: 1,
      "%": "HTMLAreaElement"
    },
    Blob: {
      "^": "Interceptor;type=",
      close$0: function(receiver) {
        return receiver.close();
      },
      $isBlob: 1,
      "%": ";Blob"
    },
    Body: {
      "^": "Interceptor;",
      "%": ";Body"
    },
    BodyElement: {
      "^": "HtmlElement;",
      get$onError: function(receiver) {
        var t1 = new W._ElementEventStreamImpl(receiver, "error", false);
        t1.$builtinTypeInfo = [null];
        return t1;
      },
      onError$1: function($receiver, arg0) {
        return this.get$onError($receiver).call$1(arg0);
      },
      $isInterceptor: 1,
      "%": "HTMLBodyElement"
    },
    ButtonElement: {
      "^": "HtmlElement;name%,type%,value%",
      "%": "HTMLButtonElement"
    },
    CharacterData: {
      "^": "Node;data%,length=",
      $isInterceptor: 1,
      "%": "CDATASection|CharacterData|Comment|ProcessingInstruction|Text"
    },
    CompositionEvent: {
      "^": "UIEvent;data=",
      "%": "CompositionEvent"
    },
    CustomEvent: {
      "^": "Event;",
      get$detail: function(receiver) {
        var t1 = receiver._dartDetail;
        if (t1 != null)
          return t1;
        return P.convertNativeToDart_AcceptStructuredClone(receiver.detail, true);
      },
      "%": "CustomEvent"
    },
    DataListElement: {
      "^": "HtmlElement;options=",
      "%": "HTMLDataListElement"
    },
    DeviceLightEvent: {
      "^": "Event;value=",
      "%": "DeviceLightEvent"
    },
    DeviceOrientationEvent: {
      "^": "Event;absolute=",
      "%": "DeviceOrientationEvent"
    },
    DialogElement: {
      "^": "HtmlElement;",
      close$1: function(receiver, $returnValue) {
        return receiver.close($returnValue);
      },
      "%": "HTMLDialogElement"
    },
    DivElement: {
      "^": "HtmlElement;",
      "%": ";HTMLDivElement"
    },
    Document: {
      "^": "Node;readyState=",
      get$onError: function(receiver) {
        var t1 = new W._EventStream(receiver, "error", false);
        t1.$builtinTypeInfo = [null];
        return t1;
      },
      onError$1: function($receiver, arg0) {
        return this.get$onError($receiver).call$1(arg0);
      },
      "%": "Document|HTMLDocument|XMLDocument"
    },
    DocumentFragment: {
      "^": "Node;",
      get$children: function(receiver) {
        var t1;
        if (receiver._docChildren == null) {
          t1 = new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
          t1.$builtinTypeInfo = [null];
          receiver._docChildren = t1;
        }
        return receiver._docChildren;
      },
      set$children: function(receiver, value) {
        var copy, children, t1;
        copy = P.List_List$from(value, true, null);
        children = this.get$children(receiver);
        t1 = J.getInterceptor$ax(children);
        t1.clear$0(children);
        t1.addAll$1(children, copy);
      },
      $isInterceptor: 1,
      "%": "DocumentFragment|ShadowRoot"
    },
    DomError: {
      "^": "Interceptor;message=,name=",
      "%": "DOMError|FileError"
    },
    DomException: {
      "^": "Interceptor;message=",
      get$name: function(receiver) {
        var errorName = receiver.name;
        if (P.Device_isWebKit() === true && errorName === "SECURITY_ERR")
          return "SecurityError";
        if (P.Device_isWebKit() === true && errorName === "SYNTAX_ERR")
          return "SyntaxError";
        return errorName;
      },
      toString$0: function(receiver) {
        return String(receiver);
      },
      "%": "DOMException"
    },
    DomRectReadOnly: {
      "^": "Interceptor;bottom=,height=,left=,right=,top=,width=,x=,y=",
      toString$0: function(receiver) {
        return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(this.get$width(receiver)) + " x " + H.S(this.get$height(receiver));
      },
      $eq: function(receiver, other) {
        var t1, t2, t3;
        if (other == null)
          return false;
        t1 = J.getInterceptor(other);
        if (!t1.$isRectangle)
          return false;
        t2 = receiver.left;
        t3 = t1.get$left(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.top;
          t3 = t1.get$top(other);
          if (t2 == null ? t3 == null : t2 === t3) {
            t2 = this.get$width(receiver);
            t3 = t1.get$width(other);
            if (t2 == null ? t3 == null : t2 === t3) {
              t2 = this.get$height(receiver);
              t1 = t1.get$height(other);
              t1 = t2 == null ? t1 == null : t2 === t1;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
        return t1;
      },
      get$hashCode: function(receiver) {
        var t1, t2, t3, t4;
        t1 = J.get$hashCode$(receiver.left);
        t2 = J.get$hashCode$(receiver.top);
        t3 = J.get$hashCode$(this.get$width(receiver));
        t4 = J.get$hashCode$(this.get$height(receiver));
        return W._JenkinsSmiHash_finish(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, t1), t2), t3), t4));
      },
      $isRectangle: 1,
      $asRectangle: functionThatReturnsNull,
      "%": ";DOMRectReadOnly"
    },
    _ChildrenElementList: {
      "^": "ListBase;_html$_element,_childElements",
      contains$1: function(_, element) {
        return J.contains$1$asx(this._childElements, element);
      },
      get$isEmpty: function(_) {
        return this._html$_element.firstElementChild == null;
      },
      get$length: function(_) {
        return this._childElements.length;
      },
      $index: function(_, index) {
        var t1 = this._childElements;
        if (index >>> 0 !== index || index >= t1.length)
          return H.ioore(t1, index);
        return t1[index];
      },
      $indexSet: function(_, index, value) {
        var t1 = this._childElements;
        if (index >>> 0 !== index || index >= t1.length)
          return H.ioore(t1, index);
        this._html$_element.replaceChild(value, t1[index]);
      },
      set$length: function(_, newLength) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize element lists"));
      },
      add$1: function(_, value) {
        this._html$_element.appendChild(value);
        return value;
      },
      get$iterator: function(_) {
        var t1, t2;
        t1 = this.toList$0(this);
        t2 = new J.ArrayIterator(t1, t1.length, 0, null);
        t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t1, 0)];
        return t2;
      },
      addAll$1: function(_, iterable) {
        var t1, t2;
        for (t1 = J.get$iterator$ax(iterable instanceof W._ChildNodeListLazy ? P.List_List$from(iterable, true, null) : iterable), t2 = this._html$_element; t1.moveNext$0();)
          t2.appendChild(t1.get$current());
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        throw H.wrapException(new P.UnimplementedError(null));
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      remove$1: function(_, object) {
        var t1;
        if (!!J.getInterceptor(object).$isElement) {
          t1 = this._html$_element;
          if (object.parentNode === t1) {
            t1.removeChild(object);
            return true;
          }
        }
        return false;
      },
      clear$0: function(_) {
        J._clearChildren$0$x(this._html$_element);
      },
      removeAt$1: function(_, index) {
        var t1, result;
        t1 = this._childElements;
        if (index >= t1.length)
          return H.ioore(t1, index);
        result = t1[index];
        this._html$_element.removeChild(result);
        return result;
      },
      get$first: function(_) {
        var result = this._html$_element.firstElementChild;
        if (result == null)
          throw H.wrapException(new P.StateError("No elements"));
        return result;
      },
      get$last: function(_) {
        var result = this._html$_element.lastElementChild;
        if (result == null)
          throw H.wrapException(new P.StateError("No elements"));
        return result;
      },
      $asListBase: function() {
        return [W.Element];
      },
      $asObject_ListMixin: function() {
        return [W.Element];
      },
      $asList: function() {
        return [W.Element];
      },
      $asIterable: function() {
        return [W.Element];
      }
    },
    _FrozenElementList: {
      "^": "ListBase;_nodeList",
      get$length: function(_) {
        return this._nodeList.length;
      },
      $index: function(_, index) {
        var t1 = this._nodeList;
        if (index >>> 0 !== index || index >= t1.length)
          return H.ioore(t1, index);
        return t1[index];
      },
      $indexSet: function(_, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify list"));
      },
      set$length: function(_, newLength) {
        throw H.wrapException(new P.UnsupportedError("Cannot modify list"));
      },
      get$first: function(_) {
        return C.NodeList_methods.get$first(this._nodeList);
      },
      get$last: function(_) {
        return C.NodeList_methods.get$last(this._nodeList);
      },
      get$onError: function(_) {
        var t1 = new W._ElementListEventStreamImpl(this, false, "error");
        t1.$builtinTypeInfo = [null];
        return t1;
      },
      onError$1: function($receiver, arg0) {
        return this.get$onError(this).call$1(arg0);
      },
      $asListBase: functionThatReturnsNull,
      $asObject_ListMixin: functionThatReturnsNull,
      $asList: functionThatReturnsNull,
      $asIterable: functionThatReturnsNull,
      $isList: 1,
      $isEfficientLength: 1,
      $isIterable: 1
    },
    Element: {
      "^": "Node;",
      get$attributes: function(receiver) {
        return new W._ElementAttributeMap(receiver);
      },
      set$attributes: function(receiver, value) {
        var t1, key;
        new W._ElementAttributeMap(receiver).clear$0(0);
        for (t1 = value.get$keys(), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          key = t1.get$current();
          receiver.setAttribute(key, value.$index(0, key));
        }
      },
      get$children: function(receiver) {
        return new W._ChildrenElementList(receiver, receiver.children);
      },
      set$children: function(receiver, value) {
        var copy, children;
        copy = P.List_List$from(value, true, null);
        children = this.get$children(receiver);
        children.clear$0(0);
        children.addAll$1(0, copy);
      },
      toString$0: function(receiver) {
        return receiver.localName;
      },
      getAttribute$1: function(receiver, $name) {
        return receiver.getAttribute($name);
      },
      get$onError: function(receiver) {
        var t1 = new W._ElementEventStreamImpl(receiver, "error", false);
        t1.$builtinTypeInfo = [null];
        return t1;
      },
      onError$1: function($receiver, arg0) {
        return this.get$onError($receiver).call$1(arg0);
      },
      $isElement: 1,
      $isNode: 1,
      $isObject: 1,
      $isInterceptor: 1,
      "%": ";Element"
    },
    EmbedElement: {
      "^": "HtmlElement;name%,type%",
      "%": "HTMLEmbedElement"
    },
    ErrorEvent: {
      "^": "Event;error=,message=",
      "%": "ErrorEvent"
    },
    Event: {
      "^": "Interceptor;path=,type=",
      $isEvent: 1,
      "%": "AnimationPlayerEvent|AudioProcessingEvent|AutocompleteErrorEvent|BeforeUnloadEvent|CloseEvent|DeviceMotionEvent|ExtendableEvent|FontFaceSetLoadEvent|GamepadEvent|HashChangeEvent|IDBVersionChangeEvent|InstallEvent|MIDIConnectionEvent|MediaKeyNeededEvent|MediaQueryListEvent|MediaStreamTrackEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDTMFToneChangeEvent|RTCDataChannelEvent|RTCIceCandidateEvent|RTCPeerConnectionIceEvent|RelatedEvent|SpeechRecognitionEvent|TrackEvent|TransitionEvent|WebGLContextEvent|WebKitAnimationEvent|WebKitTransitionEvent;ClipboardEvent|Event|InputEvent"
    },
    EventTarget: {
      "^": "Interceptor;",
      addEventListener$3: function(receiver, type, listener, useCapture) {
        if (listener != null)
          this._addEventListener$3(receiver, type, listener, useCapture);
      },
      removeEventListener$3: function(receiver, type, listener, useCapture) {
        if (listener != null)
          this._removeEventListener$3(receiver, type, listener, useCapture);
      },
      _addEventListener$3: function(receiver, type, listener, useCapture) {
        return receiver.addEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
      },
      _removeEventListener$3: function(receiver, type, listener, useCapture) {
        return receiver.removeEventListener(type, H.convertDartClosureToJS(listener, 1), useCapture);
      },
      "%": ";EventTarget"
    },
    FetchEvent: {
      "^": "Event;request=",
      "%": "FetchEvent"
    },
    FieldSetElement: {
      "^": "HtmlElement;name%,type=",
      "%": "HTMLFieldSetElement"
    },
    File0: {
      "^": "Blob;name=",
      "%": "File"
    },
    FormElement: {
      "^": "HtmlElement;length=,name%",
      "%": "HTMLFormElement"
    },
    Headers: {
      "^": "Interceptor;",
      forEach$2: function(receiver, callback, thisArg) {
        return receiver.forEach(H.convertDartClosureToJS(callback, 3), thisArg);
      },
      forEach$1: function($receiver, callback) {
        callback = H.convertDartClosureToJS(callback, 3);
        return $receiver.forEach(callback);
      },
      "%": "Headers"
    },
    HtmlCollection: {
      "^": "Interceptor_ListMixin_ImmutableListMixin;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$first: function(receiver) {
        if (receiver.length > 0)
          return receiver[0];
        throw H.wrapException(new P.StateError("No elements"));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"
    },
    Interceptor_ListMixin: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin: {
      "^": "Interceptor_ListMixin+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    IFrameElement: {
      "^": "HtmlElement;name%",
      "%": "HTMLIFrameElement"
    },
    ImageData: {
      "^": "Interceptor;data=",
      $isImageData: 1,
      "%": "ImageData"
    },
    ImageElement: {
      "^": "HtmlElement;complete=",
      complete$1: function($receiver, arg0) {
        return $receiver.complete.call$1(arg0);
      },
      complete$0: function($receiver) {
        return $receiver.complete.call$0();
      },
      "%": "HTMLImageElement"
    },
    InputElement: {
      "^": "HtmlElement;defaultValue%,list=,max%,min%,name%,type%,value%",
      list$1: function($receiver, arg0) {
        return $receiver.list.call$1(arg0);
      },
      $isElement: 1,
      $isInterceptor: 1,
      $isNode: 1,
      "%": "HTMLInputElement"
    },
    KeygenElement: {
      "^": "HtmlElement;name%,type=",
      "%": "HTMLKeygenElement"
    },
    LIElement: {
      "^": "HtmlElement;value%",
      "%": "HTMLLIElement"
    },
    LinkElement: {
      "^": "HtmlElement;type%",
      "%": "HTMLLinkElement"
    },
    MapElement: {
      "^": "HtmlElement;name%",
      "%": "HTMLMapElement"
    },
    MediaElement: {
      "^": "HtmlElement;duration=,error=,readyState=",
      pause$0: function(receiver) {
        return receiver.pause();
      },
      "%": "HTMLAudioElement|HTMLMediaElement|HTMLVideoElement"
    },
    MediaKeyEvent: {
      "^": "Event;message=",
      "%": "MediaKeyEvent"
    },
    MediaKeyMessageEvent: {
      "^": "Event;message=",
      "%": "MediaKeyMessageEvent"
    },
    MediaStream: {
      "^": "EventTarget;",
      clone$0: function(receiver) {
        return receiver.clone();
      },
      stop$0: function(receiver) {
        return receiver.stop();
      },
      "%": "MediaStream"
    },
    MediaStreamEvent: {
      "^": "Event;stream=",
      "%": "MediaStreamEvent"
    },
    MenuElement: {
      "^": "HtmlElement;type%",
      "%": "HTMLMenuElement"
    },
    MenuItemElement: {
      "^": "HtmlElement;defaultValue:default%,type%",
      "%": "HTMLMenuItemElement"
    },
    MessageEvent: {
      "^": "Event;",
      get$data: function(receiver) {
        return P.convertNativeToDart_AcceptStructuredClone(receiver.data, true);
      },
      "%": "MessageEvent"
    },
    MetaElement: {
      "^": "HtmlElement;name%",
      "%": "HTMLMetaElement"
    },
    MeterElement: {
      "^": "HtmlElement;max%,min%,value%",
      "%": "HTMLMeterElement"
    },
    MidiMessageEvent: {
      "^": "Event;data=",
      "%": "MIDIMessageEvent"
    },
    MidiOutput: {
      "^": "MidiPort;",
      send$2: function(receiver, data, timestamp) {
        return receiver.send(data, timestamp);
      },
      send$1: function($receiver, data) {
        return $receiver.send(data);
      },
      "%": "MIDIOutput"
    },
    MidiPort: {
      "^": "EventTarget;name=,type=,version=",
      get$onDisconnect: function(receiver) {
        var t1 = new W._EventStream(receiver, "disconnect", false);
        t1.$builtinTypeInfo = [null];
        return t1;
      },
      onDisconnect$0: function($receiver) {
        return this.get$onDisconnect($receiver).call$0();
      },
      "%": "MIDIInput;MIDIPort"
    },
    Navigator: {
      "^": "Interceptor;connection=",
      $isInterceptor: 1,
      "%": "Navigator"
    },
    NavigatorUserMediaError: {
      "^": "Interceptor;message=,name=",
      "%": "NavigatorUserMediaError"
    },
    NetworkInformation: {
      "^": "EventTarget;type=",
      "%": "NetworkInformation"
    },
    _ChildNodeListLazy: {
      "^": "ListBase;_this",
      get$first: function(_) {
        var result = this._this.firstChild;
        if (result == null)
          throw H.wrapException(new P.StateError("No elements"));
        return result;
      },
      get$last: function(_) {
        var result = this._this.lastChild;
        if (result == null)
          throw H.wrapException(new P.StateError("No elements"));
        return result;
      },
      add$1: function(_, value) {
        this._this.appendChild(value);
      },
      addAll$1: function(_, iterable) {
        var t1, t2, len, i;
        t1 = J.getInterceptor(iterable);
        if (!!t1.$is_ChildNodeListLazy) {
          t1 = iterable._this;
          t2 = this._this;
          if (t1 !== t2)
            for (len = t1.childNodes.length, i = 0; i < len; ++i)
              t2.appendChild(t1.firstChild);
          return;
        }
        for (t1 = t1.get$iterator(iterable), t2 = this._this; t1.moveNext$0();)
          t2.appendChild(t1.get$current());
      },
      removeAt$1: function(_, index) {
        var t1, t2, result;
        t1 = this._this;
        t2 = t1.childNodes;
        if (index >= t2.length)
          return H.ioore(t2, index);
        result = t2[index];
        t1.removeChild(result);
        return result;
      },
      remove$1: function(_, object) {
        var t1;
        if (!J.getInterceptor(object).$isNode)
          return false;
        t1 = this._this;
        if (t1 !== object.parentNode)
          return false;
        t1.removeChild(object);
        return true;
      },
      clear$0: function(_) {
        J._clearChildren$0$x(this._this);
      },
      $indexSet: function(_, index, value) {
        var t1, t2;
        t1 = this._this;
        t2 = t1.childNodes;
        if (index >>> 0 !== index || index >= t2.length)
          return H.ioore(t2, index);
        t1.replaceChild(value, t2[index]);
      },
      get$iterator: function(_) {
        return C.NodeList_methods.get$iterator(this._this.childNodes);
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        throw H.wrapException(new P.UnsupportedError("Cannot setRange on Node list"));
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      get$length: function(_) {
        return this._this.childNodes.length;
      },
      set$length: function(_, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot set length on immutable List."));
      },
      $index: function(_, index) {
        var t1 = this._this.childNodes;
        if (index >>> 0 !== index || index >= t1.length)
          return H.ioore(t1, index);
        return t1[index];
      },
      $asListBase: function() {
        return [W.Node];
      },
      $asObject_ListMixin: function() {
        return [W.Node];
      },
      $asList: function() {
        return [W.Node];
      },
      $asIterable: function() {
        return [W.Node];
      }
    },
    Node: {
      "^": "EventTarget;parent:parentElement=,parentNode=,text:textContent}",
      get$nodes: function(receiver) {
        return new W._ChildNodeListLazy(receiver);
      },
      set$nodes: function(receiver, value) {
        var copy, t1, _i;
        copy = P.List_List$from(value, true, null);
        this.set$text(receiver, "");
        for (t1 = copy.length, _i = 0; _i < copy.length; copy.length === t1 || (0, H.throwConcurrentModificationError)(copy), ++_i)
          receiver.appendChild(copy[_i]);
      },
      remove$0: function(receiver) {
        var t1 = receiver.parentNode;
        if (t1 != null)
          t1.removeChild(receiver);
      },
      replaceWith$1: function(receiver, otherNode) {
        var $parent, exception;
        try {
          $parent = receiver.parentNode;
          J._replaceChild$2$x($parent, otherNode, receiver);
        } catch (exception) {
          H.unwrapException(exception);
        }
        return receiver;
      },
      _clearChildren$0: function(receiver) {
        var t1;
        for (; t1 = receiver.firstChild, t1 != null;)
          receiver.removeChild(t1);
      },
      toString$0: function(receiver) {
        var value = receiver.nodeValue;
        return value == null ? this.super$Interceptor$toString$0(receiver) : value;
      },
      contains$1: function(receiver, other) {
        return receiver.contains(other);
      },
      _replaceChild$2: function(receiver, newChild, oldChild) {
        return receiver.replaceChild(newChild, oldChild);
      },
      $isNode: 1,
      $isObject: 1,
      "%": ";Node"
    },
    "+Node": 0,
    NodeList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin0;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$first: function(receiver) {
        if (receiver.length > 0)
          return receiver[0];
        throw H.wrapException(new P.StateError("No elements"));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "NodeList|RadioNodeList"
    },
    Interceptor_ListMixin0: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin0: {
      "^": "Interceptor_ListMixin0+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    OListElement: {
      "^": "HtmlElement;type%",
      "%": "HTMLOListElement"
    },
    ObjectElement: {
      "^": "HtmlElement;data%,name%,type%",
      "%": "HTMLObjectElement"
    },
    OptionElement: {
      "^": "HtmlElement;value%",
      $isOptionElement: 1,
      "%": "HTMLOptionElement"
    },
    OutputElement: {
      "^": "HtmlElement;defaultValue%,name%,type=,value%",
      "%": "HTMLOutputElement"
    },
    ParamElement: {
      "^": "HtmlElement;name%,value%",
      "%": "HTMLParamElement"
    },
    PluginPlaceholderElement: {
      "^": "DivElement;message=",
      "%": "PluginPlaceholderElement"
    },
    PositionError: {
      "^": "Interceptor;message=",
      "%": "PositionError"
    },
    ProgressElement: {
      "^": "HtmlElement;max%,value%",
      "%": "HTMLProgressElement"
    },
    ProgressEvent: {
      "^": "Event;loaded=",
      "%": "XMLHttpRequestProgressEvent;ProgressEvent"
    },
    PushEvent: {
      "^": "Event;data=",
      "%": "PushEvent"
    },
    ResourceProgressEvent: {
      "^": "ProgressEvent;url=",
      "%": "ResourceProgressEvent"
    },
    ScriptElement: {
      "^": "HtmlElement;nonce=,type%",
      "%": "HTMLScriptElement"
    },
    SecurityPolicyViolationEvent: {
      "^": "Event;statusCode=",
      "%": "SecurityPolicyViolationEvent"
    },
    SelectElement: {
      "^": "HtmlElement;length%,name%,type=,value%",
      get$options: function(receiver) {
        var t1 = new W._FrozenElementList(receiver.querySelectorAll("option"));
        t1 = t1.where$1(t1, new W.SelectElement_options_closure());
        t1 = new P.UnmodifiableListView(P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "Iterable", 0)));
        t1.$builtinTypeInfo = [null];
        return t1;
      },
      "%": "HTMLSelectElement"
    },
    SelectElement_options_closure: {
      "^": "Closure:8;",
      call$1: function(e) {
        return !!J.getInterceptor(e).$isOptionElement;
      }
    },
    SourceElement: {
      "^": "HtmlElement;type%",
      "%": "HTMLSourceElement"
    },
    SpeechRecognitionError: {
      "^": "Event;error=,message=",
      "%": "SpeechRecognitionError"
    },
    SpeechRecognitionResult: {
      "^": "Interceptor;length=",
      $isObject: 1,
      "%": "SpeechRecognitionResult"
    },
    SpeechSynthesisEvent: {
      "^": "Event;name=",
      "%": "SpeechSynthesisEvent"
    },
    StorageEvent: {
      "^": "Event;url=",
      "%": "StorageEvent"
    },
    StyleElement: {
      "^": "HtmlElement;type%",
      "%": "HTMLStyleElement"
    },
    TableElement: {
      "^": "HtmlElement;",
      get$rows: function(receiver) {
        var t1 = new W._WrappedList(receiver.rows);
        t1.$builtinTypeInfo = [W.TableRowElement];
        return t1;
      },
      "%": "HTMLTableElement"
    },
    TableRowElement: {
      "^": "HtmlElement;",
      $isHtmlElement: 1,
      $isElement: 1,
      $isNode: 1,
      $isObject: 1,
      "%": "HTMLTableRowElement"
    },
    TableSectionElement: {
      "^": "HtmlElement;",
      get$rows: function(receiver) {
        var t1 = new W._WrappedList(receiver.rows);
        t1.$builtinTypeInfo = [W.TableRowElement];
        return t1;
      },
      "%": "HTMLTableSectionElement"
    },
    TextAreaElement: {
      "^": "HtmlElement;defaultValue%,name%,rows%,type=,value%",
      "%": "HTMLTextAreaElement"
    },
    TextEvent: {
      "^": "UIEvent;data=",
      "%": "TextEvent"
    },
    TrackElement: {
      "^": "HtmlElement;defaultValue:default%,readyState=",
      "%": "HTMLTrackElement"
    },
    UIEvent: {
      "^": "Event;detail=",
      "%": "DragEvent|FocusEvent|KeyboardEvent|MSPointerEvent|MouseEvent|PointerEvent|SVGZoomEvent|TouchEvent|WheelEvent;UIEvent"
    },
    Window: {
      "^": "EventTarget;name%,status%",
      get$parent: function(receiver) {
        return W._convertNativeToDart_Window(receiver.parent);
      },
      close$0: function(receiver) {
        return receiver.close();
      },
      print$0: [function(receiver) {
        return receiver.print();
      }, "call$0", "get$print", 0, 0, 7],
      stop$0: function(receiver) {
        return receiver.stop();
      },
      get$onError: function(receiver) {
        var t1 = new W._EventStream(receiver, "error", false);
        t1.$builtinTypeInfo = [null];
        return t1;
      },
      onError$1: function($receiver, arg0) {
        return this.get$onError($receiver).call$1(arg0);
      },
      $isWindow: 1,
      $isInterceptor: 1,
      "%": "DOMWindow|Window"
    },
    _Attr: {
      "^": "Node;name=,value%",
      set$text: function(receiver, value) {
        receiver.textContent = value;
      },
      "%": "Attr"
    },
    _ClientRect: {
      "^": "Interceptor;bottom=,height=,left=,right=,top=,width=",
      toString$0: function(receiver) {
        return "Rectangle (" + H.S(receiver.left) + ", " + H.S(receiver.top) + ") " + H.S(receiver.width) + " x " + H.S(receiver.height);
      },
      $eq: function(receiver, other) {
        var t1, t2, t3;
        if (other == null)
          return false;
        t1 = J.getInterceptor(other);
        if (!t1.$isRectangle)
          return false;
        t2 = receiver.left;
        t3 = t1.get$left(other);
        if (t2 == null ? t3 == null : t2 === t3) {
          t2 = receiver.top;
          t3 = t1.get$top(other);
          if (t2 == null ? t3 == null : t2 === t3) {
            t2 = receiver.width;
            t3 = t1.get$width(other);
            if (t2 == null ? t3 == null : t2 === t3) {
              t2 = receiver.height;
              t1 = t1.get$height(other);
              t1 = t2 == null ? t1 == null : t2 === t1;
            } else
              t1 = false;
          } else
            t1 = false;
        } else
          t1 = false;
        return t1;
      },
      get$hashCode: function(receiver) {
        var t1, t2, t3, t4;
        t1 = J.get$hashCode$(receiver.left);
        t2 = J.get$hashCode$(receiver.top);
        t3 = J.get$hashCode$(receiver.width);
        t4 = J.get$hashCode$(receiver.height);
        return W._JenkinsSmiHash_finish(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(W._JenkinsSmiHash_combine(0, t1), t2), t3), t4));
      },
      $isRectangle: 1,
      $asRectangle: functionThatReturnsNull,
      "%": "ClientRect"
    },
    _DocumentType: {
      "^": "Node;",
      $isInterceptor: 1,
      "%": "DocumentType"
    },
    _DomRect: {
      "^": "DomRectReadOnly;",
      get$height: function(receiver) {
        return receiver.height;
      },
      get$width: function(receiver) {
        return receiver.width;
      },
      get$x: function(receiver) {
        return receiver.x;
      },
      get$y: function(receiver) {
        return receiver.y;
      },
      "%": "DOMRect"
    },
    _HTMLFrameSetElement: {
      "^": "HtmlElement;",
      $isInterceptor: 1,
      "%": "HTMLFrameSetElement"
    },
    _NamedNodeMap: {
      "^": "Interceptor_ListMixin_ImmutableListMixin1;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$first: function(receiver) {
        if (receiver.length > 0)
          return receiver[0];
        throw H.wrapException(new P.StateError("No elements"));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "MozNamedAttrMap|NamedNodeMap"
    },
    Interceptor_ListMixin1: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin1: {
      "^": "Interceptor_ListMixin1+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.Node];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.Node];
      }
    },
    _Request: {
      "^": "Body;url=",
      clone$0: function(receiver) {
        return receiver.clone();
      },
      "%": "Request"
    },
    _SpeechRecognitionResultList: {
      "^": "Interceptor_ListMixin_ImmutableListMixin2;",
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot assign element of immutable List."));
      },
      set$length: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot resize immutable List."));
      },
      get$first: function(receiver) {
        if (receiver.length > 0)
          return receiver[0];
        throw H.wrapException(new P.StateError("No elements"));
      },
      get$last: function(receiver) {
        var len = receiver.length;
        if (len > 0)
          return receiver[len - 1];
        throw H.wrapException(new P.StateError("No elements"));
      },
      elementAt$1: function(receiver, index) {
        if (index >>> 0 !== index || index >= receiver.length)
          return H.ioore(receiver, index);
        return receiver[index];
      },
      $isList: 1,
      $asList: function() {
        return [W.SpeechRecognitionResult];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechRecognitionResult];
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1,
      "%": "SpeechRecognitionResultList"
    },
    Interceptor_ListMixin2: {
      "^": "Interceptor+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.SpeechRecognitionResult];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechRecognitionResult];
      }
    },
    Interceptor_ListMixin_ImmutableListMixin2: {
      "^": "Interceptor_ListMixin2+ImmutableListMixin;",
      $isList: 1,
      $asList: function() {
        return [W.SpeechRecognitionResult];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [W.SpeechRecognitionResult];
      }
    },
    _AttributeMap: {
      "^": "Object;",
      addAll$1: function(_, other) {
        J.forEach$1$ax(other, new W._AttributeMap_addAll_closure(this));
      },
      clear$0: function(_) {
        var t1, t2, _i;
        for (t1 = this.get$keys(), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          this.remove$1(0, t1[_i]);
      },
      forEach$1: function(_, f) {
        var t1, t2, _i, key;
        for (t1 = this.get$keys(), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          f.call$2(key, this.$index(0, key));
        }
      },
      get$keys: function() {
        var attributes, keys, len, i;
        attributes = this._html$_element.attributes;
        keys = [];
        keys.$builtinTypeInfo = [P.String];
        for (len = attributes.length, i = 0; i < len; ++i) {
          if (i >= attributes.length)
            return H.ioore(attributes, i);
          if (this._matches$1(attributes[i])) {
            if (i >= attributes.length)
              return H.ioore(attributes, i);
            keys.push(J.get$name$x(attributes[i]));
          }
        }
        return keys;
      },
      get$isEmpty: function(_) {
        return this.get$length(this) === 0;
      },
      get$isNotEmpty: function(_) {
        return this.get$length(this) !== 0;
      },
      $isMap: 1,
      $asMap: function() {
        return [P.String, P.String];
      }
    },
    _AttributeMap_addAll_closure: {
      "^": "Closure:15;_html$_captured_this_0",
      call$2: [function(k, v) {
        this._html$_captured_this_0.$indexSet(0, k, v);
      }, null, null, 4, 0, null, 30, [], 63, [], "call"]
    },
    _ElementAttributeMap: {
      "^": "_AttributeMap;_html$_element",
      containsKey$1: function(key) {
        return this._html$_element.hasAttribute(key);
      },
      $index: function(_, key) {
        return this._html$_element.getAttribute(key);
      },
      $indexSet: function(_, key, value) {
        this._html$_element.setAttribute(key, value);
      },
      remove$1: function(_, key) {
        var t1, value;
        t1 = this._html$_element;
        value = t1.getAttribute(key);
        t1.removeAttribute(key);
        return value;
      },
      get$length: function(_) {
        return this.get$keys().length;
      },
      _matches$1: function(node) {
        return node.namespaceURI == null;
      }
    },
    _EventStream: {
      "^": "Stream;_html$_target,_eventType,_useCapture",
      get$isBroadcast: function() {
        return true;
      },
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1 = new W._EventStreamSubscription(0, this._html$_target, this._eventType, W._wrapZone(onData), this._useCapture);
        t1.$builtinTypeInfo = this.$builtinTypeInfo;
        t1._tryResume$0();
        return t1;
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$2$onDone: function(onData, onDone) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
      }
    },
    _ElementEventStreamImpl: {
      "^": "_EventStream;_html$_target,_eventType,_useCapture"
    },
    _ElementListEventStreamImpl: {
      "^": "Stream;_targetList,_useCapture,_eventType",
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var pool, t1, t2, t3, t4;
        pool = new W._StreamPool(null, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Stream, P.StreamSubscription));
        pool.$builtinTypeInfo = [null];
        pool._html$_controller = P.StreamController_StreamController$broadcast(pool.get$close(pool), null, true, null);
        for (t1 = this._targetList, t1 = t1.get$iterator(t1), t2 = this._eventType, t3 = this._useCapture; t1.moveNext$0();) {
          t4 = new W._EventStream(t1.__internal$_current, t2, t3);
          t4.$builtinTypeInfo = [null];
          pool.add$1(0, t4);
        }
        t1 = pool._html$_controller;
        t1.toString;
        t2 = new P._BroadcastStream(t1);
        t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t1, 0)];
        return t2.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$2$onDone: function(onData, onDone) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
      },
      get$isBroadcast: function() {
        return true;
      }
    },
    _EventStreamSubscription: {
      "^": "StreamSubscription;_pauseCount,_html$_target,_eventType,_html$_onData,_useCapture",
      cancel$0: function() {
        if (this._html$_target == null)
          return;
        this._unlisten$0();
        this._html$_target = null;
        this._html$_onData = null;
        return;
      },
      onData$1: function(handleData) {
        if (this._html$_target == null)
          throw H.wrapException(new P.StateError("Subscription has been canceled."));
        this._unlisten$0();
        this._html$_onData = W._wrapZone(handleData);
        this._tryResume$0();
      },
      onError$1: function(_, handleError) {
      },
      onDone$1: function(handleDone) {
      },
      pause$1: function(_, resumeSignal) {
        if (this._html$_target == null)
          return;
        ++this._pauseCount;
        this._unlisten$0();
      },
      pause$0: function($receiver) {
        return this.pause$1($receiver, null);
      },
      get$isPaused: function() {
        return this._pauseCount > 0;
      },
      resume$0: function() {
        if (this._html$_target == null || this._pauseCount <= 0)
          return;
        --this._pauseCount;
        this._tryResume$0();
      },
      _tryResume$0: function() {
        var t1 = this._html$_onData;
        if (t1 != null && this._pauseCount <= 0)
          J.addEventListener$3$x(this._html$_target, this._eventType, t1, this._useCapture);
      },
      _unlisten$0: function() {
        var t1 = this._html$_onData;
        if (t1 != null)
          J.removeEventListener$3$x(this._html$_target, this._eventType, t1, this._useCapture);
      },
      asFuture$1: function(futureValue) {
        var t1 = new P._Future(0, $.Zone__current, null);
        t1.$builtinTypeInfo = [null];
        new P._AsyncCompleter(t1).$builtinTypeInfo = [null];
        return t1;
      }
    },
    _StreamPool: {
      "^": "Object;_html$_controller,_subscriptions",
      get$stream: function(_) {
        var t1, t2;
        t1 = this._html$_controller;
        t1.toString;
        t2 = new P._BroadcastStream(t1);
        t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t1, 0)];
        return t2;
      },
      add$1: function(_, stream) {
        var t1, t2;
        t1 = this._subscriptions;
        if (t1.containsKey$1(stream))
          return;
        t2 = this._html$_controller;
        t1.$indexSet(0, stream, stream.listen$3$onDone$onError(t2.get$add(t2), new W._StreamPool_add_closure(this, stream), this._html$_controller.get$addError()));
      },
      remove$1: function(_, stream) {
        var subscription = this._subscriptions.remove$1(0, stream);
        if (subscription != null)
          subscription.cancel$0();
      },
      close$0: [function(_) {
        var t1, t2, t3;
        t1 = this._subscriptions;
        t2 = t1.get$values(t1);
        t3 = new H.MappedIterator(null, J.get$iterator$ax(t2._iterable), t2._f);
        t3.$builtinTypeInfo = [H.getTypeArgumentByIndex(t2, 0), H.getTypeArgumentByIndex(t2, 1)];
        for (; t3.moveNext$0();)
          t3.__internal$_current.cancel$0();
        t1.clear$0(0);
        this._html$_controller.close$0(0);
      }, "call$0", "get$close", 0, 0, 7]
    },
    _StreamPool_add_closure: {
      "^": "Closure:5;_html$_captured_this_0,_captured_stream_1",
      call$0: [function() {
        return this._html$_captured_this_0.remove$1(0, this._captured_stream_1);
      }, null, null, 0, 0, null, "call"]
    },
    ImmutableListMixin: {
      "^": "Object;",
      get$iterator: function(receiver) {
        var t1 = new W.FixedSizeListIterator(receiver, this.get$length(receiver), -1, null);
        t1.$builtinTypeInfo = [H.getRuntimeTypeArgument(receiver, "ImmutableListMixin", 0)];
        return t1;
      },
      add$1: function(receiver, value) {
        throw H.wrapException(new P.UnsupportedError("Cannot add to immutable List."));
      },
      addAll$1: function(receiver, iterable) {
        throw H.wrapException(new P.UnsupportedError("Cannot add to immutable List."));
      },
      removeAt$1: function(receiver, pos) {
        throw H.wrapException(new P.UnsupportedError("Cannot remove from immutable List."));
      },
      remove$1: function(receiver, object) {
        throw H.wrapException(new P.UnsupportedError("Cannot remove from immutable List."));
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        throw H.wrapException(new P.UnsupportedError("Cannot setRange on immutable List."));
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      removeRange$2: function(receiver, start, end) {
        throw H.wrapException(new P.UnsupportedError("Cannot removeRange on immutable List."));
      },
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    _WrappedList: {
      "^": "ListBase;_html$_list",
      get$iterator: function(_) {
        var t1 = new W._WrappedIterator(J.get$iterator$ax(this._html$_list));
        t1.$builtinTypeInfo = [null];
        return t1;
      },
      get$length: function(_) {
        return this._html$_list.length;
      },
      add$1: function(_, element) {
        J.add$1$ax(this._html$_list, element);
      },
      remove$1: function(_, element) {
        return J.remove$1$ax(this._html$_list, element);
      },
      clear$0: function(_) {
        J.clear$0$ax(this._html$_list);
      },
      $index: function(_, index) {
        var t1 = this._html$_list;
        if (index >>> 0 !== index || index >= t1.length)
          return H.ioore(t1, index);
        return t1[index];
      },
      $indexSet: function(_, index, value) {
        var t1 = this._html$_list;
        if (index >>> 0 !== index || index >= t1.length)
          return H.ioore(t1, index);
        t1[index] = value;
      },
      set$length: function(_, newLength) {
        J.set$length$asx(this._html$_list, newLength);
      },
      indexOf$2: function(_, element, start) {
        return J.indexOf$2$asx(this._html$_list, element, start);
      },
      indexOf$1: function($receiver, element) {
        return this.indexOf$2($receiver, element, 0);
      },
      lastIndexOf$2: function(_, element, start) {
        return J.lastIndexOf$2$asx(this._html$_list, element, start);
      },
      lastIndexOf$1: function($receiver, element) {
        return this.lastIndexOf$2($receiver, element, null);
      },
      removeAt$1: function(_, index) {
        return J.removeAt$1$ax(this._html$_list, index);
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        J.setRange$4$ax(this._html$_list, start, end, iterable, skipCount);
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      removeRange$2: function(_, start, end) {
        J.removeRange$2$ax(this._html$_list, start, end);
      }
    },
    _WrappedIterator: {
      "^": "Object;_html$_iterator",
      moveNext$0: function() {
        return this._html$_iterator.moveNext$0();
      },
      get$current: function() {
        return this._html$_iterator._current;
      }
    },
    FixedSizeListIterator: {
      "^": "Object;_array,_length,_position,_current",
      moveNext$0: function() {
        var nextPosition, t1;
        nextPosition = this._position + 1;
        t1 = this._length;
        if (nextPosition < t1) {
          this._current = J.$index$asx(this._array, nextPosition);
          this._position = nextPosition;
          return true;
        }
        this._current = null;
        this._position = t1;
        return false;
      },
      get$current: function() {
        return this._current;
      }
    },
    _DOMWindowCrossFrame: {
      "^": "Object;_window",
      get$parent: function(_) {
        return W._DOMWindowCrossFrame__createSafe(this._window.parent);
      },
      close$0: function(_) {
        return this._window.close();
      },
      addEventListener$3: function(_, type, listener, useCapture) {
        return H.throwExpression(new P.UnsupportedError("You can only attach EventListeners to your own window."));
      },
      removeEventListener$3: function(_, type, listener, useCapture) {
        return H.throwExpression(new P.UnsupportedError("You can only attach EventListeners to your own window."));
      },
      $isInterceptor: 1,
      static: {_DOMWindowCrossFrame__createSafe: function(w) {
          if (w === window)
            return w;
          else
            return new W._DOMWindowCrossFrame(w);
        }}
    }
  }], ["dart.dom.indexed_db", "dart:indexed_db",, P, {
    "^": "",
    KeyRange: {
      "^": "Interceptor;",
      $isKeyRange: 1,
      "%": "IDBKeyRange"
    }
  }], ["dart.dom.svg", "dart:svg",, P, {
    "^": "",
    AElement: {
      "^": "GraphicsElement;",
      $isInterceptor: 1,
      "%": "SVGAElement"
    },
    AltGlyphElement: {
      "^": "TextPositioningElement;",
      $isInterceptor: 1,
      "%": "SVGAltGlyphElement"
    },
    AnimationElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      "%": "SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGAnimationElement|SVGSetElement"
    },
    FEBlendElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEBlendElement"
    },
    FEColorMatrixElement: {
      "^": "SvgElement;type=,result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEColorMatrixElement"
    },
    FEComponentTransferElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEComponentTransferElement"
    },
    FECompositeElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFECompositeElement"
    },
    FEConvolveMatrixElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEConvolveMatrixElement"
    },
    FEDiffuseLightingElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEDiffuseLightingElement"
    },
    FEDisplacementMapElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEDisplacementMapElement"
    },
    FEFloodElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEFloodElement"
    },
    FEGaussianBlurElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEGaussianBlurElement"
    },
    FEImageElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEImageElement"
    },
    FEMergeElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEMergeElement"
    },
    FEMorphologyElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEMorphologyElement"
    },
    FEOffsetElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFEOffsetElement"
    },
    FEPointLightElement: {
      "^": "SvgElement;x=,y=",
      "%": "SVGFEPointLightElement"
    },
    FESpecularLightingElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFESpecularLightingElement"
    },
    FESpotLightElement: {
      "^": "SvgElement;x=,y=",
      "%": "SVGFESpotLightElement"
    },
    FETileElement: {
      "^": "SvgElement;result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFETileElement"
    },
    FETurbulenceElement: {
      "^": "SvgElement;type=,result=,x=,y=",
      $isInterceptor: 1,
      "%": "SVGFETurbulenceElement"
    },
    FilterElement: {
      "^": "SvgElement;x=,y=",
      $isInterceptor: 1,
      "%": "SVGFilterElement"
    },
    ForeignObjectElement: {
      "^": "GraphicsElement;x=,y=",
      "%": "SVGForeignObjectElement"
    },
    GeometryElement: {
      "^": "GraphicsElement;",
      "%": "SVGCircleElement|SVGEllipseElement|SVGLineElement|SVGPathElement|SVGPolygonElement|SVGPolylineElement;SVGGeometryElement"
    },
    GraphicsElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      "%": "SVGClipPathElement|SVGDefsElement|SVGGElement|SVGSwitchElement;SVGGraphicsElement"
    },
    ImageElement0: {
      "^": "GraphicsElement;x=,y=",
      $isInterceptor: 1,
      "%": "SVGImageElement"
    },
    MarkerElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      "%": "SVGMarkerElement"
    },
    MaskElement: {
      "^": "SvgElement;x=,y=",
      $isInterceptor: 1,
      "%": "SVGMaskElement"
    },
    PatternElement: {
      "^": "SvgElement;x=,y=",
      $isInterceptor: 1,
      "%": "SVGPatternElement"
    },
    RectElement: {
      "^": "GeometryElement;x=,y=",
      "%": "SVGRectElement"
    },
    ScriptElement0: {
      "^": "SvgElement;type%",
      $isInterceptor: 1,
      "%": "SVGScriptElement"
    },
    StyleElement0: {
      "^": "SvgElement;type%",
      "%": "SVGStyleElement"
    },
    SvgElement: {
      "^": "Element;",
      get$children: function(receiver) {
        var t1 = new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
        t1.$builtinTypeInfo = [W.Element];
        return t1;
      },
      set$children: function(receiver, value) {
        var children = new P.FilteredElementList(receiver, new W._ChildNodeListLazy(receiver));
        children.$builtinTypeInfo = [W.Element];
        this._clearChildren$0(receiver);
        children.addAll$1(0, value);
      },
      get$onError: function(receiver) {
        var t1 = new W._ElementEventStreamImpl(receiver, "error", false);
        t1.$builtinTypeInfo = [null];
        return t1;
      },
      onError$1: function($receiver, arg0) {
        return this.get$onError($receiver).call$1(arg0);
      },
      $isInterceptor: 1,
      "%": "SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGComponentTransferFunctionElement|SVGDescElement|SVGDiscardElement|SVGFEDistantLightElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEMergeNodeElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGGlyphElement|SVGHKernElement|SVGMetadataElement|SVGMissingGlyphElement|SVGStopElement|SVGTitleElement|SVGVKernElement;SVGElement"
    },
    SvgSvgElement: {
      "^": "GraphicsElement;x=,y=",
      $isInterceptor: 1,
      "%": "SVGSVGElement"
    },
    SymbolElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      "%": "SVGSymbolElement"
    },
    TextContentElement: {
      "^": "GraphicsElement;",
      "%": ";SVGTextContentElement"
    },
    TextPathElement: {
      "^": "TextContentElement;",
      $isInterceptor: 1,
      "%": "SVGTextPathElement"
    },
    TextPositioningElement: {
      "^": "TextContentElement;x=,y=",
      "%": "SVGTSpanElement|SVGTextElement;SVGTextPositioningElement"
    },
    UseElement: {
      "^": "GraphicsElement;x=,y=",
      $isInterceptor: 1,
      "%": "SVGUseElement"
    },
    ViewElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      "%": "SVGViewElement"
    },
    _GradientElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      "%": "SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement"
    },
    _SVGCursorElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      "%": "SVGCursorElement"
    },
    _SVGFEDropShadowElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      "%": "SVGFEDropShadowElement"
    },
    _SVGGlyphRefElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      "%": "SVGGlyphRefElement"
    },
    _SVGMPathElement: {
      "^": "SvgElement;",
      $isInterceptor: 1,
      "%": "SVGMPathElement"
    }
  }], ["dart.dom.web_audio", "dart:web_audio",, P, {
    "^": ""
  }], ["dart.dom.web_gl", "dart:web_gl",, P, {
    "^": ""
  }], ["dart.dom.web_sql", "dart:web_sql",, P, {
    "^": "",
    SqlError: {
      "^": "Interceptor;message=",
      "%": "SQLError"
    }
  }], ["dart.isolate", "dart:isolate",, P, {
    "^": "",
    Capability: {
      "^": "Object;"
    }
  }], ["dart.js", "dart:js",, P, {
    "^": "",
    _callDartFunction: [function(callback, captureThis, $self, $arguments) {
      var arguments0, dartArgs;
      if (captureThis === true) {
        arguments0 = [$self];
        C.JSArray_methods.addAll$1(arguments0, $arguments);
        $arguments = arguments0;
      }
      dartArgs = P.List_List$from(J.map$1$ax($arguments, P._convertToDart$closure()), true, null);
      return P._convertToJS(H.Primitives_applyFunctionWithPositionalArguments(callback, dartArgs));
    }, null, null, 8, 0, null, 47, [], 72, [], 43, [], 73, []],
    _defineProperty: function(o, $name, value) {
      var exception;
      if (Object.isExtensible(o) && !Object.prototype.hasOwnProperty.call(o, $name))
        try {
          Object.defineProperty(o, $name, {value: value});
          return true;
        } catch (exception) {
          H.unwrapException(exception);
        }
      return false;
    },
    _getOwnProperty: function(o, $name) {
      if (Object.prototype.hasOwnProperty.call(o, $name))
        return o[$name];
      return;
    },
    _convertToJS: [function(o) {
      var t1;
      if (o == null || typeof o === "string" || typeof o === "number" || typeof o === "boolean")
        return o;
      t1 = J.getInterceptor(o);
      if (!!t1.$isJsObject)
        return o._js$_jsObject;
      if (!!t1.$isBlob || !!t1.$isEvent || !!t1.$isKeyRange || !!t1.$isImageData || !!t1.$isNode || !!t1.$isTypedData || !!t1.$isWindow)
        return o;
      if (!!t1.$isDateTime)
        return H.Primitives_lazyAsJsDate(o);
      if (!!t1.$isFunction)
        return P._getJsProxy(o, "$dart_jsFunction", new P._convertToJS_closure());
      return P._getJsProxy(o, "_$dart_jsObject", new P._convertToJS_closure0($.get$_dartProxyCtor()));
    }, "call$1", "_convertToJS$closure", 2, 0, 8, 74, []],
    _getJsProxy: function(o, propertyName, createProxy) {
      var jsProxy = P._getOwnProperty(o, propertyName);
      if (jsProxy == null) {
        jsProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, jsProxy);
      }
      return jsProxy;
    },
    _convertToDart: [function(o) {
      var t1;
      if (o == null || typeof o == "string" || typeof o == "number" || typeof o == "boolean")
        return o;
      else {
        if (o instanceof Object) {
          t1 = J.getInterceptor(o);
          t1 = !!t1.$isBlob || !!t1.$isEvent || !!t1.$isKeyRange || !!t1.$isImageData || !!t1.$isNode || !!t1.$isTypedData || !!t1.$isWindow;
        } else
          t1 = false;
        if (t1)
          return o;
        else if (o instanceof Date)
          return P.DateTime$fromMillisecondsSinceEpoch(o.getTime(), false);
        else if (o.constructor === $.get$_dartProxyCtor())
          return o.o;
        else
          return P._wrapToDart(o);
      }
    }, "call$1", "_convertToDart$closure", 2, 0, 209, 74, []],
    _wrapToDart: function(o) {
      if (typeof o == "function")
        return P._getDartProxy(o, $.get$_DART_CLOSURE_PROPERTY_NAME(), new P._wrapToDart_closure());
      if (o instanceof Array)
        return P._getDartProxy(o, $.get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure0());
      return P._getDartProxy(o, $.get$_DART_OBJECT_PROPERTY_NAME(), new P._wrapToDart_closure1());
    },
    _getDartProxy: function(o, propertyName, createProxy) {
      var dartProxy = P._getOwnProperty(o, propertyName);
      if (dartProxy == null || !(o instanceof Object)) {
        dartProxy = createProxy.call$1(o);
        P._defineProperty(o, propertyName, dartProxy);
      }
      return dartProxy;
    },
    JsObject: {
      "^": "Object;_js$_jsObject",
      $index: ["super$JsObject$$index", function(_, property) {
        if (typeof property !== "string" && typeof property !== "number")
          throw H.wrapException(P.ArgumentError$("property is not a String or num"));
        return P._convertToDart(this._js$_jsObject[property]);
      }],
      $indexSet: ["super$JsObject$$indexSet", function(_, property, value) {
        if (typeof property !== "string" && typeof property !== "number")
          throw H.wrapException(P.ArgumentError$("property is not a String or num"));
        this._js$_jsObject[property] = P._convertToJS(value);
      }],
      get$hashCode: function(_) {
        return 0;
      },
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof P.JsObject && this._js$_jsObject === other._js$_jsObject;
      },
      toString$0: function(_) {
        var t1, exception;
        try {
          t1 = String(this._js$_jsObject);
          return t1;
        } catch (exception) {
          H.unwrapException(exception);
          return this.super$Object$toString$0(this);
        }
      },
      callMethod$2: function(method, args) {
        var t1, t2;
        t1 = this._js$_jsObject;
        t2 = args == null ? null : P.List_List$from(J.map$1$ax(args, P._convertToJS$closure()), true, null);
        return P._convertToDart(t1[method].apply(t1, t2));
      },
      callMethod$1: function(method) {
        return this.callMethod$2(method, null);
      },
      static: {JsObject_JsObject: function($constructor, $arguments) {
          var constr, args, t1, factoryFunction;
          constr = P._convertToJS($constructor);
          if ($arguments instanceof Array)
            switch ($arguments.length) {
              case 0:
                return P._wrapToDart(new constr());
              case 1:
                return P._wrapToDart(new constr(P._convertToJS($arguments[0])));
              case 2:
                return P._wrapToDart(new constr(P._convertToJS($arguments[0]), P._convertToJS($arguments[1])));
              case 3:
                return P._wrapToDart(new constr(P._convertToJS($arguments[0]), P._convertToJS($arguments[1]), P._convertToJS($arguments[2])));
              case 4:
                return P._wrapToDart(new constr(P._convertToJS($arguments[0]), P._convertToJS($arguments[1]), P._convertToJS($arguments[2]), P._convertToJS($arguments[3])));
            }
          args = [null];
          t1 = new H.MappedListIterable($arguments, P._convertToJS$closure());
          t1.$builtinTypeInfo = [null, null];
          C.JSArray_methods.addAll$1(args, t1);
          factoryFunction = constr.bind.apply(constr, args);
          String(factoryFunction);
          return P._wrapToDart(new factoryFunction());
        }, JsObject_JsObject$jsify: function(object) {
          return P._wrapToDart(P.JsObject__convertDataTree(object));
        }, JsObject__convertDataTree: function(data) {
          var _convertedObjects = new P._IdentityHashMap(0, null, null, null, null);
          _convertedObjects.$builtinTypeInfo = [null, null];
          return new P.JsObject__convertDataTree__convert(_convertedObjects).call$1(data);
        }}
    },
    JsObject__convertDataTree__convert: {
      "^": "Closure:8;_captured__convertedObjects_0",
      call$1: [function(o) {
        var t1, t2, convertedMap, key, convertedList;
        t1 = this._captured__convertedObjects_0;
        if (t1.containsKey$1(o))
          return t1.$index(0, o);
        t2 = J.getInterceptor(o);
        if (!!t2.$isMap) {
          convertedMap = {};
          t1.$indexSet(0, o, convertedMap);
          for (t1 = J.get$iterator$ax(o.get$keys()); t1.moveNext$0();) {
            key = t1.get$current();
            convertedMap[key] = this.call$1(t2.$index(o, key));
          }
          return convertedMap;
        } else if (!!t2.$isIterable) {
          convertedList = [];
          t1.$indexSet(0, o, convertedList);
          C.JSArray_methods.addAll$1(convertedList, t2.map$1(o, this));
          return convertedList;
        } else
          return P._convertToJS(o);
      }, null, null, 2, 0, null, 74, [], "call"]
    },
    JsFunction: {
      "^": "JsObject;_js$_jsObject"
    },
    JsArray: {
      "^": "JsObject_ListMixin;_js$_jsObject",
      _js$_checkIndex$1: function(_, index) {
        var t1;
        if (typeof index === "number" && Math.floor(index) === index)
          t1 = index < 0 || index >= this.get$length(this);
        else
          t1 = false;
        if (t1)
          throw H.wrapException(P.RangeError$range(index, 0, this.get$length(this), null, null));
      },
      $index: function(_, index) {
        var t1;
        if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index)) {
          if (typeof index === "number" && Math.floor(index) === index)
            t1 = index < 0 || index >= this.get$length(this);
          else
            t1 = false;
          if (t1)
            H.throwExpression(P.RangeError$range(index, 0, this.get$length(this), null, null));
        }
        return this.super$JsObject$$index(this, index);
      },
      $indexSet: function(_, index, value) {
        var t1;
        if (typeof index === "number" && index === C.JSNumber_methods.toInt$0(index)) {
          if (typeof index === "number" && Math.floor(index) === index)
            t1 = index < 0 || index >= this.get$length(this);
          else
            t1 = false;
          if (t1)
            H.throwExpression(P.RangeError$range(index, 0, this.get$length(this), null, null));
        }
        this.super$JsObject$$indexSet(this, index, value);
      },
      get$length: function(_) {
        var len = this._js$_jsObject.length;
        if (typeof len === "number" && len >>> 0 === len)
          return len;
        throw H.wrapException(new P.StateError("Bad JsArray length"));
      },
      set$length: function(_, $length) {
        this.super$JsObject$$indexSet(this, "length", $length);
      },
      add$1: function(_, value) {
        this.callMethod$2("push", [value]);
      },
      addAll$1: function(_, iterable) {
        this.callMethod$2("push", iterable instanceof Array ? iterable : P.List_List$from(iterable, true, null));
      },
      removeAt$1: function(_, index) {
        this._js$_checkIndex$1(0, index);
        return J.$index$asx(this.callMethod$2("splice", [index, 1]), 0);
      },
      removeRange$2: function(_, start, end) {
        P.JsArray__checkRange(start, end, this.get$length(this));
        this.callMethod$2("splice", [start, J.$sub$in(end, start)]);
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        var $length, args, t1;
        P.JsArray__checkRange(start, end, this.get$length(this));
        $length = J.$sub$in(end, start);
        if (J.$eq($length, 0))
          return;
        if (J.$lt$in(skipCount, 0))
          throw H.wrapException(P.ArgumentError$(skipCount));
        args = [start, $length];
        t1 = new H.SubListIterable(iterable, skipCount, null);
        t1.$builtinTypeInfo = [H.getRuntimeTypeArgument(iterable, "ListMixin", 0)];
        if (J.$lt$in(skipCount, 0))
          H.throwExpression(P.RangeError$range(skipCount, 0, null, "start", null));
        C.JSArray_methods.addAll$1(args, t1.take$1(0, $length));
        this.callMethod$2("splice", args);
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      static: {JsArray__checkRange: function(start, end, $length) {
          var t1 = J.getInterceptor$in(start);
          if (t1.$lt(start, 0) || t1.$gt(start, $length))
            throw H.wrapException(P.RangeError$range(start, 0, $length, null, null));
          t1 = J.getInterceptor$in(end);
          if (t1.$lt(end, start) || t1.$gt(end, $length))
            throw H.wrapException(P.RangeError$range(end, start, $length, null, null));
        }}
    },
    JsObject_ListMixin: {
      "^": "JsObject+ListMixin;",
      $isList: 1,
      $asList: null,
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: null
    },
    _convertToJS_closure: {
      "^": "Closure:8;",
      call$1: function(o) {
        var jsFunction = function(_call, f, captureThis) {
          return function() {
            return _call(f, captureThis, this, Array.prototype.slice.apply(arguments));
          };
        }(P._callDartFunction, o, false);
        P._defineProperty(jsFunction, $.get$_DART_CLOSURE_PROPERTY_NAME(), o);
        return jsFunction;
      }
    },
    _convertToJS_closure0: {
      "^": "Closure:8;_captured_ctor_0",
      call$1: function(o) {
        return new this._captured_ctor_0(o);
      }
    },
    _wrapToDart_closure: {
      "^": "Closure:8;",
      call$1: function(o) {
        return new P.JsFunction(o);
      }
    },
    _wrapToDart_closure0: {
      "^": "Closure:8;",
      call$1: function(o) {
        var t1 = new P.JsArray(o);
        t1.$builtinTypeInfo = [null];
        return t1;
      }
    },
    _wrapToDart_closure1: {
      "^": "Closure:8;",
      call$1: function(o) {
        return new P.JsObject(o);
      }
    }
  }], ["dart.math", "dart:math",, P, {
    "^": "",
    _JenkinsSmiHash_combine0: function(hash, value) {
      hash = 536870911 & hash + value;
      hash = 536870911 & hash + ((524287 & hash) << 10 >>> 0);
      return hash ^ hash >>> 6;
    },
    _JenkinsSmiHash_finish0: function(hash) {
      hash = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
      hash ^= hash >>> 11;
      return 536870911 & hash + ((16383 & hash) << 15 >>> 0);
    },
    min: function(a, b) {
      if (typeof a !== "number")
        throw H.wrapException(P.ArgumentError$(a));
      if (typeof b !== "number")
        throw H.wrapException(P.ArgumentError$(b));
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && C.JSInt_methods.get$isNegative(b) || isNaN(b))
          return b;
        return a;
      }
      return a;
    },
    max: function(a, b) {
      var t1;
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return a + b;
        if (isNaN(b))
          return b;
        return a;
      }
      if (b === 0)
        t1 = a === 0 ? 1 / a < 0 : a < 0;
      else
        t1 = false;
      if (t1)
        return b;
      return a;
    },
    _JSRandom: {
      "^": "Object;",
      nextInt$1: function(max) {
        if (max <= 0 || max > 4294967296)
          throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + max));
        return Math.random() * max >>> 0;
      }
    },
    _Random: {
      "^": "Object;_lo,_hi",
      _nextState$0: function() {
        var t1, tmpHi, tmpHiLo, tmpLo, tmpLoLo, newLo;
        t1 = this._lo;
        tmpHi = 4294901760 * t1;
        tmpHiLo = (tmpHi & 4294967295) >>> 0;
        tmpLo = 55905 * t1;
        tmpLoLo = (tmpLo & 4294967295) >>> 0;
        newLo = tmpLoLo + tmpHiLo + this._hi;
        t1 = (newLo & 4294967295) >>> 0;
        this._lo = t1;
        this._hi = (C.JSInt_methods._tdivFast$1(tmpLo - tmpLoLo + (tmpHi - tmpHiLo) + (newLo - t1), 4294967296) & 4294967295) >>> 0;
      },
      nextInt$1: function(max) {
        var t1, rnd32, result;
        if (max <= 0 || max > 4294967296)
          throw H.wrapException(P.RangeError$("max must be in range 0 < max \u2264 2^32, was " + max));
        t1 = max - 1;
        if ((max & t1) === 0) {
          this._nextState$0();
          return (this._lo & t1) >>> 0;
        }
        do {
          this._nextState$0();
          rnd32 = this._lo;
          result = rnd32 % max;
        } while (rnd32 - result + max >= 4294967296);
        return result;
      },
      _Random$1: function(seed) {
        var empty_seed, low, high, tmplow, low0, t1, t2, t3;
        empty_seed = seed < 0 ? -1 : 0;
        do {
          low = (seed & 4294967295) >>> 0;
          seed = C.JSNumber_methods._tdivFast$1(seed - low, 4294967296);
          high = (seed & 4294967295) >>> 0;
          seed = C.JSNumber_methods._tdivFast$1(seed - high, 4294967296);
          tmplow = ((~low & 4294967295) >>> 0) + (low << 21 >>> 0);
          low0 = (tmplow & 4294967295) >>> 0;
          high = (~high >>> 0) + ((high << 21 | low >>> 11) >>> 0) + C.JSInt_methods._tdivFast$1(tmplow - low0, 4294967296) & 4294967295;
          tmplow = ((low0 ^ (low0 >>> 24 | high << 8)) >>> 0) * 265;
          low = (tmplow & 4294967295) >>> 0;
          high = ((high ^ high >>> 24) >>> 0) * 265 + C.JSInt_methods._tdivFast$1(tmplow - low, 4294967296) & 4294967295;
          tmplow = ((low ^ (low >>> 14 | high << 18)) >>> 0) * 21;
          low = (tmplow & 4294967295) >>> 0;
          high = ((high ^ high >>> 14) >>> 0) * 21 + C.JSInt_methods._tdivFast$1(tmplow - low, 4294967296) & 4294967295;
          low = (low ^ (low >>> 28 | high << 4)) >>> 0;
          high = (high ^ high >>> 28) >>> 0;
          tmplow = (low << 31 >>> 0) + low;
          low0 = (tmplow & 4294967295) >>> 0;
          t1 = C.JSInt_methods._tdivFast$1(tmplow - low0, 4294967296);
          tmplow = this._lo * 1037;
          t2 = (tmplow & 4294967295) >>> 0;
          this._lo = t2;
          t3 = (this._hi * 1037 + C.JSInt_methods._tdivFast$1(tmplow - t2, 4294967296) & 4294967295) >>> 0;
          this._hi = t3;
          t2 = (t2 ^ low0) >>> 0;
          this._lo = t2;
          t1 = (t3 ^ high + ((high << 31 | low >>> 1) >>> 0) + t1 & 4294967295) >>> 0;
          this._hi = t1;
        } while (seed !== empty_seed);
        if (t1 === 0 && t2 === 0)
          this._lo = 23063;
        this._nextState$0();
        this._nextState$0();
        this._nextState$0();
        this._nextState$0();
      },
      static: {_Random$: function(seed) {
          var t1 = new P._Random(0, 0);
          t1._Random$1(seed);
          return t1;
        }}
    }
  }], ["dart.mirrors", "dart:mirrors",, P, {
    "^": "",
    reflectClass: function(key) {
      var t1, tm;
      t1 = J.getInterceptor(key);
      if (!t1.$isType || t1.$eq(key, C.Type_dynamic))
        throw H.wrapException(P.ArgumentError$(H.S(key) + " does not denote a class"));
      tm = P.reflectType(key);
      if (!J.getInterceptor(tm).$isClassMirror)
        throw H.wrapException(P.ArgumentError$(H.S(key) + " does not denote a class"));
      return tm.get$originalDeclaration();
    },
    reflectType: function(key) {
      if (J.$eq(key, C.Type_dynamic)) {
        $.get$currentJsMirrorSystem().toString;
        return $.get$JsMirrorSystem__dynamicType();
      }
      return H.reflectClassByMangledName(key.get$_typeName());
    },
    Mirror: {
      "^": "Object;"
    },
    InstanceMirror: {
      "^": "Object;",
      $isMirror: 1
    },
    LibraryMirror: {
      "^": "Object;",
      $isMirror: 1
    },
    TypeMirror: {
      "^": "Object;",
      $isMirror: 1
    },
    ClassMirror: {
      "^": "Object;",
      $isTypeMirror: 1,
      $isMirror: 1
    },
    TypeVariableMirror: {
      "^": "TypeMirror;",
      $isMirror: 1
    },
    MethodMirror: {
      "^": "Object;",
      $isMirror: 1
    },
    VariableMirror: {
      "^": "Object;",
      $isMirror: 1
    },
    ParameterMirror: {
      "^": "Object;",
      $isMirror: 1
    },
    MirrorsUsed: {
      "^": "Object;symbols,targets,metaTargets,override"
    }
  }], ["dart.typed_data", "dart:typed_data",, P, {
    "^": "",
    ByteBuffer: {
      "^": "Object;"
    },
    Endianness: {
      "^": "Object;_littleEndian"
    },
    ByteData: {
      "^": "Object;",
      $isTypedData: 1,
      static: {ByteData_ByteData: [function($length) {
          return new DataView(new ArrayBuffer(H._checkLength($length)));
        }, null, null, 2, 0, 213, 75, [], "new ByteData"], ByteData_ByteData$view: [function(buffer, offsetInBytes, $length) {
          return J.asByteData$2$x(buffer, offsetInBytes, $length);
        }, null, null, 2, 4, 214, 69, 35, 76, [], 77, [], 75, [], "new ByteData$view"]}
    },
    "+ByteData": [0, 296]
  }], ["dart.typed_data.implementation", "dart:_native_typed_data",, H, {
    "^": "",
    _checkLength: function($length) {
      if (typeof $length !== "number" || Math.floor($length) !== $length)
        throw H.wrapException(P.ArgumentError$("Invalid length " + H.S($length)));
      return $length;
    },
    _checkViewArguments: function(buffer, offsetInBytes, $length) {
      if (typeof offsetInBytes !== "number" || Math.floor(offsetInBytes) !== offsetInBytes)
        throw H.wrapException(P.ArgumentError$("Invalid view offsetInBytes " + H.S(offsetInBytes)));
      if ($length != null && (typeof $length !== "number" || Math.floor($length) !== $length))
        throw H.wrapException(P.ArgumentError$("Invalid view length " + H.S($length)));
    },
    _ensureNativeList: function(list) {
      var t1, t2, result, i, t3;
      t1 = J.getInterceptor(list);
      if (!!t1.$isJSIndexable)
        return list;
      t2 = t1.get$length(list);
      if (typeof t2 !== "number")
        return H.iae(t2);
      result = Array(t2);
      result.fixed$length = Array;
      t2 = result.length;
      i = 0;
      while (true) {
        t3 = t1.get$length(list);
        if (typeof t3 !== "number")
          return H.iae(t3);
        if (!(i < t3))
          break;
        t3 = t1.$index(list, i);
        if (i >= t2)
          return H.ioore(result, i);
        result[i] = t3;
        ++i;
      }
      return result;
    },
    NativeByteBuffer: {
      "^": "Interceptor;lengthInBytes:byteLength=",
      get$runtimeType: function(receiver) {
        return C.Type_wAg;
      },
      asUint8List$2: function(receiver, offsetInBytes, $length) {
        H._checkViewArguments(receiver, offsetInBytes, $length);
        return $length == null ? new Uint8Array(receiver, offsetInBytes) : new Uint8Array(receiver, offsetInBytes, $length);
      },
      asByteData$2: function(receiver, offsetInBytes, $length) {
        H._checkViewArguments(receiver, offsetInBytes, $length);
        return $length == null ? new DataView(receiver, offsetInBytes) : new DataView(receiver, offsetInBytes, $length);
      },
      $isNativeByteBuffer: 1,
      "%": "ArrayBuffer"
    },
    NativeTypedData: {
      "^": "Interceptor;buffer=,lengthInBytes:byteLength=,offsetInBytes:byteOffset=",
      _invalidIndex$2: function(receiver, index, $length) {
        var t1 = J.getInterceptor$n(index);
        if (t1.$lt(index, 0) || t1.$ge(index, $length)) {
          if (!!this.$isList)
            if ($length === receiver.length)
              throw H.wrapException(P.IndexError$(index, receiver, null, null, null));
          throw H.wrapException(P.RangeError$range(index, 0, $length - 1, null, null));
        } else
          throw H.wrapException(P.ArgumentError$("Invalid list index " + H.S(index)));
      },
      _checkIndex$2: function(receiver, index, $length) {
        if (index >>> 0 !== index || index >= $length)
          this._invalidIndex$2(receiver, index, $length);
      },
      _checkSublistArguments$3: function(receiver, start, end, $length) {
        var t1 = $length + 1;
        this._checkIndex$2(receiver, start, t1);
        if (end == null)
          return $length;
        this._checkIndex$2(receiver, end, t1);
        if (typeof end !== "number")
          return H.iae(end);
        if (start > end)
          throw H.wrapException(P.RangeError$range(start, 0, end, null, null));
        return end;
      },
      $isNativeTypedData: 1,
      $isTypedData: 1,
      "%": ";ArrayBufferView;NativeTypedArray|NativeTypedArray_ListMixin|NativeTypedArray_ListMixin_FixedLengthListMixin|NativeTypedArrayOfDouble|NativeTypedArray_ListMixin0|NativeTypedArray_ListMixin_FixedLengthListMixin0|NativeTypedArrayOfInt"
    },
    NativeByteData: {
      "^": "NativeTypedData;",
      get$runtimeType: [function(receiver) {
        return C.Type_oGP;
      }, null, null, 1, 0, 64, "runtimeType"],
      getFloat32$2: [function(receiver, byteOffset, endian) {
        return receiver.getFloat32(byteOffset, C.Endianness_true === endian);
      }, function($receiver, byteOffset) {
        return this.getFloat32$2($receiver, byteOffset, C.Endianness_false);
      }, "getFloat32$1", "call$2", "call$1", "get$getFloat32", 2, 2, 68, 78, 79, [], 80, [], "getFloat32"],
      getFloat64$2: [function(receiver, byteOffset, endian) {
        return receiver.getFloat64(byteOffset, C.Endianness_true === endian);
      }, function($receiver, byteOffset) {
        return this.getFloat64$2($receiver, byteOffset, C.Endianness_false);
      }, "getFloat64$1", "call$2", "call$1", "get$getFloat64", 2, 2, 68, 78, 79, [], 80, [], "getFloat64"],
      getInt16$2: [function(receiver, byteOffset, endian) {
        return receiver.getInt16(byteOffset, C.Endianness_true === endian);
      }, function($receiver, byteOffset) {
        return this.getInt16$2($receiver, byteOffset, C.Endianness_false);
      }, "getInt16$1", "call$2", "call$1", "get$getInt16", 2, 2, 69, 78, 79, [], 80, [], "getInt16"],
      getInt32$2: [function(receiver, byteOffset, endian) {
        return receiver.getInt32(byteOffset, C.Endianness_true === endian);
      }, function($receiver, byteOffset) {
        return this.getInt32$2($receiver, byteOffset, C.Endianness_false);
      }, "getInt32$1", "call$2", "call$1", "get$getInt32", 2, 2, 69, 78, 79, [], 80, [], "getInt32"],
      getInt64$2: [function(receiver, byteOffset, endian) {
        throw H.wrapException(new P.UnsupportedError("Int64 accessor not supported by dart2js."));
      }, function($receiver, byteOffset) {
        return this.getInt64$2($receiver, byteOffset, C.Endianness_false);
      }, "getInt64$1", "call$2", "call$1", "get$getInt64", 2, 2, 69, 78, 79, [], 80, [], "getInt64"],
      getInt8$1: [function(receiver, byteOffset) {
        return receiver.getInt8(byteOffset);
      }, "call$1", "get$getInt8", 2, 0, 9, 79, [], "getInt8"],
      getUint16$2: [function(receiver, byteOffset, endian) {
        return receiver.getUint16(byteOffset, C.Endianness_true === endian);
      }, function($receiver, byteOffset) {
        return this.getUint16$2($receiver, byteOffset, C.Endianness_false);
      }, "getUint16$1", "call$2", "call$1", "get$getUint16", 2, 2, 69, 78, 79, [], 80, [], "getUint16"],
      getUint32$2: [function(receiver, byteOffset, endian) {
        return receiver.getUint32(byteOffset, C.Endianness_true === endian);
      }, function($receiver, byteOffset) {
        return this.getUint32$2($receiver, byteOffset, C.Endianness_false);
      }, "getUint32$1", "call$2", "call$1", "get$getUint32", 2, 2, 69, 78, 79, [], 80, [], "getUint32"],
      getUint64$2: [function(receiver, byteOffset, endian) {
        throw H.wrapException(new P.UnsupportedError("Uint64 accessor not supported by dart2js."));
      }, function($receiver, byteOffset) {
        return this.getUint64$2($receiver, byteOffset, C.Endianness_false);
      }, "getUint64$1", "call$2", "call$1", "get$getUint64", 2, 2, 69, 78, 79, [], 80, [], "getUint64"],
      getUint8$1: [function(receiver, byteOffset) {
        return receiver.getUint8(byteOffset);
      }, "call$1", "get$getUint8", 2, 0, 9, 79, [], "getUint8"],
      setFloat32$3: [function(receiver, byteOffset, value, endian) {
        return receiver.setFloat32(byteOffset, value, C.Endianness_true === endian);
      }, function($receiver, byteOffset, value) {
        return this.setFloat32$3($receiver, byteOffset, value, C.Endianness_false);
      }, "setFloat32$2", "call$3", "call$2", "get$setFloat32", 4, 2, 70, 78, 79, [], 22, [], 80, [], "setFloat32"],
      setFloat64$3: [function(receiver, byteOffset, value, endian) {
        return receiver.setFloat64(byteOffset, value, C.Endianness_true === endian);
      }, function($receiver, byteOffset, value) {
        return this.setFloat64$3($receiver, byteOffset, value, C.Endianness_false);
      }, "setFloat64$2", "call$3", "call$2", "get$setFloat64", 4, 2, 70, 78, 79, [], 22, [], 80, [], "setFloat64"],
      setInt16$3: [function(receiver, byteOffset, value, endian) {
        return receiver.setInt16(byteOffset, value, C.Endianness_true === endian);
      }, function($receiver, byteOffset, value) {
        return this.setInt16$3($receiver, byteOffset, value, C.Endianness_false);
      }, "setInt16$2", "call$3", "call$2", "get$setInt16", 4, 2, 71, 78, 79, [], 22, [], 80, [], "setInt16"],
      setInt32$3: [function(receiver, byteOffset, value, endian) {
        return receiver.setInt32(byteOffset, value, C.Endianness_true === endian);
      }, function($receiver, byteOffset, value) {
        return this.setInt32$3($receiver, byteOffset, value, C.Endianness_false);
      }, "setInt32$2", "call$3", "call$2", "get$setInt32", 4, 2, 71, 78, 79, [], 22, [], 80, [], "setInt32"],
      setInt64$3: [function(receiver, byteOffset, value, endian) {
        throw H.wrapException(new P.UnsupportedError("Int64 accessor not supported by dart2js."));
      }, function($receiver, byteOffset, value) {
        return this.setInt64$3($receiver, byteOffset, value, C.Endianness_false);
      }, "setInt64$2", "call$3", "call$2", "get$setInt64", 4, 2, 71, 78, 79, [], 22, [], 80, [], "setInt64"],
      setInt8$2: [function(receiver, byteOffset, value) {
        return receiver.setInt8(byteOffset, value);
      }, "call$2", "get$setInt8", 4, 0, 63, 79, [], 22, [], "setInt8"],
      setUint16$3: [function(receiver, byteOffset, value, endian) {
        return receiver.setUint16(byteOffset, value, C.Endianness_true === endian);
      }, function($receiver, byteOffset, value) {
        return this.setUint16$3($receiver, byteOffset, value, C.Endianness_false);
      }, "setUint16$2", "call$3", "call$2", "get$setUint16", 4, 2, 71, 78, 79, [], 22, [], 80, [], "setUint16"],
      setUint32$3: [function(receiver, byteOffset, value, endian) {
        return receiver.setUint32(byteOffset, value, C.Endianness_true === endian);
      }, function($receiver, byteOffset, value) {
        return this.setUint32$3($receiver, byteOffset, value, C.Endianness_false);
      }, "setUint32$2", "call$3", "call$2", "get$setUint32", 4, 2, 71, 78, 79, [], 22, [], 80, [], "setUint32"],
      setUint64$3: [function(receiver, byteOffset, value, endian) {
        throw H.wrapException(new P.UnsupportedError("Uint64 accessor not supported by dart2js."));
      }, function($receiver, byteOffset, value) {
        return this.setUint64$3($receiver, byteOffset, value, C.Endianness_false);
      }, "setUint64$2", "call$3", "call$2", "get$setUint64", 4, 2, 71, 78, 79, [], 22, [], 80, [], "setUint64"],
      setUint8$2: [function(receiver, byteOffset, value) {
        return receiver.setUint8(byteOffset, value);
      }, "call$2", "get$setUint8", 4, 0, 63, 79, [], 22, [], "setUint8"],
      $isByteData: 1,
      $isTypedData: 1,
      "%": "DataView"
    },
    NativeTypedArray: {
      "^": "NativeTypedData;",
      get$length: function(receiver) {
        return receiver.length;
      },
      _setRangeFast$4: function(receiver, start, end, source, skipCount) {
        var t1, count, sourceLength;
        t1 = receiver.length + 1;
        this._checkIndex$2(receiver, start, t1);
        this._checkIndex$2(receiver, end, t1);
        if (J.$gt$n(start, end))
          throw H.wrapException(P.RangeError$range(start, 0, end, null, null));
        count = J.$sub$n(end, start);
        if (J.$lt$in(skipCount, 0))
          throw H.wrapException(P.ArgumentError$(skipCount));
        sourceLength = source.length;
        if (typeof skipCount !== "number")
          return H.iae(skipCount);
        if (typeof count !== "number")
          return H.iae(count);
        if (sourceLength - skipCount < count)
          throw H.wrapException(new P.StateError("Not enough elements"));
        if (skipCount !== 0 || sourceLength !== count)
          source = source.subarray(skipCount, skipCount + count);
        receiver.set(source, start);
      },
      $isJavaScriptIndexingBehavior: 1,
      $isJSIndexable: 1
    },
    NativeTypedArrayOfDouble: {
      "^": "NativeTypedArray_ListMixin_FixedLengthListMixin;",
      $index: function(receiver, index) {
        var t1 = receiver.length;
        if (index >>> 0 !== index || index >= t1)
          this._invalidIndex$2(receiver, index, t1);
        return receiver[index];
      },
      $indexSet: function(receiver, index, value) {
        var t1 = receiver.length;
        if (index >>> 0 !== index || index >= t1)
          this._invalidIndex$2(receiver, index, t1);
        receiver[index] = value;
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        if (!!J.getInterceptor(iterable).$isNativeTypedArrayOfDouble) {
          this._setRangeFast$4(receiver, start, end, iterable, skipCount);
          return;
        }
        this.super$ListMixin$setRange$4(receiver, start, end, iterable, skipCount);
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      }
    },
    NativeTypedArray_ListMixin: {
      "^": "NativeTypedArray+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.$double];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$double];
      }
    },
    NativeTypedArray_ListMixin_FixedLengthListMixin: {
      "^": "NativeTypedArray_ListMixin+FixedLengthListMixin;"
    },
    NativeTypedArrayOfInt: {
      "^": "NativeTypedArray_ListMixin_FixedLengthListMixin0;",
      $indexSet: function(receiver, index, value) {
        var t1 = receiver.length;
        if (index >>> 0 !== index || index >= t1)
          this._invalidIndex$2(receiver, index, t1);
        receiver[index] = value;
      },
      setRange$4: function(receiver, start, end, iterable, skipCount) {
        if (!!J.getInterceptor(iterable).$isNativeTypedArrayOfInt) {
          this._setRangeFast$4(receiver, start, end, iterable, skipCount);
          return;
        }
        this.super$ListMixin$setRange$4(receiver, start, end, iterable, skipCount);
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      }
    },
    NativeTypedArray_ListMixin0: {
      "^": "NativeTypedArray+ListMixin;",
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      }
    },
    NativeTypedArray_ListMixin_FixedLengthListMixin0: {
      "^": "NativeTypedArray_ListMixin0+FixedLengthListMixin;"
    },
    NativeFloat32List: {
      "^": "NativeTypedArrayOfDouble;",
      get$runtimeType: function(receiver) {
        return C.Type_Art;
      },
      sublist$2: function(receiver, start, end) {
        return new Float32Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isList: 1,
      $asList: function() {
        return [P.$double];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$double];
      },
      "%": "Float32Array"
    },
    NativeFloat64List: {
      "^": "NativeTypedArrayOfDouble;",
      get$runtimeType: function(receiver) {
        return C.Type_ckn;
      },
      sublist$2: function(receiver, start, end) {
        return new Float64Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isList: 1,
      $asList: function() {
        return [P.$double];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$double];
      },
      "%": "Float64Array"
    },
    NativeInt16List: {
      "^": "NativeTypedArrayOfInt;",
      get$runtimeType: function(receiver) {
        return C.Type_UoK;
      },
      $index: function(receiver, index) {
        var t1 = receiver.length;
        if (index >>> 0 !== index || index >= t1)
          this._invalidIndex$2(receiver, index, t1);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Int16Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "Int16Array"
    },
    NativeInt32List: {
      "^": "NativeTypedArrayOfInt;",
      get$runtimeType: function(receiver) {
        return C.Type_dTZ;
      },
      $index: function(receiver, index) {
        var t1 = receiver.length;
        if (index >>> 0 !== index || index >= t1)
          this._invalidIndex$2(receiver, index, t1);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Int32Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "Int32Array"
    },
    NativeInt8List: {
      "^": "NativeTypedArrayOfInt;",
      get$runtimeType: function(receiver) {
        return C.Type_mp3;
      },
      $index: function(receiver, index) {
        var t1 = receiver.length;
        if (index >>> 0 !== index || index >= t1)
          this._invalidIndex$2(receiver, index, t1);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Int8Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "Int8Array"
    },
    NativeUint16List: {
      "^": "NativeTypedArrayOfInt;",
      get$runtimeType: function(receiver) {
        return C.Type_CAk;
      },
      $index: function(receiver, index) {
        var t1 = receiver.length;
        if (index >>> 0 !== index || index >= t1)
          this._invalidIndex$2(receiver, index, t1);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint16Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "Uint16Array"
    },
    NativeUint32List: {
      "^": "NativeTypedArrayOfInt;",
      get$runtimeType: function(receiver) {
        return C.Type_irB;
      },
      $index: function(receiver, index) {
        var t1 = receiver.length;
        if (index >>> 0 !== index || index >= t1)
          this._invalidIndex$2(receiver, index, t1);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint32Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "Uint32Array"
    },
    NativeUint8ClampedList: {
      "^": "NativeTypedArrayOfInt;",
      get$runtimeType: function(receiver) {
        return C.Type_QuW;
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        var t1 = receiver.length;
        if (index >>> 0 !== index || index >= t1)
          this._invalidIndex$2(receiver, index, t1);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint8ClampedArray(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isTypedData: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": "CanvasPixelArray|Uint8ClampedArray"
    },
    NativeUint8List: {
      "^": "NativeTypedArrayOfInt;",
      get$runtimeType: function(receiver) {
        return C.Type_6L0;
      },
      get$length: function(receiver) {
        return receiver.length;
      },
      $index: function(receiver, index) {
        var t1 = receiver.length;
        if (index >>> 0 !== index || index >= t1)
          this._invalidIndex$2(receiver, index, t1);
        return receiver[index];
      },
      sublist$2: function(receiver, start, end) {
        return new Uint8Array(receiver.subarray(start, this._checkSublistArguments$3(receiver, start, end, receiver.length)));
      },
      sublist$1: function($receiver, start) {
        return this.sublist$2($receiver, start, null);
      },
      $isNativeUint8List: 1,
      $isUint8List: 1,
      $isTypedData: 1,
      $isList: 1,
      $asList: function() {
        return [P.$int];
      },
      $isEfficientLength: 1,
      $isIterable: 1,
      $asIterable: function() {
        return [P.$int];
      },
      "%": ";Uint8Array"
    }
  }], ["dart2js._js_primitives", "dart:_js_primitives",, H, {
    "^": "",
    printString: function(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof window == "object")
        return;
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    }
  }], ["dslink.broker", "package:dslink/broker.dart",, Z, {
    "^": "",
    BrokerDiscoveryClient: {
      "^": "Object;_socket,_discoverController,_brokerController",
      init$1: function(broadcast) {
        var $goto = 0, completer = new P.Completer_Completer(), handler = 1, currentError, $self = this, t1;
        function init$1(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                t1 = $self.get$RawDatagramSocket();
                $goto = 2;
                return H.asyncHelper(t1.bind$2("0.0.0.0", broadcast ? 1900 : 0), init$1, completer);
              case 2:
                // returning from await.
                t1 = result;
                $self._socket = t1;
                t1.set$multicastHops(10);
                $self._socket.set$broadcastEnabled(true);
                $self._socket.listen$1(new Z.BrokerDiscoveryClient_init_closure($self));
                $self._socket.set$writeEventsEnabled(true);
                $self._socket.joinMulticast$1(H.throwNoSuchMethod("", "", ["239.255.255.230"], []));
                // implicit return
                return H.asyncHelper(null, 0, completer, null);
              case 1:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, init$1, completer, null);
      },
      init$0: function() {
        return this.init$1(false);
      },
      discover$1$timeout: function(timeout) {
        J.send$3$x(this._socket, C.Utf8Codec_false.get$encoder().convert$1("DISCOVER"), H.throwNoSuchMethod("", "", ["239.255.255.230"], []), 1900);
      },
      discover$0: function() {
        return this.discover$1$timeout(C.Duration_5000000);
      },
      close$0: function(_) {
        J.close$0$x(this._socket);
      }
    },
    BrokerDiscoveryClient_init_closure: {
      "^": "Closure:8;_broker$_captured_this_0",
      call$1: [function($event) {
        var t1, packet, parts, type, argument, t2;
        t1 = this._broker$_captured_this_0;
        if (J.$eq($event, t1.get$RawSocketEvent().get$READ())) {
          packet = t1._socket.receive$0();
          t1._socket.set$writeEventsEnabled(true);
          parts = C.Utf8Codec_false.decode$1(packet.get$data(packet)).split(" ");
          if (0 >= parts.length)
            return H.ioore(parts, 0);
          type = parts[0];
          argument = H.SubListIterable$(parts, 1, null, H.getTypeArgumentByIndex(parts, 0)).join$1(0, " ");
          t2 = J.getInterceptor(type);
          if (t2.$eq(type, "BROKER")) {
            t1 = t1._brokerController;
            if (!t1.get$_mayAddEvent())
              H.throwExpression(t1._addEventError$0());
            t1._sendData$1(argument);
          } else if (t2.$eq(type, "DISCOVER")) {
            t2 = t1._discoverController;
            if (!t2.get$_mayAddEvent())
              H.throwExpression(t2._addEventError$0());
            t2._sendData$1(new Z.BrokerDiscoverRequest(t1, packet));
          }
        }
      }, null, null, 2, 0, null, 67, [], "call"]
    },
    BrokerDiscoverRequest: {
      "^": "Object;client,packet"
    }
  }], ["dslink.client", "package:dslink/client.dart",, X, {
    "^": "",
    getKeyFromFile: [function(path) {
      var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError;
      function getKeyFromFile(errorCode, result) {
        if (errorCode === 1) {
          currentError = result;
          $goto = handler;
        }
        while (true)
          switch ($goto) {
            case 0:
              // Function start
              $returnValue = K.PrivateKey_PrivateKey$loadFromString(C.Utf8Codec_false.decode$1(new G.File(path).readAsBytesSync$0()));
              // goto return
              $goto = 1;
              break;
            case 1:
              // return
              return H.asyncHelper($returnValue, 0, completer, null);
            case 2:
              // rethrow
              return H.asyncHelper(currentError, 1, completer);
          }
      }
      return H.asyncHelper(null, getKeyFromFile, completer, null);
    }, "call$1", "getKeyFromFile$closure", 2, 0, 218, 107, [], "getKeyFromFile"],
    LinkProvider: {
      "^": "Object;link@-297,provider@-298,privateKey@-299,brokerUrl@-300,_nodesFile@-301,prefix@-300,args@-302,isRequester@-303,command@-300,isResponder@-303,defaultNodes@-304,profiles@-304,enableHttp@-303,encodePrettyJson@-303,strictOptions@-303,exitOnFailure@-303,loadNodesJson@-303,defaultLogLevel@-300,_basePath@-300,_configured@-303,_discoverBroker@-303,_reconnecting@-303,dslinkJson@-304,_initialized@-303,_client$_ready@-303,_connectOnReady@-303,_connectedCompleter@-305",
      configure$2$argp$optionsHandler: [function(argp, optionsHandler) {
        var dslinkFile, e, configStr, err, keyFile, key, macs, t1, t2, t3, t4, t5, opts, helpStr, $name, exception, gen, rsapars, params, pair;
        this._configured = true;
        t1 = this.link;
        if (t1 != null) {
          J.close$0$x(t1);
          this.link = null;
        }
        if (argp == null) {
          t1 = this.strictOptions;
          t2 = P.LinkedHashMap_LinkedHashMap$_empty(P.String, E.Option);
          t3 = P.LinkedHashMap_LinkedHashMap$_empty(P.String, S.ArgParser);
          t4 = new P.UnmodifiableMapView(t2);
          t4.$builtinTypeInfo = [null, null];
          t5 = new P.UnmodifiableMapView(t3);
          t5.$builtinTypeInfo = [null, null];
          argp = new S.ArgParser(t2, t3, t4, t5, [], t1 !== true);
        }
        argp.addOption$4$abbr$defaultsTo$help("broker", "b", "http://localhost:8080/conn", "Broker URL");
        argp.addOption$3$abbr$help("name", "n", "Link Name");
        argp.addOption$2$help("base-path", "Base Path for DSLink");
        t1 = new H.MappedListIterable(C.List_O1R, new X.LinkProvider_configure_closure());
        t1.$builtinTypeInfo = [null, null];
        t1 = t1.toList$0(0);
        C.JSArray_methods.addAll$1(t1, ["auto"]);
        argp.addOption$5$abbr$allowed$defaultsTo$help("log", "l", t1, "AUTO", "Log Level");
        argp.addFlag$4$abbr$help$negatable("help", "h", "Displays this Help Message", false);
        argp.addFlag$4$abbr$help$negatable("discover", "d", "Automatically Discover a Broker", false);
        opts = argp.parse$1(this.args);
        if (J.$eq(opts.$index(0, "log"), "auto"))
          if (Q.DEBUG_MODE() === true)
            Q.updateLogLevel("all");
          else
            Q.updateLogLevel(this.defaultLogLevel);
        else
          Q.updateLogLevel(opts.$index(0, "log"));
        if (opts.$index(0, "base-path") != null) {
          t1 = opts.$index(0, "base-path");
          this._basePath = t1;
          if (J.endsWith$1$s(t1, "/")) {
            t1 = this._basePath;
            t2 = J.getInterceptor$asx(t1);
            this._basePath = t2.substring$2(t1, 0, J.$sub$in(t2.get$length(t1), 1));
          }
        }
        helpStr = "usage: " + H.S(this.command) + " [--broker URL] [--log LEVEL] [--name NAME] [--discover]";
        if (opts.$index(0, "help") === true) {
          P.print(helpStr);
          P.print(argp.get$usage());
          if (this.exitOnFailure === true)
            $.get$_process().callMethod$2("exit", [1]);
          else
            return false;
        }
        t1 = opts.$index(0, "broker");
        this.brokerUrl = t1;
        if (t1 == null && opts.$index(0, "discover") !== true) {
          P.print("No Broker URL Specified. One of [--broker, --discover] is required.");
          P.print(helpStr);
          P.print(argp.get$usage());
          if (this.exitOnFailure === true)
            $.get$_process().callMethod$2("exit", [1]);
          else
            return false;
        }
        $name = opts.$index(0, "name");
        if ($name != null)
          if (J.endsWith$1$s($name, "-"))
            this.prefix = $name;
          else
            this.prefix = H.S($name) + "-";
        dslinkFile = new G.File(H.S(this._basePath) + "/dslink.json");
        e = null;
        try {
          configStr = C.Utf8Codec_false.decode$1(dslinkFile.readAsBytesSync$0());
          this.dslinkJson = P._parseJson(configStr, $.get$DsJson_instance().decoder._reviver);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          err = t1;
          e = err;
        }
        if (this.dslinkJson == null) {
          Q.logger().severe$2("Invalid dslink.json", e);
          if (this.exitOnFailure === true)
            $.get$_process().callMethod$2("exit", [1]);
          else
            return false;
        }
        t1 = this.brokerUrl;
        if (t1 != null)
          if (!J.startsWith$1$s(t1, "http"))
            this.brokerUrl = "http://" + H.S(this.brokerUrl);
        keyFile = this.getConfig$1("key") == null ? new G.File(H.S(this._basePath) + "/.dslink.key") : new G.File(P.Uri_parse(this.getConfig$1("key"), 0, null).toFilePath$0());
        key = null;
        try {
          key = C.Utf8Codec_false.decode$1(keyFile.readAsBytesSync$0());
          this.privateKey = K.PrivateKey_PrivateKey$loadFromString(key);
        } catch (exception) {
          H.unwrapException(exception);
        }
        if (key == null || J.get$length$asx(key) !== 131) {
          macs = null;
          if (J.$eq(J.$index$asx($.get$_process(), "platform"), "win32"))
            macs = J.toString$0(Z.Process_runSync("getmac", [], null, true, false, C.Utf8Codec_false, C.Utf8Codec_false, null).stdout);
          else
            try {
              macs = J.toString$0(Z.Process_runSync("arp", ["-an"], null, true, false, C.Utf8Codec_false, C.Utf8Codec_false, null).stdout);
            } catch (exception) {
              H.unwrapException(exception);
              macs = J.toString$0(Z.Process_runSync("ifconfig", [], null, true, false, C.Utf8Codec_false, C.Utf8Codec_false, null).stdout);
            }
          t1 = $.get$DSRandom_instance();
          t1.randomize$1(macs);
          gen = new S.ECKeyGenerator(null, null);
          t2 = $.get$_secp256r1();
          rsapars = new Z.ECKeyGeneratorParameters(null, t2.get$n().bitLength$0(0));
          rsapars._domainParameters = t2;
          params = new A.ParametersWithRandom(rsapars, t1);
          params.$builtinTypeInfo = [null];
          gen.init$1(params);
          pair = gen.generateKeyPair$0();
          t1 = K.PrivateKey$(pair.privateKey, pair.publicKey);
          this.privateKey = t1;
          key = t1.saveToString$0();
          t1 = C.Utf8Codec_false.get$encoder().convert$1(key);
          $.get$_fs().callMethod$2("writeFileSync", [keyFile.get$_file$_path(), K.listToBuf(t1)]);
        }
        if (opts.$index(0, "discover") === true)
          this._discoverBroker = true;
        if (optionsHandler != null)
          optionsHandler.call$1(opts);
        return true;
      }, function() {
        return this.configure$2$argp$optionsHandler(null, null);
      }, "configure$0", "call$2$argp$optionsHandler", "call$0", "get$configure", 0, 5, 72, 35, 35, 108, [], 109, [], "configure"],
      chooseBroker$1: [function(brokers) {
        var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError;
        function chooseBroker$1(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                $goto = 3;
                return H.asyncHelper(J.get$first$ax(brokers), chooseBroker$1, completer);
              case 3:
                // returning from await.
                $returnValue = result;
                // goto return
                $goto = 1;
                break;
              case 1:
                // return
                return H.asyncHelper($returnValue, 0, completer, null);
              case 2:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, chooseBroker$1, completer, null);
      }, "call$1", "get$chooseBroker", 2, 0, 73, 110, [], "chooseBroker"],
      onValueChange$2$cacheLevel: [function(path, cacheLevel) {
        var t1, controller;
        t1 = {};
        t1._captured_listener_0 = null;
        t1._captured_controller_1 = null;
        t1._captured_subs_2 = 0;
        controller = P.StreamController_StreamController$broadcast(new X.LinkProvider_onValueChange_closure(t1), new X.LinkProvider_onValueChange_closure0(t1, this, path, cacheLevel), false, O.ValueUpdate);
        t1._captured_controller_1 = controller;
        t1 = new P._BroadcastStream(controller);
        t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(controller, 0)];
        return t1;
      }, function(path) {
        return this.onValueChange$2$cacheLevel(path, 1);
      }, "onValueChange$1", "call$2$cacheLevel", "call$1", "get$onValueChange", 2, 3, 74, 111, 107, [], 112, [], "onValueChange"],
      syncValue$1: [function(path) {
        var n = J.$index$asx(this.provider, path);
        n.updateValue$2$force(J.get$value$x(n.get$lastValueUpdate()), true);
      }, "call$1", "get$syncValue", 2, 0, 61, 107, [], "syncValue"],
      init$0: [function() {
        var loadedNodesData, nodesStr, t1, t2, exception;
        if (this._configured !== true)
          if (!this.configure$0())
            return;
        this._initialized = true;
        t1 = this.provider;
        if (t1 == null) {
          t1 = this.profiles;
          t2 = new T.SimpleNodeProvider(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, T.LocalNode), P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, {func: 1, ret: T.SimpleNode, args: [P.String]}), new T.DummyPermissionManager());
          t2.init$2(null, t1);
          this.provider = t2;
          t1 = t2;
        }
        if (this.loadNodesJson === true && !!J.getInterceptor(t1).$isSerializableNodeProvider && this._reconnecting !== true) {
          t1 = this.getConfig$1("nodes") == null ? new G.File(H.S(this._basePath) + "/nodes.json") : new G.File(P.Uri_parse(this.getConfig$1("nodes"), 0, null).toFilePath$0());
          this._nodesFile = t1;
          loadedNodesData = null;
          try {
            nodesStr = t1.readAsStringSync$0();
            loadedNodesData = P._parseJson(nodesStr, $.get$DsJson_instance().decoder._reviver);
          } catch (exception) {
            H.unwrapException(exception);
          }
          if (loadedNodesData != null)
            H.interceptedTypeCast(this.provider, "$isSerializableNodeProvider").init$1(loadedNodesData);
          else {
            t1 = this.defaultNodes;
            if (t1 != null)
              H.interceptedTypeCast(this.provider, "$isSerializableNodeProvider").init$1(t1);
          }
        }
        t1 = new X.LinkProvider_init_doRun(this);
        if (this._discoverBroker === true)
          P.Future_Future(new X.LinkProvider_init_closure(this, t1, new Z.BrokerDiscoveryClient(null, P.StreamController_StreamController$broadcast(null, null, false, null), P.StreamController_StreamController$broadcast(null, null, false, null))), null);
        else
          t1.call$0();
      }, "call$0", "get$init", 0, 0, 7, "init"],
      getConfig$1: [function(key) {
        var t1 = this.dslinkJson;
        if (t1 != null && !!J.getInterceptor(J.$index$asx(t1, "configs")).$isMap && !!J.getInterceptor(J.$index$asx(J.$index$asx(this.dslinkJson, "configs"), key)).$isMap && J.$index$asx(J.$index$asx(this.dslinkJson, "configs"), key).containsKey$1("value") === true)
          return J.$index$asx(J.$index$asx(J.$index$asx(this.dslinkJson, "configs"), key), "value");
        return;
      }, "call$1", "get$getConfig", 2, 0, 75, 21, [], "getConfig"],
      connect$0: [function() {
        if (this._connectedCompleter == null) {
          var t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [null];
          t1 = new P._AsyncCompleter(t1);
          t1.$builtinTypeInfo = [null];
          this._connectedCompleter = t1;
        }
        if (this._configured !== true || this._initialized !== true)
          this.init$0();
        if (this._client$_ready === true) {
          this.link.get$onConnected().then$1(J.get$complete$x(this._connectedCompleter));
          t1 = this.link;
          if (t1 != null)
            t1.connect$0();
        } else
          this._connectOnReady = true;
        return this._connectedCompleter.get$future();
      }, "call$0", "get$connect", 0, 0, 27, "connect"],
      get$requester: [function() {
        return this.link.get$requester();
      }, null, null, 1, 0, 76, "requester"],
      get$onRequesterReady: [function() {
        return this.link.get$onRequesterReady();
      }, null, null, 1, 0, 77, "onRequesterReady"],
      close$0: [function(_) {
        var t1;
        this._connectedCompleter = null;
        t1 = this.link;
        if (t1 != null) {
          J.close$0$x(t1);
          this.link = null;
          this._initialized = false;
          this._reconnecting = true;
        }
      }, "call$0", "get$close", 0, 0, 7, "close"],
      stop$0: [function(_) {
        return this.close$0(0);
      }, "call$0", "get$stop", 0, 0, 7, "stop"],
      get$didInitializationFail: [function() {
        return this.link == null;
      }, null, null, 1, 0, 31, "didInitializationFail"],
      get$isInitialized: [function() {
        return this.link != null;
      }, null, null, 1, 0, 31, "isInitialized"],
      save$0: [function() {
        var t1, t2, t3, t4, output, stringifier;
        t1 = this._nodesFile;
        if (t1 != null && this.provider != null) {
          t2 = this.provider;
          if (!J.getInterceptor(t2).$isSerializableNodeProvider)
            return;
          t2 = H.interceptedTypeCast(t2, "$isSerializableNodeProvider").save$0();
          t3 = this.encodePrettyJson;
          t4 = $.get$DsJson_instance();
          t4.toString;
          if (t3 === true) {
            t3 = t4._prettyEncoder;
            if (t3 == null) {
              t3 = new P.JsonEncoder("  ", Q.DsJsonCodecImpl__safeEncoder$closure());
              t4.encoder = t3;
              t4._prettyEncoder = t3;
            } else
              t4.encoder = t3;
          }
          t3 = t4.encoder;
          t4 = t3._toEncodable;
          t3 = t3.indent;
          output = new P.StringBuffer("");
          if (t3 == null) {
            t3 = t4 != null ? t4 : P._defaultToEncodable$closure();
            stringifier = new P._JsonStringStringifier(output, [], t3);
          } else {
            t4 = t4 != null ? t4 : P._defaultToEncodable$closure();
            stringifier = new P._JsonStringStringifierPretty(t3, 0, output, [], t4);
          }
          stringifier.writeObject$1(t2);
          t2 = output._contents;
          t1.writeAsStringSync$1(t2.charCodeAt(0) == 0 ? t2 : t2);
        }
      }, "call$0", "get$save", 0, 0, 7, "save"],
      saveAsync$0: [function() {
        var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, $self = this, t1, t2, t3, output, stringifier, encoded;
        function saveAsync$0(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                $goto = $self._nodesFile != null && $self.provider != null ? 3 : 4;
                break;
              case 3:
                // then
                t1 = $self.provider;
                if (!J.getInterceptor(t1).$isSerializableNodeProvider) {
                  // goto return
                  $goto = 1;
                  break;
                } else
                  ;
                t1 = H.interceptedTypeCast(t1, "$isSerializableNodeProvider").save$0();
                t2 = $self.encodePrettyJson;
                t3 = $.get$DsJson_instance();
                t3.toString;
                if (t2 === true) {
                  t2 = t3._prettyEncoder;
                  if (t2 == null) {
                    t2 = new P.JsonEncoder("  ", Q.DsJsonCodecImpl__safeEncoder$closure());
                    t3.encoder = t2;
                    t3._prettyEncoder = t2;
                  } else
                    t3.encoder = t2;
                } else
                  ;
                t2 = t3.encoder;
                t3 = t2._toEncodable;
                t2 = t2.indent;
                output = new P.StringBuffer("");
                if (t2 == null) {
                  t2 = t3 != null ? t3 : P._defaultToEncodable$closure();
                  stringifier = new P._JsonStringStringifier(output, [], t2);
                } else {
                  t3 = t3 != null ? t3 : P._defaultToEncodable$closure();
                  stringifier = new P._JsonStringStringifierPretty(t2, 0, output, [], t3);
                }
                stringifier.writeObject$1(t1);
                t1 = output._contents;
                encoded = t1.charCodeAt(0) == 0 ? t1 : t1;
                $goto = 5;
                return H.asyncHelper($self._nodesFile.writeAsString$1(encoded), saveAsync$0, completer);
              case 5:
                // returning from await.
              case 4:
                // join
              case 1:
                // return
                return H.asyncHelper($returnValue, 0, completer, null);
              case 2:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, saveAsync$0, completer, null);
      }, "call$0", "get$saveAsync", 0, 0, 27, "saveAsync"],
      getNode$1: [function(path) {
        return this.provider.getNode$1(path);
      }, "call$1", "get$getNode", 2, 0, 78, 107, [], "getNode"],
      addNode$2: [function(path, m) {
        var t1 = this.provider;
        if (!J.getInterceptor(t1).$isMutableNodeProvider)
          throw H.wrapException(P.Exception_Exception("Unable to Modify Node Provider: It is not mutable."));
        return H.interceptedTypeCast(t1, "$isMutableNodeProvider").addNode$2(path, m);
      }, "call$2", "get$addNode", 4, 0, 79, 107, [], 113, [], "addNode"],
      removeNode$1: [function(path) {
        var t1 = this.provider;
        if (!J.getInterceptor(t1).$isMutableNodeProvider)
          throw H.wrapException(P.Exception_Exception("Unable to Modify Node Provider: It is not mutable."));
        H.interceptedTypeCast(t1, "$isMutableNodeProvider").removeNode$1(path);
      }, "call$1", "get$removeNode", 2, 0, 61, 107, [], "removeNode"],
      updateValue$2: [function(path, value) {
        var t1 = this.provider;
        if (!J.getInterceptor(t1).$isMutableNodeProvider)
          throw H.wrapException(P.Exception_Exception("Unable to Modify Node Provider: It is not mutable."));
        H.interceptedTypeCast(t1, "$isMutableNodeProvider").updateValue$2(path, value);
      }, "call$2", "get$updateValue", 4, 0, 80, 107, [], 22, [], "updateValue"],
      $index: [function(_, path) {
        return J.$index$asx(this.provider, path);
      }, null, "get$[]", 2, 0, 78, 107, [], "[]"],
      $not: [function(_) {
        return J.$index$asx(this.provider, "/");
      }, null, "get$~", 0, 0, 81, "~"],
      val$2: [function(path, value) {
        var t1;
        if (value instanceof O.Unspecified)
          return J.get$value$x(J.$index$asx(this.provider, path).get$lastValueUpdate());
        else {
          t1 = this.provider;
          if (!J.getInterceptor(t1).$isMutableNodeProvider)
            H.throwExpression(P.Exception_Exception("Unable to Modify Node Provider: It is not mutable."));
          H.interceptedTypeCast(t1, "$isMutableNodeProvider").updateValue$2(path, value);
          return value;
        }
      }, function(path) {
        return this.val$2(path, C.C_Unspecified);
      }, "val$1", "call$2", "call$1", "get$val", 2, 2, 82, 114, 107, [], 22, [], "val"],
      static: {LinkProvider$: [function(args, prefix, autoInitialize, command, defaultLogLevel, defaultNodes, enableHttp, encodePrettyJson, exitOnFailure, isRequester, isResponder, loadNodesJson, nodeProvider, profiles, provider, strictOptions) {
          var t1 = new X.LinkProvider(null, provider, null, null, null, prefix, args, isRequester, command, isResponder, defaultNodes, profiles, enableHttp, encodePrettyJson, strictOptions, exitOnFailure, loadNodesJson, defaultLogLevel, ".", false, false, false, null, false, false, false, null);
          if (nodeProvider != null)
            t1.provider = nodeProvider;
          if (autoInitialize === true)
            t1.init$0();
          return t1;
        }, null, null, 4, 29, 215, 37, 81, 82, 35, 35, 35, 82, 37, 82, 37, 82, 82, 83, 35, 84, [], 85, [], 86, [], 87, [], 88, [], 89, [], 90, [], 91, [], 92, [], 93, [], 94, [], 95, [], 96, [], 97, [], 98, [], 99, [], "new LinkProvider"]}
    },
    "+LinkProvider": [0],
    LinkProvider_configure_closure: {
      "^": "Closure:8;",
      call$1: [function(it) {
        return J.toLowerCase$0$s(J.get$name$x(it));
      }, null, null, 2, 0, 8, 115, [], "call"]
    },
    LinkProvider_onValueChange_closure0: {
      "^": "Closure:5;_client$_box_0,_client$_captured_this_1,_captured_path_2,_captured_cacheLevel_3",
      call$0: [function() {
        var t1 = this._client$_box_0;
        ++t1._captured_subs_2;
        if (t1._captured_listener_0 == null)
          t1._captured_listener_0 = J.$index$asx(this._client$_captured_this_1.provider, this._captured_path_2).subscribe$2(new X.LinkProvider_onValueChange__closure(t1), this._captured_cacheLevel_3);
      }, null, null, 0, 0, 5, "call"]
    },
    LinkProvider_onValueChange__closure: {
      "^": "Closure:83;_client$_box_0",
      call$1: [function(update) {
        var t1 = this._client$_box_0._captured_controller_1;
        if (!t1.get$_mayAddEvent())
          H.throwExpression(t1._addEventError$0());
        t1._sendData$1(update);
      }, null, null, 2, 0, 83, 116, [], "call"]
    },
    LinkProvider_onValueChange_closure: {
      "^": "Closure:5;_client$_box_0",
      call$0: [function() {
        var t1 = this._client$_box_0;
        if (--t1._captured_subs_2 === 0) {
          t1._captured_listener_0.cancel$0();
          t1._captured_listener_0 = null;
        }
      }, null, null, 0, 0, 5, "call"]
    },
    LinkProvider_init_doRun: {
      "^": "Closure:7;_client$_captured_this_0",
      call$0: [function() {
        var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12;
        t1 = this._client$_captured_this_0;
        t2 = t1.brokerUrl;
        t3 = t1.prefix;
        t4 = t1.privateKey;
        t5 = t1.isRequester;
        t6 = t1.isResponder;
        t7 = t1.provider;
        t8 = t1.enableHttp;
        t9 = new P._Future(0, $.Zone__current, null);
        t9.$builtinTypeInfo = [L.Requester];
        t9 = new P._AsyncCompleter(t9);
        t9.$builtinTypeInfo = [L.Requester];
        t10 = new P._Future(0, $.Zone__current, null);
        t10.$builtinTypeInfo = [null];
        t10 = new P._AsyncCompleter(t10);
        t10.$builtinTypeInfo = [null];
        t11 = Array(3);
        t11.fixed$length = Array;
        t11.$builtinTypeInfo = [P.String];
        t3 = H.S(t3) + t4.get$publicKey().get$qHash64();
        if (t5 === true) {
          t5 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, L.Request);
          t12 = new L.RemoteNodeCache(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, L.RemoteNode));
          t12 = new L.Requester(t5, t12, null, 1, 1, 0, false, null, null, null, [], [], false);
          t5 = L.SubscribeRequest$(t12, 0);
          t12._subsciption = t5;
          J.$indexSet$ax(t12._requests, 0, t5);
          t5 = t12;
        } else
          t5 = null;
        if (t6 === true && t7 != null) {
          t6 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.Response);
          t7 = new T.Responder(null, [], t6, null, t7, null, null, null, [], [], false);
          t12 = new T.SubscribeResponse(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, T.RespSubscribeController), P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.RespSubscribeController), P.LinkedHashSet_LinkedHashSet(null, null, null, T.RespSubscribeController), t7, 0, "initialize");
          t7._responder$_subscription = t12;
          t6.$indexSet(0, 0, t12);
          t6 = t7;
        } else
          t6 = null;
        t1.link = new X.HttpClientLink(t9, t10, t3, t5, t6, t4, null, null, null, t11, null, null, t2, t8, 1, 1, false);
        t1._client$_ready = true;
        if (t1._connectOnReady === true)
          t1.connect$0();
      }, null, null, 0, 0, 7, "call"]
    },
    LinkProvider_init_closure: {
      "^": "Closure:27;_client$_captured_this_1,_captured_doRun_2,_captured_discovery_3",
      call$0: [function() {
        var $goto = 0, completer = new P.Completer_Completer(), handler = 1, currentError, next = [], $self = this, broker, t1, t2, exception, exception1;
        function call$0(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                t1 = $self._captured_discovery_3;
                $goto = 2;
                return H.asyncHelper(t1.init$0(), call$0, completer);
              case 2:
                // returning from await.
                handler = 4;
                t2 = $self._client$_captured_this_1;
                $goto = 7;
                return H.asyncHelper(t2.chooseBroker$1(t1.discover$0()), call$0, completer);
              case 7:
                // returning from await.
                broker = result;
                P.print("Discovered Broker at " + H.S(broker));
                t2.brokerUrl = broker;
                $self._captured_doRun_2.call$0();
                handler = 1;
                // goto after finally
                $goto = 6;
                break;
              case 4:
                // catch
                handler = 3;
                exception1 = currentError;
                H.unwrapException(exception1);
                P.print("Failed to discover a broker.");
                $.get$_process().callMethod$2("exit", [1]);
                // goto after finally
                $goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $goto = 1;
                break;
              case 6:
                // after finally
                // implicit return
                return H.asyncHelper(null, 0, completer, null);
              case 1:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, call$0, completer, null);
      }, null, null, 0, 0, 27, "call"]
    },
    HttpClientConnection: {
      "^": "Object;_client$_responderChannel@-306,_client$_requesterChannel@-306,_onRequestReadyCompleter@-307,_client$_onDisconnectedCompleter@-308,_connectedOnce@-303,url>-300,clientLink<-309,saltL@-300,saltS@-300,_pendingCheck@-303,_pendingSendS@-303,_sending@-303,_sendingS@-303,_needRetryL@-303,_lastRequestS@-310,_needRetryS@-303,_done@-303,retryDelay@-311,_authError@-303",
      get$responderChannel: [function() {
        return this._client$_responderChannel;
      }, null, null, 1, 0, 84, "responderChannel"],
      get$requesterChannel: [function() {
        return this._client$_requesterChannel;
      }, null, null, 1, 0, 84, "requesterChannel"],
      get$onRequesterReady: [function() {
        return this._onRequestReadyCompleter.get$future();
      }, null, null, 1, 0, 85, "onRequesterReady"],
      get$onDisconnected: [function() {
        return this._client$_onDisconnectedCompleter.get$future();
      }, null, null, 1, 0, 86, "onDisconnected"],
      connected$0: [function() {
        if (this._connectedOnce === true)
          return;
        this._connectedOnce = true;
        this._client$_responderChannel.updateConnect$0();
        this._client$_requesterChannel.updateConnect$0();
      }, "call$0", "get$connected", 0, 0, 7, "connected"],
      requireSend$0: [function() {
        this._pendingSendS = true;
        if (this._pendingCheck !== true) {
          this._pendingCheck = true;
          Q.DsTimer_callLaterOnce(this.get$_checkSend());
        }
      }, "call$0", "get$requireSend", 0, 0, 7, "requireSend"],
      close$0: [function(_) {
      }, "call$0", "get$close", 0, 0, 7, "close"],
      _checkSend$0: [function() {
        this._pendingCheck = false;
        if (this._pendingSendS === true)
          if (J.$eq(this._sendingS, false))
            this._sendS$0();
      }, "call$0", "get$_checkSend", 0, 0, 7, "_checkSend"],
      _sendL$0: [function() {
        var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, next = [], $self = this, client, resp, connUri, request, err, exception, t1, exception1;
        function _sendL$0(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                client = new Z._HttpClient();
                resp = null;
                handler = 4;
                connUri = P.Uri_parse(H.S($self.url) + "&authL=" + J.get$nonce$x($self.clientLink).hashSalt$1($self.saltL), 0, null);
                $goto = 7;
                return H.asyncHelper(client.postUrl$1(connUri), _sendL$0, completer);
              case 7:
                // returning from await.
                request = result;
                J.add$1$ax(request, $.get$HttpClientConnection__fixedLongPollData());
                $goto = 8;
                return H.asyncHelper(J.close$0$x(request), _sendL$0, completer);
              case 8:
                // returning from await.
                resp = result;
                handler = 2;
                // goto after finally
                $goto = 6;
                break;
              case 4:
                // catch
                handler = 3;
                exception1 = currentError;
                t1 = H.unwrapException(exception1);
                err = t1;
                $self._onDataErrorL$1(err);
                // goto return
                $goto = 1;
                break;
                // goto after finally
                $goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $goto = 2;
                break;
              case 6:
                // after finally
                $self._onDataL$1(resp);
              case 1:
                // return
                return H.asyncHelper($returnValue, 0, completer, null);
              case 2:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, _sendL$0, completer, null);
      }, "call$0", "get$_sendL", 0, 0, 5, "_sendL"],
      _onDataErrorL$1: [function(err) {
        Q.logger().fine$1("http long error: " + H.S(err));
        if (this._connectedOnce !== true) {
          this._client$_onDone$0();
          return;
        } else if (this._done !== true) {
          this._needRetryL = true;
          Q.DsTimer_timerOnceBefore(this.get$retry(), J.$mul$ins(this.retryDelay, 1000));
          if (J.$lt$in(this.retryDelay, 60))
            this.retryDelay = J.$add$ins(this.retryDelay, 1);
        }
      }, "call$1", "get$_onDataErrorL", 2, 0, 87, 117, [], "_onDataErrorL"],
      retryL$0: [function() {
        this._needRetryL = false;
        this._sendL$0();
      }, "call$0", "get$retryL", 0, 0, 7, "retryL"],
      _onDataL$1: [function(response) {
        var t1 = J.getInterceptor$x(response);
        if (!J.$eq(t1.get$statusCode(response), 200)) {
          Q.logger().fine$1("http long response.statusCode: " + H.S(t1.get$statusCode(response)));
          if (J.$eq(t1.get$statusCode(response), 401)) {
            this._authError = true;
            this._client$_onDone$0();
            return;
          }
        }
        t1.fold$2(response, [], O.foldList$closure()).then$1(new X.HttpClientConnection__onDataL_closure(this));
      }, "call$1", "get$_onDataL", 2, 0, 88, 118, [], "_onDataL"],
      _sendS$0: [function() {
        var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, next = [], $self = this, m, resp, client, connUri, request, err, rslt, needSend, t1, exception, exception1;
        function _sendS$0(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                $self._pendingSendS = false;
                m = P.LinkedHashMap__makeEmpty();
                if ($self._client$_responderChannel.get$getData() != null) {
                  rslt = $self._client$_responderChannel.getData$0();
                  if (rslt != null && !J.$eq(J.get$length$asx(rslt), 0)) {
                    J.$indexSet$ax(m, "responses", rslt);
                    needSend = true;
                  } else
                    needSend = false;
                } else
                  needSend = false;
                if ($self._client$_requesterChannel.get$getData() != null) {
                  rslt = $self._client$_requesterChannel.getData$0();
                  if (rslt != null && !J.$eq(J.get$length$asx(rslt), 0)) {
                    J.$indexSet$ax(m, "requests", rslt);
                    needSend = true;
                  } else
                    ;
                } else
                  ;
                $goto = needSend ? 3 : 4;
                break;
              case 3:
                // then
                resp = null;
                Q.logger().fine$1("http send: " + H.S(m));
                handler = 6;
                $self._sendingS = true;
                client = new Z._HttpClient();
                connUri = P.Uri_parse(H.S($self.url) + "&authS=" + J.get$nonce$x($self.clientLink).hashSalt$1($self.saltS), 0, null);
                $goto = 9;
                return H.asyncHelper(client.postUrl$1(connUri), _sendS$0, completer);
              case 9:
                // returning from await.
                request = result;
                t1 = C.JsonCodec_null_null.encode$1(m);
                t1 = C.Utf8Codec_false.get$encoder().convert$1(t1);
                $self._lastRequestS = t1;
                J.add$1$ax(request, t1);
                $goto = 10;
                return H.asyncHelper(J.close$0$x(request), _sendS$0, completer);
              case 10:
                // returning from await.
                resp = result;
                handler = 2;
                // goto after finally
                $goto = 8;
                break;
              case 6:
                // catch
                handler = 5;
                exception1 = currentError;
                t1 = H.unwrapException(exception1);
                err = t1;
                $self._onDataErrorS$1(err);
                // goto return
                $goto = 1;
                break;
                // goto after finally
                $goto = 8;
                break;
              case 5:
                // uncaught
                // goto rethrow
                $goto = 2;
                break;
              case 8:
                // after finally
                $self._onDataS$1(resp);
              case 4:
                // join
              case 1:
                // return
                return H.asyncHelper($returnValue, 0, completer, null);
              case 2:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, _sendS$0, completer, null);
      }, "call$0", "get$_sendS", 0, 0, 5, "_sendS"],
      _onDataErrorS$1: [function(err) {
        Q.logger().fine$1("http short error: " + H.S(err));
        if (this._connectedOnce !== true) {
          this._client$_onDone$0();
          return;
        } else if (this._done !== true) {
          this._needRetryS = true;
          Q.DsTimer_timerOnceBefore(this.get$retry(), J.$mul$ins(this.retryDelay, 1000));
        }
      }, "call$1", "get$_onDataErrorS", 2, 0, 87, 117, [], "_onDataErrorS"],
      retryS$0: [function() {
        this._needRetryS = false;
        new Z._HttpClient().postUrl$1(P.Uri_parse(H.S(this.url) + "&authS=" + J.get$nonce$x(this.clientLink).hashSalt$1(this.saltS), 0, null)).then$1(new X.HttpClientConnection_retryS_closure(this));
      }, "call$0", "get$retryS", 0, 0, 7, "retryS"],
      _onDataS$1: [function(response) {
        var t1 = J.getInterceptor$x(response);
        if (!J.$eq(t1.get$statusCode(response), 200)) {
          Q.logger().fine$1("http short response.statusCode: " + H.S(t1.get$statusCode(response)));
          if (J.$eq(t1.get$statusCode(response), 401)) {
            this._authError = true;
            this._client$_onDone$0();
          }
        }
        t1.fold$2(response, [], O.foldList$closure()).then$1(new X.HttpClientConnection__onDataS_closure(this));
      }, "call$1", "get$_onDataS", 2, 0, 88, 118, [], "_onDataS"],
      retry$0: [function() {
        if (this._needRetryL === true) {
          this._needRetryL = false;
          this._sendL$0();
        }
        if (this._needRetryS === true)
          this.retryS$0();
      }, "call$0", "get$retry", 0, 0, 7, "retry"],
      _client$_onDone$0: [function() {
        this._done = true;
        Q.logger().fine$1("http disconnected");
        if (this._client$_requesterChannel.get$onReceiveController().get$isClosed() !== true)
          J.close$0$x(this._client$_requesterChannel.get$onReceiveController());
        if (!this._client$_requesterChannel.get$onDisconnectController().get$isCompleted())
          J.complete$1$x(this._client$_requesterChannel.get$onDisconnectController(), this._client$_requesterChannel);
        if (this._client$_responderChannel.get$onReceiveController().get$isClosed() !== true)
          J.close$0$x(this._client$_responderChannel.get$onReceiveController());
        if (!this._client$_responderChannel.get$onDisconnectController().get$isCompleted())
          J.complete$1$x(this._client$_responderChannel.get$onDisconnectController(), this._client$_responderChannel);
        if (!this._client$_onDisconnectedCompleter.get$isCompleted())
          J.complete$1$x(this._client$_onDisconnectedCompleter, this._authError);
      }, "call$0", "get$_client$_onDone", 0, 0, 7, "_client$_onDone"],
      onDisconnected$0: function() {
        return this.get$onDisconnected().call$0();
      },
      static: {"^": "HttpClientConnection__fixedLongPollData@-310", HttpClientConnection$: [function(url, clientLink, saltL, saltS) {
          var t1, t2, t3, t4;
          t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [O.ConnectionChannel];
          t1 = new P._AsyncCompleter(t1);
          t1.$builtinTypeInfo = [O.ConnectionChannel];
          t2 = new P._Future(0, $.Zone__current, null);
          t2.$builtinTypeInfo = [P.bool];
          t2 = new P._AsyncCompleter(t2);
          t2.$builtinTypeInfo = [P.bool];
          t1 = new X.HttpClientConnection(null, null, t1, t2, false, url, clientLink, saltL, saltS, false, false, false, false, false, null, false, false, 1, false);
          t2 = P.StreamController_StreamController(null, null, null, null, false, P.List);
          t3 = new P._Future(0, $.Zone__current, null);
          t3.$builtinTypeInfo = [O.ConnectionChannel];
          t3 = new P._AsyncCompleter(t3);
          t3.$builtinTypeInfo = [O.ConnectionChannel];
          t4 = new P._Future(0, $.Zone__current, null);
          t4.$builtinTypeInfo = [O.ConnectionChannel];
          t4 = new P._AsyncCompleter(t4);
          t4.$builtinTypeInfo = [O.ConnectionChannel];
          t1._client$_responderChannel = new O.PassiveChannel(t2, [], t1, null, false, false, t3, t4);
          t2 = P.StreamController_StreamController(null, null, null, null, false, P.List);
          t3 = new P._Future(0, $.Zone__current, null);
          t3.$builtinTypeInfo = [O.ConnectionChannel];
          t3 = new P._AsyncCompleter(t3);
          t3.$builtinTypeInfo = [O.ConnectionChannel];
          t4 = new P._Future(0, $.Zone__current, null);
          t4.$builtinTypeInfo = [O.ConnectionChannel];
          t4 = new P._AsyncCompleter(t4);
          t4.$builtinTypeInfo = [O.ConnectionChannel];
          t2 = new O.PassiveChannel(t2, [], t1, null, false, false, t3, t4);
          t1._client$_requesterChannel = t2;
          t3 = t1._onRequestReadyCompleter;
          t4 = new P._Future(0, $.Zone__current, null);
          t4.$builtinTypeInfo = [null];
          t4._asyncComplete$1(t2);
          J.complete$1$x(t3, t4);
          t1._sendL$0();
          return t1;
        }, null, null, 8, 0, 216, 100, [], 101, [], 102, [], 103, [], "new HttpClientConnection"]}
    },
    "+HttpClientConnection": [0, 312],
    HttpClientConnection__onDataL_closure: {
      "^": "Closure:89;_client$_captured_this_0",
      call$1: [function(merged) {
        var m, t1, exception, t2;
        t1 = this._client$_captured_this_0;
        t1.connected$0();
        t1._sending = false;
        m = null;
        try {
          m = P._parseJson(C.Utf8Codec_false.decode$1(merged), $.get$DsJson_instance().decoder._reviver);
          Q.logger().fine$1("http receive: " + H.S(m));
        } catch (exception) {
          H.unwrapException(exception);
          return;
        }
        t2 = J.$index$asx(m, "saltL");
        if (typeof t2 === "string") {
          t2 = J.$index$asx(m, "saltL");
          t1.saltL = t2;
          t1.clientLink.updateSalt$2(t2, 2);
        }
        t1._sendL$0();
        if (!!J.getInterceptor(J.$index$asx(m, "responses")).$isList)
          J.add$1$ax(t1._client$_requesterChannel.get$onReceiveController(), J.$index$asx(m, "responses"));
        if (!!J.getInterceptor(J.$index$asx(m, "requests")).$isList)
          J.add$1$ax(t1._client$_responderChannel.get$onReceiveController(), J.$index$asx(m, "requests"));
      }, null, null, 2, 0, 89, 119, [], "call"]
    },
    HttpClientConnection_retryS_closure: {
      "^": "Closure:90;_client$_captured_this_0",
      call$1: [function(request) {
        var t1, t2;
        t1 = this._client$_captured_this_0;
        t2 = J.getInterceptor$ax(request);
        t2.add$1(request, t1._lastRequestS);
        t2.close$0(request).then$1(t1.get$_onDataS()).catchError$1(t1.get$_onDataErrorS());
      }, null, null, 2, 0, 90, 120, [], "call"]
    },
    HttpClientConnection__onDataS_closure: {
      "^": "Closure:89;_client$_captured_this_0",
      call$1: [function(merged) {
        var m, t1, exception, t2;
        t1 = this._client$_captured_this_0;
        t1.connected$0();
        t1._sendingS = false;
        m = null;
        try {
          m = P._parseJson(C.Utf8Codec_false.decode$1(merged), $.get$DsJson_instance().decoder._reviver);
        } catch (exception) {
          H.unwrapException(exception);
          return;
        }
        t2 = J.$index$asx(m, "saltS");
        if (typeof t2 === "string") {
          t2 = J.$index$asx(m, "saltS");
          t1.saltS = t2;
          t1.clientLink.updateSalt$2(t2, 1);
        }
        if (t1._pendingSendS === true && t1._pendingCheck !== true)
          t1._checkSend$0();
      }, null, null, 2, 0, 89, 119, [], "call"]
    },
    HttpClientLink: {
      "^": "Object;_onRequesterReadyCompleter@-313,_onConnectedCompleter@-305,dsId<-300,requester<-314,responder<-315,privateKey<-299,_nonce@-316,_wsConnection@-317,_httpConnection@-318,salts<-302,_wsUpdateUri@-300,_httpUpdateUri@-300,_client$_conn@-300,enableHttp@-303,_connDelay@-311,_wsDelay@-311,_closed@-303",
      get$onRequesterReady: [function() {
        return this._onRequesterReadyCompleter.get$future();
      }, null, null, 1, 0, 77, "onRequesterReady"],
      get$onConnected: [function() {
        return this._onConnectedCompleter.get$future();
      }, null, null, 1, 0, 27, "onConnected"],
      get$nonce: [function(_) {
        return this._nonce;
      }, null, null, 1, 0, 91, "nonce"],
      updateSalt$2: [function(salt, saltId) {
        J.$indexSet$ax(this.salts, saltId, salt);
      }, function(salt) {
        return this.updateSalt$2(salt, 0);
      }, "updateSalt$1", "call$2", "call$1", "get$updateSalt", 2, 2, 92, 69, 121, [], 122, [], "updateSalt"],
      connect$0: [function() {
        var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, next = [], $self = this, client, connUri, request, requestJson, response, merged, rslt, serverConfig, tempKey, t1, t2, t3, t4, output, stringifier, exception, exception1, temp1;
        function connect$0(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                if ($self._closed === true) {
                  // goto return
                  $goto = 1;
                  break;
                } else
                  ;
                t1 = $self.get$initWebsocket();
                if ($.get$DsTimer__functionsMap().containsKey$1(t1))
                  J.remove$1$ax($.get$DsTimer__functionsMap().$index(0, t1), t1);
                else
                  ;
                client = new Z._HttpClient();
                t1 = $self.dsId;
                connUri = P.Uri_parse(H.S($self._client$_conn) + "?dsId=" + H.S(t1), 0, null);
                Q.logger().info$1("Connecting to " + H.S($self._client$_conn));
                handler = 4;
                $goto = 7;
                return H.asyncHelper(client.postUrl$1(connUri), connect$0, completer);
              case 7:
                // returning from await.
                request = result;
                t2 = $self.privateKey;
                requestJson = P.LinkedHashMap__makeLiteral(["publicKey", t2.get$publicKey().get$qBase64(), "isRequester", $self.requester != null, "isResponder", $self.responder != null, "version", "1.0.2"]);
                Q.logger().fine$1("DS ID: " + H.S(t1));
                t3 = $.get$DsJson_instance();
                t3 = t3.encoder;
                t4 = t3._toEncodable;
                t3 = t3.indent;
                output = new P.StringBuffer("");
                if (t3 == null) {
                  t3 = t4 != null ? t4 : P._defaultToEncodable$closure();
                  stringifier = new P._JsonStringStringifier(output, [], t3);
                } else {
                  t4 = t4 != null ? t4 : P._defaultToEncodable$closure();
                  stringifier = new P._JsonStringStringifierPretty(t3, 0, output, [], t4);
                }
                stringifier.writeObject$1(requestJson);
                t3 = output._contents;
                t3 = t3.charCodeAt(0) == 0 ? t3 : t3;
                J.add$1$ax(request, C.Utf8Codec_false.get$encoder().convert$1(t3));
                $goto = 8;
                return H.asyncHelper(J.close$0$x(request), connect$0, completer);
              case 8:
                // returning from await.
                response = result;
                $goto = 9;
                return H.asyncHelper(J.fold$2$ax(response, [], O.foldList$closure()), connect$0, completer);
              case 9:
                // returning from await.
                merged = result;
                rslt = C.Utf8Codec_false.decode$1(merged);
                serverConfig = P._parseJson(rslt, $.get$DsJson_instance().decoder._reviver);
                C.Map_gVGBQ.forEach$1(0, new X.HttpClientLink_connect_closure($self, serverConfig));
                tempKey = J.$index$asx(serverConfig, "tempKey");
                temp1 = $self;
                $goto = 10;
                return H.asyncHelper(t2.decodeECDH$1(tempKey), connect$0, completer);
              case 10:
                // returning from await.
                temp1._nonce = result;
                t2 = J.$index$asx(serverConfig, "wsUri");
                if (typeof t2 === "string") {
                  t2 = connUri.resolveUri$1(P.Uri_parse(J.$index$asx(serverConfig, "wsUri"), 0, null)).toString$0(0) + "?dsId=" + H.S(t1);
                  H.checkString("ws");
                  H.checkInt(0);
                  P.RangeError_checkValueInInterval(0, 0, t2.length, "startIndex", null);
                  $self._wsUpdateUri = H.stringReplaceFirstUnchecked(t2, "http", "ws", 0);
                } else
                  ;
                t2 = J.$index$asx(serverConfig, "httpUri");
                if (typeof t2 === "string")
                  $self._httpUpdateUri = connUri.resolveUri$1(P.Uri_parse(J.$index$asx(serverConfig, "httpUri"), 0, null)).toString$0(0) + "?dsId=" + H.S(t1);
                else
                  ;
                $self.initWebsocket$1(false);
                $self._connDelay = 1;
                $self._wsDelay = 1;
                handler = 2;
                // goto after finally
                $goto = 6;
                break;
              case 4:
                // catch
                handler = 3;
                exception1 = currentError;
                H.unwrapException(exception1);
                Q.DsTimer_timerOnceAfter($self.get$connect(), J.$mul$ins($self._connDelay, 1000));
                if (J.$lt$in($self._connDelay, 60))
                  $self._connDelay = J.$add$ins($self._connDelay, 1);
                else
                  ;
                // goto after finally
                $goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return H.asyncHelper($returnValue, 0, completer, null);
              case 2:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, connect$0, completer, null);
      }, "call$0", "get$connect", 0, 0, 5, "connect"],
      initWebsocket$1: [function(reconnect) {
        var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, next = [], $self = this, socket, error, t1, t2, t3, t4, t5, exception, exception1;
        function initWebsocket$1(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                if ($self._closed === true) {
                  // goto return
                  $goto = 1;
                  break;
                } else
                  ;
                if (reconnect === true && $self._httpConnection == null)
                  $self.initHttp$0();
                else
                  ;
                handler = 4;
                $goto = 7;
                return H.asyncHelper(B._WebSocket_connect(H.S($self._wsUpdateUri) + "&auth=" + $self._nonce.hashSalt$1(J.$index$asx($self.salts, 0)), null, null), initWebsocket$1, completer);
              case 7:
                // returning from await.
                socket = result;
                t1 = socket;
                t2 = new P._Future(0, $.Zone__current, null);
                t2.$builtinTypeInfo = [O.ConnectionChannel];
                t2 = new P._AsyncCompleter(t2);
                t2.$builtinTypeInfo = [O.ConnectionChannel];
                t3 = new P._Future(0, $.Zone__current, null);
                t3.$builtinTypeInfo = [P.bool];
                t3 = new P._AsyncCompleter(t3);
                t3.$builtinTypeInfo = [P.bool];
                t2 = new T.WebSocketConnection(null, null, t2, t3, $self, t1, null, 0, false, 0, 0, null, new Q.BinaryInCache(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, Q.BinaryData)), new Q.BinaryOutCache(0, P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, Q.BinaryData)));
                t3 = P.StreamController_StreamController(null, null, null, null, false, P.List);
                t4 = new P._Future(0, $.Zone__current, null);
                t4.$builtinTypeInfo = [O.ConnectionChannel];
                t4 = new P._AsyncCompleter(t4);
                t4.$builtinTypeInfo = [O.ConnectionChannel];
                t5 = new P._Future(0, $.Zone__current, null);
                t5.$builtinTypeInfo = [O.ConnectionChannel];
                t5 = new P._AsyncCompleter(t5);
                t5.$builtinTypeInfo = [O.ConnectionChannel];
                t2._websocket$_responderChannel = new O.PassiveChannel(t3, [], t2, null, false, true, t4, t5);
                t3 = P.StreamController_StreamController(null, null, null, null, false, P.List);
                t4 = new P._Future(0, $.Zone__current, null);
                t4.$builtinTypeInfo = [O.ConnectionChannel];
                t4 = new P._AsyncCompleter(t4);
                t4.$builtinTypeInfo = [O.ConnectionChannel];
                t5 = new P._Future(0, $.Zone__current, null);
                t5.$builtinTypeInfo = [O.ConnectionChannel];
                t5 = new P._AsyncCompleter(t5);
                t5.$builtinTypeInfo = [O.ConnectionChannel];
                t2._websocket$_requesterChannel = new O.PassiveChannel(t3, [], t2, null, false, true, t4, t5);
                t1.listen$2$onDone(t2.get$onData(), t2.get$_websocket$_onDone());
                J.add$1$ax(t1, $.get$fixedBlankData());
                t2.pingTimer = P.Timer_Timer$periodic(P.Duration$(0, 0, 0, 0, 0, 20), t2.get$onPingTimer());
                $self._wsConnection = t2;
                Q.logger().info$1("Connected");
                if (!$self._onConnectedCompleter.get$isCompleted())
                  J.complete$0$x($self._onConnectedCompleter);
                else
                  ;
                t1 = $self.responder;
                if (t1 != null)
                  J.set$connection$x(t1, $self._wsConnection.get$responderChannel());
                else
                  ;
                if ($self.requester != null)
                  $self._wsConnection.get$onRequesterReady().then$1(new X.HttpClientLink_initWebsocket_closure($self));
                else
                  ;
                $self._wsConnection.get$onDisconnected().then$1(new X.HttpClientLink_initWebsocket_closure0($self));
                handler = 2;
                // goto after finally
                $goto = 6;
                break;
              case 4:
                // catch
                handler = 3;
                exception1 = currentError;
                t1 = H.unwrapException(exception1);
                error = t1;
                Q.logger().fine$1(error);
                if (reconnect === true) {
                  Q.DsTimer_timerOnceAfter($self.get$initWebsocket(), J.$mul$ins($self._wsDelay, 1000));
                  if (J.$lt$in($self._wsDelay, 60))
                    $self._wsDelay = J.$add$ins($self._wsDelay, 1);
                  else
                    ;
                } else {
                  $self.initHttp$0();
                  $self._wsDelay = 5;
                  Q.DsTimer_timerOnceAfter($self.get$initWebsocket(), 5000);
                }
                // goto after finally
                $goto = 6;
                break;
              case 3:
                // uncaught
                // goto rethrow
                $goto = 2;
                break;
              case 6:
                // after finally
              case 1:
                // return
                return H.asyncHelper($returnValue, 0, completer, null);
              case 2:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, initWebsocket$1, completer, null);
      }, function() {
        return this.initWebsocket$1(true);
      }, "initWebsocket$0", "call$1", "call$0", "get$initWebsocket", 0, 2, 93, 82, 123, [], "initWebsocket"],
      initHttp$0: [function() {
        var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, $self = this, t1, t2, t3, t4, t5;
        function initHttp$0(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                if ($self.enableHttp !== true) {
                  // goto return
                  $goto = 1;
                  break;
                } else
                  ;
                if ($self._closed === true) {
                  // goto return
                  $goto = 1;
                  break;
                } else
                  ;
                t1 = $self._httpUpdateUri;
                t2 = $self.salts;
                t3 = J.getInterceptor$asx(t2);
                t4 = t3.$index(t2, 2);
                t2 = t3.$index(t2, 1);
                t3 = new P._Future(0, $.Zone__current, null);
                t3.$builtinTypeInfo = [O.ConnectionChannel];
                t3 = new P._AsyncCompleter(t3);
                t3.$builtinTypeInfo = [O.ConnectionChannel];
                t5 = new P._Future(0, $.Zone__current, null);
                t5.$builtinTypeInfo = [P.bool];
                t5 = new P._AsyncCompleter(t5);
                t5.$builtinTypeInfo = [P.bool];
                t1 = new X.HttpClientConnection(null, null, t3, t5, false, t1, $self, t4, t2, false, false, false, false, false, null, false, false, 1, false);
                t2 = P.StreamController_StreamController(null, null, null, null, false, P.List);
                t3 = new P._Future(0, $.Zone__current, null);
                t3.$builtinTypeInfo = [O.ConnectionChannel];
                t3 = new P._AsyncCompleter(t3);
                t3.$builtinTypeInfo = [O.ConnectionChannel];
                t4 = new P._Future(0, $.Zone__current, null);
                t4.$builtinTypeInfo = [O.ConnectionChannel];
                t4 = new P._AsyncCompleter(t4);
                t4.$builtinTypeInfo = [O.ConnectionChannel];
                t1._client$_responderChannel = new O.PassiveChannel(t2, [], t1, null, false, false, t3, t4);
                t2 = P.StreamController_StreamController(null, null, null, null, false, P.List);
                t3 = new P._Future(0, $.Zone__current, null);
                t3.$builtinTypeInfo = [O.ConnectionChannel];
                t3 = new P._AsyncCompleter(t3);
                t3.$builtinTypeInfo = [O.ConnectionChannel];
                t4 = new P._Future(0, $.Zone__current, null);
                t4.$builtinTypeInfo = [O.ConnectionChannel];
                t4 = new P._AsyncCompleter(t4);
                t4.$builtinTypeInfo = [O.ConnectionChannel];
                t2 = new O.PassiveChannel(t2, [], t1, null, false, false, t3, t4);
                t1._client$_requesterChannel = t2;
                t3 = t1._onRequestReadyCompleter;
                t4 = new P._Future(0, $.Zone__current, null);
                t4.$builtinTypeInfo = [null];
                t4._asyncComplete$1(t2);
                J.complete$1$x(t3, t4);
                t1._sendL$0();
                $self._httpConnection = t1;
                Q.logger().info$1("Connected");
                if (!$self._onConnectedCompleter.get$isCompleted())
                  J.complete$0$x($self._onConnectedCompleter);
                else
                  ;
                t1 = $self.responder;
                if (t1 != null)
                  J.set$connection$x(t1, $self._httpConnection.get$responderChannel());
                else
                  ;
                if ($self.requester != null)
                  $self._httpConnection.get$onRequesterReady().then$1(new X.HttpClientLink_initHttp_closure($self));
                else
                  ;
                $self._httpConnection.get$onDisconnected().then$1(new X.HttpClientLink_initHttp_closure0($self));
              case 1:
                // return
                return H.asyncHelper($returnValue, 0, completer, null);
              case 2:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, initHttp$0, completer, null);
      }, "call$0", "get$initHttp", 0, 0, 5, "initHttp"],
      close$0: [function(_) {
        var t1;
        if (this._closed === true)
          return;
        t1 = new P._Future(0, $.Zone__current, null);
        t1.$builtinTypeInfo = [null];
        t1 = new P._AsyncCompleter(t1);
        t1.$builtinTypeInfo = [null];
        this._onConnectedCompleter = t1;
        this._closed = true;
        t1 = this._wsConnection;
        if (t1 != null) {
          J.close$0$x(t1);
          this._wsConnection = null;
        }
        t1 = this._httpConnection;
        if (t1 != null) {
          J.close$0$x(t1);
          this._httpConnection = null;
        }
      }, "call$0", "get$close", 0, 0, 7, "close"],
      salts$0: function() {
        return this.salts.call$0();
      },
      static: {"^": "HttpClientLink_saltNameMap<-319", HttpClientLink$: [function(_conn, dsIdPrefix, privateKey, enableHttp, isRequester, isResponder, nodeProvider) {
          var t1, t2, t3, t4, t5, t6, t7, t8;
          t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [L.Requester];
          t1 = new P._AsyncCompleter(t1);
          t1.$builtinTypeInfo = [L.Requester];
          t2 = new P._Future(0, $.Zone__current, null);
          t2.$builtinTypeInfo = [null];
          t2 = new P._AsyncCompleter(t2);
          t2.$builtinTypeInfo = [null];
          t3 = Array(3);
          t3.fixed$length = Array;
          t3.$builtinTypeInfo = [P.String];
          t4 = H.S(dsIdPrefix) + privateKey.get$publicKey().get$qHash64();
          if (isRequester === true) {
            t5 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, L.Request);
            t6 = new L.RemoteNodeCache(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, L.RemoteNode));
            t6 = new L.Requester(t5, t6, null, 1, 1, 0, false, null, null, null, [], [], false);
            t5 = L.SubscribeRequest$(t6, 0);
            t6._subsciption = t5;
            J.$indexSet$ax(t6._requests, 0, t5);
            t5 = t6;
          } else
            t5 = null;
          if (isResponder === true && nodeProvider != null) {
            t6 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.Response);
            t7 = new T.Responder(null, [], t6, null, nodeProvider, null, null, null, [], [], false);
            t8 = new T.SubscribeResponse(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, T.RespSubscribeController), P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.RespSubscribeController), P.LinkedHashSet_LinkedHashSet(null, null, null, T.RespSubscribeController), t7, 0, "initialize");
            t7._responder$_subscription = t8;
            t6.$indexSet(0, 0, t8);
            t6 = t7;
          } else
            t6 = null;
          return new X.HttpClientLink(t1, t2, t4, t5, t6, privateKey, null, null, null, t3, null, null, _conn, enableHttp, 1, 1, false);
        }, null, null, 6, 9, 217, 35, 82, 82, 37, 104, [], 105, [], 106, [], 99, [], 86, [], 88, [], 92, [], "new HttpClientLink"]}
    },
    "+HttpClientLink": [0, 309],
    HttpClientLink_connect_closure: {
      "^": "Closure:15;_client$_captured_this_0,_captured_serverConfig_1",
      call$2: [function($name, idx) {
        J.$indexSet$ax(this._client$_captured_this_0.salts, idx, J.$index$asx(this._captured_serverConfig_1, $name));
      }, null, null, 4, 0, 15, 124, [], 125, [], "call"]
    },
    HttpClientLink_initWebsocket_closure: {
      "^": "Closure:8;_client$_captured_this_0",
      call$1: [function(channel) {
        var t1, t2;
        t1 = this._client$_captured_this_0;
        t2 = t1.requester;
        J.set$connection$x(t2, channel);
        if (!t1._onRequesterReadyCompleter.get$isCompleted())
          J.complete$1$x(t1._onRequesterReadyCompleter, t2);
      }, null, null, 2, 0, 8, 126, [], "call"]
    },
    HttpClientLink_initWebsocket_closure0: {
      "^": "Closure:8;_client$_captured_this_1",
      call$1: [function(connection) {
        this._client$_captured_this_1.initWebsocket$0();
      }, null, null, 2, 0, 8, 127, [], "call"]
    },
    HttpClientLink_initHttp_closure: {
      "^": "Closure:8;_client$_captured_this_0",
      call$1: [function(channel) {
        var t1, t2;
        t1 = this._client$_captured_this_0;
        t2 = t1.requester;
        J.set$connection$x(t2, channel);
        if (!t1._onRequesterReadyCompleter.get$isCompleted())
          J.complete$1$x(t1._onRequesterReadyCompleter, t2);
      }, null, null, 2, 0, 8, 126, [], "call"]
    },
    HttpClientLink_initHttp_closure0: {
      "^": "Closure:30;_client$_captured_this_1",
      call$1: [function(authFailed) {
        var t1 = this._client$_captured_this_1;
        if (t1._closed === true)
          return;
        t1._httpConnection = null;
        if (authFailed === true)
          Q.DsTimer_timerOnceAfter(t1.get$connect(), J.$mul$ins(t1._connDelay, 1000));
      }, null, null, 2, 0, 30, 128, [], "call"]
    },
    OptionResultsHandler: {
      "^": "Object;",
      $typedefType: 392,
      $$isTypedef: true
    },
    "+OptionResultsHandler": ""
  }], ["dslink.common", "package:dslink/common.dart",, O, {
    "^": "unspecified<-339,fixedBlankData<-310",
    foldList: [function(a, b) {
      J.addAll$1$ax(a, b);
      return a;
    }, "call$2", "foldList$closure", 4, 0, 219, 23, [], 129, [], "foldList"],
    Connection: {
      "^": "Object;",
      onDisconnected$0: function() {
        return this.get$onDisconnected().call$0();
      },
      static: {Connection$: [function() {
          return new O.Connection();
        }, null, null, 0, 0, 220, "new Connection"]}
    },
    "+Connection": [0],
    ServerConnection: {
      "^": "Connection;",
      static: {ServerConnection$: [function() {
          return new O.ServerConnection();
        }, null, null, 0, 0, 221, "new ServerConnection"]}
    },
    "+ServerConnection": [320],
    ClientConnection: {
      "^": "Connection;",
      static: {ClientConnection$: [function() {
          return new O.ClientConnection();
        }, null, null, 0, 0, 222, "new ClientConnection"]}
    },
    "+ClientConnection": [320],
    ConnectionChannel: {
      "^": "Object;",
      connected$0: function() {
        return this.get$connected().call$0();
      },
      onDisconnected$0: function() {
        return this.get$onDisconnected().call$0();
      },
      static: {ConnectionChannel$: [function() {
          return new O.ConnectionChannel();
        }, null, null, 0, 0, 84, "new ConnectionChannel"]}
    },
    "+ConnectionChannel": [0],
    Link: {
      "^": "Object;",
      static: {Link$: [function() {
          return new O.Link();
        }, null, null, 0, 0, 223, "new Link"]}
    },
    "+Link": [0],
    ServerLink: {
      "^": "Link;",
      static: {ServerLink$: [function() {
          return new O.ServerLink();
        }, null, null, 0, 0, 224, "new ServerLink"]}
    },
    "+ServerLink": [321],
    ClientLink: {
      "^": "Link;",
      static: {ClientLink$: [function() {
          return new O.ClientLink();
        }, null, null, 0, 0, 225, "new ClientLink"]}
    },
    "+ClientLink": [321],
    ServerLinkManager: {
      "^": "Object;",
      static: {ServerLinkManager$: [function() {
          return new O.ServerLinkManager();
        }, null, null, 0, 0, 226, "new ServerLinkManager"]}
    },
    "+ServerLinkManager": [0],
    StreamStatus: {
      "^": "Object;",
      static: {"^": "StreamStatus_initialize<-300,StreamStatus_open<-300,StreamStatus_closed<-300", StreamStatus$: [function() {
          return new O.StreamStatus();
        }, null, null, 0, 0, 227, "new StreamStatus"]}
    },
    "+StreamStatus": [0],
    ErrorPhase: {
      "^": "Object;",
      static: {"^": "ErrorPhase_request<-300,ErrorPhase_response<-300", ErrorPhase$: [function() {
          return new O.ErrorPhase();
        }, null, null, 0, 0, 228, "new ErrorPhase"]}
    },
    "+ErrorPhase": [0],
    DSError: {
      "^": "Object;type*-300,detail*-300,msg@-300,path*-300,phase@-300",
      getMessage$0: [function() {
        var t1 = this.msg;
        if (t1 != null)
          return t1;
        t1 = this.type;
        if (t1 != null)
          return t1;
        return "Error";
      }, "call$0", "get$getMessage", 0, 0, 3, "getMessage"],
      serialize$0: [function() {
        var rslt, t1;
        rslt = P.LinkedHashMap__makeEmpty();
        t1 = this.msg;
        if (t1 != null)
          rslt.$indexSet(0, "msg", t1);
        t1 = this.type;
        if (t1 != null)
          rslt.$indexSet(0, "type", t1);
        t1 = this.path;
        if (t1 != null)
          rslt.$indexSet(0, "path", t1);
        if (J.$eq(this.phase, "request"))
          rslt.$indexSet(0, "phase", "request");
        t1 = this.detail;
        if (t1 != null)
          rslt.$indexSet(0, "detail", t1);
        return rslt;
      }, "call$0", "get$serialize", 0, 0, 94, "serialize"],
      static: {"^": "DSError_PERMISSION_DENIED<-322,DSError_INVALID_METHOD<-322,DSError_INVALID_PATH<-322,DSError_INVALID_PATHS<-322,DSError_INVALID_VALUE<-322,DSError_DISCONNECTED<-322", DSError$: [function(type, detail, msg, path, phase) {
          return new O.DSError(type, detail, msg, path, phase);
        }, null, null, 2, 9, 229, 35, 35, 35, 118, 130, [], 131, [], 132, [], 107, [], 133, [], "new DSError"], DSError$fromMap: [function(m) {
          var t1, t2, t3;
          t1 = new O.DSError(null, null, null, null, null);
          t2 = J.getInterceptor$asx(m);
          t3 = t2.$index(m, "type");
          if (typeof t3 === "string")
            t1.type = t2.$index(m, "type");
          t3 = t2.$index(m, "msg");
          if (typeof t3 === "string")
            t1.msg = t2.$index(m, "msg");
          t3 = t2.$index(m, "path");
          if (typeof t3 === "string")
            t1.path = t2.$index(m, "path");
          t3 = t2.$index(m, "phase");
          if (typeof t3 === "string")
            t1.phase = t2.$index(m, "phase");
          t3 = t2.$index(m, "detail");
          if (typeof t3 === "string")
            t1.detail = t2.$index(m, "detail");
          return t1;
        }, null, null, 2, 0, 178, 113, [], "new DSError$fromMap"]}
    },
    "+DSError": [0],
    Unspecified: {
      "^": "Object;",
      static: {Unspecified$: [function() {
          return new O.Unspecified();
        }, null, null, 0, 0, 5, "new Unspecified"]}
    },
    "+Unspecified": [0],
    PassiveChannel: {
      "^": "Object;onReceiveController<-323,_processors@-324,conn<-320,getData@-292,_isReady@-303,connected@-303,onDisconnectController<-307,onConnectController<-307",
      get$onReceive: [function() {
        return J.get$stream$x(this.onReceiveController);
      }, null, null, 1, 0, 95, "onReceive"],
      sendWhenReady$1: [function(getData) {
        this.getData = getData;
        this.conn.requireSend$0();
      }, "call$1", "get$sendWhenReady", 2, 0, 96, 156, [], "sendWhenReady"],
      get$isReady: [function() {
        return this._isReady;
      }, null, null, 1, 0, 31, "isReady"],
      set$isReady: [function(val) {
        this._isReady = val;
      }, null, null, 3, 0, 97, 157, [], "isReady"],
      get$onDisconnected: [function() {
        return this.onDisconnectController.get$future();
      }, null, null, 1, 0, 85, "onDisconnected"],
      get$onConnected: [function() {
        return this.onConnectController.get$future();
      }, null, null, 1, 0, 85, "onConnected"],
      updateConnect$0: [function() {
        if (this.connected === true)
          return;
        this.connected = true;
        J.complete$1$x(this.onConnectController, this);
      }, "call$0", "get$updateConnect", 0, 0, 7, "updateConnect"],
      getData$0: function() {
        return this.getData.call$0();
      },
      connected$0: function() {
        return this.connected.call$0();
      },
      onDisconnected$0: function() {
        return this.get$onDisconnected().call$0();
      },
      static: {PassiveChannel$: [function(conn, connected) {
          var t1, t2, t3;
          t1 = P.StreamController_StreamController(null, null, null, null, false, P.List);
          t2 = new P._Future(0, $.Zone__current, null);
          t2.$builtinTypeInfo = [O.ConnectionChannel];
          t2 = new P._AsyncCompleter(t2);
          t2.$builtinTypeInfo = [O.ConnectionChannel];
          t3 = new P._Future(0, $.Zone__current, null);
          t3.$builtinTypeInfo = [O.ConnectionChannel];
          t3 = new P._AsyncCompleter(t3);
          t3.$builtinTypeInfo = [O.ConnectionChannel];
          return new O.PassiveChannel(t1, [], conn, null, false, connected, t2, t3);
        }, null, null, 2, 2, 230, 37, 134, [], 135, [], "new PassiveChannel"]}
    },
    "+PassiveChannel": [0, 325],
    ConnectionHandler: {
      "^": "Object;_conn@-325,_connListener@-326,_beforeSendListener@-326,_toSendList@-327,_processors@-324,_pendingSend@-303",
      get$connection: [function(_) {
        return this._conn;
      }, null, null, 1, 0, 84, "connection"],
      set$connection: [function(_, conn) {
        var t1 = this._connListener;
        if (t1 != null) {
          t1.cancel$0();
          this._connListener = null;
          this._onDisconnected$1(this._conn);
        }
        this._conn = conn;
        this._connListener = conn.get$onReceive().listen$1(this.get$onData());
        this._conn.get$onDisconnected().then$1(this.get$_onDisconnected());
        if (this._conn.get$connected() === true)
          this.onReconnected$0();
        else
          this._conn.get$onConnected().then$1(new O.ConnectionHandler_connection_closure(this));
      }, null, null, 3, 0, 98, 134, [], "connection"],
      _onDisconnected$1: [function(conn) {
        var t1;
        if (J.$eq(this._conn, conn)) {
          t1 = this._connListener;
          if (t1 != null) {
            t1.cancel$0();
            this._connListener = null;
          }
          this.onDisconnected$0();
          this._conn = null;
        }
      }, "call$1", "get$_onDisconnected", 2, 0, 99, 134, [], "_onDisconnected"],
      onReconnected$0: ["super$ConnectionHandler$onReconnected$0", function() {
        if (this._pendingSend === true)
          this._conn.sendWhenReady$1(this.get$doSend());
      }, "call$0", "get$onReconnected", 0, 0, 7, "onReconnected"],
      addToSendList$1: [function(m) {
        J.add$1$ax(this._toSendList, m);
        if (this._pendingSend !== true && this._conn != null) {
          this._conn.sendWhenReady$1(this.get$doSend());
          this._pendingSend = true;
        }
      }, "call$1", "get$addToSendList", 2, 0, 100, 113, [], "addToSendList"],
      addProcessor$1: [function(processor) {
        if (J.contains$1$asx(this._processors, processor) !== true)
          J.add$1$ax(this._processors, processor);
        if (this._pendingSend !== true && this._conn != null) {
          this._conn.sendWhenReady$1(this.get$doSend());
          this._pendingSend = true;
        }
      }, "call$1", "get$addProcessor", 2, 0, 58, 158, [], "addProcessor"],
      doSend$0: ["super$ConnectionHandler$doSend$0", function() {
        var processors, t1, rslt;
        this._pendingSend = false;
        processors = this._processors;
        this._processors = [];
        for (t1 = J.get$iterator$ax(processors); t1.moveNext$0();)
          t1.get$current().call$0();
        rslt = this._toSendList;
        this._toSendList = [];
        return rslt;
      }, "call$0", "get$doSend", 0, 0, 101, "doSend"],
      static: {ConnectionHandler$: [function() {
          return new O.ConnectionHandler(null, null, null, [], [], false);
        }, null, null, 0, 0, 231, "new ConnectionHandler"]}
    },
    "+ConnectionHandler": [0],
    ConnectionHandler_connection_closure: {
      "^": "Closure:8;_common$_captured_this_0",
      call$1: [function(conn) {
        return this._common$_captured_this_0.onReconnected$0();
      }, null, null, 2, 0, 8, 134, [], "call"]
    },
    Node0: {
      "^": "Object;profile@-328,attributes*-329,configs@-329,children*-330",
      getAttribute$1: [function(_, $name) {
        var t1;
        if (this.attributes.containsKey$1($name) === true)
          return J.$index$asx(this.attributes, $name);
        t1 = this.profile;
        if (t1 != null && J.get$attributes$x(t1).containsKey$1($name) === true)
          return J.$index$asx(J.get$attributes$x(this.profile), $name);
        return;
      }, "call$1", "get$getAttribute", 2, 0, 75, 124, [], "getAttribute"],
      getConfig$1: [function($name) {
        var t1;
        if (this.configs.containsKey$1($name) === true)
          return J.$index$asx(this.configs, $name);
        t1 = this.profile;
        if (t1 != null && t1.get$configs().containsKey$1($name) === true)
          return J.$index$asx(this.profile.get$configs(), $name);
        return;
      }, "call$1", "get$getConfig", 2, 0, 75, 124, [], "getConfig"],
      addChild$2: ["super$Node$addChild$2", function($name, node) {
        J.$indexSet$ax(this.children, $name, node);
      }, "call$2", "get$addChild", 4, 0, 102, 124, [], 159, [], "addChild"],
      removeChild$1: ["super$Node$removeChild$1", function(input) {
        if (typeof input === "string") {
          J.remove$1$ax(this.children, this.getChild$1(input));
          return input;
        } else if (input instanceof O.Node0)
          J.remove$1$ax(this.children, input);
        else
          throw H.wrapException(P.Exception_Exception("Invalid Input"));
        return;
      }, "call$1", "get$removeChild", 2, 0, 103, 41, [], "removeChild"],
      getChild$1: [function($name) {
        var t1;
        if (this.children.containsKey$1($name) === true)
          return J.$index$asx(this.children, $name);
        t1 = this.profile;
        if (t1 != null && t1.get$configs().containsKey$1($name) === true)
          return J.$index$asx(this.profile.get$configs(), $name);
        return;
      }, "call$1", "get$getChild", 2, 0, 104, 124, [], "getChild"],
      $get$1: [function($name) {
        var t1 = J.getInterceptor$s($name);
        if (t1.startsWith$1($name, "$"))
          return this.getConfig$1($name);
        if (t1.startsWith$1($name, "@"))
          return this.getAttribute$1(0, $name);
        return this.getChild$1($name);
      }, "call$1", "get$get", 2, 0, 75, 124, [], "get"],
      forEachChild$1: [function(callback) {
        var t1;
        J.forEach$1$ax(this.children, callback);
        t1 = this.profile;
        if (t1 != null)
          J.forEach$1$ax(J.get$children$x(t1), new O.Node_forEachChild_closure(this, callback));
      }, "call$1", "get$forEachChild", 2, 0, 105, 47, [], "forEachChild"],
      getSimpleMap$0: [function() {
        var rslt = P.LinkedHashMap__makeEmpty();
        if (this.configs.containsKey$1("$is") === true)
          rslt.$indexSet(0, "$is", J.$index$asx(this.configs, "$is"));
        if (this.configs.containsKey$1("$type") === true)
          rslt.$indexSet(0, "$type", J.$index$asx(this.configs, "$type"));
        if (this.configs.containsKey$1("$name") === true)
          rslt.$indexSet(0, "$name", J.$index$asx(this.configs, "$name"));
        if (this.configs.containsKey$1("$invokable") === true)
          rslt.$indexSet(0, "$invokable", J.$index$asx(this.configs, "$invokable"));
        if (this.configs.containsKey$1("$writable") === true)
          rslt.$indexSet(0, "$writable", J.$index$asx(this.configs, "$writable"));
        return rslt;
      }, "call$0", "get$getSimpleMap", 0, 0, 94, "getSimpleMap"],
      static: {Node$: [function() {
          return new O.Node0(null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
        }, null, null, 0, 0, 5, "new Node"]}
    },
    "+Node": [0],
    Node_forEachChild_closure: {
      "^": "Closure:106;_common$_captured_this_0,_common$_captured_callback_1",
      call$2: [function(str, n) {
        if (this._common$_captured_this_0.children.containsKey$1(str) !== true)
          this._common$_captured_callback_1.call$2(str, n);
      }, null, null, 4, 0, 106, 160, [], 28, [], "call"]
    },
    Path: {
      "^": "Object;path*-300,parentPath@-300,name*-300,valid@-303",
      _parse$0: [function() {
        var t1, t2, pos;
        if (J.$eq(this.path, "") || J.contains$1$asx(this.path, $.get$Path_invalidChar()) === true || J.contains$1$asx(this.path, "//") === true)
          this.valid = false;
        if (J.$eq(this.path, "/")) {
          this.valid = true;
          this.name = "/";
          this.parentPath = "";
          return;
        }
        if (J.endsWith$1$s(this.path, "/")) {
          t1 = this.path;
          t2 = J.getInterceptor$asx(t1);
          this.path = t2.substring$2(t1, 0, J.$sub$in(t2.get$length(t1), 1));
        }
        pos = J.lastIndexOf$1$asx(this.path, "/");
        t1 = J.getInterceptor$in(pos);
        if (t1.$lt(pos, 0)) {
          this.name = this.path;
          this.parentPath = "";
        } else if (t1.$eq(pos, 0)) {
          this.parentPath = "/";
          this.name = J.substring$1$s(this.path, 1);
        } else {
          this.parentPath = J.substring$2$s(this.path, 0, pos);
          this.name = J.substring$1$s(this.path, t1.$add(pos, 1));
          if (J.contains$1$asx(this.parentPath, "/$") === true || J.contains$1$asx(this.parentPath, "/@") === true)
            this.valid = false;
        }
      }, "call$0", "get$_parse", 0, 0, 7, "_parse"],
      get$absolute: [function(_) {
        return J.$eq(this.name, "/") || J.startsWith$1$s(this.parentPath, "/");
      }, null, null, 1, 0, 31, "absolute"],
      get$isRoot: [function() {
        return J.$eq(this.name, "/");
      }, null, null, 1, 0, 31, "isRoot"],
      get$isConfig: [function() {
        return J.startsWith$1$s(this.name, "$");
      }, null, null, 1, 0, 31, "isConfig"],
      get$isAttribute: [function() {
        return J.startsWith$1$s(this.name, "@");
      }, null, null, 1, 0, 31, "isAttribute"],
      get$isNode: [function() {
        return !J.startsWith$1$s(this.name, "@") && !J.startsWith$1$s(this.name, "$");
      }, null, null, 1, 0, 31, "isNode"],
      mergeBasePath$2: [function(base, force) {
        var t1;
        if (base == null)
          return;
        if (!(J.$eq(this.name, "/") || J.startsWith$1$s(this.parentPath, "/"))) {
          if (J.$eq(this.parentPath, "")) {
            this.parentPath = base;
            t1 = base;
          } else {
            t1 = H.S(base) + "/" + H.S(this.parentPath);
            this.parentPath = t1;
          }
          this.path = H.S(t1) + "/" + H.S(this.name);
        } else if (force === true)
          if (J.$eq(this.name, "")) {
            this.path = base;
            this._parse$0();
          } else {
            t1 = H.S(base) + H.S(this.parentPath);
            this.parentPath = t1;
            this.path = t1 + "/" + H.S(this.name);
          }
      }, function(base) {
        return this.mergeBasePath$2(base, false);
      }, "mergeBasePath$1", "call$2", "call$1", "get$mergeBasePath", 2, 2, 107, 37, 161, [], 162, [], "mergeBasePath"],
      static: {"^": "Path_invalidChar<-331", Path_getValidPath: [function(path, basePath) {
          var p;
          if (typeof path === "string") {
            p = new O.Path(path, null, null, true);
            p._parse$0();
            if (p.valid === true) {
              p.mergeBasePath$1(basePath);
              return p;
            }
          }
          return;
        }, function(path) {
          return O.Path_getValidPath(path, null);
        }, "call$2", "call$1", "Path_getValidPath$closure", 2, 2, 232, 35, 107, [], 136, [], "getValidPath"], Path_getValidNodePath: [function(path, basePath) {
          var p;
          if (typeof path === "string") {
            p = new O.Path(path, null, null, true);
            p._parse$0();
            if (p.valid === true && !J.startsWith$1$s(p.name, "@") && !J.startsWith$1$s(p.name, "$")) {
              p.mergeBasePath$1(basePath);
              return p;
            }
          }
          return;
        }, function(path) {
          return O.Path_getValidNodePath(path, null);
        }, "call$2", "call$1", "Path_getValidNodePath$closure", 2, 2, 232, 35, 107, [], 136, [], "getValidNodePath"], Path_getValidAttributePath: [function(path, basePath) {
          var p;
          if (typeof path === "string") {
            p = new O.Path(path, null, null, true);
            p._parse$0();
            if (p.valid === true && J.startsWith$1$s(p.name, "@")) {
              p.mergeBasePath$1(basePath);
              return p;
            }
          }
          return;
        }, function(path) {
          return O.Path_getValidAttributePath(path, null);
        }, "call$2", "call$1", "Path_getValidAttributePath$closure", 2, 2, 232, 35, 107, [], 136, [], "getValidAttributePath"], Path_getValidConfigPath: [function(path, basePath) {
          var p;
          if (typeof path === "string") {
            p = new O.Path(path, null, null, true);
            p._parse$0();
            if (p.valid === true && J.startsWith$1$s(p.name, "$")) {
              p.mergeBasePath$1(basePath);
              return p;
            }
          }
          return;
        }, function(path) {
          return O.Path_getValidConfigPath(path, null);
        }, "call$2", "call$1", "Path_getValidConfigPath$closure", 2, 2, 232, 35, 107, [], 136, [], "getValidConfigPath"], Path$: [function(path) {
          var t1 = new O.Path(path, null, null, true);
          t1._parse$0();
          return t1;
        }, null, null, 2, 0, 13, 107, [], "new Path"]}
    },
    "+Path": [0],
    Permission: {
      "^": "Object;",
      static: {"^": "Permission_NONE<-311,Permission_READ<-311,Permission_WRITE<-311,Permission_CONFIG<-311,Permission_NEVER<-311,Permission_names<-302,Permission_nameParser<-319", Permission$: [function() {
          return new O.Permission();
        }, null, null, 0, 0, 233, "new Permission"], Permission_parse: [function(obj, defaultVal) {
          if (typeof obj === "string" && C.Map_50eJC.containsKey$1(obj))
            return C.Map_50eJC.$index(0, obj);
          return defaultVal;
        }, function(obj) {
          return O.Permission_parse(obj, 4);
        }, "call$2", "call$1", "Permission_parse$closure", 2, 2, 234, 137, 138, [], 139, [], "parse"]}
    },
    "+Permission": [0],
    PermissionList: {
      "^": "Object;idMatchs@-319,groupMatchs@-319,defaultPermission@-311",
      updatePermissions$1: [function(data) {
        var t1, obj, t2, t3;
        J.clear$0$ax(this.idMatchs);
        J.clear$0$ax(this.groupMatchs);
        this.defaultPermission = 0;
        for (t1 = J.get$iterator$ax(data); t1.moveNext$0();) {
          obj = t1.get$current();
          t2 = J.getInterceptor(obj);
          if (!!t2.$isMap) {
            t3 = t2.$index(obj, "id");
            if (typeof t3 === "string")
              J.$indexSet$ax(this.idMatchs, t2.$index(obj, "id"), C.Map_50eJC.$index(0, t2.$index(obj, "permission")));
            else {
              t3 = t2.$index(obj, "group");
              if (typeof t3 === "string")
                if (J.$eq(t2.$index(obj, "group"), "default"))
                  this.defaultPermission = C.Map_50eJC.$index(0, t2.$index(obj, "permission"));
                else
                  J.$indexSet$ax(this.groupMatchs, t2.$index(obj, "group"), C.Map_50eJC.$index(0, t2.$index(obj, "permission")));
            }
          }
        }
      }, "call$1", "get$updatePermissions", 2, 0, 108, 52, [], "updatePermissions"],
      getPermission$1: [function(responder) {
        return 3;
      }, "call$1", "get$getPermission", 2, 0, 109, 163, [], "getPermission"],
      static: {PermissionList$: [function() {
          return new O.PermissionList(P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeEmpty(), 0);
        }, null, null, 0, 0, 235, "new PermissionList"]}
    },
    "+PermissionList": [0],
    StreamConnectionAdapter: {
      "^": "Object;",
      static: {StreamConnectionAdapter$: [function() {
          return new O.StreamConnectionAdapter();
        }, null, null, 0, 0, 236, "new StreamConnectionAdapter"]}
    },
    "+StreamConnectionAdapter": [0],
    StreamConnection: {
      "^": "Object;adapter<-332,clientLink@-309,_responderChannel@-306,_requesterChannel@-306,onRequestReadyCompleter@-307,_onDisconnectedCompleter@-308,pingTimer@-333,pingCount@-311,_dataSent@-303,_common$_dataReceiveCount@-311,_serverCommand@-304",
      get$responderChannel: [function() {
        return this._responderChannel;
      }, null, null, 1, 0, 84, "responderChannel"],
      get$requesterChannel: [function() {
        return this._requesterChannel;
      }, null, null, 1, 0, 84, "requesterChannel"],
      get$onRequesterReady: [function() {
        return this.onRequestReadyCompleter.get$future();
      }, null, null, 1, 0, 85, "onRequesterReady"],
      get$onDisconnected: [function() {
        return this._onDisconnectedCompleter.get$future();
      }, null, null, 1, 0, 86, "onDisconnected"],
      onPingTimer$1: [function(t) {
        var t1, t2;
        if (J.$ge$in(this._common$_dataReceiveCount, 3)) {
          this.close$0(0);
          return;
        }
        this._common$_dataReceiveCount = J.$add$ins(this._common$_dataReceiveCount, 1);
        if (this._dataSent === true) {
          this._dataSent = false;
          return;
        }
        t1 = this._serverCommand;
        if (t1 == null) {
          t1 = P.LinkedHashMap__makeEmpty();
          this._serverCommand = t1;
        }
        t2 = J.$add$ins(this.pingCount, 1);
        this.pingCount = t2;
        J.$indexSet$ax(t1, "ping", t2);
        Q.DsTimer_callLaterOnce(this.get$_send());
      }, "call$1", "get$onPingTimer", 2, 0, 110, 164, [], "onPingTimer"],
      requireSend$0: [function() {
        Q.DsTimer_callLaterOnce(this.get$_send());
      }, "call$0", "get$requireSend", 0, 0, 7, "requireSend"],
      addServerCommand$2: [function(key, value) {
        var t1 = this._serverCommand;
        if (t1 == null) {
          t1 = P.LinkedHashMap__makeEmpty();
          this._serverCommand = t1;
        }
        J.$indexSet$ax(t1, key, value);
        Q.DsTimer_callLaterOnce(this.get$_send());
      }, "call$2", "get$addServerCommand", 4, 0, 111, 21, [], 22, [], "addServerCommand"],
      onData$1: [function(data) {
        var m, err, stack, err0, stack0, t1, t2, exception;
        if (this._onDisconnectedCompleter.get$isCompleted())
          return;
        Q.logger().finest$1("begin StreamConnection.onData");
        if (!this.onRequestReadyCompleter.get$isCompleted())
          J.complete$1$x(this.onRequestReadyCompleter, this._requesterChannel);
        this._common$_dataReceiveCount = 0;
        m = null;
        t1 = data;
        t2 = H.checkSubtype(t1, "$isList", [P.$int], "$asList");
        if (t2) {
          try {
            m = P._parseJson(C.Utf8Codec_false.decode$1(data), $.get$DsJson_instance().decoder._reviver);
            Q.logger().fine$1("Stream JSON (bytes): " + H.S(m));
          } catch (exception) {
            t1 = H.unwrapException(exception);
            err = t1;
            stack = H.getTraceFromException(exception);
            Q.logger().fine$3("Failed to decode JSON bytes in Stream Connection", err, stack);
            this.close$0(0);
            return;
          }
          if (!!J.getInterceptor(J.$index$asx(m, "responses")).$isList)
            J.add$1$ax(this._requesterChannel.get$onReceiveController(), J.$index$asx(m, "responses"));
          if (!!J.getInterceptor(J.$index$asx(m, "requests")).$isList)
            J.add$1$ax(this._responderChannel.get$onReceiveController(), J.$index$asx(m, "requests"));
        } else {
          t1 = data;
          if (typeof t1 === "string") {
            try {
              m = P._parseJson(data, $.get$DsJson_instance().decoder._reviver);
              Q.logger().fine$1("Stream JSON: " + H.S(m));
            } catch (exception) {
              t1 = H.unwrapException(exception);
              err0 = t1;
              stack0 = H.getTraceFromException(exception);
              Q.logger().severe$3("Failed to decode JSON from Stream Connection", err0, stack0);
              this.close$0(0);
              return;
            }
            t1 = J.$index$asx(m, "salt");
            if (typeof t1 === "string" && this.clientLink != null)
              this.clientLink.updateSalt$1(J.$index$asx(m, "salt"));
            if (!!J.getInterceptor(J.$index$asx(m, "responses")).$isList)
              J.add$1$ax(this._requesterChannel.get$onReceiveController(), J.$index$asx(m, "responses"));
            if (!!J.getInterceptor(J.$index$asx(m, "requests")).$isList)
              J.add$1$ax(this._responderChannel.get$onReceiveController(), J.$index$asx(m, "requests"));
          }
        }
        Q.logger().finest$1("end StreamConnection.onData");
      }, "call$1", "get$onData", 2, 0, 20, 52, [], "onData"],
      _send$0: [function() {
        var m, needSend, rslt, t1, t2, output, stringifier;
        m = this._serverCommand;
        if (m != null) {
          this._serverCommand = null;
          needSend = true;
        } else {
          m = P.LinkedHashMap__makeEmpty();
          needSend = false;
        }
        if (this._responderChannel.get$getData() != null) {
          rslt = this._responderChannel.getData$0();
          if (rslt != null && !J.$eq(J.get$length$asx(rslt), 0)) {
            J.$indexSet$ax(m, "responses", rslt);
            needSend = true;
          }
        }
        if (this._requesterChannel.get$getData() != null) {
          rslt = this._requesterChannel.getData$0();
          if (rslt != null && !J.$eq(J.get$length$asx(rslt), 0)) {
            J.$indexSet$ax(m, "requests", rslt);
            needSend = true;
          }
        }
        if (needSend) {
          Q.logger().fine$1("send: " + H.S(m));
          t1 = $.get$DsJson_instance();
          t1 = t1.encoder;
          t2 = t1._toEncodable;
          t1 = t1.indent;
          output = new P.StringBuffer("");
          if (t1 == null) {
            t1 = t2 != null ? t2 : P._defaultToEncodable$closure();
            stringifier = new P._JsonStringStringifier(output, [], t1);
          } else {
            t2 = t2 != null ? t2 : P._defaultToEncodable$closure();
            stringifier = new P._JsonStringStringifierPretty(t1, 0, output, [], t2);
          }
          stringifier.writeObject$1(m);
          t1 = output._contents;
          J.send$1$x(this.adapter, t1.charCodeAt(0) == 0 ? t1 : t1);
          this._dataSent = true;
        }
      }, "call$0", "get$_send", 0, 0, 7, "_send"],
      addData$1: [function(m) {
        var t1, t2, output, stringifier;
        t1 = $.get$DsJson_instance();
        t1 = t1.encoder;
        t2 = t1._toEncodable;
        t1 = t1.indent;
        output = new P.StringBuffer("");
        if (t1 == null) {
          t1 = t2 != null ? t2 : P._defaultToEncodable$closure();
          stringifier = new P._JsonStringStringifier(output, [], t1);
        } else {
          t2 = t2 != null ? t2 : P._defaultToEncodable$closure();
          stringifier = new P._JsonStringStringifierPretty(t1, 0, output, [], t2);
        }
        stringifier.writeObject$1(m);
        t1 = output._contents;
        J.send$1$x(this.adapter, t1.charCodeAt(0) == 0 ? t1 : t1);
      }, "call$1", "get$addData", 2, 0, 100, 113, [], "addData"],
      _common$_onDone$0: [function() {
        Q.logger().fine$1("Stream disconnected");
        if (this._requesterChannel.get$onReceiveController().get$isClosed() !== true)
          J.close$0$x(this._requesterChannel.get$onReceiveController());
        if (!this._requesterChannel.get$onDisconnectController().get$isCompleted())
          J.complete$1$x(this._requesterChannel.get$onDisconnectController(), this._requesterChannel);
        if (this._responderChannel.get$onReceiveController().get$isClosed() !== true)
          J.close$0$x(this._responderChannel.get$onReceiveController());
        if (!this._responderChannel.get$onDisconnectController().get$isCompleted())
          J.complete$1$x(this._responderChannel.get$onDisconnectController(), this._responderChannel);
        if (!this._onDisconnectedCompleter.get$isCompleted())
          J.complete$1$x(this._onDisconnectedCompleter, false);
        var t1 = this.pingTimer;
        if (t1 != null)
          t1.cancel$0();
      }, "call$0", "get$_common$_onDone", 0, 0, 7, "_common$_onDone"],
      close$0: [function(_) {
        J.close$0$x(this.adapter).then$1(new O.StreamConnection_close_closure(this));
      }, "call$0", "get$close", 0, 0, 7, "close", 165],
      StreamConnection$3$clientLink$enableTimeout: function(adapter, clientLink, enableTimeout) {
        var t1, t2, t3;
        t1 = P.StreamController_StreamController(null, null, null, null, false, P.List);
        t2 = new P._Future(0, $.Zone__current, null);
        t2.$builtinTypeInfo = [O.ConnectionChannel];
        t2 = new P._AsyncCompleter(t2);
        t2.$builtinTypeInfo = [O.ConnectionChannel];
        t3 = new P._Future(0, $.Zone__current, null);
        t3.$builtinTypeInfo = [O.ConnectionChannel];
        t3 = new P._AsyncCompleter(t3);
        t3.$builtinTypeInfo = [O.ConnectionChannel];
        this._responderChannel = new O.PassiveChannel(t1, [], this, null, false, true, t2, t3);
        t1 = P.StreamController_StreamController(null, null, null, null, false, P.List);
        t2 = new P._Future(0, $.Zone__current, null);
        t2.$builtinTypeInfo = [O.ConnectionChannel];
        t2 = new P._AsyncCompleter(t2);
        t2.$builtinTypeInfo = [O.ConnectionChannel];
        t3 = new P._Future(0, $.Zone__current, null);
        t3.$builtinTypeInfo = [O.ConnectionChannel];
        t3 = new P._AsyncCompleter(t3);
        t3.$builtinTypeInfo = [O.ConnectionChannel];
        this._requesterChannel = new O.PassiveChannel(t1, [], this, null, false, true, t2, t3);
        t1 = this.adapter;
        t1.receive$0().listen$2$onDone(this.get$onData(), this.get$_common$_onDone());
        J.send$1$x(t1, $.get$fixedBlankData());
        if (enableTimeout === true)
          this.pingTimer = P.Timer_Timer$periodic(P.Duration$(0, 0, 0, 0, 0, 20), this.get$onPingTimer());
      },
      onDisconnected$0: function() {
        return this.get$onDisconnected().call$0();
      },
      static: {StreamConnection$: [function(adapter, clientLink, enableTimeout) {
          var t1, t2;
          t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [O.ConnectionChannel];
          t1 = new P._AsyncCompleter(t1);
          t1.$builtinTypeInfo = [O.ConnectionChannel];
          t2 = new P._Future(0, $.Zone__current, null);
          t2.$builtinTypeInfo = [P.bool];
          t2 = new P._AsyncCompleter(t2);
          t2.$builtinTypeInfo = [P.bool];
          t1 = new O.StreamConnection(adapter, clientLink, null, null, t1, t2, null, 0, false, 0, null);
          t1.StreamConnection$3$clientLink$enableTimeout(adapter, clientLink, enableTimeout);
          return t1;
        }, null, null, 2, 5, 237, 35, 37, 140, [], 101, [], 141, [], "new StreamConnection"]}
    },
    "+StreamConnection": [0, 334, 312],
    StreamConnection_close_closure: {
      "^": "Closure:8;_common$_captured_this_0",
      call$1: [function(_) {
        return this._common$_captured_this_0._common$_onDone$0();
      }, null, null, 2, 0, 8, 51, [], "call"]
    },
    TableColumn: {
      "^": "Object;type*-300,name*-300,defaultValue*-0",
      getData$0: [function() {
        var rslt, t1;
        rslt = P.LinkedHashMap__makeLiteral(["type", this.type, "name", this.name]);
        t1 = this.defaultValue;
        if (t1 != null)
          rslt.$indexSet(0, "default", t1);
        return rslt;
      }, "call$0", "get$getData", 0, 0, 94, "getData"],
      static: {TableColumn$: [function($name, type, defaultValue) {
          return new O.TableColumn(type, $name, defaultValue);
        }, null, null, 4, 2, 238, 35, 124, [], 130, [], 142, [], "new TableColumn"], TableColumn_serializeColumns: [function(list) {
          var rslts, t1, m, t2, rslt;
          rslts = [];
          for (t1 = J.get$iterator$ax(list); t1.moveNext$0();) {
            m = t1.get$current();
            t2 = J.getInterceptor(m);
            if (!!t2.$isMap)
              rslts.push(m);
            else if (!!t2.$isTableColumn) {
              rslt = P.LinkedHashMap__makeLiteral(["type", m.type, "name", m.name]);
              t2 = m.defaultValue;
              if (t2 != null)
                rslt.$indexSet(0, "default", t2);
              rslts.push(rslt);
            }
          }
          return rslts;
        }, "call$1", "TableColumn_serializeColumns$closure", 2, 0, 239, 143, [], "serializeColumns"], TableColumn_parseColumns: [function(list) {
          var rslt, t1, m, t2, t3, type;
          rslt = [];
          rslt.$builtinTypeInfo = [O.TableColumn];
          for (t1 = J.get$iterator$ax(list); t1.moveNext$0();) {
            m = t1.get$current();
            t2 = J.getInterceptor(m);
            if (!!t2.$isMap) {
              t3 = t2.$index(m, "name");
              t3 = typeof t3 === "string";
            } else
              t3 = false;
            if (t3) {
              t3 = t2.$index(m, "type");
              type = typeof t3 === "string" ? t2.$index(m, "type") : "string";
              rslt.push(new O.TableColumn(type, t2.$index(m, "name"), t2.$index(m, "default")));
            } else if (!!t2.$isTableColumn)
              rslt.push(m);
            else
              return;
          }
          return rslt;
        }, "call$1", "TableColumn_parseColumns$closure", 2, 0, 240, 143, [], "parseColumns"]}
    },
    "+TableColumn": [0],
    Table: {
      "^": "Object;columns@-335,rows*-336",
      static: {Table$: [function(columns, rows) {
          return new O.Table(columns, rows);
        }, null, null, 4, 0, 241, 144, [], 145, [], "new Table"]}
    },
    "+Table": [0],
    ValueUpdate: {
      "^": "Object;value*-337,ts@-300,status*-300,count@-311,sum@-338,min*-338,max*-338",
      ValueUpdate$merge$2: function(oldUpdate, newUpdate) {
        var t1, t2, t3;
        t1 = J.getInterceptor$x(newUpdate);
        this.value = t1.get$value(newUpdate);
        this.ts = newUpdate.get$ts();
        this.status = t1.get$status(newUpdate);
        this.count = J.$add$ins(oldUpdate.get$count(), newUpdate.get$count());
        if (!J.get$isNaN$n(oldUpdate.get$sum()))
          this.sum = J.$add$ins(this.sum, oldUpdate.get$sum());
        if (!J.get$isNaN$n(newUpdate.get$sum()))
          this.sum = J.$add$ins(this.sum, newUpdate.get$sum());
        t2 = J.getInterceptor$x(oldUpdate);
        t3 = t2.get$min(oldUpdate);
        this.min = t3;
        if (J.get$isNaN$n(t3) || J.$lt$in(t1.get$min(newUpdate), this.min))
          this.min = t1.get$min(newUpdate);
        t2 = t2.get$min(oldUpdate);
        this.max = t2;
        if (J.get$isNaN$n(t2) || J.$gt$in(t1.get$max(newUpdate), this.max))
          this.max = t1.get$max(newUpdate);
      },
      ValueUpdate$8$count$max$meta$min$status$sum$ts: function(value, count, max, meta, min, $status, sum, ts) {
        var t1, t2;
        if (this.ts == null)
          this.ts = O.ValueUpdate_getTs();
        if (meta != null) {
          t1 = J.getInterceptor$asx(meta);
          t2 = t1.$index(meta, "count");
          if (typeof t2 === "number" && Math.floor(t2) === t2)
            this.count = t1.$index(meta, "count");
          else if (this.value == null)
            this.count = 0;
          t2 = t1.$index(meta, "status");
          if (typeof t2 === "string")
            this.status = t1.$index(meta, "status");
          t2 = t1.$index(meta, "sum");
          if (typeof t2 === "number")
            this.sum = t1.$index(meta, "sum");
          t2 = t1.$index(meta, "max");
          if (typeof t2 === "number")
            this.max = t1.$index(meta, "max");
          t2 = t1.$index(meta, "min");
          if (typeof t2 === "number")
            this.min = t1.$index(meta, "min");
        }
        t1 = this.value;
        if (typeof t1 === "number" && J.$eq(this.count, 1)) {
          t1 = this.sum;
          if (!J.$eq(t1, t1))
            this.sum = this.value;
          t1 = this.max;
          if (!J.$eq(t1, t1))
            this.max = this.value;
          t1 = this.min;
          if (!J.$eq(t1, t1))
            this.min = this.value;
        }
      },
      static: {"^": "ValueUpdate_TIME_ZONE<-300", ValueUpdate_getTs: [function() {
          return new P.DateTime(Date.now(), false).toIso8601String$0() + H.S($.get$ValueUpdate_TIME_ZONE());
        }, "call$0", "ValueUpdate_getTs$closure", 0, 0, 3, "getTs"], ValueUpdate$: [function(value, count, max, meta, min, $status, sum, ts) {
          var t1 = new O.ValueUpdate(value, ts, $status, count, sum, min, max);
          t1.ValueUpdate$8$count$max$meta$min$status$sum$ts(value, count, max, meta, min, $status, sum, ts);
          return t1;
        }, null, null, 2, 15, 242, 35, 35, 35, 111, 146, 146, 146, 22, [], 147, [], 148, [], 149, [], 150, [], 151, [], 152, [], 153, [], "new ValueUpdate"], ValueUpdate$merge: [function(oldUpdate, newUpdate) {
          var t1 = new O.ValueUpdate(null, null, null, null, 0, null, null);
          t1.ValueUpdate$merge$2(oldUpdate, newUpdate);
          return t1;
        }, null, null, 4, 0, 243, 154, [], 155, [], "new ValueUpdate$merge"]}
    },
    "+ValueUpdate": [0],
    closure3: {
      "^": "Closure:5;",
      call$0: [function() {
        var timeZoneOffset, s, hh, mm, t1;
        timeZoneOffset = C.JSNumber_methods._tdivFast$1(new P.DateTime(Date.now(), false).get$timeZoneOffset()._duration, 60000000);
        if (timeZoneOffset < 0) {
          timeZoneOffset = -timeZoneOffset;
          s = "-";
        } else
          s = "+";
        hh = C.JSNumber_methods._tdivFast$1(timeZoneOffset, 60);
        mm = C.JSNumber_methods.$mod(timeZoneOffset, 60);
        t1 = s + (hh < 10 ? "0" : "") + H.S(hh) + ":";
        return t1 + (mm < 10 ? "0" : "") + H.S(mm);
      }, null, null, 0, 0, 5, "call"]
    }
  }], ["dslink.http.websocket", "package:dslink/src/http/websocket_conn.dart",, T, {
    "^": "",
    WebSocketConnection: {
      "^": "Object;_websocket$_responderChannel,_websocket$_requesterChannel,onRequestReadyCompleter@,_websocket$_onDisconnectedCompleter,clientLink<,socket,pingTimer@,pingCount@,_websocket$_dataSent,_dataReceiveCount,throughput,_websocket$_serverCommand,binaryInCache,binaryOutCache",
      get$responderChannel: [function() {
        return this._websocket$_responderChannel;
      }, null, null, 1, 0, 84, "responderChannel"],
      get$requesterChannel: [function() {
        return this._websocket$_requesterChannel;
      }, null, null, 1, 0, 84, "requesterChannel"],
      get$onRequesterReady: [function() {
        return this.onRequestReadyCompleter.future;
      }, null, null, 1, 0, 85, "onRequesterReady"],
      get$onDisconnected: [function() {
        return this._websocket$_onDisconnectedCompleter.future;
      }, null, null, 1, 0, 86, "onDisconnected"],
      onPingTimer$1: [function(t) {
        var t1 = this._dataReceiveCount;
        if (t1 >= 3) {
          this.close$0(0);
          return;
        }
        this._dataReceiveCount = t1 + 1;
        if (this._websocket$_dataSent) {
          this._websocket$_dataSent = false;
          return;
        }
        t1 = this._websocket$_serverCommand;
        if (t1 == null) {
          t1 = P.LinkedHashMap__makeEmpty();
          this._websocket$_serverCommand = t1;
        }
        t1.$indexSet(0, "ping", ++this.pingCount);
        Q.DsTimer_callLaterOnce(this.get$_websocket$_send());
      }, "call$1", "get$onPingTimer", 2, 0, 110, 164, []],
      requireSend$0: [function() {
        Q.DsTimer_callLaterOnce(this.get$_websocket$_send());
      }, "call$0", "get$requireSend", 0, 0, 7, "requireSend"],
      addServerCommand$2: [function(key, value) {
        var t1 = this._websocket$_serverCommand;
        if (t1 == null) {
          t1 = P.LinkedHashMap__makeEmpty();
          this._websocket$_serverCommand = t1;
        }
        t1.$indexSet(0, key, value);
        Q.DsTimer_callLaterOnce(this.get$_websocket$_send());
      }, "call$2", "get$addServerCommand", 4, 0, 111, 21, [], 22, [], "addServerCommand"],
      onData$1: [function(data) {
        var m, err, stack, err0, t1, t2, exception;
        if (!this._websocket$_onDisconnectedCompleter.future.get$_mayComplete())
          return;
        Q.logger().finest$1("begin WebSocketConnection.onData");
        if (this.onRequestReadyCompleter.future.get$_mayComplete())
          this.onRequestReadyCompleter.complete$1(0, this._websocket$_requesterChannel);
        this._dataReceiveCount = 0;
        m = null;
        t1 = data;
        t2 = H.checkSubtype(t1, "$isList", [P.$int], "$asList");
        if (t2) {
          t1 = this.throughput;
          t2 = J.get$length$asx(data);
          if (typeof t2 !== "number")
            return H.iae(t2);
          this.throughput = t1 + t2;
          if (!J.$eq(J.get$length$asx(data), 0) && J.$eq(J.$index$asx(data, 0), 0)) {
            Q.logger().finest$1(" receive binary length " + H.S(J.get$length$asx(data)));
            this.binaryInCache.receiveData$1(data);
            return;
          }
          try {
            t1 = C.Utf8Codec_false.decode$1(data);
            m = $.get$DsJson_instance().decodeJsonFrame$2(t1, this.binaryInCache);
            Q.logger().fine$1("WebSocket JSON (bytes): " + H.S(m));
          } catch (exception) {
            t1 = H.unwrapException(exception);
            err = t1;
            stack = H.getTraceFromException(exception);
            Q.logger().fine$3("Failed to decode JSON bytes in WebSocket Connection", err, stack);
            this.close$0(0);
            return;
          }
          if (!!J.getInterceptor(J.$index$asx(m, "responses")).$isList)
            J.add$1$ax(this._websocket$_requesterChannel.onReceiveController, J.$index$asx(m, "responses"));
          if (!!J.getInterceptor(J.$index$asx(m, "requests")).$isList)
            J.add$1$ax(this._websocket$_responderChannel.onReceiveController, J.$index$asx(m, "requests"));
        } else {
          t1 = data;
          if (typeof t1 === "string") {
            this.throughput = this.throughput + J.get$length$asx(data);
            try {
              m = $.get$DsJson_instance().decodeJsonFrame$2(data, this.binaryInCache);
              Q.logger().fine$1("WebSocket JSON: " + H.S(m));
            } catch (exception) {
              t1 = H.unwrapException(exception);
              err0 = t1;
              Q.logger().severe$2("Failed to decode JSON from WebSocket Connection", err0);
              this.close$0(0);
              return;
            }
            t1 = J.$index$asx(m, "salt");
            if (typeof t1 === "string" && true)
              J.$indexSet$ax(this.clientLink.salts, 0, J.$index$asx(m, "salt"));
            if (!!J.getInterceptor(J.$index$asx(m, "responses")).$isList)
              J.add$1$ax(this._websocket$_requesterChannel.onReceiveController, J.$index$asx(m, "responses"));
            if (!!J.getInterceptor(J.$index$asx(m, "requests")).$isList)
              J.add$1$ax(this._websocket$_responderChannel.onReceiveController, J.$index$asx(m, "requests"));
          }
        }
        Q.logger().finest$1("end WebSocketConnection.onData");
      }, "call$1", "get$onData", 2, 0, 20, 52, []],
      _websocket$_send$0: [function() {
        var m, needSend, t1, rslt, json;
        m = this._websocket$_serverCommand;
        if (m != null) {
          this._websocket$_serverCommand = null;
          needSend = true;
        } else {
          m = P.LinkedHashMap__makeEmpty();
          needSend = false;
        }
        t1 = this._websocket$_responderChannel;
        if (t1.getData != null) {
          rslt = t1.getData$0();
          if (rslt != null && !J.$eq(J.get$length$asx(rslt), 0)) {
            m.$indexSet(0, "responses", rslt);
            needSend = true;
          }
        }
        t1 = this._websocket$_requesterChannel;
        if (t1.getData != null) {
          rslt = t1.getData$0();
          if (rslt != null && !J.$eq(J.get$length$asx(rslt), 0)) {
            m.$indexSet(0, "requests", rslt);
            needSend = true;
          }
        }
        if (needSend) {
          t1 = this.binaryOutCache;
          json = $.get$DsJson_instance().encodeJsonFrame$3$pretty(m, t1, false);
          if (t1.caches.__js_helper$_length !== 0) {
            Q.logger().finest$1("send binary");
            J.add$1$ax(this.socket, t1.export$0());
          }
          Q.logger().finest$1("send: " + json);
          this.throughput = this.throughput + json.length;
          J.add$1$ax(this.socket, json);
          this._websocket$_dataSent = true;
        }
      }, "call$0", "get$_websocket$_send", 0, 0, 7],
      addData$1: function(m) {
        var t1, json;
        t1 = this.binaryOutCache;
        json = $.get$DsJson_instance().encodeJsonFrame$3$pretty(m, t1, false);
        if (t1.caches.__js_helper$_length !== 0) {
          Q.logger().finest$1("send binary");
          J.add$1$ax(this.socket, t1.export$0());
        }
        Q.logger().finest$1("send: " + json);
        this.throughput = this.throughput + json.length;
        J.add$1$ax(this.socket, json);
      },
      _websocket$_onDone$0: [function() {
        Q.logger().fine$1("socket disconnected");
        if (this._websocket$_requesterChannel.onReceiveController.get$isClosed() !== true)
          J.close$0$x(this._websocket$_requesterChannel.onReceiveController);
        if (!this._websocket$_requesterChannel.onDisconnectController.get$isCompleted()) {
          var t1 = this._websocket$_requesterChannel;
          J.complete$1$x(t1.onDisconnectController, t1);
        }
        if (this._websocket$_responderChannel.onReceiveController.get$isClosed() !== true)
          J.close$0$x(this._websocket$_responderChannel.onReceiveController);
        if (!this._websocket$_responderChannel.onDisconnectController.get$isCompleted()) {
          t1 = this._websocket$_responderChannel;
          J.complete$1$x(t1.onDisconnectController, t1);
        }
        t1 = this._websocket$_onDisconnectedCompleter;
        if (t1.future.get$_mayComplete())
          t1.complete$1(0, false);
        t1 = this.pingTimer;
        if (t1 != null)
          t1.cancel$0();
      }, "call$0", "get$_websocket$_onDone", 0, 0, 7],
      close$0: [function(_) {
        var t1, t2;
        t1 = this.socket;
        t2 = J.getInterceptor$x(t1);
        if (J.$eq(t2.get$readyState(t1), 1) || J.$eq(t2.get$readyState(t1), 0))
          t2.close$0(t1);
        this._websocket$_onDone$0();
      }, "call$0", "get$close", 0, 0, 7, "close"],
      onDisconnected$0: function() {
        return this.get$onDisconnected().call$0();
      }
    }
  }], ["dslink.pk", "package:dslink/src/crypto/pk.dart",, K, {
    "^": "",
    bigintToUint8List: function(input) {
      var rslt, t1, len, i;
      rslt = input.toByteArray$0();
      t1 = J.getInterceptor$asx(rslt);
      if (J.$gt$in(t1.get$length(rslt), 32) && J.$eq(t1.$index(rslt, 0), 0))
        rslt = t1.sublist$1(rslt, 1);
      t1 = J.getInterceptor$asx(rslt);
      len = t1.get$length(rslt);
      if (typeof len !== "number")
        return H.iae(len);
      i = 0;
      for (; i < len; ++i)
        if (J.$lt$in(t1.$index(rslt, i), 0))
          t1.$indexSet(rslt, i, J.$and$in(t1.$index(rslt, i), 255));
      return new Uint8Array(H._ensureNativeList(rslt));
    },
    closure: {
      "^": "Closure:5;",
      call$0: function() {
        var q, a, b, g, n, h, seedBytes, curve, t1;
        q = Z.BigInteger_BigInteger("ffffffff00000001000000000000000000000000ffffffffffffffffffffffff", 16, null);
        a = Z.BigInteger_BigInteger("ffffffff00000001000000000000000000000000fffffffffffffffffffffffc", 16, null);
        b = Z.BigInteger_BigInteger("5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b", 16, null);
        g = Z.BigInteger_BigInteger("046b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2964fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5", 16, null);
        n = Z.BigInteger_BigInteger("ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551", 16, null);
        h = Z.BigInteger_BigInteger("1", 16, null);
        seedBytes = Z.BigInteger_BigInteger("c49d360886e704936a6678e1139d26b7819f7e90", 16, null).toByteArray$0();
        curve = new E.ECCurve(q, null, null, null);
        curve._a = curve.fromBigInteger$1(a);
        curve._b = curve.fromBigInteger$1(b);
        curve._infinity = E.ECPoint$(curve, null, null, false);
        t1 = curve.decodePoint$1(g.toByteArray$0());
        return new S.ECDomainParametersImpl("secp256r1", curve, seedBytes, t1, n, h);
      }
    },
    ECDH: {
      "^": "Object;"
    },
    ECDHImpl: {
      "^": "Object;bytes@,_ecPrivateKey,_ecPublicKey,_ecPublicKeyRemote",
      hashSalt$1: function(salt) {
        var raw, t1, t2, t3, t4, sha256;
        raw = [];
        C.JSArray_methods.addAll$1(raw, C.Utf8Codec_false.get$encoder().convert$1(salt));
        C.JSArray_methods.addAll$1(raw, this.bytes);
        t1 = new R.Register64(null, null);
        t1.$set$2(0, null);
        t2 = new Uint8Array(H._checkLength(4));
        t3 = Array(8);
        t3.fixed$length = Array;
        t3.$builtinTypeInfo = [P.$int];
        t4 = Array(64);
        t4.fixed$length = Array;
        t4.$builtinTypeInfo = [P.$int];
        sha256 = new K.SHA256Digest("SHA-256", 32, t1, t2, null, C.Endianness_false, 8, t3, t4, null);
        sha256.MD4FamilyDigest$4(C.Endianness_false, 8, 64, null);
        return Q.Base64_encode(sha256.process$1(new Uint8Array(H._ensureNativeList(raw))), 0, 0);
      },
      ECDHImpl$4: function(_ecPublicKeyRemote, _ecPrivateKey, _ecPublicKey, Q2) {
        var t1, t2, newbytes, dlen, i, t3;
        t1 = K.bigintToUint8List(J.get$x$x(Q2).toBigInteger$0());
        this.bytes = t1;
        if (t1.length > 32) {
          t1 = this.bytes;
          t2 = J.getInterceptor$asx(t1);
          this.bytes = t2.sublist$1(t1, t2.get$length(t1) - 32);
        } else if (J.get$length$asx(this.bytes) < 32) {
          t1 = H._checkLength(32);
          newbytes = new Uint8Array(t1);
          dlen = 32 - J.get$length$asx(this.bytes);
          for (i = 0; i < J.get$length$asx(this.bytes); ++i) {
            t2 = i + dlen;
            t3 = J.$index$asx(this.bytes, i);
            if (t2 < 0 || t2 >= t1)
              return H.ioore(newbytes, t2);
            newbytes[t2] = t3;
          }
          for (i = 0; i < dlen; ++i) {
            if (i >= t1)
              return H.ioore(newbytes, i);
            newbytes[i] = 0;
          }
          this.bytes = newbytes;
        }
      },
      static: {ECDHImpl$: function(_ecPublicKeyRemote, _ecPrivateKey, _ecPublicKey, Q2) {
          var t1 = new K.ECDHImpl(null, _ecPrivateKey, _ecPublicKey, _ecPublicKeyRemote);
          t1.ECDHImpl$4(_ecPublicKeyRemote, _ecPrivateKey, _ecPublicKey, Q2);
          return t1;
        }}
    },
    PublicKey: {
      "^": "Object;ecPublicKey@,qBase64<,qHash64<"
    },
    PrivateKey: {
      "^": "Object;publicKey@-340,ecPrivateKey@-341,ecPublicKey@-342",
      saveToString$0: [function() {
        return Q.Base64_encode(K.bigintToUint8List(this.ecPrivateKey.get$d()), 0, 0) + " " + this.publicKey.get$qBase64();
      }, "call$0", "get$saveToString", 0, 0, 3, "saveToString"],
      decodeECDH$1: [function(key) {
        var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, $self = this, p, t1, Q2;
        function decodeECDH$1(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                p = $self.ecPrivateKey.get$parameters().get$curve().decodePoint$1(Q.Base64_decode(key));
                t1 = $.get$_secp256r1();
                Q2 = p.$mul(0, $self.ecPrivateKey.get$d());
                $returnValue = K.ECDHImpl$(new Q.ECPublicKey(p, t1), $self.ecPrivateKey, $self.ecPublicKey, Q2);
                // goto return
                $goto = 1;
                break;
              case 1:
                // return
                return H.asyncHelper($returnValue, 0, completer, null);
              case 2:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, decodeECDH$1, completer, null);
      }, "call$1", "get$decodeECDH", 2, 0, 112, 21, [], "decodeECDH"],
      PrivateKey$2: function(ecPrivateKey, ecPublicKey) {
        var t1, t2, bytes, t3, t4, t5, sha256;
        t1 = this.ecPublicKey;
        if (t1 == null) {
          t1 = new Q.ECPublicKey($.get$_secp256r1().get$G().$mul(0, this.ecPrivateKey.get$d()), $.get$_secp256r1());
          this.ecPublicKey = t1;
        }
        t2 = new K.PublicKey(t1, null, null);
        bytes = t1.get$Q().getEncoded$1(false);
        t2.qBase64 = Q.Base64_encode(bytes, 0, 0);
        t1 = new R.Register64(null, null);
        t1.$set$2(0, null);
        t3 = new Uint8Array(H._checkLength(4));
        t4 = Array(8);
        t4.fixed$length = Array;
        t4.$builtinTypeInfo = [P.$int];
        t5 = Array(64);
        t5.fixed$length = Array;
        t5.$builtinTypeInfo = [P.$int];
        sha256 = new K.SHA256Digest("SHA-256", 32, t1, t3, null, C.Endianness_false, 8, t4, t5, null);
        sha256.MD4FamilyDigest$4(C.Endianness_false, 8, 64, null);
        t2.qHash64 = Q.Base64_encode(sha256.process$1(bytes), 0, 0);
        this.publicKey = t2;
      },
      static: {PrivateKey$: [function(ecPrivateKey, ecPublicKey) {
          var t1 = new K.PrivateKey(null, ecPrivateKey, ecPublicKey);
          t1.PrivateKey$2(ecPrivateKey, ecPublicKey);
          return t1;
        }, null, null, 2, 2, 244, 35, 166, [], 167, [], "new PrivateKey"], PrivateKey_generate: [function() {
          var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, gen, t1, rsapars, params, pair;
          function PrivateKey_generate(errorCode, result) {
            if (errorCode === 1) {
              currentError = result;
              $goto = handler;
            }
            while (true)
              switch ($goto) {
                case 0:
                  // Function start
                  gen = new S.ECKeyGenerator(null, null);
                  t1 = $.get$_secp256r1();
                  rsapars = new Z.ECKeyGeneratorParameters(null, t1.get$n().bitLength$0(0));
                  rsapars._domainParameters = t1;
                  params = new A.ParametersWithRandom(rsapars, $.get$DSRandom_instance());
                  params.$builtinTypeInfo = [null];
                  gen.init$1(params);
                  pair = gen.generateKeyPair$0();
                  $returnValue = K.PrivateKey$(pair.privateKey, pair.publicKey);
                  // goto return
                  $goto = 1;
                  break;
                case 1:
                  // return
                  return H.asyncHelper($returnValue, 0, completer, null);
                case 2:
                  // rethrow
                  return H.asyncHelper(currentError, 1, completer);
              }
          }
          return H.asyncHelper(null, PrivateKey_generate, completer, null);
        }, "call$0", "PrivateKey_generate$closure", 0, 0, 245, "generate"], PrivateKey_PrivateKey$generateSync: [function() {
          var gen, t1, rsapars, params, pair;
          gen = new S.ECKeyGenerator(null, null);
          t1 = $.get$_secp256r1();
          rsapars = new Z.ECKeyGeneratorParameters(null, t1.get$n().bitLength$0(0));
          rsapars._domainParameters = t1;
          params = new A.ParametersWithRandom(rsapars, $.get$DSRandom_instance());
          params.$builtinTypeInfo = [null];
          gen.init$1(params);
          pair = gen.generateKeyPair$0();
          return K.PrivateKey$(pair.privateKey, pair.publicKey);
        }, null, null, 0, 0, 246, "new PrivateKey$generateSync"], PrivateKey_PrivateKey$loadFromString: [function(str) {
          var t1, ss, d, t2;
          t1 = J.getInterceptor$asx(str);
          if (t1.contains$1(str, " ") === true) {
            ss = t1.split$1(str, " ");
            if (0 >= ss.length)
              return H.ioore(ss, 0);
            d = Z.BigInteger_BigInteger$fromBytes(1, Q.Base64_decode(ss[0]));
            t1 = $.get$_secp256r1();
            t2 = t1.get$curve();
            if (1 >= ss.length)
              return H.ioore(ss, 1);
            return K.PrivateKey$(new Q.ECPrivateKey(d, t1), new Q.ECPublicKey(t2.decodePoint$1(Q.Base64_decode(ss[1])), $.get$_secp256r1()));
          } else
            return K.PrivateKey$(new Q.ECPrivateKey(Z.BigInteger_BigInteger$fromBytes(1, Q.Base64_decode(str)), $.get$_secp256r1()), null);
        }, null, null, 2, 0, 247, 160, [], "new PrivateKey$loadFromString"]}
    },
    "+PrivateKey": [0],
    DSRandom: {
      "^": "SecureRandomBase;_delegate,_aes",
      randomize$1: function(str) {
        var utf, length2, bytes, out, offset, t1;
        utf = C.Utf8Codec_false.get$encoder().convert$1(str);
        length2 = C.JSNumber_methods.toInt$0(Math.ceil(utf.length)) * 16;
        if (length2 > utf.length) {
          utf = C.NativeUint8List_methods.toList$0(utf);
          for (; length2 > utf.length;)
            C.JSArray_methods.add$1(utf, 0);
        }
        bytes = new Uint8Array(H._ensureNativeList(utf));
        out = new Uint8Array(H._checkLength(16));
        offset = 0;
        while (true) {
          t1 = bytes.byteLength;
          if (typeof t1 !== "number")
            return H.iae(t1);
          if (!(offset < t1))
            break;
          offset += this._aes.processBlock$4(bytes, offset, out, 0);
        }
      },
      nextUint8$0: function() {
        return this._delegate.nextUint8$0();
      },
      DSRandom$1: function(seed) {
        var t1, t2, r, params;
        t1 = new S.AESFastEngine(null, null, null, null, null, null, null);
        this._aes = t1;
        t1 = new Y.BlockCtrRandom(t1, null, null, null);
        t1._input = new Uint8Array(H._checkLength(16));
        t2 = H._checkLength(16);
        t1._output = new Uint8Array(t2);
        t1._used = t2;
        this._delegate = t1;
        t1 = new Uint8Array(H._ensureNativeList([C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256), C.C__JSRandom.nextInt$1(256)]));
        t2 = Date.now();
        r = P._Random$(t2);
        params = new Y.ParametersWithIV(new Uint8Array(H._ensureNativeList([r.nextInt$1(256), r.nextInt$1(256), r.nextInt$1(256), r.nextInt$1(256), r.nextInt$1(256), r.nextInt$1(256), r.nextInt$1(256), r.nextInt$1(256)])), new E.KeyParameter(t1));
        params.$builtinTypeInfo = [null];
        this._delegate.seed$1(0, params);
      }
    }
  }], ["dslink.requester", "package:dslink/requester.dart",, L, {
    "^": "",
    DefaultDefNodes: {
      "^": "Object;",
      static: {"^": "DefaultDefNodes__defaultDefs<-304,DefaultDefNodes_nameMap<-330,DefaultDefNodes_pathMap<-330", DefaultDefNodes$: [function() {
          return new L.DefaultDefNodes();
        }, null, null, 0, 0, 248, "new DefaultDefNodes"]}
    },
    "+DefaultDefNodes": [0],
    closure2: {
      "^": "Closure:5;",
      call$0: [function() {
        var rslt = P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, O.Node0);
        $.get$DefaultDefNodes__defaultDefs().forEach$1(0, new L._closure(rslt));
        return rslt;
      }, null, null, 0, 0, 5, "call"]
    },
    _closure: {
      "^": "Closure:113;_captured_rslt_0",
      call$2: [function(k, m) {
        var node = new L.RemoteDefNode("/defs/profile/" + H.S(k), false, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
        node._getRawName$0();
        J.forEach$1$ax(m, new L.__closure(node));
        node.listed = true;
        this._captured_rslt_0.$indexSet(0, k, node);
      }, null, null, 4, 0, 113, 30, [], 113, [], "call"]
    },
    __closure: {
      "^": "Closure:114;_captured_node_1",
      call$2: [function(n, v) {
        var t1 = J.getInterceptor$s(n);
        if (t1.startsWith$1(n, "$"))
          J.$indexSet$ax(this._captured_node_1.configs, n, v);
        else if (t1.startsWith$1(n, "@"))
          J.$indexSet$ax(this._captured_node_1.attributes, n, v);
      }, null, null, 4, 0, 114, 28, [], 63, [], "call"]
    },
    closure4: {
      "^": "Closure:5;",
      call$0: [function() {
        var rslt = P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, O.Node0);
        J.forEach$1$ax($.get$DefaultDefNodes_nameMap(), new L._closure0(rslt));
        return rslt;
      }, null, null, 0, 0, 5, "call"]
    },
    _closure0: {
      "^": "Closure:15;_captured_rslt_0",
      call$2: [function(k, node) {
        this._captured_rslt_0.$indexSet(0, node.get$remotePath(), node);
      }, null, null, 4, 0, 15, 30, [], 159, [], "call"]
    },
    RemoteNodeCache: {
      "^": "Object;_nodes@-343",
      getRemoteNode$1: [function(path) {
        var t1, t2;
        if (this._nodes.containsKey$1(path) !== true) {
          t1 = J.startsWith$1$s(path, "defs");
          t2 = this._nodes;
          if (t1) {
            t1 = new L.RemoteDefNode(path, false, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
            t1._getRawName$0();
            J.$indexSet$ax(t2, path, t1);
          } else {
            t1 = new L.RemoteNode(path, false, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
            t1._getRawName$0();
            J.$indexSet$ax(t2, path, t1);
          }
        }
        return J.$index$asx(this._nodes, path);
      }, "call$1", "get$getRemoteNode", 2, 0, 115, 107, [], "getRemoteNode"],
      getDefNode$2: [function(path, defName) {
        var t1 = $.get$DefaultDefNodes_nameMap();
        if (t1.containsKey$1(defName) === true)
          return J.$index$asx(t1, defName);
        return this.getRemoteNode$1(path);
      }, "call$2", "get$getDefNode", 4, 0, 116, 107, [], 180, [], "getDefNode"],
      updateRemoteChildNode$3: [function($parent, $name, m) {
        var path, rslt;
        path = J.$eq($parent.get$remotePath(), "/") ? "/" + H.S($name) : H.S($parent.get$remotePath()) + "/" + H.S($name);
        if (this._nodes.containsKey$1(path) === true) {
          rslt = J.$index$asx(this._nodes, path);
          rslt.updateRemoteChildData$2(m, this);
        } else {
          rslt = new L.RemoteNode(path, false, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
          rslt._getRawName$0();
          J.$indexSet$ax(this._nodes, path, rslt);
          rslt.updateRemoteChildData$2(m, this);
        }
        return rslt;
      }, "call$3", "get$updateRemoteChildNode", 6, 0, 117, 44, [], 124, [], 113, [], "updateRemoteChildNode"],
      static: {RemoteNodeCache$: [function() {
          return new L.RemoteNodeCache(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, L.RemoteNode));
        }, null, null, 0, 0, 5, "new RemoteNodeCache"]}
    },
    "+RemoteNodeCache": [0],
    RemoteNode: {
      "^": "Node0;remotePath<-300,listed@-303,name*-300,_listController@-344,_subscribeController@-345,profile-328,attributes-329,configs-329,children-330",
      _getRawName$0: [function() {
        var t1, t2;
        t1 = this.remotePath;
        t2 = J.getInterceptor(t1);
        if (t2.$eq(t1, "/"))
          this.name = "/";
        else
          this.name = C.JSArray_methods.get$last(t2.split$1(t1, "/"));
      }, "call$0", "get$_getRawName", 0, 0, 7, "_getRawName"],
      isUpdated$0: [function() {
        var t1 = this._listController;
        if (!(t1 != null && t1.get$initialized()))
          return false;
        t1 = this.profile;
        if (t1 instanceof L.RemoteNode) {
          t1 = H.interceptedTypeCast(t1, "$isRemoteNode")._listController;
          t1 = !(t1 != null && t1.get$initialized());
        } else
          t1 = false;
        if (t1)
          return false;
        return true;
      }, "call$0", "get$isUpdated", 0, 0, 31, "isUpdated"],
      isSelfUpdated$0: [function() {
        var t1 = this._listController;
        return t1 != null && t1.get$initialized();
      }, "call$0", "get$isSelfUpdated", 0, 0, 31, "isSelfUpdated"],
      _requester$_list$1: [function(requester) {
        var t1 = this._listController;
        if (t1 == null) {
          t1 = new L.ListController(this, requester, null, null, null, P.LinkedHashSet_LinkedHashSet(null, null, null, P.String), null, true, false);
          t1._requester$_controller = Q.BroadcastStreamController$(t1.get$onStartListen(), t1.get$_onAllCancel(), t1.get$_requester$_onListen(), L.RequesterListUpdate);
          this._listController = t1;
        }
        return J.get$stream$x(t1);
      }, "call$1", "get$_requester$_list", 2, 0, 118, 169, [], "_requester$_list"],
      createListController$1: [function(requester) {
        var t1 = new L.ListController(this, requester, null, null, null, P.LinkedHashSet_LinkedHashSet(null, null, null, P.String), null, true, false);
        t1._requester$_controller = Q.BroadcastStreamController$(t1.get$onStartListen(), t1.get$_onAllCancel(), t1.get$_requester$_onListen(), L.RequesterListUpdate);
        return t1;
      }, "call$1", "get$createListController", 2, 0, 119, 169, [], "createListController"],
      _requester$_subscribe$3: [function(requester, callback, cacheLevel) {
        var t1, t2;
        t1 = this._subscribeController;
        if (t1 == null) {
          t1 = new L.ReqSubscribeController(this, requester, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), 0, null, null);
          t2 = requester.get$nextSid();
          requester.set$nextSid(J.$add$ins(t2, 1));
          t1.sid = t2;
          this._subscribeController = t1;
        }
        t1.listen$2(callback, cacheLevel);
      }, "call$3", "get$_requester$_subscribe", 6, 0, 120, 169, [], 47, [], 112, [], "_requester$_subscribe"],
      _unsubscribe$2: [function(requester, callback) {
        var t1 = this._subscribeController;
        if (t1 != null)
          t1.unlisten$1(callback);
      }, "call$2", "get$_unsubscribe", 4, 0, 121, 169, [], 47, [], "_unsubscribe"],
      _requester$_invoke$3: [function(params, requester, maxPermission) {
        var t1, t2, reqMap;
        t1 = new L.InvokeController(this, requester, null, null, null, null);
        t2 = P.StreamController_StreamController(null, null, null, null, false, L.RequesterInvokeUpdate);
        t1._requester$_controller = t2;
        t2.get$done().then$1(t1.get$_onUnsubscribe());
        t1._requester$_stream = J.get$stream$x(t1._requester$_controller);
        reqMap = P.LinkedHashMap__makeLiteral(["method", "invoke", "path", this.remotePath, "params", params]);
        if (!J.$eq(maxPermission, 3)) {
          if (maxPermission >>> 0 !== maxPermission || maxPermission >= 5)
            return H.ioore(C.List_504, maxPermission);
          reqMap.$indexSet(0, "permit", C.List_504[maxPermission]);
        }
        t1._cachedColumns = L.InvokeController_getNodeColumns(this);
        t1._request = requester._sendRequest$2(reqMap, t1);
        return t1._requester$_stream;
      }, function(params, requester) {
        return this._requester$_invoke$3(params, requester, 3);
      }, "_requester$_invoke$2", "call$3", "call$2", "get$_requester$_invoke", 4, 2, 122, 175, 176, [], 169, [], 177, [], "_requester$_invoke"],
      updateRemoteChildData$2: [function(m, cache) {
        var t1, t2;
        t1 = {};
        t1._captured_childPathPre_0 = null;
        t2 = this.remotePath;
        if (J.$eq(t2, "/"))
          t1._captured_childPathPre_0 = "/";
        else
          t1._captured_childPathPre_0 = H.S(t2) + "/";
        J.forEach$1$ax(m, new L.RemoteNode_updateRemoteChildData_closure(t1, this, cache));
      }, "call$2", "get$updateRemoteChildData", 4, 0, 123, 113, [], 179, [], "updateRemoteChildData"],
      resetNodeCache$0: [function() {
        J.clear$0$ax(this.configs);
        J.clear$0$ax(this.attributes);
        J.clear$0$ax(this.children);
      }, "call$0", "get$resetNodeCache", 0, 0, 7, "resetNodeCache"],
      static: {RemoteNode$: [function(remotePath) {
          var t1 = new L.RemoteNode(remotePath, false, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
          t1._getRawName$0();
          return t1;
        }, null, null, 2, 0, 13, 168, [], "new RemoteNode"]}
    },
    "+RemoteNode": [328],
    RemoteNode_updateRemoteChildData_closure: {
      "^": "Closure:10;_requester$_box_0,_requester$_captured_this_1,_captured_cache_2",
      call$2: [function(key, value) {
        var t1, node;
        t1 = J.getInterceptor$s(key);
        if (t1.startsWith$1(key, "$"))
          J.$indexSet$ax(this._requester$_captured_this_1.configs, key, value);
        else if (t1.startsWith$1(key, "@"))
          J.$indexSet$ax(this._requester$_captured_this_1.attributes, key, value);
        else if (!!J.getInterceptor(value).$isMap) {
          t1 = this._captured_cache_2;
          node = t1.getRemoteNode$1(H.S(this._requester$_box_0._captured_childPathPre_0) + "/" + H.S(key));
          J.$indexSet$ax(this._requester$_captured_this_1.children, key, node);
          if (node instanceof L.RemoteNode)
            node.updateRemoteChildData$2(value, t1);
        }
      }, null, null, 4, 0, 10, 21, [], 22, [], "call"]
    },
    RemoteDefNode: {
      "^": "RemoteNode;remotePath-300,listed-303,name-300,_listController-344,_subscribeController-345,profile-328,attributes-329,configs-329,children-330",
      static: {RemoteDefNode$: [function(path) {
          var t1 = new L.RemoteDefNode(path, false, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
          t1._getRawName$0();
          return t1;
        }, null, null, 2, 0, 13, 107, [], "new RemoteDefNode"]}
    },
    "+RemoteDefNode": [346],
    Request: {
      "^": "Object;requester<-314,rid<-311,data>-304,updater<-347,_requester$_isClosed@-303,streamStatus@-300",
      get$isClosed: [function() {
        return this._requester$_isClosed;
      }, null, null, 1, 0, 31, "isClosed"],
      resend$0: [function() {
        this.requester.addToSendList$1(this.data);
      }, "call$0", "get$resend", 0, 0, 7, "resend"],
      _update$1: [function(m) {
        var t1, t2, updates, columns, error, t3;
        t1 = J.getInterceptor$asx(m);
        t2 = t1.$index(m, "stream");
        if (typeof t2 === "string")
          this.streamStatus = t1.$index(m, "stream");
        updates = !!J.getInterceptor(t1.$index(m, "updates")).$isList ? t1.$index(m, "updates") : null;
        columns = !!J.getInterceptor(t1.$index(m, "columns")).$isList ? t1.$index(m, "columns") : null;
        if (J.$eq(this.streamStatus, "closed"))
          J.remove$1$ax(this.requester.get$_requests(), this.rid);
        if (m.containsKey$1("error") === true && !!J.getInterceptor(t1.$index(m, "error")).$isMap) {
          t1 = t1.$index(m, "error");
          error = new O.DSError(null, null, null, null, null);
          t2 = J.getInterceptor$asx(t1);
          t3 = t2.$index(t1, "type");
          if (typeof t3 === "string")
            error.type = t2.$index(t1, "type");
          t3 = t2.$index(t1, "msg");
          if (typeof t3 === "string")
            error.msg = t2.$index(t1, "msg");
          t3 = t2.$index(t1, "path");
          if (typeof t3 === "string")
            error.path = t2.$index(t1, "path");
          t3 = t2.$index(t1, "phase");
          if (typeof t3 === "string")
            error.phase = t2.$index(t1, "phase");
          t3 = t2.$index(t1, "detail");
          if (typeof t3 === "string")
            error.detail = t2.$index(t1, "detail");
        } else
          error = null;
        this.updater.onUpdate$4(this.streamStatus, updates, columns, error);
      }, "call$1", "get$_update", 2, 0, 100, 113, [], "_update"],
      _requester$_close$1: [function(error) {
        if (!J.$eq(this.streamStatus, "closed")) {
          this.streamStatus = "closed";
          this.updater.onUpdate$4("closed", null, null, error);
        }
      }, function() {
        return this._requester$_close$1(null);
      }, "_requester$_close$0", "call$1", "call$0", "get$_requester$_close", 0, 2, 124, 35, 17, [], "_requester$_close"],
      close$0: [function(_) {
        this.requester.closeRequest$1(this);
      }, "call$0", "get$close", 0, 0, 7, "close"],
      static: {Request$: [function(requester, rid, updater, data) {
          return new L.Request(requester, rid, data, updater, false, "initialize");
        }, null, null, 8, 0, 249, 169, [], 170, [], 171, [], 52, [], "new Request"]}
    },
    "+Request": [0],
    RequesterInvokeUpdate: {
      "^": "RequesterUpdate;rawColumns@-327,columns@-335,updates@-327,error*-322,_rows*-336,streamStatus-300",
      get$rows: [function(_) {
        var t1, obj, t2, row, i, t3, column, t4;
        if (this._rows == null) {
          this._rows = [];
          for (t1 = J.get$iterator$ax(this.updates); t1.moveNext$0();) {
            obj = t1.get$current();
            t2 = J.getInterceptor(obj);
            if (!!t2.$isList)
              if (J.$lt$in(t2.get$length(obj), J.get$length$asx(this.columns))) {
                row = t2.toList$0(obj);
                for (i = t2.get$length(obj); t2 = J.getInterceptor$in(i), t2.$lt(i, J.get$length$asx(this.columns)); i = t2.$add(i, 1))
                  C.JSArray_methods.add$1(row, J.get$defaultValue$x(J.$index$asx(this.columns, i)));
              } else
                row = J.$gt$in(t2.get$length(obj), J.get$length$asx(this.columns)) ? t2.sublist$2(obj, 0, J.get$length$asx(this.columns)) : obj;
            else if (!!t2.$isMap) {
              row = [];
              for (t3 = J.get$iterator$ax(this.columns); t3.moveNext$0();) {
                column = t3.get$current();
                t4 = J.getInterceptor$x(column);
                if (obj.containsKey$1(t4.get$name(column)) === true)
                  row.push(t2.$index(obj, t4.get$name(column)));
                else
                  row.push(t4.get$defaultValue(column));
              }
            } else
              row = null;
            J.add$1$ax(this._rows, row);
          }
        }
        return this._rows;
      }, null, null, 1, 0, 125, "rows"],
      static: {RequesterInvokeUpdate$: [function(updates, rawColumns, columns, streamStatus, error) {
          return new L.RequesterInvokeUpdate(rawColumns, columns, updates, error, null, streamStatus);
        }, null, null, 8, 2, 250, 35, 172, [], 173, [], 144, [], 174, [], 17, [], "new RequesterInvokeUpdate"]}
    },
    "+RequesterInvokeUpdate": [348],
    InvokeController: {
      "^": "Object;node<-346,requester<-314,_requester$_controller@-349,_requester$_stream@-350,_request@-351,_cachedColumns@-335",
      _onUnsubscribe$1: [function(obj) {
        var t1 = this._request;
        if (t1 != null && !J.$eq(t1.get$streamStatus(), "closed"))
          J.close$0$x(this._request);
      }, "call$1", "get$_onUnsubscribe", 2, 0, 20, 138, [], "_onUnsubscribe"],
      _onNodeUpdate$1: [function(listUpdate) {
      }, "call$1", "get$_onNodeUpdate", 2, 0, 126, 181, [], "_onNodeUpdate"],
      onUpdate$4: [function(streamStatus, updates, columns, error) {
        var t1;
        if (columns != null)
          this._cachedColumns = O.TableColumn_parseColumns(columns);
        t1 = this._cachedColumns;
        if (t1 == null) {
          t1 = [];
          this._cachedColumns = t1;
        }
        if (error != null) {
          J.add$1$ax(this._requester$_controller, new L.RequesterInvokeUpdate(null, null, null, error, null, "closed"));
          streamStatus = "closed";
        } else if (updates != null)
          J.add$1$ax(this._requester$_controller, new L.RequesterInvokeUpdate(columns, t1, updates, null, null, streamStatus));
        if (J.$eq(streamStatus, "closed"))
          J.close$0$x(this._requester$_controller);
      }, function(streamStatus, updates, columns) {
        return this.onUpdate$4(streamStatus, updates, columns, null);
      }, "onUpdate$3", "call$4", "call$3", "get$onUpdate", 6, 2, 127, 35, 174, [], 172, [], 144, [], 17, [], "onUpdate"],
      onDisconnect$0: [function(_) {
      }, "call$0", "get$onDisconnect", 0, 0, 7, "onDisconnect"],
      onReconnect$0: [function() {
      }, "call$0", "get$onReconnect", 0, 0, 7, "onReconnect"],
      static: {InvokeController_getNodeColumns: [function(node) {
          var columns = node.getConfig$1("$columns");
          if (!J.getInterceptor(columns).$isList && node.get$profile() != null)
            columns = node.get$profile().getConfig$1("$columns");
          if (!!J.getInterceptor(columns).$isList)
            return O.TableColumn_parseColumns(columns);
          return;
        }, "call$1", "InvokeController_getNodeColumns$closure", 2, 0, 251, 159, [], "getNodeColumns"], InvokeController$: [function(node, requester, params, maxPermission) {
          var t1, t2, reqMap;
          t1 = new L.InvokeController(node, requester, null, null, null, null);
          t2 = P.StreamController_StreamController(null, null, null, null, false, L.RequesterInvokeUpdate);
          t1._requester$_controller = t2;
          t2.get$done().then$1(t1.get$_onUnsubscribe());
          t1._requester$_stream = J.get$stream$x(t1._requester$_controller);
          reqMap = P.LinkedHashMap__makeLiteral(["method", "invoke", "path", node.get$remotePath(), "params", params]);
          if (!J.$eq(maxPermission, 3)) {
            if (maxPermission >>> 0 !== maxPermission || maxPermission >= 5)
              return H.ioore(C.List_504, maxPermission);
            reqMap.$indexSet(0, "permit", C.List_504[maxPermission]);
          }
          t1._cachedColumns = L.InvokeController_getNodeColumns(node);
          t1._request = requester._sendRequest$2(reqMap, t1);
          return t1;
        }, null, null, 6, 2, 252, 175, 159, [], 169, [], 176, [], 177, [], "new InvokeController"]}
    },
    "+InvokeController": [0, 347],
    RequesterListUpdate: {
      "^": "RequesterUpdate;changes@-302,node@-346,streamStatus-300",
      static: {RequesterListUpdate$: [function(node, changes, streamStatus) {
          return new L.RequesterListUpdate(changes, node, streamStatus);
        }, null, null, 6, 0, 253, 159, [], 178, [], 174, [], "new RequesterListUpdate"]}
    },
    "+RequesterListUpdate": [348],
    ListDefListener: {
      "^": "Object;node<-346,requester<-314,listener@-326,ready@-303",
      cancel$0: [function() {
        this.listener.cancel$0();
      }, "call$0", "get$cancel", 0, 0, 7, "cancel"],
      ListDefListener$3: function(node, requester, callback) {
        this.listener = J.list$1$x(this.requester, this.node.get$remotePath()).listen$1(new L.ListDefListener_closure(this, callback));
      },
      static: {ListDefListener$: [function(node, requester, callback) {
          var t1 = new L.ListDefListener(node, requester, null, false);
          t1.ListDefListener$3(node, requester, callback);
          return t1;
        }, null, null, 6, 0, 254, 159, [], 169, [], 47, [], "new ListDefListener"]}
    },
    "+ListDefListener": [0],
    ListDefListener_closure: {
      "^": "Closure:128;_requester$_captured_this_0,_requester$_captured_callback_1",
      call$1: [function(update) {
        this._requester$_captured_this_0.ready = !J.$eq(update.get$streamStatus(), "initialize");
        this._requester$_captured_callback_1.call$1(update);
      }, null, null, 2, 0, 128, 116, [], "call"]
    },
    ListController: {
      "^": "Object;node<-346,requester<-314,_requester$_controller@-352,request*-351,disconnectTs@-300,changes@-353,_profileLoader@-354,_ready@-303,_pendingRemoveDef@-303",
      get$stream: [function(_) {
        return J.get$stream$x(this._requester$_controller);
      }, null, null, 1, 0, 129, "stream"],
      get$initialized: [function() {
        var t1 = this.request;
        return t1 != null && !J.$eq(t1.get$streamStatus(), "initialize");
      }, null, null, 1, 0, 31, "initialized"],
      onDisconnect$0: [function(_) {
        var t1;
        this.disconnectTs = O.ValueUpdate_getTs();
        t1 = this.node;
        J.$indexSet$ax(t1.get$configs(), "$disconnectedTs", this.disconnectTs);
        J.add$1$ax(this._requester$_controller, new L.RequesterListUpdate(["$disconnectedTs"], t1, this.request.get$streamStatus()));
      }, "call$0", "get$onDisconnect", 0, 0, 7, "onDisconnect"],
      onReconnect$0: [function() {
        if (this.disconnectTs != null) {
          J.remove$1$ax(this.node.get$configs(), "$disconnectedTs");
          this.disconnectTs = null;
          J.add$1$ax(this.changes, "$disconnectedTs");
        }
      }, "call$0", "get$onReconnect", 0, 0, 7, "onReconnect"],
      onUpdate$4: [function(streamStatus, updates, columns, error) {
        var t1, t2, t3, t4, reseted, update, t5, t6, $name, value, removed;
        if (updates != null) {
          for (t1 = J.get$iterator$ax(updates), t2 = this.node, t3 = J.getInterceptor$x(t2), t4 = this.requester, reseted = false; t1.moveNext$0();) {
            update = t1.get$current();
            t5 = J.getInterceptor(update);
            if (!!t5.$isMap) {
              t6 = t5.$index(update, "name");
              if (typeof t6 === "string")
                $name = t5.$index(update, "name");
              else
                continue;
              if (J.$eq(t5.$index(update, "change"), "remove")) {
                value = null;
                removed = true;
              } else {
                value = t5.$index(update, "value");
                removed = false;
              }
            } else {
              if (!!t5.$isList) {
                if (J.$gt$n(t5.get$length(update), 0)) {
                  t6 = t5.$index(update, 0);
                  t6 = typeof t6 === "string";
                } else
                  t6 = false;
                if (t6) {
                  $name = t5.$index(update, 0);
                  value = J.$gt$n(t5.get$length(update), 1) ? t5.$index(update, 1) : null;
                } else
                  continue;
              } else
                continue;
              removed = false;
            }
            t5 = J.getInterceptor$s($name);
            if (t5.startsWith$1($name, "$")) {
              if (!reseted)
                if (!t5.$eq($name, "$is"))
                  if (!t5.$eq($name, "$base"))
                    t6 = t5.$eq($name, "$disconnectedTs") && typeof value === "string";
                  else
                    t6 = true;
                else
                  t6 = true;
              else
                t6 = false;
              if (t6) {
                t2.resetNodeCache$0();
                reseted = true;
              }
              if (t5.$eq($name, "$is"))
                this.loadProfile$1(value);
              J.add$1$ax(this.changes, $name);
              if (removed)
                J.remove$1$ax(t2.get$configs(), $name);
              else
                J.$indexSet$ax(t2.get$configs(), $name, value);
            } else {
              t5 = t5.startsWith$1($name, "@");
              t6 = this.changes;
              if (t5) {
                J.add$1$ax(t6, $name);
                if (removed)
                  J.remove$1$ax(t3.get$attributes(t2), $name);
                else
                  J.$indexSet$ax(t3.get$attributes(t2), $name, value);
              } else {
                J.add$1$ax(t6, $name);
                if (removed)
                  J.remove$1$ax(t3.get$children(t2), $name);
                else if (!!J.getInterceptor(value).$isMap)
                  J.$indexSet$ax(t3.get$children(t2), $name, t4.get$nodeCache().updateRemoteChildNode$3(t2, $name, value));
              }
            }
          }
          if (!J.$eq(this.request.get$streamStatus(), "initialize"))
            t2.set$listed(true);
          if (this._pendingRemoveDef === true)
            this._pendingRemoveDef = false;
          this.onProfileUpdated$0();
        }
      }, function(streamStatus, updates, columns) {
        return this.onUpdate$4(streamStatus, updates, columns, null);
      }, "onUpdate$3", "call$4", "call$3", "get$onUpdate", 6, 2, 127, 35, 174, [], 172, [], 144, [], 17, [], "onUpdate"],
      loadProfile$1: [function(defName) {
        var t1, defPath, t2, t3;
        this._ready = true;
        t1 = J.getInterceptor$s(defName);
        defPath = !t1.startsWith$1(defName, "/") ? "/defs/profile/" + H.S(defName) : defName;
        t2 = this.node;
        if (t2.get$profile() instanceof L.RemoteNode && J.$eq(H.interceptedTypeCast(t2.get$profile(), "$isRemoteNode").remotePath, defPath))
          return;
        t3 = this.requester;
        t2.set$profile(t3.get$nodeCache().getDefNode$2(defPath, defName));
        if (t1.$eq(defName, "node"))
          return;
        if (t2.get$profile() instanceof L.RemoteNode && H.interceptedTypeCast(t2.get$profile(), "$isRemoteNode").listed !== true) {
          this._ready = false;
          this._profileLoader = L.ListDefListener$(t2.get$profile(), t3, this.get$_onProfileUpdate());
        }
      }, "call$1", "get$loadProfile", 2, 0, 61, 180, [], "loadProfile"],
      _onProfileUpdate$1: [function(update) {
        J.addAll$1$ax(this.changes, J.where$1$ax(update.get$changes(), new L.ListController__onProfileUpdate_closure()));
        this._ready = true;
        this.onProfileUpdated$0();
        Q.logger().fine$1("_onDefUpdated");
      }, "call$1", "get$_onProfileUpdate", 2, 0, 126, 116, [], "_onProfileUpdate"],
      onProfileUpdated$0: [function() {
        if (this._ready === true) {
          if (!J.$eq(this.request.get$streamStatus(), "initialize")) {
            J.add$1$ax(this._requester$_controller, new L.RequesterListUpdate(J.toList$0$ax(this.changes), this.node, this.request.get$streamStatus()));
            J.clear$0$ax(this.changes);
          }
          if (J.$eq(this.request.get$streamStatus(), "closed"))
            J.close$0$x(this._requester$_controller);
        }
      }, "call$0", "get$onProfileUpdated", 0, 0, 7, "onProfileUpdated"],
      _checkRemoveDef$0: [function() {
        this._pendingRemoveDef = false;
      }, "call$0", "get$_checkRemoveDef", 0, 0, 7, "_checkRemoveDef"],
      onStartListen$0: [function() {
        if (this.request == null)
          this.request = this.requester._sendRequest$2(P.LinkedHashMap__makeLiteral(["method", "list", "path", this.node.get$remotePath()]), this);
      }, "call$0", "get$onStartListen", 0, 0, 7, "onStartListen"],
      _requester$_onListen$1: [function(callback) {
        if (this._ready === true && this.request != null) {
          if (!$.DsTimer__pending) {
            P.Timer_Timer(C.Duration_0, Q.DsTimer__dsLoop$closure());
            $.DsTimer__pending = true;
          }
          $.get$DsTimer__callbacks().push(new L.ListController__onListen_closure(this, callback));
        }
      }, "call$1", "get$_requester$_onListen", 2, 0, 130, 47, [], "_requester$_onListen"],
      _onAllCancel$0: [function() {
        var t1 = this._profileLoader;
        if (t1 != null) {
          t1.cancel$0();
          this._profileLoader = null;
        }
        t1 = this.request;
        if (t1 != null) {
          this.requester.closeRequest$1(t1);
          this.request = null;
        }
        J.close$0$x(this._requester$_controller);
        this.node.set$_listController(null);
      }, "call$0", "get$_onAllCancel", 0, 0, 7, "_onAllCancel"],
      _destroy$0: [function() {
        var t1 = this._profileLoader;
        if (t1 != null) {
          t1.cancel$0();
          this._profileLoader = null;
        }
        t1 = this.request;
        if (t1 != null) {
          this.requester.closeRequest$1(t1);
          this.request = null;
        }
        J.close$0$x(this._requester$_controller);
        this.node.set$_listController(null);
      }, "call$0", "get$_destroy", 0, 0, 7, "_destroy"],
      static: {"^": "ListController__ignoreProfileProps<-302", ListController$: [function(node, requester) {
          var t1 = new L.ListController(node, requester, null, null, null, P.LinkedHashSet_LinkedHashSet(null, null, null, P.String), null, true, false);
          t1._requester$_controller = Q.BroadcastStreamController$(t1.get$onStartListen(), t1.get$_onAllCancel(), t1.get$_requester$_onListen(), L.RequesterListUpdate);
          return t1;
        }, null, null, 4, 0, 255, 159, [], 169, [], "new ListController"]}
    },
    "+ListController": [0, 347],
    ListController__onProfileUpdate_closure: {
      "^": "Closure:8;",
      call$1: [function(str) {
        return !C.JSArray_methods.contains$1(C.List_$is_$permission_$settings, str);
      }, null, null, 2, 0, 8, 160, [], "call"]
    },
    ListController__onListen_closure: {
      "^": "Closure:5;_requester$_captured_this_0,_requester$_captured_callback_1",
      call$0: [function() {
        var changes, t1, t2, t3;
        changes = [];
        t1 = this._requester$_captured_this_0;
        t2 = t1.node;
        C.JSArray_methods.addAll$1(changes, t2.get$configs().get$keys());
        t3 = J.getInterceptor$x(t2);
        C.JSArray_methods.addAll$1(changes, t3.get$attributes(t2).get$keys());
        C.JSArray_methods.addAll$1(changes, t3.get$children(t2).get$keys());
        this._requester$_captured_callback_1.call$1(new L.RequesterListUpdate(changes, t2, t1.request.get$streamStatus()));
      }, null, null, 0, 0, 5, "call"]
    },
    RemoveController: {
      "^": "Object;completer<-355,requester<-314,path>-300,_request@-351",
      get$future: [function() {
        return this.completer.get$future();
      }, null, null, 1, 0, 131, "future"],
      onUpdate$4: [function($status, updates, columns, error) {
        J.complete$1$x(this.completer, new L.RequesterUpdate($status));
      }, function($status, updates, columns) {
        return this.onUpdate$4($status, updates, columns, null);
      }, "onUpdate$3", "call$4", "call$3", "get$onUpdate", 6, 2, 127, 35, 149, [], 172, [], 144, [], 17, [], "onUpdate"],
      onDisconnect$0: [function(_) {
      }, "call$0", "get$onDisconnect", 0, 0, 7, "onDisconnect"],
      onReconnect$0: [function() {
      }, "call$0", "get$onReconnect", 0, 0, 7, "onReconnect"],
      static: {RemoveController$: [function(requester, path) {
          var t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [L.RequesterUpdate];
          t1 = new P._AsyncCompleter(t1);
          t1.$builtinTypeInfo = [L.RequesterUpdate];
          t1 = new L.RemoveController(t1, requester, path, null);
          t1._request = requester._sendRequest$2(P.LinkedHashMap__makeLiteral(["method", "remove", "path", path]), t1);
          return t1;
        }, null, null, 4, 0, 256, 169, [], 107, [], "new RemoveController"]}
    },
    "+RemoveController": [0, 347],
    SetController: {
      "^": "Object;completer<-355,requester<-314,path>-300,value>-0,_request@-351",
      get$future: [function() {
        return this.completer.get$future();
      }, null, null, 1, 0, 131, "future"],
      onUpdate$4: [function($status, updates, columns, error) {
        J.complete$1$x(this.completer, new L.RequesterUpdate($status));
      }, function($status, updates, columns) {
        return this.onUpdate$4($status, updates, columns, null);
      }, "onUpdate$3", "call$4", "call$3", "get$onUpdate", 6, 2, 127, 35, 149, [], 172, [], 144, [], 17, [], "onUpdate"],
      onDisconnect$0: [function(_) {
      }, "call$0", "get$onDisconnect", 0, 0, 7, "onDisconnect"],
      onReconnect$0: [function() {
      }, "call$0", "get$onReconnect", 0, 0, 7, "onReconnect"],
      static: {SetController$: [function(requester, path, value, maxPermission) {
          var t1, reqMap;
          t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [L.RequesterUpdate];
          t1 = new P._AsyncCompleter(t1);
          t1.$builtinTypeInfo = [L.RequesterUpdate];
          t1 = new L.SetController(t1, requester, path, value, null);
          reqMap = P.LinkedHashMap__makeLiteral(["method", "set", "path", path, "value", value]);
          if (!J.$eq(maxPermission, 3)) {
            if (maxPermission >>> 0 !== maxPermission || maxPermission >= 5)
              return H.ioore(C.List_504, maxPermission);
            reqMap.$indexSet(0, "permit", C.List_504[maxPermission]);
          }
          t1._request = requester._sendRequest$2(reqMap, t1);
          return t1;
        }, null, null, 6, 2, 257, 175, 169, [], 107, [], 22, [], 177, [], "new SetController"]}
    },
    "+SetController": [0, 347],
    ReqSubscribeListener: {
      "^": "Object;callback@-292,requester@-314,path*-300",
      cancel$0: [function() {
        var t1 = this.callback;
        if (t1 != null) {
          this.requester.unsubscribe$2(this.path, t1);
          this.callback = null;
        }
        return;
      }, "call$0", "get$cancel", 0, 0, 27, "cancel"],
      asFuture$1: [function(futureValue) {
        return;
      }, function() {
        return this.asFuture$1(null);
      }, "asFuture$0", "call$1", "call$0", "get$asFuture", 0, 2, 132, 35, 182, [], "asFuture"],
      get$isPaused: [function() {
        return false;
      }, null, null, 1, 0, 31, "isPaused"],
      onData$1: [function(handleData) {
      }, "call$1", "get$onData", 2, 0, 133, 183, [], "onData"],
      onDone$1: [function(handleDone) {
      }, "call$1", "get$onDone", 2, 0, 58, 184, [], "onDone"],
      onError$1: [function(_, handleError) {
      }, "call$1", "get$onError", 2, 0, 134, 185, [], "onError"],
      pause$1: [function(_, resumeSignal) {
      }, function($receiver) {
        return this.pause$1($receiver, null);
      }, "pause$0", "call$1", "call$0", "get$pause", 0, 2, 135, 35, 186, [], "pause"],
      resume$0: [function() {
      }, "call$0", "get$resume", 0, 0, 7, "resume"],
      callback$0: function() {
        return this.callback.call$0();
      },
      callback$1: function(arg0) {
        return this.callback.call$1(arg0);
      },
      static: {ReqSubscribeListener$: [function(requester, path, callback) {
          return new L.ReqSubscribeListener(callback, requester, path);
        }, null, null, 6, 0, 258, 169, [], 107, [], 47, [], "new ReqSubscribeListener"]}
    },
    "+ReqSubscribeListener": [0, 326],
    SubscribeController: {
      "^": "Object;request*-356",
      onDisconnect$0: [function(_) {
      }, "call$0", "get$onDisconnect", 0, 0, 7, "onDisconnect"],
      onReconnect$0: [function() {
      }, "call$0", "get$onReconnect", 0, 0, 7, "onReconnect"],
      onUpdate$4: [function($status, updates, columns, error) {
      }, "call$4", "get$onUpdate", 8, 0, 136, 149, [], 172, [], 144, [], 17, [], "onUpdate"],
      static: {SubscribeController$: [function() {
          return new L.SubscribeController(null);
        }, null, null, 0, 0, 5, "new SubscribeController"]}
    },
    "+SubscribeController": [0, 347],
    SubscribeRequest: {
      "^": "Request;subsriptions<-357,subsriptionids<-358,_changedPaths@-359,toRemove@-327,requester-314,rid-311,data-304,updater-347,_requester$_isClosed-303,streamStatus-300",
      resend$0: [function() {
        this.requester.addProcessor$1(this.get$_sendSubscriptionReuests());
      }, "call$0", "get$resend", 0, 0, 7, "resend", 165],
      _requester$_close$1: [function(error) {
        var t1, t2;
        t1 = this.subsriptions;
        t2 = J.getInterceptor$asx(t1);
        if (t2.get$isNotEmpty(t1))
          t2.forEach$1(t1, new L.SubscribeRequest__close_closure(this));
      }, function() {
        return this._requester$_close$1(null);
      }, "_requester$_close$0", "call$1", "call$0", "get$_requester$_close", 0, 2, 124, 35, 17, [], "_requester$_close", 165],
      _update$1: [function(m) {
        var updates, t1, t2, t3, t4, t5, update, t6, t7, path, ts, sid, value, meta;
        updates = J.$index$asx(m, "updates");
        t1 = J.getInterceptor(updates);
        if (!!t1.$isList)
          for (t1 = t1.get$iterator(updates), t2 = this.subsriptions, t3 = this.subsriptionids, t4 = J.getInterceptor$asx(t3), t5 = J.getInterceptor$asx(t2); t1.moveNext$0();) {
            update = t1.get$current();
            t6 = J.getInterceptor(update);
            if (!!t6.$isMap) {
              t7 = t6.$index(update, "ts");
              if (typeof t7 === "string") {
                path = t6.$index(update, "path");
                ts = t6.$index(update, "ts");
                t7 = t6.$index(update, "path");
                if (typeof t7 === "string") {
                  path = t6.$index(update, "path");
                  sid = -1;
                } else {
                  t7 = t6.$index(update, "sid");
                  if (typeof t7 === "number" && Math.floor(t7) === t7)
                    sid = t6.$index(update, "sid");
                  else
                    continue;
                }
              } else {
                path = null;
                sid = -1;
                ts = null;
              }
              value = t6.$index(update, "value");
              meta = update;
            } else {
              if (!!t6.$isList && J.$gt$in(t6.get$length(update), 2)) {
                t7 = t6.$index(update, 0);
                if (typeof t7 === "string") {
                  path = t6.$index(update, 0);
                  sid = -1;
                } else {
                  t7 = t6.$index(update, 0);
                  if (typeof t7 === "number" && Math.floor(t7) === t7)
                    sid = t6.$index(update, 0);
                  else
                    continue;
                  path = null;
                }
                value = t6.$index(update, 1);
                ts = t6.$index(update, 2);
              } else
                continue;
              meta = null;
            }
            if (path != null && t2.containsKey$1(path) === true)
              t5.$index(t2, path).addValue$1(O.ValueUpdate$(value, 1, 0 / 0, meta, 0 / 0, null, 0 / 0, ts));
            else if (J.$gt$in(sid, -1) && t3.containsKey$1(sid) === true)
              t4.$index(t3, sid).addValue$1(O.ValueUpdate$(value, 1, 0 / 0, meta, 0 / 0, null, 0 / 0, ts));
          }
      }, "call$1", "get$_update", 2, 0, 100, 113, [], "_update", 165],
      addSubscription$2: [function(controller, level) {
        var path = controller.get$node().get$remotePath();
        J.$indexSet$ax(this.subsriptions, path, controller);
        J.$indexSet$ax(this.subsriptionids, controller.get$sid(), controller);
        this.requester.addProcessor$1(this.get$_sendSubscriptionReuests());
        J.add$1$ax(this._changedPaths, path);
      }, "call$2", "get$addSubscription", 4, 0, 137, 187, [], 188, [], "addSubscription"],
      removeSubscription$1: [function(controller) {
        var path, t1, t2;
        path = controller.get$node().get$remotePath();
        t1 = this.subsriptions;
        if (t1.containsKey$1(path) === true) {
          t2 = J.getInterceptor$asx(t1);
          J.add$1$ax(this.toRemove, t2.$index(t1, path).get$sid());
          t2.remove$1(t1, path);
          J.remove$1$ax(this.subsriptionids, controller.get$sid());
          this.requester.addProcessor$1(this.get$_sendSubscriptionReuests());
        } else if (this.subsriptionids.containsKey$1(controller.get$sid()) === true)
          Q.logger().severe$1("unexpected remoteSubscription in the requester, sid: " + H.S(controller.get$sid()));
      }, "call$1", "get$removeSubscription", 2, 0, 138, 187, [], "removeSubscription"],
      _sendSubscriptionReuests$0: [function() {
        var t1, toAdd, processingPaths, t2, t3, t4, path, sub, m;
        t1 = this.requester;
        if (J.get$connection$x(t1) == null)
          return;
        toAdd = [];
        processingPaths = this._changedPaths;
        this._changedPaths = P.HashSet_HashSet(null, null, null, P.String);
        for (t2 = J.get$iterator$ax(processingPaths), t3 = this.subsriptions, t4 = J.getInterceptor$asx(t3); t2.moveNext$0();) {
          path = t2.get$current();
          if (t3.containsKey$1(path) === true) {
            sub = t4.$index(t3, path);
            m = P.LinkedHashMap__makeLiteral(["path", path, "sid", sub.get$sid()]);
            if (J.$gt$n(sub.get$maxCache(), 1))
              m.$indexSet(0, "cache", sub.get$maxCache());
            toAdd.push(m);
          }
        }
        if (toAdd.length !== 0)
          t1._sendRequest$2(P.LinkedHashMap__makeLiteral(["method", "subscribe", "paths", toAdd]), null);
        if (J.get$isEmpty$asx(this.toRemove) !== true) {
          t1._sendRequest$2(P.LinkedHashMap__makeLiteral(["method", "unsubscribe", "sids", this.toRemove]), null);
          this.toRemove = [];
        }
      }, "call$0", "get$_sendSubscriptionReuests", 0, 0, 7, "_sendSubscriptionReuests"],
      SubscribeRequest$2: function(requester, rid) {
        H.interceptedTypeCast(this.updater, "$isSubscribeController").request = this;
      },
      static: {SubscribeRequest$: [function(requester, rid) {
          var t1 = new L.SubscribeRequest(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, L.ReqSubscribeController), P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, L.ReqSubscribeController), P.HashSet_HashSet(null, null, null, P.String), [], requester, rid, null, new L.SubscribeController(null), false, "initialize");
          t1.SubscribeRequest$2(requester, rid);
          return t1;
        }, null, null, 4, 0, 259, 169, [], 170, [], "new SubscribeRequest"]}
    },
    "+SubscribeRequest": [351],
    SubscribeRequest__close_closure: {
      "^": "Closure:139;_requester$_captured_this_0",
      call$2: [function(path, controller) {
        J.add$1$ax(this._requester$_captured_this_0._changedPaths, path);
      }, null, null, 4, 0, 139, 107, [], 187, [], "call"]
    },
    ReqSubscribeController: {
      "^": "Object;node<-346,requester<-314,callbacks@-360,maxCache@-311,sid@-311,_lastUpdate@-361",
      listen$2: [function(callback, cacheLevel) {
        var t1, t2;
        if (J.$lt$in(cacheLevel, 1))
          cacheLevel = 1;
        if (J.$gt$in(cacheLevel, 1000000))
          cacheLevel = 1000000;
        t1 = J.getInterceptor$in(cacheLevel);
        if (t1.$gt(cacheLevel, this.maxCache)) {
          this.maxCache = cacheLevel;
          this.requester.get$_subsciption().addSubscription$2(this, this.maxCache);
        }
        if (this.callbacks.containsKey$1(callback) === true) {
          t1 = J.$eq(J.$index$asx(this.callbacks, callback), this.maxCache) && t1.$lt(cacheLevel, this.maxCache);
          t2 = this.callbacks;
          if (t1) {
            J.$indexSet$ax(t2, callback, cacheLevel);
            this.updateCacheLevel$0();
          } else
            J.$indexSet$ax(t2, callback, cacheLevel);
        } else {
          J.$indexSet$ax(this.callbacks, callback, cacheLevel);
          t1 = this._lastUpdate;
          if (t1 != null)
            callback.call$1(t1);
        }
      }, "call$2", "get$listen", 4, 0, 140, 47, [], 112, [], "listen"],
      unlisten$1: [function(callback) {
        var cacheLevel;
        if (this.callbacks.containsKey$1(callback) === true) {
          cacheLevel = J.remove$1$ax(this.callbacks, callback);
          if (J.get$isEmpty$asx(this.callbacks) === true) {
            this.requester.get$_subsciption().removeSubscription$1(this);
            J.clear$0$ax(this.callbacks);
            this.node.set$_subscribeController(null);
          } else if (J.$eq(cacheLevel, this.maxCache) && J.$gt$n(this.maxCache, 1))
            this.updateCacheLevel$0();
        }
      }, "call$1", "get$unlisten", 2, 0, 130, 47, [], "unlisten"],
      updateCacheLevel$0: [function() {
        var t1 = {};
        t1._captured_maxCacheLevel_0 = 1;
        J.forEach$1$ax(this.callbacks, new L.ReqSubscribeController_updateCacheLevel_closure(t1));
        if (!J.$eq(t1._captured_maxCacheLevel_0, this.maxCache)) {
          this.maxCache = t1._captured_maxCacheLevel_0;
          this.requester.get$_subsciption().addSubscription$2(this, this.maxCache);
        }
      }, "call$0", "get$updateCacheLevel", 0, 0, 7, "updateCacheLevel"],
      addValue$1: [function(update) {
        var t1, t2, _i;
        this._lastUpdate = update;
        for (t1 = J.toList$0$ax(this.callbacks.get$keys()), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].call$1(this._lastUpdate);
      }, "call$1", "get$addValue", 2, 0, 141, 116, [], "addValue"],
      _destroy$0: [function() {
        this.requester.get$_subsciption().removeSubscription$1(this);
        J.clear$0$ax(this.callbacks);
        this.node.set$_subscribeController(null);
      }, "call$0", "get$_destroy", 0, 0, 7, "_destroy"],
      static: {ReqSubscribeController$: [function(node, requester) {
          var t1, t2;
          t1 = new L.ReqSubscribeController(node, requester, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), 0, null, null);
          t2 = requester.get$nextSid();
          requester.set$nextSid(J.$add$ins(t2, 1));
          t1.sid = t2;
          return t1;
        }, null, null, 4, 0, 255, 159, [], 169, [], "new ReqSubscribeController"]}
    },
    "+ReqSubscribeController": [0],
    ReqSubscribeController_updateCacheLevel_closure: {
      "^": "Closure:15;_requester$_box_0",
      call$2: [function(callback, level) {
        var t1 = this._requester$_box_0;
        if (J.$gt$n(level, t1._captured_maxCacheLevel_0))
          t1._captured_maxCacheLevel_0 = level;
      }, null, null, 4, 0, 15, 47, [], 188, [], "call"]
    },
    RequestUpdater: {
      "^": "Object;",
      static: {RequestUpdater$: [function() {
          return new L.RequestUpdater();
        }, null, null, 0, 0, 260, "new RequestUpdater"]}
    },
    "+RequestUpdater": [0],
    RequesterUpdate: {
      "^": "Object;streamStatus<-300",
      static: {RequesterUpdate$: [function(streamStatus) {
          return new L.RequesterUpdate(streamStatus);
        }, null, null, 2, 0, 13, 174, [], "new RequesterUpdate"]}
    },
    "+RequesterUpdate": [0],
    Requester: {
      "^": "ConnectionHandler;_requests@-362,nodeCache<-363,_subsciption@-356,nextRid@-311,nextSid@-311,lastSentId@-311,_connected@-303,_conn-325,_connListener-326,_beforeSendListener-326,_toSendList-327,_processors-324,_pendingSend-303",
      onData$1: [function(list) {
        var t1, resp, t2, t3;
        for (t1 = J.get$iterator$ax(list); t1.moveNext$0();) {
          resp = t1.get$current();
          t2 = J.getInterceptor(resp);
          if (!!t2.$isMap) {
            t3 = t2.$index(resp, "rid");
            if (typeof t3 === "number" && Math.floor(t3) === t3 && this._requests.containsKey$1(t2.$index(resp, "rid")) === true)
              J.$index$asx(this._requests, t2.$index(resp, "rid"))._update$1(resp);
          }
        }
      }, "call$1", "get$onData", 2, 0, 108, 143, [], "onData"],
      _onReceiveUpdate$1: [function(m) {
        var t1, t2;
        t1 = J.getInterceptor$asx(m);
        t2 = t1.$index(m, "rid");
        if (typeof t2 === "number" && Math.floor(t2) === t2 && this._requests.containsKey$1(t1.$index(m, "rid")) === true)
          J.$index$asx(this._requests, t1.$index(m, "rid"))._update$1(m);
      }, "call$1", "get$_onReceiveUpdate", 2, 0, 100, 113, [], "_onReceiveUpdate"],
      doSend$0: [function() {
        var rslt = this.super$ConnectionHandler$doSend$0();
        this.lastSentId = J.$sub$in(this.nextRid, 1);
        return rslt;
      }, "call$0", "get$doSend", 0, 0, 101, "doSend"],
      _sendRequest$2: [function(m, updater) {
        var t1, req;
        J.$indexSet$ax(m, "rid", this.nextRid);
        if (updater != null) {
          t1 = this.nextRid;
          req = new L.Request(this, t1, m, updater, false, "initialize");
          J.$indexSet$ax(this._requests, t1, req);
        } else
          req = null;
        this.addToSendList$1(m);
        this.nextRid = J.$add$ins(this.nextRid, 1);
        return req;
      }, "call$2", "get$_sendRequest", 4, 0, 142, 113, [], 171, [], "_sendRequest"],
      subscribe$3: [function(path, callback, cacheLevel) {
        this.nodeCache.getRemoteNode$1(path)._requester$_subscribe$3(this, callback, cacheLevel);
        return new L.ReqSubscribeListener(callback, this, path);
      }, function(path, callback) {
        return this.subscribe$3(path, callback, 1);
      }, "subscribe$2", "call$3", "call$2", "get$subscribe", 4, 2, 143, 111, 107, [], 47, [], 112, [], "subscribe"],
      unsubscribe$2: [function(path, callback) {
        this.nodeCache.getRemoteNode$1(path)._unsubscribe$2(this, callback);
      }, "call$2", "get$unsubscribe", 4, 0, 144, 107, [], 47, [], "unsubscribe"],
      list$1: [function(_, path) {
        return this.nodeCache.getRemoteNode$1(path)._requester$_list$1(this);
      }, "call$1", "get$list", 2, 0, 145, 107, [], "list"],
      invoke$3: [function(path, params, maxPermission) {
        return this.nodeCache.getRemoteNode$1(path)._requester$_invoke$3(params, this, maxPermission);
      }, function(path, params) {
        return this.invoke$3(path, params, 3);
      }, "invoke$2", "call$3", "call$2", "get$invoke", 4, 2, 146, 175, 107, [], 176, [], 177, [], "invoke"],
      $set$3: [function(path, value, maxPermission) {
        var t1, t2, reqMap;
        t1 = new P._Future(0, $.Zone__current, null);
        t1.$builtinTypeInfo = [L.RequesterUpdate];
        t1 = new P._AsyncCompleter(t1);
        t1.$builtinTypeInfo = [L.RequesterUpdate];
        t2 = new L.SetController(t1, this, path, value, null);
        reqMap = P.LinkedHashMap__makeLiteral(["method", "set", "path", path, "value", value]);
        if (!J.$eq(maxPermission, 3)) {
          if (maxPermission >>> 0 !== maxPermission || maxPermission >= 5)
            return H.ioore(C.List_504, maxPermission);
          reqMap.$indexSet(0, "permit", C.List_504[maxPermission]);
        }
        t2._request = this._sendRequest$2(reqMap, t2);
        return t1.future;
      }, function(path, value) {
        return this.$set$3(path, value, 3);
      }, "$set$2", "call$3", "call$2", "get$set", 4, 2, 147, 175, 107, [], 22, [], 177, [], "set"],
      remove$1: [function(_, path) {
        var t1, t2;
        t1 = new P._Future(0, $.Zone__current, null);
        t1.$builtinTypeInfo = [L.RequesterUpdate];
        t1 = new P._AsyncCompleter(t1);
        t1.$builtinTypeInfo = [L.RequesterUpdate];
        t2 = new L.RemoveController(t1, this, path, null);
        t2._request = this._sendRequest$2(P.LinkedHashMap__makeLiteral(["method", "remove", "path", path]), t2);
        return t1.future;
      }, "call$1", "get$remove", 2, 0, 148, 107, [], "remove"],
      closeRequest$1: [function(request) {
        if (this._requests.containsKey$1(request.get$rid()) === true) {
          if (!J.$eq(request.get$streamStatus(), "closed"))
            this.addToSendList$1(P.LinkedHashMap__makeLiteral(["method", "close", "rid", request.get$rid()]));
          J.remove$1$ax(this._requests, request.get$rid());
          request._requester$_close$0();
        }
      }, "call$1", "get$closeRequest", 2, 0, 149, 120, [], "closeRequest"],
      onDisconnected$0: [function() {
        if (this._connected !== true)
          return;
        this._connected = false;
        var newRequests = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, L.Request);
        newRequests.$indexSet(0, 0, this._subsciption);
        J.forEach$1$ax(this._requests, new L.Requester_onDisconnected_closure(this, newRequests));
        this._requests = newRequests;
      }, "call$0", "get$onDisconnected", 0, 0, 7, "onDisconnected"],
      onReconnected$0: [function() {
        if (this._connected === true)
          return;
        this._connected = true;
        this.super$ConnectionHandler$onReconnected$0();
        J.forEach$1$ax(this._requests, new L.Requester_onReconnected_closure());
      }, "call$0", "get$onReconnected", 0, 0, 7, "onReconnected"],
      static: {Requester$: [function(cache) {
          var t1, t2;
          t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, L.Request);
          t2 = cache != null ? cache : new L.RemoteNodeCache(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, L.RemoteNode));
          t2 = new L.Requester(t1, t2, null, 1, 1, 0, false, null, null, null, [], [], false);
          t1 = L.SubscribeRequest$(t2, 0);
          t2._subsciption = t1;
          J.$indexSet$ax(t2._requests, 0, t1);
          return t2;
        }, null, null, 0, 2, 261, 35, 179, [], "new Requester"]}
    },
    "+Requester": [364],
    Requester_onDisconnected_closure: {
      "^": "Closure:15;_requester$_captured_this_0,_captured_newRequests_1",
      call$2: [function(n, req) {
        if (J.$le$in(req.get$rid(), this._requester$_captured_this_0.lastSentId) && !(req.get$updater() instanceof L.ListController))
          req._requester$_close$1($.get$DSError_DISCONNECTED());
        else {
          this._captured_newRequests_1.$indexSet(0, req.get$rid(), req);
          J.onDisconnect$0$x(req.get$updater());
        }
      }, null, null, 4, 0, 15, 28, [], 189, [], "call"]
    },
    Requester_onReconnected_closure: {
      "^": "Closure:15;",
      call$2: [function(n, req) {
        req.get$updater().onReconnect$0();
        req.resend$0();
      }, null, null, 4, 0, 15, 28, [], 189, [], "call"]
    }
  }], ["dslink.responder", "package:dslink/responder.dart",, T, {
    "^": "",
    ConfigSetting: {
      "^": "Object;name>-300,type>-300,defaultValue>-0",
      setConfig$3: [function(value, node, responder) {
        var t1 = this.name;
        if (!J.$eq(J.$index$asx(node.get$configs(), t1), value)) {
          J.$indexSet$ax(node.get$configs(), t1, value);
          node.updateList$1(t1);
        }
        return;
      }, "call$3", "get$setConfig", 6, 0, 150, 22, [], 159, [], 163, [], "setConfig"],
      removeConfig$2: [function(node, responder) {
        var t1 = this.name;
        if (node.get$configs().containsKey$1(t1) === true) {
          J.remove$1$ax(node.get$configs(), t1);
          node.updateList$1(t1);
        }
        return;
      }, "call$2", "get$removeConfig", 4, 0, 151, 159, [], 163, [], "removeConfig"],
      static: {ConfigSetting$: [function($name, type, defaultValue) {
          return new T.ConfigSetting($name, type, defaultValue);
        }, null, null, 4, 3, 262, 35, 124, [], 130, [], 142, [], "new ConfigSetting"], ConfigSetting$fromMap: [function($name, m) {
          var t1 = m.containsKey$1("type") === true ? J.$index$asx(m, "type") : "string";
          return new T.ConfigSetting($name, t1, m.containsKey$1("default") === true ? J.$index$asx(m, "default") : null);
        }, null, null, 4, 0, 113, 124, [], 113, [], "new ConfigSetting$fromMap"]}
    },
    "+ConfigSetting": [0],
    Configs: {
      "^": "Object;configs@-365",
      load$1: [function(_, inputs) {
        J.forEach$1$ax(inputs, new T.Configs_load_closure(this));
      }, "call$1", "get$load", 2, 0, 100, 193, [], "load"],
      static: {"^": "Configs__globalConfigs<-304,Configs_global<-366,Configs_defaultConfig<-367", Configs$: [function() {
          return new T.Configs(P.LinkedHashMap__makeEmpty());
        }, null, null, 0, 0, 263, "new Configs"], Configs_getConfig: [function($name, profile) {
          var t1 = $.get$Configs_global();
          if (t1.configs.containsKey$1($name) === true)
            return J.$index$asx(t1.configs, $name);
          if (profile instanceof T.DefinitionNode && profile.configs.containsKey$1($name) === true)
            return J.$index$asx(profile.get$configs(), $name);
          return $.get$Configs_defaultConfig();
        }, "call$2", "Configs_getConfig$closure", 4, 0, 264, 124, [], 190, [], "getConfig"]}
    },
    "+Configs": [0],
    Configs_load_closure: {
      "^": "Closure:15;_responder$_captured_this_0",
      call$2: [function($name, m) {
        if (!!J.getInterceptor(m).$isMap)
          J.$indexSet$ax(this._responder$_captured_this_0.configs, $name, T.ConfigSetting$fromMap($name, m));
      }, null, null, 4, 0, 15, 124, [], 113, [], "call"]
    },
    DefinitionNode: {
      "^": "LocalNodeImpl;parentNode-368,_loaded-303,_listChangeController-369,_listReqListener-326,path-300,callbacks-360,_lastValueUpdate-361,profile-328,attributes-329,configs-329,children-330",
      static: {DefinitionNode$: [function(path) {
          var t1, t2, t3, t4;
          t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int);
          t2 = P.LinkedHashMap__makeEmpty();
          t3 = P.LinkedHashMap__makeLiteral(["$is", "node"]);
          t4 = P.LinkedHashMap__makeEmpty();
          t3.$indexSet(0, "$is", "static");
          return new T.DefinitionNode(null, false, null, null, path, t1, null, null, t2, t3, t4);
        }, null, null, 2, 0, 13, 107, [], "new DefinitionNode"]}
    },
    "+DefinitionNode": [370],
    RootNode: {
      "^": "LocalNodeImpl;_loaded:RootNode__loaded@-303,parentNode-368,_loaded-303,_listChangeController-369,_listReqListener-326,path-300,callbacks-360,_lastValueUpdate-361,profile-328,attributes-329,configs-329,children-330",
      load$2: [function(_, m, provider) {
        if (this.RootNode__loaded === true)
          throw H.wrapException("root node can not be initialized twice");
        J.forEach$1$ax(m, new T.RootNode_load_closure(this, provider));
      }, "call$2", "get$load", 4, 0, 152, 113, [], 91, [], "load"],
      static: {RootNode$: [function(path) {
          return new T.RootNode(false, null, false, null, null, path, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
        }, null, null, 2, 0, 13, 107, [], "new RootNode"]}
    },
    "+RootNode": [370],
    RootNode_load_closure: {
      "^": "Closure:10;_responder$_captured_this_0,_captured_provider_1",
      call$2: [function(key, value) {
        var t1, node, t2;
        t1 = J.getInterceptor$s(key);
        if (t1.startsWith$1(key, "$"))
          J.$indexSet$ax(this._responder$_captured_this_0.configs, key, value);
        else if (t1.startsWith$1(key, "@"))
          J.$indexSet$ax(this._responder$_captured_this_0.attributes, key, value);
        else if (!!J.getInterceptor(value).$isMap) {
          t1 = "/" + H.S(key);
          node = new T.LocalNodeImpl(null, false, null, null, t1, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
          t2 = this._captured_provider_1;
          node.load$2(0, value, t2);
          J.$indexSet$ax(J.get$nodes$x(t2), t1, node);
          J.$indexSet$ax(this._responder$_captured_this_0.children, key, node);
        }
      }, null, null, 4, 0, 10, 21, [], 22, [], "call"]
    },
    NodeProviderImpl: {
      "^": "NodeProvider;",
      static: {NodeProviderImpl$: [function() {
          return new T.NodeProviderImpl();
        }, null, null, 0, 0, 265, "new NodeProviderImpl"]}
    },
    "+NodeProviderImpl": [298],
    LocalNodeImpl: {
      "^": "LocalNode;parentNode*-368,_loaded@-303,_listChangeController-369,_listReqListener-326,path-300,callbacks-360,_lastValueUpdate-361,profile-328,attributes-329,configs-329,children-330",
      serialize$1: [function(withChildren) {
        var rslt = P.LinkedHashMap__makeEmpty();
        J.forEach$1$ax(this.configs, new T.LocalNodeImpl_serialize_closure(rslt));
        J.forEach$1$ax(this.attributes, new T.LocalNodeImpl_serialize_closure0(rslt));
        J.forEach$1$ax(this.children, new T.LocalNodeImpl_serialize_closure1(withChildren, rslt));
        return rslt;
      }, "call$1", "get$serialize", 2, 0, 153, 194, [], "serialize"],
      get$loaded: [function(_) {
        return this.get$_loaded();
      }, null, null, 1, 0, 31, "loaded"],
      load$2: [function(_, m, provider) {
        var t1, t2;
        t1 = {};
        if (this.get$_loaded() === true) {
          J.clear$0$ax(this.configs);
          J.clear$0$ax(this.attributes);
          J.clear$0$ax(this.children);
        }
        t1._captured_childPathPre_0 = null;
        t2 = this.path;
        if (J.$eq(t2, "/"))
          t1._captured_childPathPre_0 = "/";
        else
          t1._captured_childPathPre_0 = H.S(t2) + "/";
        J.forEach$1$ax(m, new T.LocalNodeImpl_load_closure(t1, this, provider));
        this.set$_loaded(true);
      }, "call$2", "get$load", 4, 0, 152, 113, [], 91, [], "load"],
      updateList$1: [function($name) {
        J.add$1$ax(this.get$listChangeController(), $name);
      }, "call$1", "get$updateList", 2, 0, 61, 124, [], "updateList"],
      setAttribute$4: [function(_, $name, value, responder, response) {
        if (this.attributes.containsKey$1($name) !== true || !J.$eq(J.$index$asx(this.attributes, $name), value)) {
          J.$indexSet$ax(this.attributes, $name, value);
          J.add$1$ax(this.get$listChangeController(), $name);
        }
        J.close$0$x(response);
        return response;
      }, "call$4", "get$setAttribute", 8, 0, 154, 124, [], 22, [], 163, [], 118, [], "setAttribute"],
      removeAttribute$3: [function($name, responder, response) {
        if (this.attributes.containsKey$1($name) === true) {
          J.remove$1$ax(this.attributes, $name);
          J.add$1$ax(this.get$listChangeController(), $name);
        }
        J.close$0$x(response);
        return response;
      }, "call$3", "get$removeAttribute", 6, 0, 155, 124, [], 163, [], 118, [], "removeAttribute"],
      setConfig$4: [function($name, value, responder, response) {
        J.close$1$x(response, T.Configs_getConfig($name, this.profile).setConfig$3(value, this, responder));
        return response;
      }, "call$4", "get$setConfig", 8, 0, 154, 124, [], 22, [], 163, [], 118, [], "setConfig"],
      removeConfig$3: [function($name, responder, response) {
        J.close$1$x(response, T.Configs_getConfig($name, this.profile).removeConfig$2(this, responder));
        return response;
      }, "call$3", "get$removeConfig", 6, 0, 155, 124, [], 163, [], 118, [], "removeConfig"],
      setValue$4: [function(value, responder, response, maxPermission) {
        this.updateValue$1(value);
        J.close$0$x(response);
        return response;
      }, function(value, responder, response) {
        return this.setValue$4(value, responder, response, 3);
      }, "setValue$3", "call$4", "call$3", "get$setValue", 6, 2, 156, 175, 22, [], 163, [], 118, [], 177, [], "setValue"],
      static: {LocalNodeImpl$: [function(path) {
          return new T.LocalNodeImpl(null, false, null, null, path, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
        }, null, null, 2, 0, 13, 107, [], "new LocalNodeImpl"]}
    },
    "+LocalNodeImpl": [368],
    LocalNodeImpl_serialize_closure: {
      "^": "Closure:15;_responder$_captured_rslt_0",
      call$2: [function(key, val) {
        this._responder$_captured_rslt_0.$indexSet(0, key, val);
      }, null, null, 4, 0, 15, 21, [], 157, [], "call"]
    },
    LocalNodeImpl_serialize_closure0: {
      "^": "Closure:15;_captured_rslt_1",
      call$2: [function(key, val) {
        this._captured_rslt_1.$indexSet(0, key, val);
      }, null, null, 4, 0, 15, 21, [], 157, [], "call"]
    },
    LocalNodeImpl_serialize_closure1: {
      "^": "Closure:15;_captured_withChildren_2,_captured_rslt_3",
      call$2: [function(key, val) {
        if (this._captured_withChildren_2 === true)
          this._captured_rslt_3.$indexSet(0, key, val.serialize$1(true));
      }, null, null, 4, 0, 15, 21, [], 157, [], "call"]
    },
    LocalNodeImpl_load_closure: {
      "^": "Closure:10;_responder$_box_0,_responder$_captured_this_1,_captured_provider_2",
      call$2: [function(key, value) {
        var t1, node, t2;
        t1 = J.getInterceptor$s(key);
        if (t1.startsWith$1(key, "$"))
          J.$indexSet$ax(this._responder$_captured_this_1.configs, key, value);
        else if (t1.startsWith$1(key, "@"))
          J.$indexSet$ax(this._responder$_captured_this_1.attributes, key, value);
        else if (!!J.getInterceptor(value).$isMap) {
          t1 = this._captured_provider_2;
          node = t1.getNode$1(H.S(this._responder$_box_0._captured_childPathPre_0) + H.S(key));
          t2 = J.getInterceptor(node);
          if (!!t2.$isLocalNodeImpl)
            t2.load$2(node, value, t1);
          J.$indexSet$ax(this._responder$_captured_this_1.children, key, node);
        }
      }, null, null, 4, 0, 10, 21, [], 22, [], "call"]
    },
    IPermissionManager: {
      "^": "Object;",
      static: {IPermissionManager$: [function() {
          return new T.IPermissionManager();
        }, null, null, 0, 0, 266, "new IPermissionManager"]}
    },
    "+IPermissionManager": [0],
    DummyPermissionManager: {
      "^": "Object;",
      getPermission$2: [function(path, resp) {
        return 3;
      }, "call$2", "get$getPermission", 4, 0, 157, 107, [], 195, [], "getPermission"],
      static: {DummyPermissionManager$: [function() {
          return new T.DummyPermissionManager();
        }, null, null, 0, 0, 267, "new DummyPermissionManager"]}
    },
    "+DummyPermissionManager": [0, 371],
    LocalNode: {
      "^": "Node0;_listChangeController@-369,_listReqListener@-326,path>-300,callbacks@-360,_lastValueUpdate@-361,profile-328,attributes-329,configs-329,children-330",
      get$listChangeController: [function() {
        var t1 = this._listChangeController;
        if (t1 == null) {
          t1 = Q.BroadcastStreamController$(this.get$onStartListListen(), this.get$onAllListCancel(), null, P.String);
          this._listChangeController = t1;
        }
        return t1;
      }, null, null, 1, 0, 158, "listChangeController"],
      get$listStream: [function() {
        return J.get$stream$x(this.get$listChangeController());
      }, null, null, 1, 0, 159, "listStream"],
      onStartListListen$0: [function() {
      }, "call$0", "get$onStartListListen", 0, 0, 7, "onStartListListen"],
      onAllListCancel$0: [function() {
      }, "call$0", "get$onAllListCancel", 0, 0, 7, "onAllListCancel"],
      subscribe$2: ["super$LocalNode$subscribe$2", function(callback, cachelevel) {
        J.$indexSet$ax(this.callbacks, callback, cachelevel);
        return new T.RespSubscribeListener(callback, this);
      }, function(callback) {
        return this.subscribe$2(callback, 1);
      }, "subscribe$1", "call$2", "call$1", "get$subscribe", 2, 2, 160, 111, 47, [], 196, [], "subscribe"],
      unsubscribe$1: [function(callback) {
        if (this.callbacks.containsKey$1(callback) === true)
          J.remove$1$ax(this.callbacks, callback);
      }, "call$1", "get$unsubscribe", 2, 0, 130, 47, [], "unsubscribe"],
      get$lastValueUpdate: [function() {
        var t1 = this._lastValueUpdate;
        if (t1 == null) {
          t1 = O.ValueUpdate$(null, 1, 0 / 0, null, 0 / 0, null, 0 / 0, null);
          this._lastValueUpdate = t1;
        }
        return t1;
      }, null, null, 1, 0, 161, "lastValueUpdate"],
      updateValue$2$force: [function(update, force) {
        var t1;
        if (update instanceof O.ValueUpdate) {
          this._lastValueUpdate = update;
          J.forEach$1$ax(this.callbacks, new T.LocalNode_updateValue_closure(this));
        } else {
          t1 = this._lastValueUpdate;
          if (t1 == null || !J.$eq(J.get$value$x(t1), update) || force === true) {
            this._lastValueUpdate = O.ValueUpdate$(update, 1, 0 / 0, null, 0 / 0, null, 0 / 0, null);
            J.forEach$1$ax(this.callbacks, new T.LocalNode_updateValue_closure0(this));
          }
        }
      }, function(update) {
        return this.updateValue$2$force(update, false);
      }, "updateValue$1", "call$2$force", "call$1", "get$updateValue", 2, 3, 162, 37, 116, [], 162, [], "updateValue"],
      get$exists: [function() {
        return true;
      }, null, null, 1, 0, 31, "exists"],
      get$listReady: [function() {
        return true;
      }, null, null, 1, 0, 31, "listReady"],
      get$disconnected: [function() {
        return;
      }, null, null, 1, 0, 3, "disconnected"],
      get$valueReady: [function() {
        return true;
      }, null, null, 1, 0, 31, "valueReady"],
      get$hasSubscriber: [function() {
        return J.get$isNotEmpty$asx(this.callbacks);
      }, null, null, 1, 0, 31, "hasSubscriber"],
      getInvokePermission$0: [function() {
        return O.Permission_parse(this.getConfig$1("$invokable"), 4);
      }, "call$0", "get$getInvokePermission", 0, 0, 2, "getInvokePermission"],
      getSetPermission$0: [function() {
        return O.Permission_parse(this.getConfig$1("$writable"), 4);
      }, "call$0", "get$getSetPermission", 0, 0, 2, "getSetPermission"],
      invoke$5: [function(params, responder, response, parentNode, maxPermission) {
        J.close$0$x(response);
        return response;
      }, function(params, responder, response, parentNode) {
        return this.invoke$5(params, responder, response, parentNode, 3);
      }, "invoke$4", "call$5", "call$4", "get$invoke", 8, 2, 163, 175, 176, [], 163, [], 118, [], 197, [], 177, [], "invoke"],
      setAttribute$4: [function(_, $name, value, responder, response) {
        J.close$0$x(response);
        return response;
      }, "call$4", "get$setAttribute", 8, 0, 154, 124, [], 22, [], 163, [], 118, [], "setAttribute"],
      removeAttribute$3: [function($name, responder, response) {
        J.close$0$x(response);
        return response;
      }, "call$3", "get$removeAttribute", 6, 0, 155, 124, [], 163, [], 118, [], "removeAttribute"],
      setConfig$4: [function($name, value, responder, response) {
        J.close$0$x(response);
        return response;
      }, "call$4", "get$setConfig", 8, 0, 154, 124, [], 22, [], 163, [], 118, [], "setConfig"],
      removeConfig$3: [function($name, responder, response) {
        J.close$0$x(response);
        return response;
      }, "call$3", "get$removeConfig", 6, 0, 155, 124, [], 163, [], 118, [], "removeConfig"],
      setValue$4: [function(value, responder, response, maxPermission) {
        J.close$0$x(response);
        return response;
      }, function(value, responder, response) {
        return this.setValue$4(value, responder, response, 3);
      }, "setValue$3", "call$4", "call$3", "get$setValue", 6, 2, 156, 175, 22, [], 163, [], 118, [], 177, [], "setValue"],
      $index: [function(_, $name) {
        return this.$get$1($name);
      }, null, "get$[]", 2, 0, 13, 124, [], "[]"],
      $indexSet: [function(_, $name, value) {
        var t1 = J.getInterceptor$s($name);
        if (t1.startsWith$1($name, "$"))
          J.$indexSet$ax(this.configs, $name, value);
        else if (t1.startsWith$1($name, "@"))
          J.$indexSet$ax(this.attributes, $name, value);
        else if (value instanceof O.Node0)
          this.addChild$2($name, value);
      }, null, "get$[]=", 4, 0, 114, 124, [], 22, [], "[]="],
      static: {LocalNode$: [function(path) {
          return new T.LocalNode(null, null, path, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
        }, null, null, 2, 0, 13, 107, [], "new LocalNode"]}
    },
    "+LocalNode": [328],
    LocalNode_updateValue_closure: {
      "^": "Closure:15;_responder$_captured_this_0",
      call$2: [function(callback, cachelevel) {
        callback.call$1(this._responder$_captured_this_0._lastValueUpdate);
      }, null, null, 4, 0, 15, 47, [], 196, [], "call"]
    },
    LocalNode_updateValue_closure0: {
      "^": "Closure:15;_responder$_captured_this_1",
      call$2: [function(callback, cachelevel) {
        callback.call$1(this._responder$_captured_this_1._lastValueUpdate);
      }, null, null, 4, 0, 15, 47, [], 196, [], "call"]
    },
    NodeProvider: {
      "^": "Object;",
      $index: [function(_, path) {
        return this.getNode$1(path);
      }, null, "get$[]", 2, 0, 78, 107, [], "[]"],
      $not: [function(_) {
        return this.getNode$1("/");
      }, null, "get$~", 0, 0, 81, "~"],
      static: {NodeProvider$: [function() {
          return new T.NodeProvider();
        }, null, null, 0, 0, 268, "new NodeProvider"]}
    },
    "+NodeProvider": [0],
    Responder: {
      "^": "ConnectionHandler;reqId@-300,groups@-302,_responses<-372,_responder$_subscription@-373,nodeProvider<-298,_conn-325,_connListener-326,_beforeSendListener-326,_toSendList-327,_processors-324,_pendingSend-303",
      addResponse$1: [function(response) {
        if (!J.$eq(response.get$_sentStreamStatus(), "closed"))
          J.$indexSet$ax(this._responses, response.get$rid(), response);
        return response;
      }, "call$1", "get$addResponse", 2, 0, 164, 118, [], "addResponse"],
      onData$1: [function(list) {
        var t1, resp;
        for (t1 = J.get$iterator$ax(list); t1.moveNext$0();) {
          resp = t1.get$current();
          if (!!J.getInterceptor(resp).$isMap)
            this._onReceiveRequest$1(resp);
        }
      }, "call$1", "get$onData", 2, 0, 108, 143, [], "onData"],
      _onReceiveRequest$1: [function(m) {
        var t1, t2, t3, rid, path, node;
        t1 = J.getInterceptor$asx(m);
        t2 = t1.$index(m, "method");
        if (typeof t2 === "string") {
          t2 = t1.$index(m, "rid");
          t2 = typeof t2 === "number" && Math.floor(t2) === t2;
        } else
          t2 = false;
        if (t2) {
          t2 = this._responses;
          if (t2.containsKey$1(t1.$index(m, "rid")) === true) {
            if (J.$eq(t1.$index(m, "method"), "close")) {
              t3 = t1.$index(m, "rid");
              if (typeof t3 === "number" && Math.floor(t3) === t3) {
                rid = t1.$index(m, "rid");
                if (t2.containsKey$1(rid) === true) {
                  t1 = J.getInterceptor$asx(t2);
                  t1.$index(t2, rid)._responder$_close$0();
                  t1.remove$1(t2, rid);
                }
              }
            }
            return;
          }
          switch (t1.$index(m, "method")) {
            case "list":
              path = O.Path_getValidNodePath(t1.$index(m, "path"), null);
              if (path != null)
                t3 = J.$eq(path.name, "/") || J.startsWith$1$s(path.parentPath, "/");
              else
                t3 = false;
              if (t3) {
                rid = t1.$index(m, "rid");
                t1 = this.nodeProvider;
                node = t1.getNode$1(path.path);
                t3 = new T.ListResponse(node, null, null, P.LinkedHashSet_LinkedHashSet(null, null, null, P.String), true, false, this, rid, "initialize");
                t3._permission = t1.get$permissions().getPermission$2(J.get$path$x(node), this);
                t3._nodeChangeListener = node.get$listStream().listen$1(t3.get$changed());
                if (node.get$listReady())
                  this.addProcessor$1(t3.get$processor());
                else
                  node.get$disconnected();
                if (!J.$eq(t3._sentStreamStatus, "closed"))
                  J.$indexSet$ax(t2, rid, t3);
              } else
                this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_INVALID_PATH());
              return;
            case "subscribe":
              this._responder$_subscribe$1(m);
              return;
            case "unsubscribe":
              this._responder$_unsubscribe$1(m);
              return;
            case "invoke":
              this._responder$_invoke$1(m);
              return;
            case "set":
              this._responder$_set$1(m);
              return;
            case "remove":
              this._responder$_remove$1(m);
              return;
          }
        }
        t2 = t1.$index(m, "rid");
        if (typeof t2 === "number" && Math.floor(t2) === t2 && !J.$eq(t1.$index(m, "method"), "close"))
          this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_INVALID_METHOD());
      }, "call$1", "get$_onReceiveRequest", 2, 0, 100, 113, [], "_onReceiveRequest"],
      _closeResponse$3$error$response: [function(rid, error, response) {
        var m;
        if (response != null) {
          if (!J.$eq(J.$index$asx(this._responses, response.get$rid()), response))
            return;
          response.set$_sentStreamStatus("closed");
          rid = response.get$rid();
        }
        m = P.LinkedHashMap__makeLiteral(["rid", rid, "stream", "closed"]);
        if (error != null)
          m.$indexSet(0, "error", error.serialize$0());
        this.addToSendList$1(m);
      }, function(rid) {
        return this._closeResponse$3$error$response(rid, null, null);
      }, "_closeResponse$1", function(rid, error) {
        return this._closeResponse$3$error$response(rid, error, null);
      }, "_closeResponse$2$error", "call$3$error$response", "call$1", "call$2$error", "get$_closeResponse", 2, 5, 165, 35, 35, 170, [], 118, [], 17, [], "_closeResponse"],
      updateResponse$4$columns$streamStatus: [function(response, updates, columns, streamStatus) {
        var t1, t2, m;
        t1 = this._responses;
        t2 = J.getInterceptor$asx(t1);
        if (J.$eq(t2.$index(t1, response.get$rid()), response)) {
          m = P.LinkedHashMap__makeLiteral(["rid", response.get$rid()]);
          if (streamStatus != null && !J.$eq(streamStatus, response.get$_sentStreamStatus())) {
            response.set$_sentStreamStatus(streamStatus);
            m.$indexSet(0, "stream", streamStatus);
          }
          if (columns != null)
            m.$indexSet(0, "columns", columns);
          if (updates != null)
            m.$indexSet(0, "updates", updates);
          this.addToSendList$1(m);
          if (J.$eq(response.get$_sentStreamStatus(), "closed"))
            t2.remove$1(t1, response.get$rid());
        }
      }, function(response, updates) {
        return this.updateResponse$4$columns$streamStatus(response, updates, null, null);
      }, "updateResponse$2", function(response, updates, streamStatus) {
        return this.updateResponse$4$columns$streamStatus(response, updates, null, streamStatus);
      }, "updateResponse$3$streamStatus", "call$4$columns$streamStatus", "call$2", "call$3$streamStatus", "get$updateResponse", 4, 5, 166, 35, 35, 118, [], 172, [], 174, [], 144, [], "updateResponse"],
      _responder$_list$1: [function(m) {
        var t1, path, t2, rid, node;
        t1 = J.getInterceptor$asx(m);
        path = O.Path_getValidNodePath(t1.$index(m, "path"), null);
        if (path != null)
          t2 = J.$eq(path.name, "/") || J.startsWith$1$s(path.parentPath, "/");
        else
          t2 = false;
        if (t2) {
          rid = t1.$index(m, "rid");
          t1 = this.nodeProvider;
          node = t1.getNode$1(path.path);
          t2 = new T.ListResponse(node, null, null, P.LinkedHashSet_LinkedHashSet(null, null, null, P.String), true, false, this, rid, "initialize");
          t2._permission = t1.get$permissions().getPermission$2(J.get$path$x(node), this);
          t2._nodeChangeListener = node.get$listStream().listen$1(t2.get$changed());
          if (node.get$listReady())
            this.addProcessor$1(t2.get$processor());
          else
            node.get$disconnected();
          this.addResponse$1(t2);
        } else
          this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_INVALID_PATH());
      }, "call$1", "get$_responder$_list", 2, 0, 100, 113, [], "_responder$_list"],
      _responder$_subscribe$1: [function(m) {
        var t1, t2, t3, p, t4, t5, pathstr, sid, cacheLevel, path;
        t1 = J.getInterceptor$asx(m);
        if (!!J.getInterceptor(t1.$index(m, "paths")).$isList) {
          t1.$index(m, "rid");
          for (t2 = J.get$iterator$ax(t1.$index(m, "paths")), t3 = this.nodeProvider; t2.moveNext$0();) {
            p = t2.get$current();
            t4 = J.getInterceptor(p);
            if (!!t4.$isMap) {
              t5 = t4.$index(p, "path");
              if (typeof t5 === "string")
                pathstr = t4.$index(p, "path");
              else
                continue;
              t5 = t4.$index(p, "sid");
              if (typeof t5 === "number" && Math.floor(t5) === t5)
                sid = t4.$index(p, "sid");
              else
                continue;
              t5 = t4.$index(p, "cache");
              cacheLevel = typeof t5 === "number" && Math.floor(t5) === t5 ? t4.$index(p, "cache") : 1;
            } else {
              pathstr = null;
              cacheLevel = 1;
              sid = -1;
            }
            path = O.Path_getValidNodePath(pathstr, null);
            if (path != null)
              t4 = J.$eq(path.name, "/") || J.startsWith$1$s(path.parentPath, "/");
            else
              t4 = false;
            if (t4) {
              t4 = this._responder$_subscription;
              t5 = path.path;
              J.add$4$ax(t4, t5, t3.getNode$1(t5), sid, cacheLevel);
            }
          }
          this._closeResponse$1(t1.$index(m, "rid"));
        } else
          this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_INVALID_PATHS());
      }, "call$1", "get$_responder$_subscribe", 2, 0, 100, 113, [], "_responder$_subscribe"],
      _responder$_unsubscribe$1: [function(m) {
        var t1, t2, sid;
        t1 = J.getInterceptor$asx(m);
        if (!!J.getInterceptor(t1.$index(m, "sids")).$isList) {
          t1.$index(m, "rid");
          for (t2 = J.get$iterator$ax(t1.$index(m, "sids")); t2.moveNext$0();) {
            sid = t2.get$current();
            if (typeof sid === "number" && Math.floor(sid) === sid)
              J.remove$1$ax(this._responder$_subscription, sid);
          }
          this._closeResponse$1(t1.$index(m, "rid"));
        } else
          this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_INVALID_PATHS());
      }, "call$1", "get$_responder$_unsubscribe", 2, 0, 100, 113, [], "_responder$_unsubscribe"],
      _responder$_invoke$1: [function(m) {
        var t1, path, t2, rid, parentNode, node, permission, maxPermit;
        t1 = J.getInterceptor$asx(m);
        path = O.Path_getValidNodePath(t1.$index(m, "path"), null);
        if (path != null)
          t2 = J.$eq(path.name, "/") || J.startsWith$1$s(path.parentPath, "/");
        else
          t2 = false;
        if (t2) {
          rid = t1.$index(m, "rid");
          t2 = this.nodeProvider;
          parentNode = t2.getNode$1(path.parentPath);
          node = parentNode.getChild$1(path.name);
          if (node == null) {
            this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_PERMISSION_DENIED());
            return;
          }
          permission = t2.get$permissions().getPermission$2(path.path, this);
          maxPermit = O.Permission_parse(t1.$index(m, "permit"), 4);
          if (J.$lt$in(maxPermit, permission))
            permission = maxPermit;
          if (J.$le$in(node.getInvokePermission$0(), permission))
            node.invoke$4(t1.$index(m, "params"), this, this.addResponse$1(new T.InvokeResponse(node, 0, null, null, "initialize", null, null, this, rid, "initialize")), parentNode);
          else
            this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_PERMISSION_DENIED());
        } else
          this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_INVALID_PATH());
      }, "call$1", "get$_responder$_invoke", 2, 0, 100, 113, [], "_responder$_invoke"],
      _responder$_set$1: [function(m) {
        var t1, path, t2, value, rid, node, permission, maxPermit, t3;
        t1 = J.getInterceptor$asx(m);
        path = O.Path_getValidPath(t1.$index(m, "path"), null);
        if (path != null)
          t2 = !(J.$eq(path.name, "/") || J.startsWith$1$s(path.parentPath, "/"));
        else
          t2 = true;
        if (t2) {
          this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_INVALID_PATH());
          return;
        }
        if (m.containsKey$1("value") !== true) {
          this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_INVALID_VALUE());
          return;
        }
        value = t1.$index(m, "value");
        rid = t1.$index(m, "rid");
        if (path.get$isNode()) {
          t2 = this.nodeProvider;
          node = t2.getNode$1(path.path);
          permission = t2.get$permissions().getPermission$2(J.get$path$x(node), this);
          maxPermit = O.Permission_parse(t1.$index(m, "permit"), 4);
          if (J.$lt$in(maxPermit, permission))
            permission = maxPermit;
          if (J.$le$in(node.getSetPermission$0(), permission))
            node.setValue$3(value, this, this.addResponse$1(new T.Response(this, rid, "initialize")));
          else
            this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_PERMISSION_DENIED());
        } else if (J.startsWith$1$s(path.name, "$")) {
          t2 = this.nodeProvider;
          node = t2.getNode$1(path.parentPath);
          if (t2.get$permissions().getPermission$2(J.get$path$x(node), this) < 3)
            this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_PERMISSION_DENIED());
          else
            node.setConfig$4(path.name, value, this, this.addResponse$1(new T.Response(this, rid, "initialize")));
        } else if (J.startsWith$1$s(path.name, "@")) {
          t2 = this.nodeProvider;
          node = t2.getNode$1(path.parentPath);
          t3 = J.getInterceptor$x(node);
          if (t2.get$permissions().getPermission$2(t3.get$path(node), this) < 2)
            this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_PERMISSION_DENIED());
          else
            t3.setAttribute$4(node, path.name, value, this, this.addResponse$1(new T.Response(this, rid, "initialize")));
        } else
          throw H.wrapException("unexpected case");
      }, "call$1", "get$_responder$_set", 2, 0, 100, 113, [], "_responder$_set"],
      _responder$_remove$1: [function(m) {
        var t1, path, rid, t2, node;
        t1 = J.getInterceptor$asx(m);
        path = O.Path_getValidPath(t1.$index(m, "path"), null);
        if (path == null || J.$eq(path.name, "/") || J.startsWith$1$s(path.parentPath, "/")) {
          this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_INVALID_PATH());
          return;
        }
        rid = t1.$index(m, "rid");
        if (path.get$isNode())
          this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_INVALID_METHOD());
        else if (J.startsWith$1$s(path.name, "$")) {
          t2 = this.nodeProvider;
          node = t2.getNode$1(path.parentPath);
          if (t2.get$permissions().getPermission$2(J.get$path$x(node), this) < 3)
            this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_PERMISSION_DENIED());
          else
            node.removeConfig$3(path.name, this, this.addResponse$1(new T.Response(this, rid, "initialize")));
        } else if (J.startsWith$1$s(path.name, "@")) {
          t2 = this.nodeProvider;
          node = t2.getNode$1(path.parentPath);
          if (t2.get$permissions().getPermission$2(J.get$path$x(node), this) < 2)
            this._closeResponse$2$error(t1.$index(m, "rid"), $.get$DSError_PERMISSION_DENIED());
          else
            node.removeAttribute$3(path.name, this, this.addResponse$1(new T.Response(this, rid, "initialize")));
        } else
          throw H.wrapException("unexpected case");
      }, "call$1", "get$_responder$_remove", 2, 0, 100, 113, [], "_responder$_remove"],
      _responder$_close$1: [function(m) {
        var t1, t2, rid;
        t1 = J.getInterceptor$asx(m);
        t2 = t1.$index(m, "rid");
        if (typeof t2 === "number" && Math.floor(t2) === t2) {
          rid = t1.$index(m, "rid");
          t1 = this._responses;
          if (t1.containsKey$1(rid) === true) {
            t2 = J.getInterceptor$asx(t1);
            t2.$index(t1, rid)._responder$_close$0();
            t2.remove$1(t1, rid);
          }
        }
      }, "call$1", "get$_responder$_close", 2, 0, 100, 113, [], "_responder$_close"],
      onDisconnected$0: [function() {
        var t1, t2;
        t1 = this._responses;
        t2 = J.getInterceptor$ax(t1);
        t2.forEach$1(t1, new T.Responder_onDisconnected_closure());
        t2.clear$0(t1);
        t2.$indexSet(t1, 0, this._responder$_subscription);
      }, "call$0", "get$onDisconnected", 0, 0, 7, "onDisconnected"],
      onReconnected$0: [function() {
        this.super$ConnectionHandler$onReconnected$0();
      }, "call$0", "get$onReconnected", 0, 0, 7, "onReconnected"],
      static: {Responder$: [function(nodeProvider) {
          var t1, t2, t3;
          t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.Response);
          t2 = new T.Responder(null, [], t1, null, nodeProvider, null, null, null, [], [], false);
          t3 = new T.SubscribeResponse(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, T.RespSubscribeController), P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.RespSubscribeController), P.LinkedHashSet_LinkedHashSet(null, null, null, T.RespSubscribeController), t2, 0, "initialize");
          t2._responder$_subscription = t3;
          t1.$indexSet(0, 0, t3);
          return t2;
        }, null, null, 2, 0, 269, 99, [], "new Responder"]}
    },
    "+Responder": [364],
    Responder_onDisconnected_closure: {
      "^": "Closure:15;",
      call$2: [function(id, resp) {
        resp._responder$_close$0();
      }, null, null, 4, 0, 15, 198, [], 195, [], "call"]
    },
    Response: {
      "^": "Object;responder<-315,rid<-311,_sentStreamStatus@-300",
      close$1: [function(_, err) {
        this._sentStreamStatus = "closed";
        this.responder._closeResponse$3$error$response(this.rid, err, this);
      }, function($receiver) {
        return this.close$1($receiver, null);
      }, "close$0", "call$1", "call$0", "get$close", 0, 2, 124, 35, 117, [], "close"],
      _responder$_close$0: [function() {
      }, "call$0", "get$_responder$_close", 0, 0, 7, "_responder$_close"],
      static: {Response$: [function(responder, rid) {
          return new T.Response(responder, rid, "initialize");
        }, null, null, 4, 0, 270, 163, [], 170, [], "new Response"]}
    },
    "+Response": [0],
    InvokeResponse: {
      "^": "Response;node<-368,_pendingInitializeLength@-311,_columns@-327,_updates@-327,_sendingStreamStatus@-300,_err@-322,onClose@-374,responder-315,rid-311,_sentStreamStatus-300",
      updateStream$3$columns$streamStatus: [function(updates, columns, streamStatus) {
        var t1;
        if (columns != null)
          this._columns = columns;
        t1 = this._updates;
        if (t1 == null)
          this._updates = updates;
        else
          J.addAll$1$ax(t1, updates);
        if (J.$eq(this._sendingStreamStatus, "initialize"))
          this._pendingInitializeLength = J.$add$ins(this._pendingInitializeLength, J.get$length$asx(updates));
        this._sendingStreamStatus = streamStatus;
        this.responder.addProcessor$1(this.get$processor());
      }, function(updates) {
        return this.updateStream$3$columns$streamStatus(updates, null, "open");
      }, "updateStream$1", function(updates, streamStatus) {
        return this.updateStream$3$columns$streamStatus(updates, null, streamStatus);
      }, "updateStream$2$streamStatus", "call$3$columns$streamStatus", "call$1", "call$2$streamStatus", "get$updateStream", 2, 5, 167, 35, 199, 172, [], 144, [], 174, [], "updateStream"],
      processor$0: [function() {
        var t1 = this._err;
        if (t1 != null) {
          this.responder._closeResponse$3$error$response(this.rid, t1, this);
          if (J.$eq(this._sentStreamStatus, "closed"))
            if (this.onClose != null)
              this.onClose$1(this);
          return;
        }
        t1 = this._columns;
        if (t1 != null) {
          t1 = O.TableColumn_serializeColumns(t1);
          this._columns = t1;
        }
        this.responder.updateResponse$4$columns$streamStatus(this, this._updates, t1, this._sendingStreamStatus);
        this._columns = null;
        this._updates = null;
        if (J.$eq(this._sentStreamStatus, "closed"))
          if (this.onClose != null)
            this.onClose$1(this);
      }, "call$0", "get$processor", 0, 0, 7, "processor"],
      close$1: [function(_, err) {
        if (err != null)
          this._err = err;
        this._sendingStreamStatus = "closed";
        this.responder.addProcessor$1(this.get$processor());
      }, function($receiver) {
        return this.close$1($receiver, null);
      }, "close$0", "call$1", "call$0", "get$close", 0, 2, 124, 35, 117, [], "close"],
      _responder$_close$0: [function() {
        if (this.onClose != null)
          this.onClose$1(this);
      }, "call$0", "get$_responder$_close", 0, 0, 7, "_responder$_close"],
      onClose$1: function(arg0) {
        return this.onClose.call$1(arg0);
      },
      static: {InvokeResponse$: [function(responder, rid, node) {
          return new T.InvokeResponse(node, 0, null, null, "initialize", null, null, responder, rid, "initialize");
        }, null, null, 6, 0, 271, 163, [], 170, [], 159, [], "new InvokeResponse"]}
    },
    "+InvokeResponse": [375],
    ListResponse: {
      "^": "Response;node<-368,_nodeChangeListener@-326,_permission@-311,changes@-353,initialResponse@-303,_disconnectSent@-303,responder-315,rid-311,_sentStreamStatus-300",
      changed$1: [function(key) {
        var t1, t2;
        if (J.$eq(this._permission, 0))
          return;
        if (J.$lt$in(this._permission, 3) && J.startsWith$1$s(key, "$$"))
          return;
        t1 = J.get$isEmpty$asx(this.changes);
        t2 = this.changes;
        if (t1 === true) {
          J.add$1$ax(t2, key);
          this.responder.addProcessor$1(this.get$processor());
        } else
          J.add$1$ax(t2, key);
      }, "call$1", "get$changed", 2, 0, 61, 21, [], "changed"],
      processor$0: [function() {
        var t1, updateConfigs, updateAttributes, updateChildren, t2, t3, t4, change, t5, update, updates;
        t1 = {};
        t1._captured_updateIs_0 = null;
        t1._captured_updateBase_1 = null;
        updateConfigs = [];
        updateAttributes = [];
        updateChildren = [];
        t2 = this.node;
        t2.get$disconnected();
        if (this._disconnectSent === true && J.contains$1$asx(this.changes, "$disconnectedTs") !== true) {
          this._disconnectSent = false;
          updateConfigs.push(P.LinkedHashMap__makeLiteral(["name", "$disconnectedTs", "change", "remove"]));
          if (t2.get$configs().containsKey$1("$disconnectedTs") === true)
            J.remove$1$ax(t2.get$configs(), "$disconnectedTs");
        }
        if (this.initialResponse === true || J.contains$1$asx(this.changes, "$is") === true) {
          this.initialResponse = false;
          J.forEach$1$ax(t2.get$configs(), new T.ListResponse_processor_closure(t1, this, updateConfigs));
          t3 = J.getInterceptor$x(t2);
          J.forEach$1$ax(t3.get$attributes(t2), new T.ListResponse_processor_closure0(updateAttributes));
          J.forEach$1$ax(t3.get$children(t2), new T.ListResponse_processor_closure1(updateChildren));
          if (t1._captured_updateIs_0 == null)
            t1._captured_updateIs_0 = "node";
        } else
          for (t3 = J.get$iterator$ax(this.changes), t4 = J.getInterceptor$x(t2); t3.moveNext$0();) {
            change = t3.get$current();
            t5 = J.getInterceptor$s(change);
            if (t5.startsWith$1(change, "$")) {
              update = t2.get$configs().containsKey$1(change) === true ? [change, J.$index$asx(t2.get$configs(), change)] : P.LinkedHashMap__makeLiteral(["name", change, "change", "remove"]);
              if (J.$eq(this._permission, 3) || !t5.startsWith$1(change, "$$"))
                updateConfigs.push(update);
            } else if (t5.startsWith$1(change, "@"))
              updateAttributes.push(t4.get$attributes(t2).containsKey$1(change) === true ? [change, J.$index$asx(t4.get$attributes(t2), change)] : P.LinkedHashMap__makeLiteral(["name", change, "change", "remove"]));
            else
              updateChildren.push(t4.get$children(t2).containsKey$1(change) === true ? [change, J.$index$asx(t4.get$children(t2), change).getSimpleMap$0()] : P.LinkedHashMap__makeLiteral(["name", change, "change", "remove"]));
          }
        J.clear$0$ax(this.changes);
        updates = [];
        t2 = t1._captured_updateBase_1;
        if (t2 != null)
          updates.push(t2);
        t1 = t1._captured_updateIs_0;
        if (t1 != null)
          updates.push(t1);
        C.JSArray_methods.addAll$1(updates, updateConfigs);
        C.JSArray_methods.addAll$1(updates, updateAttributes);
        C.JSArray_methods.addAll$1(updates, updateChildren);
        this.responder.updateResponse$3$streamStatus(this, updates, "open");
      }, "call$0", "get$processor", 0, 0, 7, "processor"],
      _responder$_close$0: [function() {
        this._nodeChangeListener.cancel$0();
      }, "call$0", "get$_responder$_close", 0, 0, 7, "_responder$_close"],
      static: {ListResponse$: [function(responder, rid, node) {
          var t1 = new T.ListResponse(node, null, null, P.LinkedHashSet_LinkedHashSet(null, null, null, P.String), true, false, responder, rid, "initialize");
          t1._permission = responder.get$nodeProvider().get$permissions().getPermission$2(J.get$path$x(node), responder);
          t1._nodeChangeListener = node.get$listStream().listen$1(t1.get$changed());
          if (node.get$listReady())
            responder.addProcessor$1(t1.get$processor());
          else
            node.get$disconnected();
          return t1;
        }, null, null, 6, 0, 271, 163, [], 170, [], 159, [], "new ListResponse"]}
    },
    "+ListResponse": [375],
    ListResponse_processor_closure: {
      "^": "Closure:15;_responder$_box_0,_responder$_captured_this_1,_captured_updateConfigs_2",
      call$2: [function($name, value) {
        var update, t1;
        update = [$name, value];
        t1 = J.getInterceptor($name);
        if (t1.$eq($name, "$is"))
          this._responder$_box_0._captured_updateIs_0 = update;
        else if (t1.$eq($name, "$base"))
          this._responder$_box_0._captured_updateBase_1 = update;
        else if (J.$eq(this._responder$_captured_this_1._permission, 3) || !t1.startsWith$1($name, "$$"))
          this._captured_updateConfigs_2.push(update);
      }, null, null, 4, 0, 15, 124, [], 22, [], "call"]
    },
    ListResponse_processor_closure0: {
      "^": "Closure:15;_captured_updateAttributes_3",
      call$2: [function($name, value) {
        this._captured_updateAttributes_3.push([$name, value]);
      }, null, null, 4, 0, 15, 124, [], 22, [], "call"]
    },
    ListResponse_processor_closure1: {
      "^": "Closure:168;_captured_updateChildren_4",
      call$2: [function($name, value) {
        this._captured_updateChildren_4.push([$name, value.getSimpleMap$0()]);
      }, null, null, 4, 0, 168, 124, [], 22, [], "call"]
    },
    RespSubscribeListener: {
      "^": "Object;callback@-292,node@-368",
      cancel$0: [function() {
        var t1 = this.callback;
        if (t1 != null) {
          this.node.unsubscribe$1(t1);
          this.callback = null;
        }
      }, "call$0", "get$cancel", 0, 0, 7, "cancel"],
      callback$0: function() {
        return this.callback.call$0();
      },
      callback$1: function(arg0) {
        return this.callback.call$1(arg0);
      },
      static: {RespSubscribeListener$: [function(node, callback) {
          return new T.RespSubscribeListener(callback, node);
        }, null, null, 4, 0, 272, 159, [], 47, [], "new RespSubscribeListener"]}
    },
    "+RespSubscribeListener": [0],
    SubscribeResponse: {
      "^": "Response;subsriptions<-376,subsriptionids<-377,changed<-378,responder-315,rid-311,_sentStreamStatus-300",
      add$4: [function(_, path, node, sid, cacheLevel) {
        var t1, t2, controller, t3;
        t1 = this.subsriptions;
        t2 = J.getInterceptor$asx(t1);
        if (t2.$index(t1, path) != null) {
          controller = t2.$index(t1, path);
          if (!J.$eq(controller.get$sid(), sid)) {
            t1 = this.subsriptionids;
            t2 = J.getInterceptor$ax(t1);
            t2.remove$1(t1, controller.get$sid());
            J.$eq(controller.get$sid(), sid);
            t2.$indexSet(t1, sid, controller);
          }
          controller.set$cacheLevel(cacheLevel);
        } else {
          t3 = this.responder;
          controller = new T.RespSubscribeController(node, this, null, sid, t3.get$nodeProvider().get$permissions().getPermission$2(J.get$path$x(node), t3) > 0, P.ListQueue$(null, O.ValueUpdate), null);
          controller.set$cacheLevel(cacheLevel);
          controller._listener = node.subscribe$2(controller.get$addValue(), controller._cachedLevel);
          if (node.get$valueReady() && node.get$lastValueUpdate() != null)
            controller.addValue$1(node.get$lastValueUpdate());
          t2.$indexSet(t1, path, controller);
          J.$indexSet$ax(this.subsriptionids, sid, controller);
        }
      }, "call$4", "get$add", 8, 0, 169, 107, [], 159, [], 191, [], 112, [], "add"],
      remove$1: [function(_, sid) {
        var t1, t2, controller;
        t1 = this.subsriptionids;
        t2 = J.getInterceptor$asx(t1);
        if (t2.$index(t1, sid) != null) {
          controller = t2.$index(t1, sid);
          t2.$index(t1, sid).destroy$0();
          t2.remove$1(t1, sid);
          J.remove$1$ax(this.subsriptions, J.get$path$x(controller.get$node()));
        }
      }, "call$1", "get$remove", 2, 0, 170, 191, [], "remove"],
      subscriptionChanged$1: [function(controller) {
        J.add$1$ax(this.changed, controller);
        this.responder.addProcessor$1(this.get$processor());
      }, "call$1", "get$subscriptionChanged", 2, 0, 171, 187, [], "subscriptionChanged"],
      processor$0: [function() {
        var updates, t1, t2, t3;
        updates = [];
        for (t1 = this.changed, t2 = J.getInterceptor$ax(t1), t3 = t2.get$iterator(t1); t3.moveNext$0();)
          C.JSArray_methods.addAll$1(updates, t3.get$current().process$0());
        this.responder.updateResponse$2(this, updates);
        t2.clear$0(t1);
      }, "call$0", "get$processor", 0, 0, 7, "processor"],
      _responder$_close$0: [function() {
        var t1, t2;
        t1 = this.subsriptions;
        t2 = J.getInterceptor$ax(t1);
        t2.forEach$1(t1, new T.SubscribeResponse__close_closure());
        t2.clear$0(t1);
      }, "call$0", "get$_responder$_close", 0, 0, 7, "_responder$_close"],
      changed$1: function(arg0) {
        return this.changed.call$1(arg0);
      },
      static: {SubscribeResponse$: [function(responder, rid) {
          return new T.SubscribeResponse(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, T.RespSubscribeController), P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.RespSubscribeController), P.LinkedHashSet_LinkedHashSet(null, null, null, T.RespSubscribeController), responder, rid, "initialize");
        }, null, null, 4, 0, 270, 163, [], 170, [], "new SubscribeResponse"]}
    },
    "+SubscribeResponse": [375],
    SubscribeResponse__close_closure: {
      "^": "Closure:15;",
      call$2: [function(path, controller) {
        controller.destroy$0();
      }, null, null, 4, 0, 15, 107, [], 187, [], "call"]
    },
    RespSubscribeController: {
      "^": "Object;node<-368,response<-373,_listener@-379,sid@-311,_permitted@-303,lastValues@-380,_cachedLevel@-311",
      set$permitted: [function(val) {
        if (J.$eq(val, this._permitted))
          return;
        this._permitted = val;
        if (val === true && J.$gt$in(J.get$length$asx(this.lastValues), 0))
          this.response.subscriptionChanged$1(this);
      }, null, null, 3, 0, 97, 157, [], "permitted"],
      get$cacheLevel: [function() {
        return this._cachedLevel;
      }, null, null, 1, 0, 2, "cacheLevel"],
      set$cacheLevel: [function(v) {
        this._cachedLevel = J.$lt$in(v, 1) ? 1 : v;
      }, null, null, 3, 0, 170, 63, [], "cacheLevel"],
      addValue$1: [function(val) {
        J.add$1$ax(this.lastValues, val);
        if (J.$gt$in(J.get$length$asx(this.lastValues), this._cachedLevel))
          this.mergeValues$0();
        if (this._permitted === true)
          this.response.subscriptionChanged$1(this);
      }, "call$1", "get$addValue", 2, 0, 141, 157, [], "addValue"],
      mergeValues$0: [function() {
        var toRemove, rslt, i, t1, rslt0, t2, t3, t4;
        toRemove = J.$sub$in(J.get$length$asx(this.lastValues), this._cachedLevel);
        rslt = this.lastValues.removeFirst$0();
        if (typeof toRemove !== "number")
          return H.iae(toRemove);
        i = 0;
        for (; i < toRemove; ++i, rslt = rslt0) {
          t1 = this.lastValues.removeFirst$0();
          rslt0 = new O.ValueUpdate(null, null, null, null, 0, null, null);
          t2 = J.getInterceptor$x(t1);
          rslt0.value = t2.get$value(t1);
          rslt0.ts = t1.get$ts();
          rslt0.status = t2.get$status(t1);
          rslt0.count = J.$add$ins(rslt.get$count(), t1.get$count());
          if (!J.get$isNaN$n(rslt.get$sum())) {
            t3 = rslt.get$sum();
            if (typeof t3 !== "number")
              return H.iae(t3);
            t3 = 0 + t3;
            rslt0.sum = t3;
          } else
            t3 = 0;
          if (!J.get$isNaN$n(t1.get$sum())) {
            t4 = t1.get$sum();
            if (typeof t4 !== "number")
              return H.iae(t4);
            rslt0.sum = t3 + t4;
          }
          t3 = J.getInterceptor$x(rslt);
          t4 = t3.get$min(rslt);
          rslt0.min = t4;
          if (J.get$isNaN$n(t4) || J.$lt$in(t2.get$min(t1), t4))
            rslt0.min = t2.get$min(t1);
          t3 = t3.get$min(rslt);
          rslt0.max = t3;
          if (J.get$isNaN$n(t3) || J.$gt$in(t2.get$max(t1), t3))
            rslt0.max = t2.get$max(t1);
        }
        this.lastValues.addFirst$1(rslt);
      }, "call$0", "get$mergeValues", 0, 0, 7, "mergeValues"],
      process$0: [function() {
        var rslts, t1, lastValue, t2, t3, m;
        rslts = [];
        for (t1 = J.get$iterator$ax(this.lastValues); t1.moveNext$0();) {
          lastValue = t1.get$current();
          t2 = J.$gt$n(lastValue.get$count(), 1) || J.get$status$x(lastValue) != null;
          t3 = J.getInterceptor$x(lastValue);
          if (t2) {
            m = P.LinkedHashMap__makeLiteral(["ts", lastValue.get$ts(), "value", t3.get$value(lastValue), "sid", this.sid]);
            if (J.$eq(lastValue.get$count(), 0))
              ;
            else if (J.$gt$n(lastValue.get$count(), 1)) {
              m.$indexSet(0, "count", lastValue.get$count());
              if (J.get$isFinite$n(lastValue.get$sum()))
                m.$indexSet(0, "sum", lastValue.get$sum());
              if (J.get$isFinite$n(t3.get$max(lastValue)))
                m.$indexSet(0, "max", t3.get$max(lastValue));
              if (J.get$isFinite$n(t3.get$min(lastValue)))
                m.$indexSet(0, "min", t3.get$min(lastValue));
            }
            rslts.push(m);
          } else
            rslts.push([this.sid, t3.get$value(lastValue), lastValue.get$ts()]);
        }
        J.clear$0$ax(this.lastValues);
        return rslts;
      }, "call$0", "get$process", 0, 0, 101, "process"],
      destroy$0: [function() {
        this._listener.cancel$0();
      }, "call$0", "get$destroy", 0, 0, 7, "destroy"],
      static: {RespSubscribeController$: [function(response, node, sid, _permitted, cacheLevel) {
          var t1 = new T.RespSubscribeController(node, response, null, sid, _permitted, P.ListQueue$(null, O.ValueUpdate), null);
          t1.set$cacheLevel(cacheLevel);
          t1._listener = node.subscribe$2(t1.get$addValue(), t1._cachedLevel);
          if (node.get$valueReady() && node.get$lastValueUpdate() != null)
            t1.addValue$1(node.get$lastValueUpdate());
          return t1;
        }, null, null, 10, 0, 273, 118, [], 159, [], 191, [], 192, [], 112, [], "new RespSubscribeController"]}
    },
    "+RespSubscribeController": [0],
    SimpleTableResult: {
      "^": "Object;columns@-327,rows*-327",
      static: {SimpleTableResult$: [function(rows, columns) {
          return new T.SimpleTableResult(columns, rows);
        }, null, null, 0, 4, 274, 35, 35, 145, [], 144, [], "new SimpleTableResult"]}
    },
    "+SimpleTableResult": [0],
    AsyncTableResult: {
      "^": "Object;response@-381,columns@-327,rows*-327,status*-300",
      update$2: [function(rows, stat) {
        var t1 = this.rows;
        if (t1 == null)
          this.rows = rows;
        else
          J.addAll$1$ax(t1, rows);
        if (stat != null)
          this.status = stat;
        this.write$0();
      }, function(rows) {
        return this.update$2(rows, null);
      }, "update$1", "call$2", "call$1", "get$update", 2, 2, 172, 35, 145, [], 200, [], "update"],
      write$1: [function(resp) {
        var t1;
        if (resp != null)
          if (this.response == null)
            this.response = resp;
          else
            Q.logger().warning$1("can not use same AsyncTableResult twice");
        if (this.response != null)
          t1 = this.rows != null || J.$eq(this.status, "closed");
        else
          t1 = false;
        if (t1) {
          this.response.updateStream$3$columns$streamStatus(this.rows, this.columns, this.status);
          this.rows = null;
          this.columns = null;
        }
      }, function() {
        return this.write$1(null);
      }, "write$0", "call$1", "call$0", "get$write", 0, 2, 173, 35, 195, [], "write"],
      close$0: [function(_) {
        var t1 = this.response;
        if (t1 != null)
          J.close$0$x(t1);
        else
          this.status = "closed";
      }, "call$0", "get$close", 0, 0, 7, "close"],
      static: {AsyncTableResult$: [function(columns) {
          return new T.AsyncTableResult(null, columns, null, "initialize");
        }, null, null, 0, 2, 275, 35, 144, [], "new AsyncTableResult"]}
    },
    "+AsyncTableResult": [0],
    SerializableNodeProvider: {
      "^": "Object;",
      static: {SerializableNodeProvider$: [function() {
          return new T.SerializableNodeProvider();
        }, null, null, 0, 0, 276, "new SerializableNodeProvider"]}
    },
    "+SerializableNodeProvider": [0],
    MutableNodeProvider: {
      "^": "Object;",
      static: {MutableNodeProvider$: [function() {
          return new T.MutableNodeProvider();
        }, null, null, 0, 0, 277, "new MutableNodeProvider"]}
    },
    "+MutableNodeProvider": [0],
    SimpleNodeProvider: {
      "^": "NodeProviderImpl;nodes>-382,_profileFactories@-383,permissions@-371",
      getNode$1: [function(path) {
        var t1, node;
        t1 = this.nodes;
        if (t1.containsKey$1(path) === true)
          return J.$index$asx(t1, path);
        node = new T.SimpleNode(false, null, false, null, null, path, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
        J.$indexSet$ax(t1, path, node);
        return node;
      }, "call$1", "get$getNode", 2, 0, 78, 107, [], "getNode", 165],
      get$root: [function() {
        return this.getNode$1("/");
      }, null, null, 1, 0, 174, "root"],
      init$2: [function(m, profiles) {
        if (profiles != null)
          this._registerProfiles$1(profiles);
        if (m != null)
          J.load$2$x(this.getNode$1("/"), m, this);
      }, function(m) {
        return this.init$2(m, null);
      }, "init$1", function() {
        return this.init$2(null, null);
      }, "init$0", "call$2", "call$1", "call$0", "get$init", 0, 4, 175, 35, 35, 113, [], 90, [], "init", 165],
      save$0: [function() {
        return this.getNode$1("/").save$0();
      }, "call$0", "get$save", 0, 0, 94, "save", 165],
      updateValue$2: [function(path, value) {
        this.getNode$1(path).updateValue$1(value);
      }, "call$2", "get$updateValue", 4, 0, 111, 107, [], 22, [], "updateValue", 165],
      addNode$2: [function(path, m) {
        var t1, p, pnode, profile, node;
        t1 = J.getInterceptor(path);
        if (t1.$eq(path, "/") || !t1.startsWith$1(path, "/"))
          return;
        p = new O.Path(path, null, null, true);
        p._parse$0();
        pnode = this.getNode$1(p.parentPath);
        pnode.onLoadChild$3(p.name, m, this);
        profile = J.$index$asx(m, "$is");
        node = this._profileFactories.containsKey$1(profile) === true ? J.$index$asx(this._profileFactories, profile).call$1(path) : this.getNode$1(path);
        J.$indexSet$ax(this.nodes, path, node);
        J.load$2$x(node, m, this);
        node.onCreated$0();
        J.$indexSet$ax(J.get$children$x(pnode), p.name, node);
        pnode.onChildAdded$2(p.name, node);
        pnode.updateList$1(p.name);
        return node;
      }, "call$2", "get$addNode", 4, 0, 79, 107, [], 113, [], "addNode", 165],
      removeNode$1: [function(path) {
        var t1, node, p, pnode;
        t1 = J.getInterceptor(path);
        if (t1.$eq(path, "/") || !t1.startsWith$1(path, "/"))
          return;
        node = this.getNode$1(path);
        node.onRemoving$0();
        node.set$removed(true);
        p = new O.Path(path, null, null, true);
        p._parse$0();
        pnode = this.getNode$1(p.parentPath);
        J.remove$1$ax(J.get$children$x(pnode), p.name);
        pnode.onChildRemoved$2(p.name, node);
        pnode.updateList$1(p.name);
      }, "call$1", "get$removeNode", 2, 0, 61, 107, [], "removeNode", 165],
      _registerProfiles$1: [function(m) {
        J.forEach$1$ax(m, new T.SimpleNodeProvider__registerProfiles_closure(this));
      }, "call$1", "get$_registerProfiles", 2, 0, 100, 113, [], "_registerProfiles"],
      $isMutableNodeProvider: 1,
      $isSerializableNodeProvider: 1,
      static: {SimpleNodeProvider$: [function(m, profiles) {
          var t1 = new T.SimpleNodeProvider(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, T.LocalNode), P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, {func: 1, ret: T.SimpleNode, args: [P.String]}), new T.DummyPermissionManager());
          t1.init$2(m, profiles);
          return t1;
        }, null, null, 0, 4, 278, 35, 35, 113, [], 90, [], "new SimpleNodeProvider"]}
    },
    "+SimpleNodeProvider": [384, 385, 386],
    SimpleNodeProvider__registerProfiles_closure: {
      "^": "Closure:15;_responder$_captured_this_0",
      call$2: [function(key, val) {
        var t1;
        if (typeof key === "string") {
          t1 = H.buildFunctionType(H.buildInterfaceType(T.SimpleNode), [H.buildInterfaceType(P.String)])._isTest$1(val);
          t1 = t1;
        } else
          t1 = false;
        if (t1)
          J.$indexSet$ax(this._responder$_captured_this_0._profileFactories, key, val);
      }, null, null, 4, 0, 15, 21, [], 157, [], "call"]
    },
    SimpleNode: {
      "^": "LocalNodeImpl;removed@-303,parentNode-368,_loaded-303,_listChangeController-369,_listReqListener-326,path-300,callbacks-360,_lastValueUpdate-361,profile-328,attributes-329,configs-329,children-330",
      load$2: [function(_, m, provider) {
        var t1, t2;
        t1 = {};
        if (this._loaded === true) {
          J.clear$0$ax(this.configs);
          J.clear$0$ax(this.attributes);
          J.clear$0$ax(this.children);
        }
        t1._captured_childPathPre_0 = null;
        t2 = this.path;
        if (J.$eq(t2, "/"))
          t1._captured_childPathPre_0 = "/";
        else
          t1._captured_childPathPre_0 = H.S(t2) + "/";
        J.forEach$1$ax(m, new T.SimpleNode_load_closure(t1, this, provider));
        this._loaded = true;
      }, function($receiver, m) {
        return this.load$2($receiver, m, null);
      }, "load$1", "call$2", "call$1", "get$load", 2, 2, 176, 35, 113, [], 91, [], "load"],
      save$0: [function() {
        var rslt, t1;
        rslt = P.LinkedHashMap__makeEmpty();
        J.forEach$1$ax(this.configs, new T.SimpleNode_save_closure(rslt));
        J.forEach$1$ax(this.attributes, new T.SimpleNode_save_closure0(rslt));
        t1 = this._lastValueUpdate;
        if (t1 != null && J.get$value$x(t1) != null)
          rslt.$indexSet(0, "?value", J.get$value$x(this._lastValueUpdate));
        J.forEach$1$ax(this.children, new T.SimpleNode_save_closure1(rslt));
        return rslt;
      }, "call$0", "get$save", 0, 0, 94, "save"],
      invoke$5: [function(params, responder, response, parentNode, maxPermission) {
        var rslt, e, stack, error, exception, t1, rtype, r, stream, list;
        rslt = null;
        try {
          rslt = this.onInvoke$1(params);
        } catch (exception) {
          t1 = H.unwrapException(exception);
          e = t1;
          stack = H.getTraceFromException(exception);
          error = new O.DSError("invokeException", null, J.toString$0(e), null, "response");
          try {
            J.set$detail$x(error, J.toString$0(stack));
          } catch (exception) {
            H.unwrapException(exception);
          }
          J.close$1$x(response, error);
          return error;
        }
        rtype = this.configs.containsKey$1("$result") === true ? J.$index$asx(this.configs, "$result") : "values";
        if (rslt == null) {
          t1 = J.getInterceptor(rtype);
          if (t1.$eq(rtype, "values"))
            rslt = P.LinkedHashMap__makeEmpty();
          else if (t1.$eq(rtype, "table"))
            rtype = [];
          else if (t1.$eq(rtype, "stream"))
            rtype = [];
        }
        if (!!J.getInterceptor(rslt).$isIterable)
          response.updateStream$2$streamStatus(J.toList$0$ax(rslt), "closed");
        else if (!!J.getInterceptor(rslt).$isMap)
          response.updateStream$2$streamStatus([rslt], "closed");
        else if (rslt instanceof T.SimpleTableResult)
          response.updateStream$3$columns$streamStatus(J.get$rows$x(rslt), rslt.get$columns(), "closed");
        else if (rslt instanceof T.AsyncTableResult) {
          rslt.write$1(response);
          return response;
        } else if (rslt instanceof O.Table)
          response.updateStream$3$columns$streamStatus(J.get$rows$x(rslt), rslt.get$columns(), "closed");
        else if (!!J.getInterceptor(rslt).$isStream) {
          r = new T.AsyncTableResult(null, null, null, "initialize");
          stream = rslt;
          if (J.$eq(rtype, "stream")) {
            stream.listen$4$cancelOnError$onDone$onError(new T.SimpleNode_invoke_closure(r), true, new T.SimpleNode_invoke_closure0(r), new T.SimpleNode_invoke_closure1(response));
            r.write$1(response);
            return response;
          } else {
            list = [];
            stream.listen$4$cancelOnError$onDone$onError(new T.SimpleNode_invoke_closure2(list), true, new T.SimpleNode_invoke_closure3(r, list), new T.SimpleNode_invoke_closure4(response));
          }
          r.write$1(response);
          return response;
        } else if (!!J.getInterceptor(rslt).$isFuture) {
          r = new T.AsyncTableResult(null, null, null, "initialize");
          rslt.then$1(new T.SimpleNode_invoke_closure5(r)).catchError$1(new T.SimpleNode_invoke_closure6(response));
          r.write$1(response);
          return response;
        } else
          J.close$0$x(response);
        return response;
      }, function(params, responder, response, parentNode) {
        return this.invoke$5(params, responder, response, parentNode, 3);
      }, "invoke$4", "call$5", "call$4", "get$invoke", 8, 2, 177, 175, 176, [], 163, [], 118, [], 197, [], 177, [], "invoke"],
      onInvoke$1: [function(params) {
        return;
      }, "call$1", "get$onInvoke", 2, 0, 178, 176, [], "onInvoke"],
      onSubscribe$0: [function() {
      }, "call$0", "get$onSubscribe", 0, 0, 7, "onSubscribe"],
      onCreated$0: [function() {
      }, "call$0", "get$onCreated", 0, 0, 7, "onCreated"],
      onRemoving$0: [function() {
      }, "call$0", "get$onRemoving", 0, 0, 7, "onRemoving"],
      onChildRemoved$2: [function($name, node) {
      }, "call$2", "get$onChildRemoved", 4, 0, 102, 124, [], 159, [], "onChildRemoved"],
      onChildAdded$2: [function($name, node) {
      }, "call$2", "get$onChildAdded", 4, 0, 102, 124, [], 159, [], "onChildAdded"],
      subscribe$2: [function(callback, cacheLevel) {
        this.onSubscribe$0();
        return this.super$LocalNode$subscribe$2(callback, cacheLevel);
      }, function(callback) {
        return this.subscribe$2(callback, 1);
      }, "subscribe$1", "call$2", "call$1", "get$subscribe", 2, 2, 160, 111, 47, [], 112, [], "subscribe", 165],
      onLoadChild$3: [function($name, data, provider) {
        return;
      }, "call$3", "get$onLoadChild", 6, 0, 179, 124, [], 52, [], 91, [], "onLoadChild"],
      createChild$2: [function($name, m) {
        var child = new T.SimpleNode(false, null, false, null, null, H.S(this.path) + "/" + H.S($name), P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
        if (m != null)
          child.load$2(0, m, null);
        this.super$Node$addChild$2($name, child);
        J.add$1$ax(this.get$listChangeController(), $name);
        return child;
      }, function($name) {
        return this.createChild$2($name, null);
      }, "createChild$1", "call$2", "call$1", "get$createChild", 2, 2, 180, 35, 124, [], 113, [], "createChild"],
      addChild$2: [function($name, node) {
        this.super$Node$addChild$2($name, node);
        J.add$1$ax(this.get$listChangeController(), $name);
      }, "call$2", "get$addChild", 4, 0, 102, 124, [], 159, [], "addChild"],
      removeChild$1: [function(input) {
        var $name = this.super$Node$removeChild$1(input);
        if ($name != null)
          J.add$1$ax(this.get$listChangeController(), $name);
        return $name;
      }, "call$1", "get$removeChild", 2, 0, 103, 41, [], "removeChild"],
      $indexSet: [function(_, $name, value) {
        var t1, child;
        t1 = J.getInterceptor$s($name);
        if (t1.startsWith$1($name, "$") || t1.startsWith$1($name, "@"))
          if (t1.startsWith$1($name, "$"))
            J.$indexSet$ax(this.configs, $name, value);
          else
            J.$indexSet$ax(this.attributes, $name, value);
        else if (value == null) {
          $name = this.super$Node$removeChild$1($name);
          if ($name != null)
            J.add$1$ax(this.get$listChangeController(), $name);
          return $name;
        } else if (!!J.getInterceptor(value).$isMap) {
          child = new T.SimpleNode(false, null, false, null, null, H.S(this.path) + "/" + H.S($name), P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
          child.load$2(0, value, null);
          this.super$Node$addChild$2($name, child);
          J.add$1$ax(this.get$listChangeController(), $name);
          return child;
        } else {
          this.super$Node$addChild$2($name, value);
          J.add$1$ax(this.get$listChangeController(), $name);
          return value;
        }
      }, null, "get$[]=", 4, 0, 10, 124, [], 22, [], "[]="],
      static: {SimpleNode$: [function(path) {
          return new T.SimpleNode(false, null, false, null, null, path, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
        }, null, null, 2, 0, 13, 107, [], "new SimpleNode"]}
    },
    "+SimpleNode": [370],
    SimpleNode_load_closure: {
      "^": "Closure:10;_responder$_box_0,_responder$_captured_this_1,_captured_provider_2",
      call$2: [function(key, value) {
        var t1, childPathpath;
        t1 = J.getInterceptor$s(key);
        if (t1.startsWith$1(key, "?")) {
          if (t1.$eq(key, "?value"))
            this._responder$_captured_this_1.updateValue$1(value);
        } else if (t1.startsWith$1(key, "$"))
          J.$indexSet$ax(this._responder$_captured_this_1.configs, key, value);
        else if (t1.startsWith$1(key, "@"))
          J.$indexSet$ax(this._responder$_captured_this_1.attributes, key, value);
        else if (!!J.getInterceptor(value).$isMap) {
          childPathpath = H.S(this._responder$_box_0._captured_childPathPre_0) + H.S(key);
          H.interceptedTypeCast(this._captured_provider_2, "$isSimpleNodeProvider").addNode$2(childPathpath, value);
        }
      }, null, null, 4, 0, 10, 21, [], 22, [], "call"]
    },
    SimpleNode_save_closure: {
      "^": "Closure:15;_responder$_captured_rslt_0",
      call$2: [function(str, val) {
        this._responder$_captured_rslt_0.$indexSet(0, str, val);
      }, null, null, 4, 0, 15, 160, [], 157, [], "call"]
    },
    SimpleNode_save_closure0: {
      "^": "Closure:15;_captured_rslt_1",
      call$2: [function(str, val) {
        this._captured_rslt_1.$indexSet(0, str, val);
      }, null, null, 4, 0, 15, 160, [], 157, [], "call"]
    },
    SimpleNode_save_closure1: {
      "^": "Closure:181;_captured_rslt_2",
      call$2: [function(str, node) {
        if (node instanceof T.SimpleNode)
          this._captured_rslt_2.$indexSet(0, str, node.save$0());
      }, null, null, 4, 0, 181, 160, [], 159, [], "call"]
    },
    SimpleNode_invoke_closure: {
      "^": "Closure:8;_captured_r_0",
      call$1: [function(v) {
        var t1 = J.getInterceptor(v);
        if (!!t1.$isIterable)
          this._captured_r_0.update$1(t1.toList$0(v));
        else if (!!t1.$isMap)
          this._captured_r_0.update$1([v]);
        else
          throw H.wrapException(P.Exception_Exception("Unknown Value from Stream"));
      }, null, null, 2, 0, 8, 63, [], "call"]
    },
    SimpleNode_invoke_closure0: {
      "^": "Closure:5;_captured_r_1",
      call$0: [function() {
        this._captured_r_1.close$0(0);
      }, null, null, 0, 0, 5, "call"]
    },
    SimpleNode_invoke_closure1: {
      "^": "Closure:15;_captured_response_2",
      call$2: [function(e, stack) {
        var error, exception;
        error = new O.DSError("invokeException", null, J.toString$0(e), null, "response");
        try {
          J.set$detail$x(error, J.toString$0(stack));
        } catch (exception) {
          H.unwrapException(exception);
        }
        J.close$1$x(this._captured_response_2, error);
      }, null, null, 4, 0, 15, 6, [], 201, [], "call"]
    },
    SimpleNode_invoke_closure2: {
      "^": "Closure:8;_captured_list_3",
      call$1: [function(v) {
        var t1 = J.getInterceptor(v);
        if (!!t1.$isIterable)
          C.JSArray_methods.addAll$1(this._captured_list_3, v);
        else if (!!t1.$isMap)
          this._captured_list_3.push(v);
        else
          throw H.wrapException(P.Exception_Exception("Unknown Value from Stream"));
      }, null, null, 2, 0, 8, 63, [], "call"]
    },
    SimpleNode_invoke_closure3: {
      "^": "Closure:5;_captured_r_4,_captured_list_5",
      call$0: [function() {
        var t1 = this._captured_r_4;
        t1.update$1(this._captured_list_5);
        t1.close$0(0);
      }, null, null, 0, 0, 5, "call"]
    },
    SimpleNode_invoke_closure4: {
      "^": "Closure:15;_captured_response_6",
      call$2: [function(e, stack) {
        var error, exception;
        error = new O.DSError("invokeException", null, J.toString$0(e), null, "response");
        try {
          J.set$detail$x(error, J.toString$0(stack));
        } catch (exception) {
          H.unwrapException(exception);
        }
        J.close$1$x(this._captured_response_6, error);
      }, null, null, 4, 0, 15, 6, [], 201, [], "call"]
    },
    SimpleNode_invoke_closure5: {
      "^": "Closure:8;_captured_r_7",
      call$1: [function(value) {
        var t1, t2;
        t1 = this._captured_r_7;
        t2 = J.getInterceptor(value);
        t1.update$1(!!t2.$isIterable ? t2.toList$0(value) : [value]);
        t1.close$0(0);
      }, null, null, 2, 0, 8, 22, [], "call"]
    },
    SimpleNode_invoke_closure6: {
      "^": "Closure:15;_captured_response_8",
      call$2: [function(e, stack) {
        var error, exception;
        error = new O.DSError("invokeException", null, J.toString$0(e), null, "response");
        try {
          J.set$detail$x(error, J.toString$0(stack));
        } catch (exception) {
          H.unwrapException(exception);
        }
        J.close$1$x(this._captured_response_8, error);
      }, null, null, 4, 0, 15, 6, [], 201, [], "call"]
    },
    OnInvokeClosed: {
      "^": "Object;",
      $typedefType: 20,
      $$isTypedef: true
    },
    "+OnInvokeClosed": "",
    _NodeFactory: {
      "^": "Object;",
      $typedefType: 393,
      $$isTypedef: true
    },
    "+_NodeFactory": ""
  }], ["dslink.stub", "../tool/node_stub.dart",, L, {
    "^": "",
    main: [function(args) {
    }, "call$1", "main$closure", 2, 0, 279],
    NodeStub: {
      "^": "SimpleNode;removed-303,parentNode-368,_loaded-303,_listChangeController-369,_listReqListener-326,path-300,callbacks-360,_lastValueUpdate-361,profile-328,attributes-329,configs-329,children-330",
      onInvoke$1: [function(params) {
        return params;
      }, "call$1", "get$onInvoke", 2, 0, 178, 176, [], "onInvoke"],
      onSubscribe$0: [function() {
        P.print(this.path);
      }, "call$0", "get$onSubscribe", 0, 0, 7, "onSubscribe"],
      onCreated$0: [function() {
        P.print(this.path);
      }, "call$0", "get$onCreated", 0, 0, 7, "onCreated"],
      onRemoving$0: [function() {
        P.print(this.path);
      }, "call$0", "get$onRemoving", 0, 0, 7, "onRemoving"],
      onChildRemoved$2: [function($name, node) {
        P.print($name);
      }, "call$2", "get$onChildRemoved", 4, 0, 102, 124, [], 159, [], "onChildRemoved"],
      onChildAdded$2: [function($name, node) {
        P.print($name);
      }, "call$2", "get$onChildAdded", 4, 0, 102, 124, [], 159, [], "onChildAdded"],
      static: {NodeStub$: [function(path) {
          return new L.NodeStub(false, null, false, null, null, path, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
        }, null, null, 2, 0, 13, 107, [], "new NodeStub"]}
    },
    "+NodeStub": [387]
  }, 1], ["dslink.utils", "package:dslink/utils.dart",, Q, {
    "^": "",
    Base64_encode: function(bytes, lineSize, paddingSpace) {
      var len, remainderLength, chunkLength, t1, outputLen, lineSizeGroup, out, j, i, j0, t2, c, i0, t3, t4, x, y;
      len = bytes.length;
      if (len === 0)
        return "";
      remainderLength = C.JSInt_methods.remainder$1(len, 3);
      chunkLength = len - remainderLength;
      t1 = remainderLength > 0 ? 4 : 0;
      outputLen = (len / 3 | 0) * 4 + t1 + paddingSpace;
      lineSizeGroup = lineSize >>> 2;
      t1 = lineSizeGroup > 0;
      if (t1)
        outputLen += C.JSInt_methods.$tdiv(outputLen - 1, lineSizeGroup << 2 >>> 0) * (1 + paddingSpace);
      out = Array(outputLen);
      out.fixed$length = Array;
      out.$builtinTypeInfo = [P.$int];
      for (j = 0, i = 0; i < paddingSpace; ++i, j = j0) {
        j0 = j + 1;
        if (j >= outputLen)
          return H.ioore(out, j);
        out[j] = 32;
      }
      for (t2 = outputLen - 2, i = 0, c = 0; i < chunkLength; i = i0) {
        i0 = i + 1;
        if (i >= len)
          return H.ioore(bytes, i);
        t3 = C.JSInt_methods.$mod(bytes[i], 256);
        i = i0 + 1;
        if (i0 >= len)
          return H.ioore(bytes, i0);
        t4 = C.JSInt_methods.$mod(bytes[i0], 256);
        i0 = i + 1;
        if (i >= len)
          return H.ioore(bytes, i);
        x = t3 << 16 & 16777215 | t4 << 8 & 16777215 | C.JSInt_methods.$mod(bytes[i], 256);
        j0 = j + 1;
        t4 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", x >>> 18);
        if (j < 0 || j >= outputLen)
          return H.ioore(out, j);
        out[j] = t4;
        j = j0 + 1;
        t4 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", x >>> 12 & 63);
        if (j0 < 0 || j0 >= outputLen)
          return H.ioore(out, j0);
        out[j0] = t4;
        j0 = j + 1;
        t4 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", x >>> 6 & 63);
        if (j < 0 || j >= outputLen)
          return H.ioore(out, j);
        out[j] = t4;
        j = j0 + 1;
        t4 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", x & 63);
        if (j0 < 0 || j0 >= outputLen)
          return H.ioore(out, j0);
        out[j0] = t4;
        if (t1) {
          ++c;
          t3 = c === lineSizeGroup && j < t2;
        } else
          t3 = false;
        if (t3) {
          j0 = j + 1;
          if (j < 0 || j >= outputLen)
            return H.ioore(out, j);
          out[j] = 10;
          for (j = j0, i = 0; i < paddingSpace; ++i, j = j0) {
            j0 = j + 1;
            if (j < 0 || j >= outputLen)
              return H.ioore(out, j);
            out[j] = 32;
          }
          c = 0;
        }
      }
      if (remainderLength === 1) {
        if (i >= len)
          return H.ioore(bytes, i);
        x = C.JSInt_methods.$mod(bytes[i], 256);
        j0 = j + 1;
        t1 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", x >>> 2);
        if (j < 0 || j >= outputLen)
          return H.ioore(out, j);
        out[j] = t1;
        t1 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", x << 4 & 63);
        if (j0 < 0 || j0 >= outputLen)
          return H.ioore(out, j0);
        out[j0] = t1;
        return P.String_String$fromCharCodes(C.JSArray_methods.sublist$2(out, 0, t2), 0, null);
      } else if (remainderLength === 2) {
        if (i >= len)
          return H.ioore(bytes, i);
        x = C.JSInt_methods.$mod(bytes[i], 256);
        t1 = i + 1;
        if (t1 >= len)
          return H.ioore(bytes, t1);
        y = C.JSInt_methods.$mod(bytes[t1], 256);
        j0 = j + 1;
        t1 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", x >>> 2);
        if (j < 0 || j >= outputLen)
          return H.ioore(out, j);
        out[j] = t1;
        j = j0 + 1;
        t1 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", (x << 4 | y >>> 4) & 63);
        if (j0 < 0 || j0 >= outputLen)
          return H.ioore(out, j0);
        out[j0] = t1;
        t1 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", y << 2 & 63);
        if (j < 0 || j >= outputLen)
          return H.ioore(out, j);
        out[j] = t1;
        return P.String_String$fromCharCodes(C.JSArray_methods.sublist$2(out, 0, outputLen - 1), 0, null);
      }
      return P.String_String$fromCharCodes(out, 0, null);
    },
    Base64_decode: function(input) {
      var t1, len, extrasLen, i, c, t2, lenmis, padLength, currentCodeUnit, outputLen, out, o, x, j, i0, o0;
      if (input == null)
        return;
      t1 = J.getInterceptor$asx(input);
      len = t1.get$length(input);
      if (J.$eq(len, 0))
        return new Uint8Array(H._checkLength(0));
      if (typeof len !== "number")
        return H.iae(len);
      extrasLen = 0;
      i = 0;
      for (; i < len; ++i) {
        c = J.$index$asx($.get$Base64__decodeTable(), t1.codeUnitAt$1(input, i));
        t2 = J.getInterceptor$in(c);
        if (t2.$lt(c, 0)) {
          ++extrasLen;
          if (t2.$eq(c, -2))
            return;
        }
      }
      lenmis = C.JSNumber_methods.$mod(len - extrasLen, 4);
      if (lenmis === 2) {
        input = H.S(input) + "==";
        len += 2;
      } else if (lenmis === 3) {
        input = H.S(input) + "=";
        ++len;
      } else if (lenmis === 1)
        return;
      for (i = len - 1, t1 = J.getInterceptor$s(input), padLength = 0; i >= 0; --i) {
        currentCodeUnit = t1.codeUnitAt$1(input, i);
        if (J.$gt$n(J.$index$asx($.get$Base64__decodeTable(), currentCodeUnit), 0))
          break;
        if (currentCodeUnit === 61)
          ++padLength;
      }
      outputLen = C.JSNumber_methods._shrOtherPositive$1((len - extrasLen) * 6, 3) - padLength;
      t2 = H._checkLength(outputLen);
      out = new Uint8Array(t2);
      for (i = 0, o = 0; o < outputLen;) {
        for (x = 0, j = 4; j > 0; i = i0) {
          i0 = i + 1;
          c = J.$index$asx($.get$Base64__decodeTable(), t1.codeUnitAt$1(input, i));
          if (J.$ge$in(c, 0)) {
            if (typeof c !== "number")
              return H.iae(c);
            x = x << 6 & 16777215 | c;
            --j;
          }
        }
        o0 = o + 1;
        if (o >= t2)
          return H.ioore(out, o);
        out[o] = x >>> 16;
        if (o0 < outputLen) {
          o = o0 + 1;
          if (o0 >= t2)
            return H.ioore(out, o0);
          out[o0] = x >>> 8 & 255;
          if (o < outputLen) {
            o0 = o + 1;
            if (o >= t2)
              return H.ioore(out, o);
            out[o] = x & 255;
            o = o0;
          }
        } else
          o = o0;
      }
      return out;
    },
    DsJson_encode: function(val, pretty) {
      var t1, t2, output, stringifier;
      t1 = $.get$DsJson_instance();
      t1.toString;
      if (pretty === true) {
        t2 = t1._prettyEncoder;
        if (t2 == null) {
          t2 = new P.JsonEncoder("  ", Q.DsJsonCodecImpl__safeEncoder$closure());
          t1.encoder = t2;
          t1._prettyEncoder = t2;
        } else
          t1.encoder = t2;
      }
      t1 = t1.encoder;
      t2 = t1._toEncodable;
      t1 = t1.indent;
      output = new P.StringBuffer("");
      if (t1 == null) {
        t1 = t2 != null ? t2 : P._defaultToEncodable$closure();
        stringifier = new P._JsonStringStringifier(output, [], t1);
      } else {
        t2 = t2 != null ? t2 : P._defaultToEncodable$closure();
        stringifier = new P._JsonStringStringifierPretty(t1, 0, output, [], t2);
      }
      stringifier.writeObject$1(val);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ByteDataUtil_mergeBytes: function(bytesList) {
      var t1, totalLen, _i, t2, t3, output, pos, bytes;
      t1 = bytesList.length;
      if (t1 === 1) {
        if (0 >= t1)
          return H.ioore(bytesList, 0);
        return bytesList[0];
      }
      for (totalLen = 0, _i = 0; t2 = bytesList.length, _i < t2; t2 === t1 || (0, H.throwConcurrentModificationError)(bytesList), ++_i) {
        t3 = bytesList[_i].byteLength;
        if (typeof t3 !== "number")
          return H.iae(t3);
        totalLen += t3;
      }
      output = new DataView(new ArrayBuffer(totalLen));
      for (t1 = bytesList.length, pos = 0, _i = 0; _i < bytesList.length; bytesList.length === t1 || (0, H.throwConcurrentModificationError)(bytesList), ++_i) {
        bytes = bytesList[_i];
        t2 = output.buffer;
        t2.toString;
        H._checkViewArguments(t2, pos, null);
        t2 = new Uint8Array(t2, pos);
        t3 = bytes.buffer;
        C.NativeUint8List_methods.setAll$2(t2, 0, (t3 && C.NativeByteBuffer_methods).asUint8List$2(t3, bytes.byteOffset, bytes.byteLength));
        t3 = bytes.byteLength;
        if (typeof t3 !== "number")
          return H.iae(t3);
        pos += t3;
      }
      return output;
    },
    DsTimer__startTimer: [function() {
      P.Timer_Timer(C.Duration_0, Q.DsTimer__dsLoop$closure());
      $.DsTimer__pending = true;
    }, "call$0", "DsTimer__startTimer$closure", 0, 0, 7],
    DsTimer_callLaterOnce: function(callback) {
      if (!C.JSArray_methods.contains$1($.get$DsTimer__callbacks(), callback)) {
        if (!$.DsTimer__pending) {
          P.Timer_Timer(C.Duration_0, Q.DsTimer__dsLoop$closure());
          $.DsTimer__pending = true;
        }
        $.get$DsTimer__callbacks().push(callback);
      }
    },
    DsTimer__getTimerFunctions: function(time50) {
      var t1, tf, it;
      if ($.get$DsTimer__pendingTimerMap().containsKey$1(time50))
        return $.get$DsTimer__pendingTimerMap().$index(0, time50);
      t1 = [];
      t1.$builtinTypeInfo = [P.Function];
      tf = new Q.TimerFunctions(time50, t1, null, null, null);
      $.get$DsTimer__pendingTimerMap().$indexSet(0, time50, tf);
      t1 = $.get$DsTimer__pendingTimer();
      if (!t1.get$isEmpty(t1)) {
        t1 = $.get$DsTimer__pendingTimer();
        it = t1.get$first(t1);
      } else
        it = null;
      for (; t1 = it == null, !t1;)
        if (it.get$ts50() > time50) {
          J.insertBefore$1$x(it, tf);
          break;
        } else
          it = !J.$eq(it.get$next(), $.get$DsTimer__pendingTimer()) ? it.get$next() : null;
      if (t1) {
        t1 = $.get$DsTimer__pendingTimer();
        t1._insertAfter$2(t1._collection$_previous, tf);
      }
      if (!$.DsTimer__pending) {
        P.Timer_Timer(C.Duration_0, Q.DsTimer__dsLoop$closure());
        $.DsTimer__pending = true;
      }
      return tf;
    },
    DsTimer__removeTimerFunctions: function(time50) {
      var t1, t2, t3, _i, fun;
      t1 = $.get$DsTimer__pendingTimer();
      if (!t1.get$isEmpty(t1)) {
        t1 = $.get$DsTimer__pendingTimer();
        t2 = t1._collection$_next;
        if (t2 == null ? t1 == null : t2 === t1)
          H.throwExpression(new P.StateError("No such element"));
        t1 = t2.get$ts50();
        if (typeof time50 !== "number")
          return H.iae(time50);
        t1 = t1 <= time50;
      } else
        t1 = false;
      if (t1) {
        t1 = $.get$DsTimer__pendingTimer();
        t2 = t1._collection$_next;
        if (t2 == null ? t1 == null : t2 === t1)
          H.throwExpression(new P.StateError("No such element"));
        $.get$DsTimer__pendingTimerMap().remove$1(0, t2.get$ts50());
        t2.unlink$0();
        for (t1 = t2.get$_utils$_functions(), t3 = t1.length, _i = 0; _i < t1.length; t1.length === t3 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          fun = t1[_i];
          $.get$DsTimer__functionsMap().remove$1(0, fun);
          fun.call$0();
        }
        return t2;
      }
      return;
    },
    DsTimer_timerOnceBefore: function(callback, ms) {
      var t1, desiredTime50, existTf, tf;
      t1 = Date.now();
      if (typeof ms !== "number")
        return H.iae(ms);
      desiredTime50 = C.JSNumber_methods.toInt$0(Math.ceil((t1 + ms) / 50));
      if ($.get$DsTimer__functionsMap().containsKey$1(callback)) {
        existTf = $.get$DsTimer__functionsMap().$index(0, callback);
        if (existTf.get$ts50() <= desiredTime50)
          return;
        else
          J.remove$1$ax(existTf, callback);
      }
      t1 = $.DsTimer__lastTimeRun;
      if (typeof t1 !== "number")
        return H.iae(t1);
      if (desiredTime50 <= t1) {
        Q.DsTimer_callLaterOnce(callback);
        return;
      }
      tf = Q.DsTimer__getTimerFunctions(desiredTime50);
      J.add$1$ax(tf, callback);
      $.get$DsTimer__functionsMap().$indexSet(0, callback, tf);
    },
    DsTimer_timerOnceAfter: function(callback, ms) {
      var t1, desiredTime50, existTf, tf;
      t1 = Date.now();
      if (typeof ms !== "number")
        return H.iae(ms);
      desiredTime50 = C.JSNumber_methods.toInt$0(Math.ceil((t1 + ms) / 50));
      if ($.get$DsTimer__functionsMap().containsKey$1(callback)) {
        existTf = $.get$DsTimer__functionsMap().$index(0, callback);
        if (existTf.get$ts50() >= desiredTime50)
          return;
        else
          J.remove$1$ax(existTf, callback);
      }
      t1 = $.DsTimer__lastTimeRun;
      if (typeof t1 !== "number")
        return H.iae(t1);
      if (desiredTime50 <= t1) {
        Q.DsTimer_callLaterOnce(callback);
        return;
      }
      tf = Q.DsTimer__getTimerFunctions(desiredTime50);
      J.add$1$ax(tf, callback);
      $.get$DsTimer__functionsMap().$indexSet(0, callback, tf);
    },
    DsTimer__dsLoop: [function() {
      var runnings, t1, t2, t3;
      $.DsTimer__pending = false;
      $.DsTimer__looping = true;
      runnings = $.get$DsTimer__callbacks();
      $.DsTimer__callbacks = [];
      C.JSArray_methods.forEach$1(runnings, new Q.DsTimer__dsLoop_closure());
      t1 = Date.now();
      $.DsTimer__lastTimeRun = C.JSNumber_methods.toInt$0(Math.floor(t1 / 50));
      for (; Q.DsTimer__removeTimerFunctions($.DsTimer__lastTimeRun) != null;)
        ;
      $.DsTimer__looping = false;
      if ($.DsTimer__mergeCycle) {
        $.DsTimer__mergeCycle = false;
        Q.DsTimer__dsLoop();
      }
      t2 = $.get$DsTimer__pendingTimer();
      if (!t2.get$isEmpty(t2)) {
        if (!$.DsTimer__pending) {
          t2 = $.DsTimer_timerTs50;
          t3 = $.get$DsTimer__pendingTimer();
          if (t2 !== t3.get$first(t3).get$ts50()) {
            t2 = $.get$DsTimer__pendingTimer();
            $.DsTimer_timerTs50 = t2.get$first(t2).get$ts50();
            t2 = $.DsTimer_timerTimer;
            if (t2 != null && t2.get$isActive())
              $.DsTimer_timerTimer.cancel$0();
            t2 = $.DsTimer_timerTs50;
            if (typeof t2 !== "number")
              return t2.$mul();
            $.DsTimer_timerTimer = P.Timer_Timer(P.Duration$(0, 0, 0, t2 * 50 + 1 - t1, 0, 0), Q.DsTimer__startTimer$closure());
          }
        }
      } else {
        t1 = $.DsTimer_timerTimer;
        if (t1 != null) {
          if (t1.get$isActive())
            $.DsTimer_timerTimer.cancel$0();
          $.DsTimer_timerTimer = null;
        }
      }
    }, "call$0", "DsTimer__dsLoop$closure", 0, 0, 7],
    DEBUG_MODE: function() {
      var t1, exception;
      t1 = $._DEBUG_MODE;
      if (t1 != null)
        return t1;
      try {
        $._DEBUG_MODE = false;
        t1 = false;
      } catch (exception) {
        H.unwrapException(exception);
        $._DEBUG_MODE = true;
        t1 = true;
      }
      return t1;
    },
    logger: function() {
      var t1 = $._logger;
      if (t1 != null)
        return t1;
      $.hierarchicalLoggingEnabled = true;
      t1 = N.Logger_Logger("DSA");
      $._logger = t1;
      t1.get$onRecord().listen$1(new Q.logger_closure());
      return $._logger;
    },
    updateLogLevel: [function($name) {
      var t1, levels, _i, l;
      t1 = J.trim$0$s($name);
      levels = P.LinkedHashMap__makeEmpty();
      for (_i = 0; _i < 10; ++_i) {
        l = C.List_O1R[_i];
        levels.$indexSet(0, l.name, l);
      }
      l = levels.$index(0, t1.toUpperCase());
      if (l != null)
        Q.logger().set$level(l);
    }, "call$1", "updateLogLevel$closure", 2, 0, 61, 124, [], "updateLogLevel"],
    buildEnumType: [function(values) {
      return "enum[" + H.S(J.join$1$ax(values, ",")) + "]";
    }, "call$1", "buildEnumType$closure", 2, 0, 290, 209, [], "buildEnumType"],
    buildActionIO: [function(types) {
      return J.map$1$ax(types.get$keys(), new Q.buildActionIO_closure(types)).toList$0(0);
    }, "call$1", "buildActionIO$closure", 2, 0, 291, 210, [], "buildActionIO"],
    closure1: {
      "^": "Closure:5;",
      call$0: function() {
        var table, i, t1;
        table = Array(256);
        table.fixed$length = Array;
        table.$builtinTypeInfo = [P.$int];
        C.JSArray_methods.fillRange$3(table, 0, 256, -2);
        for (i = 0; i < 64; ++i) {
          t1 = C.JSString_methods.codeUnitAt$1("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", i);
          if (t1 >= 256)
            return H.ioore(table, t1);
          table[t1] = i;
        }
        table[43] = 62;
        table[47] = 63;
        table[13] = -1;
        table[10] = -1;
        table[32] = -1;
        table[10] = -1;
        table[61] = 0;
        return table;
      }
    },
    DSLinkJSON: {
      "^": "Object;_json@-304,name*-300,version*-300,description@-300,main@-300,engines@-388,configs@-389,getDependencies@-302",
      verify$0: [function() {
        if (this.name == null)
          throw H.wrapException(P.Exception_Exception("DSLink Name is required."));
        if (this.main == null)
          throw H.wrapException(P.Exception_Exception("DSLink Main Script is required."));
      }, "call$0", "get$verify", 0, 0, 7, "verify"],
      save$0: [function() {
        var t1, map, t2, _i, key;
        if (this.name == null)
          H.throwExpression(P.Exception_Exception("DSLink Name is required."));
        if (this.main == null)
          H.throwExpression(P.Exception_Exception("DSLink Main Script is required."));
        t1 = this._json;
        t1 = t1 != null ? t1 : P.LinkedHashMap__makeEmpty();
        map = P.LinkedHashMap_LinkedHashMap$from(t1, P.String, null);
        map.$indexSet(0, "name", this.name);
        map.$indexSet(0, "version", this.version);
        map.$indexSet(0, "description", this.description);
        map.$indexSet(0, "main", this.main);
        map.$indexSet(0, "engines", this.engines);
        map.$indexSet(0, "configs", this.configs);
        map.$indexSet(0, "getDependencies", this.getDependencies);
        t1 = new H.LinkedHashMapKeyIterable(map);
        t1.$builtinTypeInfo = [H.getTypeArgumentByIndex(map, 0)];
        t1 = P.List_List$from(t1, true, H.getRuntimeTypeArgument(t1, "Iterable", 0));
        t2 = t1.length;
        _i = 0;
        for (; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          if (map.$index(0, key) == null)
            map.remove$1(0, key);
        }
        return map;
      }, "call$0", "get$save", 0, 0, 94, "save"],
      static: {DSLinkJSON$: [function() {
          return new Q.DSLinkJSON(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeEmpty(), []);
        }, null, null, 0, 0, 5, "new DSLinkJSON"], DSLinkJSON_DSLinkJSON$from: [function(map) {
          var j, t1;
          j = new Q.DSLinkJSON(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeEmpty(), []);
          j._json = map;
          t1 = J.getInterceptor$asx(map);
          j.name = t1.$index(map, "name");
          j.version = t1.$index(map, "version");
          j.description = t1.$index(map, "description");
          j.main = t1.$index(map, "main");
          j.engines = t1.$index(map, "engines");
          j.configs = t1.$index(map, "configs");
          j.getDependencies = t1.$index(map, "getDependencies");
          return j;
        }, null, null, 2, 0, 280, 202, [], "new DSLinkJSON$from"]}
    },
    "+DSLinkJSON": [0],
    BinaryData: {
      "^": "Object;mergingList@,bytes@"
    },
    BinaryInCache: {
      "^": "Object;caches",
      fetchData$1: function(id) {
        var t1, data;
        t1 = this.caches;
        data = t1.$index(0, id);
        if (data != null && data.get$bytes() != null) {
          t1.remove$1(0, id);
          return data.get$bytes();
        }
        return;
      },
      receiveData$1: function(inputList) {
        var input, t1, t2, bytedata, headerSize, t3, i, start, end, t4, t5, t6, bytes, id, finished, data;
        input = !!J.getInterceptor(inputList).$isUint8List ? inputList : new Uint8Array(H._ensureNativeList(inputList));
        t1 = J.getInterceptor$x(input);
        t2 = t1.get$buffer(input);
        bytedata = (t2 && C.NativeByteBuffer_methods).asByteData$2(t2, t1.get$offsetInBytes(input), t1.get$lengthInBytes(input));
        headerSize = bytedata.getUint32(0, false);
        for (t2 = this.caches, t3 = headerSize - 9, i = 0; i < headerSize; i += 9) {
          start = bytedata.getUint32(i, false);
          end = i < t3 ? bytedata.getUint32(i + 9, false) : t1.get$length(input);
          t4 = t1.get$buffer(input);
          t5 = t1.get$offsetInBytes(input);
          if (typeof t5 !== "number")
            return H.iae(t5);
          t5 = start + t5;
          t6 = J.$sub$in(end, start);
          t4.toString;
          H._checkViewArguments(t4, t5, t6);
          bytes = new DataView(t4, t5, t6);
          id = C.JSInt_methods.toString$0(bytedata.getUint32(i + 4, false));
          finished = bytedata.getUint8(i + 8) === 0;
          data = t2.$index(0, id);
          if (data == null) {
            data = new Q.BinaryData(null, null);
            data.bytes = null;
            if (finished)
              data.bytes = bytes;
            else
              data.mergingList = [bytes];
            t2.$indexSet(0, id, data);
          } else {
            if (data.get$mergingList() != null)
              data.get$mergingList().push(bytes);
            else
              data.set$mergingList([bytes]);
            if (finished) {
              data.set$bytes(Q.ByteDataUtil_mergeBytes(data.get$mergingList()));
              data.set$mergingList(null);
            }
          }
        }
      }
    },
    BinaryOutCache: {
      "^": "Object;id,caches",
      export$0: function() {
        var t1, t2, datapos, output, t3, idToRemove, _i;
        t1 = {};
        t1._captured_count_0 = 0;
        t1._captured_totalLength_1 = 0;
        t2 = this.caches;
        t2.forEach$1(0, new Q.BinaryOutCache_export_closure(t1));
        t1._captured_headpos_2 = 0;
        datapos = t1._captured_count_0 * 9;
        t1._captured_datapos_3 = datapos;
        output = new Uint8Array(H._checkLength(t1._captured_totalLength_1 + datapos));
        t3 = output.buffer;
        idToRemove = [];
        t2.forEach$1(0, new Q.BinaryOutCache_export_closure0(t1, output, (t3 && C.NativeByteBuffer_methods).asByteData$2(t3, 0, null), idToRemove));
        for (t1 = idToRemove.length, _i = 0; _i < idToRemove.length; idToRemove.length === t1 || (0, H.throwConcurrentModificationError)(idToRemove), ++_i)
          t2.remove$1(0, idToRemove[_i]);
        return output;
      }
    },
    BinaryOutCache_export_closure: {
      "^": "Closure:182;_utils$_box_0",
      call$2: function(id, data) {
        var t1, t2, t3;
        t1 = this._utils$_box_0;
        ++t1._captured_count_0;
        t2 = t1._captured_totalLength_1;
        t3 = J.get$lengthInBytes$x(data.get$bytes());
        if (typeof t3 !== "number")
          return H.iae(t3);
        t1._captured_totalLength_1 = t2 + t3;
      }
    },
    BinaryOutCache_export_closure0: {
      "^": "Closure:182;_utils$_box_0,_captured_output_1,_captured_bytedata_2,_captured_idToRemove_3",
      call$2: function(id, data) {
        var t1, t2, t3, t4;
        t1 = this._captured_bytedata_2;
        t2 = this._utils$_box_0;
        t1.setUint32(t2._captured_headpos_2, t2._captured_datapos_3, false);
        t1.setUint32(t2._captured_headpos_2 + 4, id, false);
        this._captured_idToRemove_3.push(id);
        t1 = t2._captured_headpos_2;
        t3 = data.get$bytes();
        t4 = J.get$buffer$x(t3);
        C.NativeUint8List_methods.setAll$2(this._captured_output_1, t1 + 9, (t4 && C.NativeByteBuffer_methods).asUint8List$2(t4, t3.byteOffset, t3.byteLength));
        t2._captured_headpos_2 += 9;
        t3 = t2._captured_datapos_3;
        t4 = J.get$lengthInBytes$x(data.get$bytes());
        if (typeof t4 !== "number")
          return H.iae(t4);
        t2._captured_datapos_3 = t3 + t4;
      }
    },
    DsJsonCodecImpl: {
      "^": "Object;encoder,decoder,_prettyEncoder",
      decodeJsonFrame$2: function(str, cache) {
        return P._parseJson(str, new Q.DsJsonCodecImpl_decodeJsonFrame__reviver(cache));
      },
      encodeJsonFrame$3$pretty: function(val, cache, pretty) {
        var t1, encoder, t2, output, stringifier;
        t1 = new Q.DsJsonCodecImpl_encodeJsonFrame__encoder(cache);
        encoder = pretty ? new P.JsonEncoder("  ", t1) : new P.JsonEncoder(null, t1);
        t1 = encoder._toEncodable;
        t2 = encoder.indent;
        output = new P.StringBuffer("");
        if (t2 == null) {
          t1 = t1 != null ? t1 : P._defaultToEncodable$closure();
          stringifier = new P._JsonStringStringifier(output, [], t1);
        } else {
          t1 = t1 != null ? t1 : P._defaultToEncodable$closure();
          stringifier = new P._JsonStringStringifierPretty(t2, 0, output, [], t1);
        }
        stringifier.writeObject$1(val);
        t1 = output._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      static: {DsJsonCodecImpl__safeEncoder: [function(value) {
          return;
        }, "call$1", "DsJsonCodecImpl__safeEncoder$closure", 2, 0, 8, 22, []]}
    },
    DsJsonCodecImpl_decodeJsonFrame__reviver: {
      "^": "Closure:15;_captured_cache_0",
      call$2: function(key, value) {
        if (typeof value === "string" && C.JSString_methods.startsWith$1(value, "\u001bbytes,"))
          return this._captured_cache_0.fetchData$1(J.substring$1$s(value, 7));
        return value;
      }
    },
    DsJsonCodecImpl_encodeJsonFrame__encoder: {
      "^": "Closure:8;_captured_cache_0",
      call$1: [function(value) {
        var t1, t2, t3;
        if (!!J.getInterceptor(value).$isByteData) {
          t1 = this._captured_cache_0;
          t2 = ++t1.id;
          t3 = new Q.BinaryData(null, null);
          t3.bytes = value;
          t1.caches.$indexSet(0, t2, t3);
          return "\u001bbytes," + t2;
        }
        return;
      }, null, null, 2, 0, null, 22, [], "call"]
    },
    BroadcastStreamController: {
      "^": "Object;_utils$_controller,_utils$_stream,_onStartListen,_utils$_onAllCancel",
      get$stream: function(_) {
        return this._utils$_stream;
      },
      _utils$_onListen$1: [function(subscription) {
        if (this._onStartListen != null)
          this._onStartListen$0();
      }, "call$1", "get$_utils$_onListen", 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, void: true, args: [[P.StreamSubscription, T]]};
        }, this.$receiver, "BroadcastStreamController");
      }, 211, []],
      _utils$_onCancel$1: [function(subscription) {
        if (this._utils$_onAllCancel != null)
          this._utils$_onAllCancel$0();
      }, "call$1", "get$_utils$_onCancel", 2, 0, function() {
        return H.computeSignature(function(T) {
          return {func: 1, void: true, args: [[P.StreamSubscription, T]]};
        }, this.$receiver, "BroadcastStreamController");
      }, 211, []],
      add$1: function(_, t) {
        var t1 = this._utils$_controller;
        if (t1._state >= 4)
          H.throwExpression(t1._badEventState$0());
        t1._async$_add$1(t);
        this._utils$_stream.lastValue = t;
      },
      close$0: function(_) {
        return this._utils$_controller.close$0(0);
      },
      get$isClosed: function() {
        return (this._utils$_controller._state & 4) !== 0;
      },
      get$isPaused: function() {
        var t1, t2;
        t1 = this._utils$_controller;
        t2 = t1._state;
        return (t2 & 1) !== 0 ? t1.get$_subscription().get$_isInputPaused() : (t2 & 2) === 0;
      },
      BroadcastStreamController$3: function(onStartListen, onAllCancel, onListen, $T) {
        var t1, t2, t3, t4;
        t1 = new P._ControllerStream(this._utils$_controller);
        t1.$builtinTypeInfo = [null];
        t2 = this.get$_utils$_onListen();
        t3 = this.get$_utils$_onCancel();
        t4 = H.getRuntimeTypeArgument(t1, "Stream", 0);
        t3 = new P._AsBroadcastStream(t1, $.Zone__current.registerUnaryCallback$1(t2), $.Zone__current.registerUnaryCallback$1(t3), $.Zone__current, null, null);
        t3.$builtinTypeInfo = [t4];
        t1 = new P._AsBroadcastStreamController(null, t3.get$_onListen(), t3.get$_onCancel(), 0, null, null, null, null);
        t1.$builtinTypeInfo = [t4];
        t1._async$_previous = t1;
        t1._async$_next = t1;
        t3._async$_controller = t1;
        t1 = new Q.CachedStreamWrapper(null, t3, onListen);
        t1.$builtinTypeInfo = [null];
        this._utils$_stream = t1;
        this._onStartListen = onStartListen;
        this._utils$_onAllCancel = onAllCancel;
      },
      _onStartListen$0: function() {
        return this._onStartListen.call$0();
      },
      _utils$_onAllCancel$0: function() {
        return this._utils$_onAllCancel.call$0();
      },
      static: {BroadcastStreamController$: function(onStartListen, onAllCancel, onListen, $T) {
          var t1 = new Q.BroadcastStreamController(P.StreamController_StreamController(null, null, null, null, false, $T), null, null, null);
          t1.$builtinTypeInfo = [$T];
          t1.BroadcastStreamController$3(onStartListen, onAllCancel, onListen, $T);
          return t1;
        }}
    },
    CachedStreamWrapper: {
      "^": "Object;lastValue,_utils$_stream,_utils$_onListen",
      contains$1: function(_, needle) {
        return this._utils$_stream.contains$1(0, needle);
      },
      elementAt$1: function(_, index) {
        return this._utils$_stream.elementAt$1(0, index);
      },
      get$first: function(_) {
        var t1 = this._utils$_stream;
        return t1.get$first(t1);
      },
      fold$2: function(_, initialValue, combine) {
        return this._utils$_stream.fold$2(0, initialValue, combine);
      },
      forEach$1: function(_, action) {
        return this._utils$_stream.forEach$1(0, action);
      },
      get$isEmpty: function(_) {
        var t1 = this._utils$_stream;
        return t1.get$isEmpty(t1);
      },
      join$1: function(_, separator) {
        return this._utils$_stream.join$1(0, separator);
      },
      get$last: function(_) {
        var t1 = this._utils$_stream;
        return t1.get$last(t1);
      },
      get$length: function(_) {
        var t1 = this._utils$_stream;
        return t1.get$length(t1);
      },
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        if (this._utils$_onListen != null)
          this._utils$_onListen$1(onData);
        return this._utils$_stream.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$2$onDone: function(onData, onDone) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
      },
      map$1: function(_, convert) {
        var t1, t2;
        t1 = this._utils$_stream;
        t2 = new P._MapStream(convert, t1);
        t2.$builtinTypeInfo = [H.getRuntimeTypeArgument(t1, "Stream", 0), null];
        return t2;
      },
      timeout$2$onTimeout: function(timeLimit, onTimeout) {
        return this._utils$_stream.timeout$2$onTimeout(timeLimit, onTimeout);
      },
      toList$0: function(_) {
        return this._utils$_stream.toList$0(0);
      },
      where$1: function(_, test) {
        var t1, t2;
        t1 = this._utils$_stream;
        t2 = new P._WhereStream(test, t1);
        t2.$builtinTypeInfo = [H.getRuntimeTypeArgument(t1, "Stream", 0)];
        return t2;
      },
      _utils$_onListen$1: function(arg0) {
        return this._utils$_onListen.call$1(arg0);
      },
      $isStream: 1
    },
    TimerFunctions: {
      "^": "LinkedListEntry;ts50<,_utils$_functions<,_list,_collection$_next,_collection$_previous",
      add$1: function(_, foo) {
        var t1 = this._utils$_functions;
        if (!C.JSArray_methods.contains$1(t1, foo))
          t1.push(foo);
      },
      remove$1: function(_, foo) {
        C.JSArray_methods.remove$1(this._utils$_functions, foo);
      },
      $asLinkedListEntry: functionThatReturnsNull
    },
    DsTimer__dsLoop_closure: {
      "^": "Closure:183;",
      call$1: function(f) {
        f.call$0();
      }
    },
    logger_closure: {
      "^": "Closure:8;",
      call$1: [function(record) {
        var t1 = J.getInterceptor$x(record);
        P.print("[DSA][" + H.S(J.get$name$x(record.get$level())) + "] " + H.S(t1.get$message(record)));
        if (t1.get$error(record) != null)
          P.print(t1.get$error(record));
        if (record.get$stackTrace() != null)
          P.print(record.get$stackTrace());
      }, null, null, 2, 0, null, 212, [], "call"]
    },
    Interval: {
      "^": "Object;duration>-390",
      get$inMilliseconds: [function() {
        return this.duration.get$inMilliseconds();
      }, null, null, 1, 0, 2, "inMilliseconds"],
      static: {"^": "Interval_ONE_MILLISECOND<-391,Interval_TWO_MILLISECONDS<-391,Interval_FOUR_MILLISECONDS<-391,Interval_EIGHT_MILLISECONDS<-391,Interval_SIXTEEN_MILLISECONDS<-391,Interval_THIRTY_MILLISECONDS<-391,Interval_FIFTY_MILLISECONDS<-391,Interval_ONE_HUNDRED_MILLISECONDS<-391,Interval_TWO_HUNDRED_MILLISECONDS<-391,Interval_THREE_HUNDRED_MILLISECONDS<-391,Interval_QUARTER_SECOND<-391,Interval_HALF_SECOND<-391,Interval_ONE_SECOND<-391,Interval_TWO_SECONDS<-391,Interval_THREE_SECONDS<-391,Interval_FOUR_SECONDS<-391,Interval_FIVE_SECONDS<-391,Interval_ONE_MINUTE<-391", Interval$: [function(duration) {
          return new Q.Interval(duration);
        }, null, null, 2, 0, 281, 36, [], "new Interval"], Interval$forMilliseconds: [function(ms) {
          return new Q.Interval(P.Duration$(0, 0, 0, ms, 0, 0));
        }, null, null, 2, 0, 19, 203, [], "new Interval$forMilliseconds"], Interval$forSeconds: [function(seconds) {
          return new Q.Interval(P.Duration$(0, 0, 0, 0, 0, seconds));
        }, null, null, 2, 0, 19, 204, [], "new Interval$forSeconds"], Interval$forMinutes: [function(minutes) {
          return new Q.Interval(P.Duration$(0, 0, 0, 0, minutes, 0));
        }, null, null, 2, 0, 19, 205, [], "new Interval$forMinutes"], Interval$forHours: [function(hours) {
          return new Q.Interval(P.Duration$(0, hours, 0, 0, 0, 0));
        }, null, null, 2, 0, 19, 206, [], "new Interval$forHours"]}
    },
    "+Interval": [0],
    Scheduler: {
      "^": "Object;",
      static: {Scheduler$: [function() {
          return new Q.Scheduler();
        }, null, null, 0, 0, 282, "new Scheduler"], Scheduler_currentTimer: [function() {
          return J.$index$asx($.Zone__current, "dslink.scheduler.timer");
        }, null, null, 1, 0, 283, "currentTimer"], Scheduler_cancelCurrentTimer: [function() {
          J.$index$asx($.Zone__current, "dslink.scheduler.timer").cancel$0();
        }, "call$0", "Scheduler_cancelCurrentTimer$closure", 0, 0, 7, "cancelCurrentTimer"], Scheduler_every: [function(interval, action) {
          var t1, duration;
          t1 = J.getInterceptor(interval);
          if (!!t1.$isDuration)
            duration = interval;
          else if (typeof interval === "number" && Math.floor(interval) === interval)
            duration = P.Duration$(0, 0, 0, interval, 0, 0);
          else if (!!t1.$isInterval)
            duration = interval.duration;
          else
            throw H.wrapException(P.Exception_Exception("Invalid Interval: " + H.S(interval)));
          return P.Timer_Timer$periodic(duration, new Q.Scheduler_every_closure(action));
        }, "call$2", "Scheduler_every$closure", 4, 0, 284, 207, [], 59, [], "every"], Scheduler_repeat: [function(times, action) {
          var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, i;
          function Scheduler_repeat(errorCode, result) {
            if (errorCode === 1) {
              currentError = result;
              $goto = handler;
            }
            while (true)
              switch ($goto) {
                case 0:
                  // Function start
                  if (typeof times !== "number") {
                    $returnValue = H.iae(times);
                    // goto return
                    $goto = 1;
                    break;
                  } else
                    ;
                  i = 1;
                case 3:
                  // for condition
                  if (!(i <= times)) {
                    // goto after for
                    $goto = 5;
                    break;
                  }
                  $goto = 6;
                  return H.asyncHelper(action.call$0(), Scheduler_repeat, completer);
                case 6:
                  // returning from await.
                case 4:
                  // for update
                  ++i;
                  // goto for condition
                  $goto = 3;
                  break;
                case 5:
                  // after for
                case 1:
                  // return
                  return H.asyncHelper($returnValue, 0, completer, null);
                case 2:
                  // rethrow
                  return H.asyncHelper(currentError, 1, completer);
              }
          }
          return H.asyncHelper(null, Scheduler_repeat, completer, null);
        }, "call$2", "Scheduler_repeat$closure", 4, 0, 285, 208, [], 59, [], "repeat"], Scheduler_tick: [function(times, interval, action) {
          var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, i;
          function Scheduler_tick(errorCode, result) {
            if (errorCode === 1) {
              currentError = result;
              $goto = handler;
            }
            while (true)
              switch ($goto) {
                case 0:
                  // Function start
                  if (typeof times !== "number") {
                    $returnValue = H.iae(times);
                    // goto return
                    $goto = 1;
                    break;
                  } else
                    ;
                  i = 1;
                case 3:
                  // for condition
                  if (!(i <= times)) {
                    // goto after for
                    $goto = 5;
                    break;
                  }
                  $goto = 6;
                  return H.asyncHelper(P.Future_Future$delayed(new P.Duration(1000 * interval.get$inMilliseconds()), null, null), Scheduler_tick, completer);
                case 6:
                  // returning from await.
                  $goto = 7;
                  return H.asyncHelper(action.call$0(), Scheduler_tick, completer);
                case 7:
                  // returning from await.
                case 4:
                  // for update
                  ++i;
                  // goto for condition
                  $goto = 3;
                  break;
                case 5:
                  // after for
                case 1:
                  // return
                  return H.asyncHelper($returnValue, 0, completer, null);
                case 2:
                  // rethrow
                  return H.asyncHelper(currentError, 1, completer);
              }
          }
          return H.asyncHelper(null, Scheduler_tick, completer, null);
        }, "call$3", "Scheduler_tick$closure", 6, 0, 286, 208, [], 207, [], 59, [], "tick"], Scheduler_runLater: [function(action) {
          P.Timer_Timer(C.Duration_0, action);
        }, "call$1", "Scheduler_runLater$closure", 2, 0, 287, 59, [], "runLater"], Scheduler_later: [function(action) {
          return P.Future_Future(action, null);
        }, "call$1", "Scheduler_later$closure", 2, 0, 194, 59, [], "later"], Scheduler_after: [function(duration, action) {
          return P.Future_Future$delayed(duration, action, null);
        }, "call$2", "Scheduler_after$closure", 4, 0, 288, 36, [], 59, [], "after"], Scheduler_runAfter: [function(duration, action) {
          return P.Timer_Timer(duration, action);
        }, "call$2", "Scheduler_runAfter$closure", 4, 0, 289, 36, [], 59, [], "runAfter"]}
    },
    "+Scheduler": [0],
    Scheduler_every_closure: {
      "^": "Closure:184;_captured_action_0",
      call$1: [function(timer) {
        var $goto = 0, completer = new P.Completer_Completer(), handler = 1, currentError, $self = this;
        function call$1(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                $goto = 2;
                return H.asyncHelper(P.runZoned($self._captured_action_0, null, null, P.LinkedHashMap__makeLiteral(["dslink.scheduler.timer", timer])), call$1, completer);
              case 2:
                // returning from await.
                // implicit return
                return H.asyncHelper(null, 0, completer, null);
              case 1:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, call$1, completer, null);
      }, null, null, 2, 0, 184, 213, [], "call"]
    },
    buildActionIO_closure: {
      "^": "Closure:8;_captured_types_0",
      call$1: [function(it) {
        return P.LinkedHashMap__makeLiteral(["name", it, "type", J.$index$asx(this._captured_types_0, it)]);
      }, null, null, 2, 0, 8, 115, [], "call"]
    }
  }], ["html_common", "dart:html_common",, P, {
    "^": "",
    convertNativeToDart_AcceptStructuredClone: function(object, mustCopy) {
      var copies = [];
      return new P.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new P.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new P.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new P.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
    },
    Device_isWebKit: function() {
      var t1 = $.Device__isWebKit;
      if (t1 == null) {
        t1 = $.Device__isOpera;
        if (t1 == null) {
          t1 = J.contains$2$asx(window.navigator.userAgent, "Opera", 0);
          $.Device__isOpera = t1;
        }
        t1 = t1 !== true && J.contains$2$asx(window.navigator.userAgent, "WebKit", 0);
        $.Device__isWebKit = t1;
      }
      return t1;
    },
    convertNativeToDart_AcceptStructuredClone_findSlot: {
      "^": "Closure:185;_captured_values_0,_captured_copies_1",
      call$1: function(value) {
        var t1, $length, i, t2;
        t1 = this._captured_values_0;
        $length = t1.length;
        for (i = 0; i < $length; ++i) {
          t2 = t1[i];
          if (t2 == null ? value == null : t2 === value)
            return i;
        }
        t1.push(value);
        this._captured_copies_1.push(null);
        return $length;
      }
    },
    convertNativeToDart_AcceptStructuredClone_readSlot: {
      "^": "Closure:19;_captured_copies_2",
      call$1: function(i) {
        var t1 = this._captured_copies_2;
        if (i >= t1.length)
          return H.ioore(t1, i);
        return t1[i];
      }
    },
    convertNativeToDart_AcceptStructuredClone_writeSlot: {
      "^": "Closure:186;_captured_copies_3",
      call$2: function(i, x) {
        var t1 = this._captured_copies_3;
        if (i >= t1.length)
          return H.ioore(t1, i);
        t1[i] = x;
      }
    },
    convertNativeToDart_AcceptStructuredClone_walk: {
      "^": "Closure:8;_captured_mustCopy_4,_captured_findSlot_5,_captured_readSlot_6,_captured_writeSlot_7",
      call$1: function(e) {
        var proto, slot, copy, t1, t2, _i, key, $length, i;
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          return P.DateTime$fromMillisecondsSinceEpoch(e.getTime(), true);
        if (e instanceof RegExp)
          throw H.wrapException(new P.UnimplementedError("structured clone of RegExp"));
        proto = Object.getPrototypeOf(e);
        if (proto === Object.prototype || proto === null) {
          slot = this._captured_findSlot_5.call$1(e);
          copy = this._captured_readSlot_6.call$1(slot);
          if (copy != null)
            return copy;
          copy = P.LinkedHashMap__makeEmpty();
          this._captured_writeSlot_7.call$2(slot, copy);
          for (t1 = Object.keys(e), t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i) {
            key = t1[_i];
            copy.$indexSet(0, key, this.call$1(e[key]));
          }
          return copy;
        }
        if (e instanceof Array) {
          slot = this._captured_findSlot_5.call$1(e);
          copy = this._captured_readSlot_6.call$1(slot);
          if (copy != null)
            return copy;
          t1 = J.getInterceptor$asx(e);
          $length = t1.get$length(e);
          copy = this._captured_mustCopy_4 ? new Array($length) : e;
          this._captured_writeSlot_7.call$2(slot, copy);
          if (typeof $length !== "number")
            return H.iae($length);
          t2 = J.getInterceptor$ax(copy);
          i = 0;
          for (; i < $length; ++i)
            t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
          return copy;
        }
        return e;
      }
    },
    FilteredElementList: {
      "^": "ListBase;_node,_childNodes",
      get$_filtered: function() {
        var t1 = this._childNodes;
        return P.List_List$from(t1.where$1(t1, new P.FilteredElementList__filtered_closure()), true, H.getTypeArgumentByIndex(this, 0));
      },
      forEach$1: function(_, f) {
        C.JSArray_methods.forEach$1(this.get$_filtered(), f);
      },
      $indexSet: function(_, index, value) {
        var t1 = this.get$_filtered();
        if (index >>> 0 !== index || index >= t1.length)
          return H.ioore(t1, index);
        J.replaceWith$1$x(t1[index], value);
      },
      set$length: function(_, newLength) {
        var len, t1;
        len = this.get$_filtered().length;
        t1 = J.getInterceptor$in(newLength);
        if (t1.$ge(newLength, len))
          return;
        else if (t1.$lt(newLength, 0))
          throw H.wrapException(P.ArgumentError$("Invalid list length"));
        this.removeRange$2(0, newLength, len);
      },
      add$1: function(_, value) {
        this._childNodes._this.appendChild(value);
      },
      addAll$1: function(_, iterable) {
        var t1, t2;
        for (t1 = J.get$iterator$ax(iterable), t2 = this._childNodes._this; t1.moveNext$0();)
          t2.appendChild(t1.get$current());
      },
      contains$1: function(_, needle) {
        if (!J.getInterceptor(needle).$isElement)
          return false;
        return needle.parentNode === this._node;
      },
      setRange$4: function(_, start, end, iterable, skipCount) {
        throw H.wrapException(new P.UnsupportedError("Cannot setRange on filtered list"));
      },
      setRange$3: function($receiver, start, end, iterable) {
        return this.setRange$4($receiver, start, end, iterable, 0);
      },
      removeRange$2: function(_, start, end) {
        C.JSArray_methods.forEach$1(C.JSArray_methods.sublist$2(this.get$_filtered(), start, end), new P.FilteredElementList_removeRange_closure());
      },
      clear$0: function(_) {
        J._clearChildren$0$x(this._childNodes._this);
      },
      removeAt$1: function(_, index) {
        var t1, result;
        t1 = this.get$_filtered();
        if (index >= t1.length)
          return H.ioore(t1, index);
        result = t1[index];
        J.remove$0$ax(result);
        return result;
      },
      remove$1: function(_, element) {
        var i, t1, indexElement;
        if (!J.getInterceptor(element).$isElement)
          return false;
        for (i = 0; i < this.get$_filtered().length; ++i) {
          t1 = this.get$_filtered();
          if (i >= t1.length)
            return H.ioore(t1, i);
          indexElement = t1[i];
          if (indexElement === element) {
            J.remove$0$ax(indexElement);
            return true;
          }
        }
        return false;
      },
      get$length: function(_) {
        return this.get$_filtered().length;
      },
      $index: function(_, index) {
        var t1 = this.get$_filtered();
        if (index >>> 0 !== index || index >= t1.length)
          return H.ioore(t1, index);
        return t1[index];
      },
      get$iterator: function(_) {
        var t1, t2;
        t1 = this.get$_filtered();
        t2 = new J.ArrayIterator(t1, t1.length, 0, null);
        t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t1, 0)];
        return t2;
      }
    },
    FilteredElementList__filtered_closure: {
      "^": "Closure:8;",
      call$1: function(n) {
        return !!J.getInterceptor(n).$isElement;
      }
    },
    FilteredElementList_removeRange_closure: {
      "^": "Closure:8;",
      call$1: function(el) {
        return J.remove$0$ax(el);
      }
    }
  }], ["logging", "package:logging/logging.dart",, N, {
    "^": "",
    Logger: {
      "^": "Object;name>,parent>,_level,_children>,children>,_controller",
      get$fullName: function() {
        var t1, t2, t3;
        t1 = this.parent;
        t2 = t1 == null || J.$eq(J.get$name$x(t1), "");
        t3 = this.name;
        return t2 ? t3 : t1.get$fullName() + "." + t3;
      },
      get$level: function() {
        if ($.hierarchicalLoggingEnabled) {
          var t1 = this._level;
          if (t1 != null)
            return t1;
          t1 = this.parent;
          if (t1 != null)
            return t1.get$level();
        }
        return $._rootLevel;
      },
      set$level: function(value) {
        if ($.hierarchicalLoggingEnabled && this.parent != null)
          this._level = value;
        else {
          if (this.parent != null)
            throw H.wrapException(new P.UnsupportedError("Please set \"hierarchicalLoggingEnabled\" to true if you want to change the level on a non-root logger."));
          $._rootLevel = value;
        }
      },
      get$onRecord: function() {
        return this._getStream$0();
      },
      log$5: function(logLevel, message, error, stackTrace, zone) {
        var t, t1, exception, t2, t3, record, target;
        t1 = this.get$level();
        if (J.$ge$in(J.get$value$x(logLevel), J.get$value$x(t1))) {
          if (!!J.getInterceptor(message).$isFunction)
            message = message.call$0();
          t1 = message;
          if (typeof t1 !== "string")
            message = J.toString$0(message);
          if (stackTrace == null) {
            t1 = $.recordStackTraceAtLevel;
            t1 = J.get$value$x(logLevel) >= t1.value;
          } else
            t1 = false;
          if (t1)
            try {
              t1 = "autogenerated stack trace for " + H.S(logLevel) + " " + H.S(message);
              throw H.wrapException(t1);
            } catch (exception) {
              H.unwrapException(exception);
              t = H.getTraceFromException(exception);
              stackTrace = t;
            }
          zone = $.Zone__current;
          t1 = this.get$fullName();
          t2 = Date.now();
          t3 = $.LogRecord__nextNumber;
          $.LogRecord__nextNumber = t3 + 1;
          record = new N.LogRecord(logLevel, message, t1, new P.DateTime(t2, false), t3, error, stackTrace, zone);
          if ($.hierarchicalLoggingEnabled)
            for (target = this; target != null;) {
              target._publish$1(record);
              target = J.get$parent$x(target);
            }
          else
            N.Logger_Logger("")._publish$1(record);
        }
      },
      log$4: function(logLevel, message, error, stackTrace) {
        return this.log$5(logLevel, message, error, stackTrace, null);
      },
      finest$3: function(message, error, stackTrace) {
        return this.log$4(C.Level_FINEST_300, message, error, stackTrace);
      },
      finest$1: function(message) {
        return this.finest$3(message, null, null);
      },
      fine$3: function(message, error, stackTrace) {
        return this.log$4(C.Level_FINE_500, message, error, stackTrace);
      },
      fine$1: function(message) {
        return this.fine$3(message, null, null);
      },
      info$3: function(message, error, stackTrace) {
        return this.log$4(C.Level_INFO_800, message, error, stackTrace);
      },
      info$1: function(message) {
        return this.info$3(message, null, null);
      },
      warning$3: function(message, error, stackTrace) {
        return this.log$4(C.Level_WARNING_900, message, error, stackTrace);
      },
      warning$1: function(message) {
        return this.warning$3(message, null, null);
      },
      severe$3: function(message, error, stackTrace) {
        return this.log$4(C.Level_SEVERE_1000, message, error, stackTrace);
      },
      severe$1: function(message) {
        return this.severe$3(message, null, null);
      },
      severe$2: function(message, error) {
        return this.severe$3(message, error, null);
      },
      _getStream$0: function() {
        var t1, t2;
        if ($.hierarchicalLoggingEnabled || this.parent == null) {
          t1 = this._controller;
          if (t1 == null) {
            t1 = P.StreamController_StreamController$broadcast(null, null, true, N.LogRecord);
            this._controller = t1;
          }
          t1.toString;
          t2 = new P._BroadcastStream(t1);
          t2.$builtinTypeInfo = [H.getTypeArgumentByIndex(t1, 0)];
          return t2;
        } else
          return N.Logger_Logger("")._getStream$0();
      },
      _publish$1: function(record) {
        var t1 = this._controller;
        if (t1 != null) {
          if (!t1.get$_mayAddEvent())
            H.throwExpression(t1._addEventError$0());
          t1._sendData$1(record);
        }
      },
      static: {Logger_Logger: function($name) {
          return $.get$Logger__loggers().putIfAbsent$2($name, new N.Logger_Logger_closure($name));
        }}
    },
    Logger_Logger_closure: {
      "^": "Closure:5;_captured_name_0",
      call$0: function() {
        var thisName, dot, $parent, t1, t2;
        thisName = this._captured_name_0;
        if (C.JSString_methods.startsWith$1(thisName, "."))
          H.throwExpression(P.ArgumentError$("name shouldn't start with a '.'"));
        dot = C.JSString_methods.lastIndexOf$1(thisName, ".");
        if (dot === -1)
          $parent = thisName !== "" ? N.Logger_Logger("") : null;
        else {
          $parent = N.Logger_Logger(C.JSString_methods.substring$2(thisName, 0, dot));
          thisName = C.JSString_methods.substring$1(thisName, dot + 1);
        }
        t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, N.Logger);
        t2 = new P.UnmodifiableMapView(t1);
        t2.$builtinTypeInfo = [null, null];
        t1 = new N.Logger(thisName, $parent, null, t1, t2, null);
        if ($parent != null)
          J.get$_children$x($parent).$indexSet(0, thisName, t1);
        return t1;
      }
    },
    Level: {
      "^": "Object;name>,value>",
      $eq: function(_, other) {
        if (other == null)
          return false;
        return other instanceof N.Level && this.value === other.value;
      },
      $lt: function(_, other) {
        var t1 = J.get$value$x(other);
        if (typeof t1 !== "number")
          return H.iae(t1);
        return this.value < t1;
      },
      $le: function(_, other) {
        var t1 = J.get$value$x(other);
        if (typeof t1 !== "number")
          return H.iae(t1);
        return this.value <= t1;
      },
      $gt: function(_, other) {
        var t1 = J.get$value$x(other);
        if (typeof t1 !== "number")
          return H.iae(t1);
        return this.value > t1;
      },
      $ge: function(_, other) {
        var t1 = J.get$value$x(other);
        if (typeof t1 !== "number")
          return H.iae(t1);
        return this.value >= t1;
      },
      compareTo$1: function(_, other) {
        var t1 = J.get$value$x(other);
        if (typeof t1 !== "number")
          return H.iae(t1);
        return this.value - t1;
      },
      get$hashCode: function(_) {
        return this.value;
      },
      toString$0: function(_) {
        return this.name;
      },
      $isComparable: 1,
      $asComparable: function() {
        return [N.Level];
      }
    },
    LogRecord: {
      "^": "Object;level<,message>,loggerName,time,sequenceNumber,error>,stackTrace<,zone<",
      toString$0: function(_) {
        return "[" + this.level.name + "] " + this.loggerName + ": " + H.S(this.message);
      }
    }
  }], ["metadata", "dart:_metadata",, H, {
    "^": "",
    SupportedBrowser: {
      "^": "Object;browserName,minimumVersion"
    },
    Experimental: {
      "^": "Object;"
    },
    DomName: {
      "^": "Object;name>"
    },
    DocsEditable: {
      "^": "Object;"
    },
    Unstable: {
      "^": "Object;"
    }
  }], ["node_io.common", "package:node_io/common.dart",, Z, {
    "^": "",
    Platform_environment: function() {
      var obj, map, t1, t2, key;
      obj = J.$index$asx($.get$_process(), "env");
      map = P.LinkedHashMap__makeEmpty();
      for (t1 = J.get$iterator$ax(J.$index$asx(J.$index$asx($.get$context(), "global"), "Object").callMethod$2("keys", [obj])), t2 = J.getInterceptor$asx(obj); t1.moveNext$0();) {
        key = t1.get$current();
        map.$indexSet(0, key, t2.$index(obj, key));
      }
      return map;
    },
    Process_runSync: function(executable, $arguments, environment, includeParentEnvironment, runInShell, stderrEncoding, stdoutEncoding, workingDirectory) {
      var env, obj, t1, stdout, stderr;
      env = P.LinkedHashMap__makeEmpty();
      if (includeParentEnvironment)
        env.addAll$1(0, Z.Platform_environment());
      if (runInShell) {
        C.JSArray_methods.checkGrowable$1($arguments, "insert");
        $arguments.splice(0, 0, executable);
        obj = $.get$_child().callMethod$2("spawnSync", ["/bin/sh", $arguments, P.JsObject_JsObject$jsify(P.LinkedHashMap__makeLiteral(["cwd", workingDirectory, "env", env, "input", C.JSArray_methods.join$1($arguments, " ")]))]);
      } else
        obj = $.get$_child().callMethod$2("spawnSync", [executable, $arguments, P.JsObject_JsObject$jsify(P.LinkedHashMap__makeLiteral(["cwd", workingDirectory, "env", env]))]);
      t1 = J.getInterceptor$asx(obj);
      stdout = stdoutEncoding.decode$1(K.bufToList(t1.$index(obj, "stdout")));
      stderr = stderrEncoding.decode$1(K.bufToList(t1.$index(obj, "stderr")));
      return new Z.ProcessResult(t1.$index(obj, "status"), t1.$index(obj, "pid"), stdout, stderr);
    },
    ProcessResult: {
      "^": "Object;exitCode,pid,stdout,stderr"
    }
  }], ["node_io.file", "package:node_io/file.dart",, G, {
    "^": "",
    FileSystemEntityType: {
      "^": "Object;_file$_type",
      toString$0: function(_) {
        return this._file$_type;
      },
      get$hashCode: function(_) {
        return C.JSString_methods.get$hashCode(this._file$_type);
      }
    },
    FileSystemEntity: {
      "^": "Object;",
      get$absolute: function(_) {
        return;
      },
      get$parent: function(_) {
        return;
      },
      get$path: function(_) {
        return;
      },
      exists$0: [function() {
        return;
      }, "call$0", "get$exists", 0, 0, 86]
    },
    File: {
      "^": "FileSystemEntity;_file$_path<",
      length$0: [function(_) {
        return;
      }, "call$0", "get$length", 0, 0, 187],
      readAsBytesSync$0: function() {
        return K.bufToList($.get$_fs().callMethod$2("readFileSync", [this._file$_path]));
      },
      readAsStringSync$1$encoding: function(encoding) {
        return encoding.decode$1(this.readAsBytesSync$0());
      },
      readAsStringSync$0: function() {
        return this.readAsStringSync$1$encoding(C.Utf8Codec_false);
      },
      writeAsBytes$3$flush$mode: function(bytes, flush, mode) {
        var t1, completer;
        t1 = new P._Future(0, $.Zone__current, null);
        t1.$builtinTypeInfo = [G.FileStat];
        completer = new P._AsyncCompleter(t1);
        completer.$builtinTypeInfo = [G.FileStat];
        $.get$_fs().callMethod$2("writeFile", [this._file$_path, K.listToBuf(bytes), new G.File_writeAsBytes_closure(this, completer)]);
        return t1;
      },
      writeAsBytes$1: function(bytes) {
        return this.writeAsBytes$3$flush$mode(bytes, false, C.FileSystemEntityType_WRITE);
      },
      writeAsString$4$encoding$flush$mode: function(contents, encoding, flush, mode) {
        return this.writeAsBytes$1(encoding.get$encoder().convert$1(contents));
      },
      writeAsString$1: function(contents) {
        return this.writeAsString$4$encoding$flush$mode(contents, C.Utf8Codec_false, false, C.FileSystemEntityType_WRITE);
      },
      writeAsStringSync$4$encoding$flush$mode: function(contents, encoding, flush, mode) {
        var t1 = encoding.get$encoder().convert$1(contents);
        $.get$_fs().callMethod$2("writeFileSync", [this._file$_path, K.listToBuf(t1)]);
        return;
      },
      writeAsStringSync$1: function(contents) {
        return this.writeAsStringSync$4$encoding$flush$mode(contents, C.Utf8Codec_false, false, C.FileSystemEntityType_WRITE);
      }
    },
    File_writeAsBytes_closure: {
      "^": "Closure:8;_file$_captured_this_0,_captured_completer_1",
      call$1: [function(error) {
        this._captured_completer_1.complete$1(0, this._file$_captured_this_0);
      }, null, null, 2, 0, null, 17, [], "call"]
    },
    FileStat: {
      "^": "Object;"
    }
  }], ["node_io.http", "package:node_io/http.dart",, Z, {
    "^": "",
    HttpDate_format: function(date) {
      var d, t1, t2;
      d = date.toUtc$0();
      t1 = C.List_ECn[C.JSInt_methods.$mod((d.isUtc ? H.Primitives_lazyAsJsDate(d).getUTCDay() + 0 : H.Primitives_lazyAsJsDate(d).getDay() + 0) + 6, 7) + 1 - 1] + ", ";
      t1 = t1 + (H.Primitives_getDay(d) <= 9 ? "0" : "") + C.JSInt_methods.toString$0(H.Primitives_getDay(d)) + " ";
      t2 = H.Primitives_getMonth(d) - 1;
      if (t2 < 0 || t2 >= 12)
        return H.ioore(C.List_h8w, t2);
      t2 = t1 + C.List_h8w[t2] + " " + C.JSInt_methods.toString$0(H.Primitives_getYear(d));
      t1 = t2 + (H.Primitives_getHours(d) <= 9 ? " 0" : " ") + C.JSInt_methods.toString$0(H.Primitives_getHours(d));
      t1 = t1 + (H.Primitives_getMinutes(d) <= 9 ? ":0" : ":") + C.JSInt_methods.toString$0(H.Primitives_getMinutes(d));
      t1 = t1 + (H.Primitives_getSeconds(d) <= 9 ? ":0" : ":") + C.JSInt_methods.toString$0(H.Primitives_getSeconds(d)) + " GMT";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    HttpException: {
      "^": "Object;message>,uri"
    },
    _HttpClient: {
      "^": "Object;",
      close$1$force: function(_, force) {
      },
      close$0: function($receiver) {
        return this.close$1$force($receiver, false);
      },
      openUrl$2: function(method, url) {
        var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, t1, t2;
        function openUrl$2(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                t1 = Z._HttpHeaders$("1.1", 80, null);
                t2 = new P._Future(0, $.Zone__current, null);
                t2.$builtinTypeInfo = [Z.HttpClientResponse];
                t2 = new P._SyncCompleter(t2);
                t2.$builtinTypeInfo = [Z.HttpClientResponse];
                $returnValue = new Z._HttpClientRequest(t2, t1, url, method, [], C.Utf8Codec_false, null, null, null, -1, null);
                // goto return
                $goto = 1;
                break;
              case 1:
                // return
                return H.asyncHelper($returnValue, 0, completer, null);
              case 2:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, openUrl$2, completer, null);
      },
      postUrl$1: function(url) {
        var $goto = 0, completer = new P.Completer_Completer(), $returnValue, handler = 2, currentError, $self = this;
        function postUrl$1(errorCode, result) {
          if (errorCode === 1) {
            currentError = result;
            $goto = handler;
          }
          while (true)
            switch ($goto) {
              case 0:
                // Function start
                $returnValue = $self.openUrl$2("POST", url);
                // goto return
                $goto = 1;
                break;
              case 1:
                // return
                return H.asyncHelper($returnValue, 0, completer, null);
              case 2:
                // rethrow
                return H.asyncHelper(currentError, 1, completer);
            }
        }
        return H.asyncHelper(null, postUrl$1, completer, null);
      }
    },
    _HttpHeaders: {
      "^": "Object;_headers,protocolVersion,_mutable,_noFoldingHeaders,_contentLength,_persistentConnection,_chunkedTransferEncoding,_http$_host,_http$_port,_defaultPortForScheme",
      $index: function(_, $name) {
        return this._headers.$index(0, J.toLowerCase$0$s($name));
      },
      value$1: [function(_, $name) {
        var values, t1;
        $name = J.toLowerCase$0$s($name);
        values = this._headers.$index(0, $name);
        if (values == null)
          return;
        t1 = J.getInterceptor$asx(values);
        if (J.$gt$n(t1.get$length(values), 1))
          throw H.wrapException(new Z.HttpException("More than one value for header " + $name, null));
        return t1.$index(values, 0);
      }, "call$1", "get$value", 2, 0, 188, 124, []],
      _addAll$2: function($name, value) {
        var t1 = J.getInterceptor(value);
        if (!!t1.$isIterable)
          for (t1 = t1.get$iterator(value); t1.moveNext$0();)
            this._http$_add$2($name, Z._HttpHeaders__validateValue(t1.get$current()));
        else
          this._http$_add$2($name, Z._HttpHeaders__validateValue(value));
      },
      forEach$1: function(_, f) {
        this._headers.forEach$1(0, f);
      },
      set$contentLength: function(contentLength) {
        var t1, t2, t3;
        t1 = !this._mutable;
        if (t1)
          H.throwExpression(new Z.HttpException("HTTP headers are not mutable", null));
        t2 = this.protocolVersion;
        t3 = J.getInterceptor(t2);
        if (t3.$eq(t2, "1.0") && this._persistentConnection && J.$eq(contentLength, -1))
          throw H.wrapException(new Z.HttpException("Trying to clear ContentLength on HTTP 1.0 headers with 'Connection: Keep-Alive' set", null));
        if (J.$eq(this._contentLength, contentLength))
          return;
        this._contentLength = contentLength;
        if (J.$ge$in(contentLength, 0)) {
          if (this._chunkedTransferEncoding)
            this.set$chunkedTransferEncoding(false);
          this._http$_set$2("content-length", J.toString$0(contentLength));
        } else {
          if (t1)
            H.throwExpression(new Z.HttpException("HTTP headers are not mutable", null));
          this._headers.remove$1(0, C.JSString_methods.toLowerCase$0("content-length"));
          if (t3.$eq(t2, "1.1"))
            this.set$chunkedTransferEncoding(true);
        }
      },
      set$chunkedTransferEncoding: function(chunkedTransferEncoding) {
        var t1, values, $name, value, t2, index, t3;
        t1 = !this._mutable;
        if (t1)
          H.throwExpression(new Z.HttpException("HTTP headers are not mutable", null));
        if (chunkedTransferEncoding && J.$eq(this.protocolVersion, "1.0"))
          throw H.wrapException(new Z.HttpException("Trying to set 'Transfer-Encoding: Chunked' on HTTP 1.0 headers", null));
        if (chunkedTransferEncoding === this._chunkedTransferEncoding)
          return;
        if (chunkedTransferEncoding) {
          values = this._headers.$index(0, "transfer-encoding");
          if (values == null || !J.$eq(J.get$last$ax(values), "chunked"))
            this._addValue$2("transfer-encoding", "chunked");
          this.set$contentLength(-1);
        } else {
          if (t1)
            H.throwExpression(new Z.HttpException("HTTP headers are not mutable", null));
          $name = C.JSString_methods.toLowerCase$0("transfer-encoding");
          value = Z._HttpHeaders__validateValue("chunked");
          t1 = this._headers;
          values = t1.$index(0, $name);
          if (values != null) {
            t2 = J.getInterceptor$asx(values);
            index = t2.indexOf$1(values, value);
            t3 = J.getInterceptor(index);
            if (!t3.$eq(index, -1))
              t2.removeRange$2(values, index, t3.$add(index, 1));
            if (J.$eq(t2.get$length(values), 0))
              t1.remove$1(0, $name);
          }
          if ($name === "transfer-encoding" && J.$eq(value, "chunked"))
            this._chunkedTransferEncoding = false;
        }
        this._chunkedTransferEncoding = chunkedTransferEncoding;
      },
      clear$0: function(_) {
        if (!this._mutable)
          H.throwExpression(new Z.HttpException("HTTP headers are not mutable", null));
        this._headers.clear$0(0);
        this._contentLength = -1;
        this._persistentConnection = true;
        this._chunkedTransferEncoding = false;
        this._http$_host = null;
        this._http$_port = null;
      },
      _http$_add$2: function($name, value) {
        var lowerCaseValue;
        switch ($name.length) {
          case 4:
            if ("date" === $name) {
              if (value instanceof P.DateTime) {
                if (!this._mutable)
                  H.throwExpression(new Z.HttpException("HTTP headers are not mutable", null));
                this._http$_set$2("date", Z.HttpDate_format(value.toUtc$0()));
              } else if (typeof value === "string")
                this._http$_set$2("date", value);
              else
                H.throwExpression(new Z.HttpException("Unexpected type for header named " + $name, null));
              return;
            }
            if ("host" === $name) {
              this._addHost$2($name, value);
              return;
            }
            break;
          case 7:
            if ("expires" === $name) {
              if (value instanceof P.DateTime) {
                if (!this._mutable)
                  H.throwExpression(new Z.HttpException("HTTP headers are not mutable", null));
                this._http$_set$2("expires", Z.HttpDate_format(value.toUtc$0()));
              } else if (typeof value === "string")
                this._http$_set$2("expires", value);
              else
                H.throwExpression(new Z.HttpException("Unexpected type for header named " + $name, null));
              return;
            }
            break;
          case 10:
            if ("connection" === $name) {
              lowerCaseValue = J.toLowerCase$0$s(value);
              if (lowerCaseValue === "close")
                this._persistentConnection = false;
              else if (lowerCaseValue === "keep-alive")
                this._persistentConnection = true;
              this._addValue$2($name, value);
              return;
            }
            break;
          case 12:
            if ("content-type" === $name) {
              this._http$_set$2("content-type", value);
              return;
            }
            break;
          case 14:
            if ("content-length" === $name) {
              if (typeof value === "number" && Math.floor(value) === value)
                this.set$contentLength(value);
              else if (typeof value === "string")
                this.set$contentLength(H.Primitives_parseInt(value, null, null));
              else
                H.throwExpression(new Z.HttpException("Unexpected type for header named " + $name, null));
              return;
            }
            break;
          case 17:
            if ("transfer-encoding" === $name) {
              if (J.$eq(value, "chunked"))
                this.set$chunkedTransferEncoding(true);
              else
                this._addValue$2("transfer-encoding", value);
              return;
            }
            if ("if-modified-since" === $name) {
              if (value instanceof P.DateTime) {
                if (!this._mutable)
                  H.throwExpression(new Z.HttpException("HTTP headers are not mutable", null));
                this._http$_set$2("if-modified-since", Z.HttpDate_format(value.toUtc$0()));
              } else if (typeof value === "string")
                this._http$_set$2("if-modified-since", value);
              else
                H.throwExpression(new Z.HttpException("Unexpected type for header named " + $name, null));
              return;
            }
            break;
        }
        this._addValue$2($name, value);
      },
      _addHost$2: function($name, value) {
        var pos, t1, t2, exception;
        t1 = value;
        if (typeof t1 === "string") {
          pos = J.indexOf$1$asx(value, ":");
          if (J.$eq(pos, -1)) {
            this._http$_host = value;
            this._http$_port = 80;
          } else {
            if (J.$gt$n(pos, 0))
              this._http$_host = J.substring$2$s(value, 0, pos);
            else
              this._http$_host = null;
            t1 = J.$add$ins(pos, 1);
            t2 = J.get$length$asx(value);
            if (t1 == null ? t2 == null : t1 === t2)
              this._http$_port = 80;
            else
              try {
                this._http$_port = H.Primitives_parseInt(J.substring$1$s(value, J.$add$ins(pos, 1)), null, null);
              } catch (exception) {
                if (H.unwrapException(exception) instanceof P.FormatException)
                  this._http$_port = null;
                else
                  throw exception;
              }
          }
          this._http$_set$2("host", value);
        } else
          throw H.wrapException(new Z.HttpException("Unexpected type for header named " + $name, null));
      },
      _addValue$2: function($name, value) {
        var t1, values, t2;
        t1 = this._headers;
        values = t1.$index(0, $name);
        if (values == null) {
          values = [];
          values.$builtinTypeInfo = [P.String];
          t1.$indexSet(0, $name, values);
        }
        t1 = J.getInterceptor(value);
        if (!!t1.$isDateTime)
          J.add$1$ax(values, Z.HttpDate_format(value));
        else {
          t2 = J.getInterceptor$ax(values);
          if (typeof value === "string")
            t2.add$1(values, value);
          else
            t2.add$1(values, Z._HttpHeaders__validateValue(t1.toString$0(value)));
        }
      },
      _http$_set$2: function($name, value) {
        var values = [];
        values.$builtinTypeInfo = [P.String];
        this._headers.$indexSet(0, $name, values);
        values.push(value);
      },
      _foldHeader$1: function($name) {
        var t1;
        if (!J.$eq($name, "set-cookie"))
          t1 = false;
        else
          t1 = true;
        if (t1)
          return false;
        return true;
      },
      toString$0: function(_) {
        var sb, t1;
        sb = new P.StringBuffer("");
        this._headers.forEach$1(0, new Z._HttpHeaders_toString_closure(this, sb));
        t1 = sb._contents;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      },
      _HttpHeaders$3$defaultPortForScheme$initialHeaders: function(protocolVersion, defaultPortForScheme, initialHeaders) {
        if (J.$eq(this.protocolVersion, "1.0")) {
          this._persistentConnection = false;
          this._chunkedTransferEncoding = false;
        }
      },
      static: {_HttpHeaders$: function(protocolVersion, defaultPortForScheme, initialHeaders) {
          var t1 = new Z._HttpHeaders(P.HashMap_HashMap(null, null, null, P.String, [P.List, P.String]), protocolVersion, true, null, -1, true, false, null, null, defaultPortForScheme);
          t1._HttpHeaders$3$defaultPortForScheme$initialHeaders(protocolVersion, defaultPortForScheme, initialHeaders);
          return t1;
        }, _HttpHeaders__validateValue: function(value) {
          if (typeof value !== "string")
            return value;
          return value;
        }}
    },
    _HttpHeaders_toString_closure: {
      "^": "Closure:189;_http$_captured_this_0,_http$_captured_sb_1",
      call$2: function($name, values) {
        var t1, t2, fold, i, t3;
        t1 = this._http$_captured_sb_1;
        t2 = t1._contents += H.S($name);
        t1._contents = t2 + ": ";
        fold = this._http$_captured_this_0._foldHeader$1($name);
        t2 = J.getInterceptor$asx(values);
        i = 0;
        while (true) {
          t3 = t2.get$length(values);
          if (typeof t3 !== "number")
            return H.iae(t3);
          if (!(i < t3))
            break;
          if (i > 0) {
            t3 = t1._contents;
            if (fold)
              t1._contents = t3 + ", ";
            else {
              t1._contents = t3 + "\n";
              t3 = t1._contents += H.S($name);
              t1._contents = t3 + ": ";
            }
          }
          t1._contents += H.S(t2.$index(values, i));
          ++i;
        }
        t1._contents += "\n";
      }
    },
    _HttpClientRequest: {
      "^": "Object;_http$_done,headers,uri,method,_http$_buffer,encoding,bufferOutput,followRedirects,persistentConnection,contentLength,maxRedirects",
      close$0: function(_) {
        var t1, t2, _headers, path, t3, req, _i;
        t1 = this.headers;
        t2 = this.contentLength;
        if (!t1._mutable)
          H.throwExpression(new Z.HttpException("HTTP headers are not mutable", null));
        t1._addAll$2(C.JSString_methods.toLowerCase$0("content-length"), t2);
        _headers = P.LinkedHashMap__makeEmpty();
        t1._headers.forEach$1(0, new Z._HttpClientRequest_close_closure(this, _headers));
        t1 = this.uri;
        path = t1._path;
        t2 = t1._query;
        t3 = t2 == null;
        if ((t3 ? "" : t2).length > 0)
          path += "?" + H.S(t3 ? "" : t2);
        t2 = t1.scheme === "https" ? $.get$_https() : $.get$_http();
        req = t2.callMethod$2("request", [P.JsObject_JsObject$jsify(P.LinkedHashMap__makeLiteral(["hostname", t1.get$host(t1), "port", t1.get$port(t1), "path", path, "method", this.method, "headers", _headers])), new Z._HttpClientRequest_close_closure0(this)]);
        for (t1 = this._http$_buffer, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, H.throwConcurrentModificationError)(t1), ++_i)
          req.callMethod$2("write", [t1[_i]]);
        req.callMethod$1("end");
        return this._http$_done.future;
      },
      add$1: function(_, data) {
        var t1, t2;
        this._http$_buffer.push(K.listToBuf(data));
        t1 = this.contentLength;
        if (t1 < 0) {
          this.contentLength = 0;
          t1 = 0;
        }
        t2 = J.get$length$asx(data);
        if (typeof t2 !== "number")
          return H.iae(t2);
        this.contentLength = t1 + t2;
      },
      write$1: function(obj) {
        var t1, t2;
        t1 = this.encoding.get$encoder().convert$1(obj);
        this._http$_buffer.push(K.listToBuf(t1));
        t2 = this.contentLength;
        if (t2 < 0) {
          this.contentLength = 0;
          t2 = 0;
        }
        this.contentLength = t2 + t1.length;
      }
    },
    _HttpClientRequest_close_closure: {
      "^": "Closure:15;_http$_captured_this_0,_captured__headers_1",
      call$2: function($name, values) {
        var t1 = this._http$_captured_this_0.headers.value$1(0, $name);
        this._captured__headers_1.$indexSet(0, $name, t1);
        return t1;
      }
    },
    _HttpClientRequest_close_closure0: {
      "^": "Closure:8;_http$_captured_this_2",
      call$1: [function(res) {
        var t1 = this._http$_captured_this_2;
        t1._http$_done.complete$1(0, Z._HttpClientResponse$(res, t1.method));
      }, null, null, 2, 0, null, 214, [], "call"]
    },
    HttpClientRequest: {
      "^": "Object;"
    },
    RedirectInfo: {
      "^": "Object;"
    },
    HttpClientResponse: {
      "^": "Object;",
      $isStream: 1,
      $asStream: function() {
        return [[P.List, P.$int]];
      }
    },
    _HttpClientResponse: {
      "^": "Stream;_http$_controller,_res,_reqMethod,redirects,headers",
      get$first: function(_) {
        var t1 = new P._ControllerStream(this._http$_controller);
        t1.$builtinTypeInfo = [null];
        return t1.get$first(t1);
      },
      get$last: function(_) {
        var t1 = new P._ControllerStream(this._http$_controller);
        t1.$builtinTypeInfo = [null];
        return t1.get$last(t1);
      },
      get$statusCode: function(_) {
        return J.$index$asx(this._res, "statusCode");
      },
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1 = new P._ControllerStream(this._http$_controller);
        t1.$builtinTypeInfo = [null];
        return t1.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, false, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, false, null, null);
      },
      listen$2$onDone: function(onData, onDone) {
        return this.listen$4$cancelOnError$onDone$onError(onData, false, onDone, null);
      },
      _HttpClientResponse$2: function(res, _reqMethod) {
        var t1, obj, t2, t3, t4, key, t5;
        t1 = this._res;
        obj = J.$index$asx(t1, "headers");
        for (t2 = J.get$iterator$ax(J.$index$asx(J.$index$asx($.get$context(), "global"), "Object").callMethod$2("keys", [obj])), t3 = this.headers, t4 = J.getInterceptor$asx(obj); t2.moveNext$0();) {
          key = t2.get$current();
          t5 = t4.$index(obj, key);
          if (!t3._mutable)
            H.throwExpression(new Z.HttpException("HTTP headers are not mutable", null));
          t3._addAll$2(J.toLowerCase$0$s(key), t5);
        }
        t2 = new Z._HttpClientResponse_onData(this);
        t1.callMethod$2("on", ["data", t2]);
        t1.callMethod$2("on", ["end", new Z._HttpClientResponse_onEnd(this, t2)]);
      },
      $asStream: function() {
        return [[P.List, P.$int]];
      },
      static: {_HttpClientResponse$: function(res, _reqMethod) {
          var t1, t2;
          t1 = P.StreamController_StreamController(null, null, null, null, true, P.List);
          t2 = [];
          t2.$builtinTypeInfo = [Z.RedirectInfo];
          t1 = new Z._HttpClientResponse(t1, res, _reqMethod, t2, Z._HttpHeaders$(J.$index$asx(res, "httpVersion"), 80, null));
          t1._HttpClientResponse$2(res, _reqMethod);
          return t1;
        }}
    },
    _HttpClientResponse_onData: {
      "^": "Closure:8;_http$_captured_this_0",
      call$1: [function(buf) {
        var t1, t2;
        t1 = this._http$_captured_this_0._http$_controller;
        t2 = K.bufToList(buf);
        if (t1._state >= 4)
          H.throwExpression(t1._badEventState$0());
        t1._async$_add$1(t2);
      }, null, null, 2, 0, null, 215, [], "call"]
    },
    _HttpClientResponse_onEnd: {
      "^": "Closure:5;_http$_captured_this_1,_captured_onData_2",
      call$0: [function() {
        var t1 = this._http$_captured_this_1;
        t1._http$_controller.close$0(0);
        t1 = t1._res;
        t1.callMethod$2("removeListener", ["data", this._captured_onData_2]);
        t1.callMethod$2("removeListener", ["end", this]);
      }, null, null, 0, 0, null, "call"]
    }
  }], ["node_io.util", "package:node_io/util.dart",, K, {
    "^": "",
    require: function(input) {
      return $.get$context().callMethod$2("require", [input]);
    },
    bufToList: function(buf) {
      var bytes, $length, offset;
      bytes = [];
      bytes.$builtinTypeInfo = [P.$int];
      $length = J.$index$asx(buf, "length");
      if (typeof $length !== "number")
        return H.iae($length);
      offset = 0;
      for (; offset < $length; ++offset)
        bytes.push(buf.callMethod$2("readUInt8", [offset]));
      return bytes;
    },
    listToBuf: function(bytes) {
      var t1, $length, buf, offset, $byte;
      t1 = J.getInterceptor$asx(bytes);
      $length = t1.get$length(bytes);
      buf = P.JsObject_JsObject(J.$index$asx($.get$context(), "Buffer"), [$length]);
      for (t1 = t1.get$iterator(bytes), offset = 0; t1.moveNext$0();) {
        $byte = t1.get$current();
        if (typeof $length !== "number")
          return H.iae($length);
        if (offset >= $length)
          break;
        buf.callMethod$2("writeUInt8", [$byte, offset]);
        ++offset;
      }
      return buf;
    }
  }], ["node_io.websocket", "package:node_io/websocket.dart",, B, {
    "^": "",
    _WebSocket: {
      "^": "Stream;_websocket0$_controller,_websocket0$_socket,_websocket0$_done,_closeCode,_closeReason,pingInterval",
      get$readyState: function(_) {
        return J.$index$asx(this._websocket0$_socket, "readyState");
      },
      add$1: function(_, data) {
        if (typeof data !== "string")
          data = K.listToBuf(data);
        this._websocket0$_socket.callMethod$2("send", [data]);
      },
      listen$4$cancelOnError$onDone$onError: function(onData, cancelOnError, onDone, onError) {
        var t1 = new P._ControllerStream(this._websocket0$_controller);
        t1.$builtinTypeInfo = [null];
        return t1.listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError);
      },
      listen$3$onDone$onError: function(onData, onDone, onError) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, onError);
      },
      listen$1: function(onData) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
      },
      listen$2$onDone: function(onData, onDone) {
        return this.listen$4$cancelOnError$onDone$onError(onData, null, onDone, null);
      },
      close$2: function(_, code, reason) {
        this._websocket0$_socket.callMethod$2("close", [code, reason]);
        this._closeReason = reason;
        this._closeCode = code;
        this._websocket0$_done.complete$0(0);
        return;
      },
      close$0: function($receiver) {
        return this.close$2($receiver, 1000, null);
      },
      close$1: function($receiver, code) {
        return this.close$2($receiver, code, null);
      },
      _WebSocket$1: function(_socket) {
        var t1, t2, t3;
        t1 = this._websocket0$_done.future;
        t1.then$1(new B._WebSocket_closure(this));
        t2 = this._websocket0$_socket;
        t2.callMethod$2("on", ["message", new B._WebSocket_onData(this)]);
        t3 = new B._WebSocket_onError(this);
        t2.callMethod$2("on", ["error", t3]);
        t1.then$1(new B._WebSocket_closure0(this, t3));
      },
      $asStream: functionThatReturnsNull,
      static: {_WebSocket$: function(_socket) {
          var t1, t2;
          t1 = P.StreamController_StreamController(null, null, null, null, true, P.List);
          t2 = new P._Future(0, $.Zone__current, null);
          t2.$builtinTypeInfo = [null];
          t2 = new P._AsyncCompleter(t2);
          t2.$builtinTypeInfo = [null];
          t1 = new B._WebSocket(t1, _socket, t2, null, null, null);
          t1._WebSocket$1(_socket);
          return t1;
        }, _WebSocket_connect: function(url, protocols, headers) {
          var t1, completer, socket;
          t1 = new P._Future(0, $.Zone__current, null);
          t1.$builtinTypeInfo = [null];
          completer = new P._SyncCompleter(t1);
          completer.$builtinTypeInfo = [null];
          socket = P.JsObject_JsObject($.get$_ws(), [url, P.JsObject_JsObject$jsify(P.LinkedHashMap__makeLiteral(["headers", headers]))]);
          socket.callMethod$2("on", ["open", new B._WebSocket_connect_closure(completer, socket)]);
          return t1;
        }}
    },
    _WebSocket_closure: {
      "^": "Closure:8;_websocket0$_captured_this_0",
      call$1: [function(_) {
        return this._websocket0$_captured_this_0._websocket0$_controller.close$0(0);
      }, null, null, 2, 0, null, 51, [], "call"]
    },
    _WebSocket_onData: {
      "^": "Closure:15;_websocket0$_captured_this_1",
      call$2: [function(data, flags) {
        var t1;
        if (typeof data !== "string")
          data = K.bufToList(data);
        t1 = this._websocket0$_captured_this_1._websocket0$_controller;
        if (t1._state >= 4)
          H.throwExpression(t1._badEventState$0());
        t1._async$_add$1(data);
      }, null, null, 4, 0, null, 52, [], 216, [], "call"]
    },
    _WebSocket_onError: {
      "^": "Closure:8;_websocket0$_captured_this_2",
      call$1: [function(error) {
        this._websocket0$_captured_this_2._websocket0$_controller.addError$1(error);
      }, null, null, 2, 0, null, 17, [], "call"]
    },
    _WebSocket_closure0: {
      "^": "Closure:8;_captured_this_3,_captured_onError_4",
      call$1: [function(_) {
        this._captured_this_3._websocket0$_socket.callMethod$2("removeListener", ["error", this._captured_onError_4]);
      }, null, null, 2, 0, null, 51, [], "call"]
    },
    _WebSocket_connect_closure: {
      "^": "Closure:5;_captured_completer_0,_captured_socket_1",
      call$0: [function() {
        this._captured_completer_0.complete$1(0, B._WebSocket$(this._captured_socket_1));
      }, null, null, 0, 0, null, "call"]
    }
  }]];
  setupProgram(dart, 0);
  // getInterceptor methods
  J.getInterceptor = function(receiver) {
    if (typeof receiver == "number") {
      if (Math.floor(receiver) == receiver)
        return J.JSInt.prototype;
      return J.JSDouble.prototype;
    }
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return J.JSNull.prototype;
    if (typeof receiver == "boolean")
      return J.JSBool.prototype;
    if (receiver.constructor == Array)
      return J.JSArray0.prototype;
    if (typeof receiver != "object")
      return receiver;
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$asx = function(receiver) {
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray0.prototype;
    if (typeof receiver != "object")
      return receiver;
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$ax = function(receiver) {
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray0.prototype;
    if (typeof receiver != "object")
      return receiver;
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.getInterceptor$i = function(receiver) {
    if (typeof receiver == "number") {
      if (Math.floor(receiver) == receiver)
        return J.JSInt.prototype;
      return J.JSNumber.prototype;
    }
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$in = function(receiver) {
    if (typeof receiver == "number") {
      if (Math.floor(receiver) == receiver)
        return J.JSInt.prototype;
      return J.JSNumber.prototype;
    }
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$ins = function(receiver) {
    if (typeof receiver == "number") {
      if (Math.floor(receiver) == receiver)
        return J.JSInt.prototype;
      return J.JSNumber.prototype;
    }
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$n = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$ns = function(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$s = function(receiver) {
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof P.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  };
  J.getInterceptor$x = function(receiver) {
    if (receiver == null)
      return receiver;
    if (typeof receiver != "object")
      return receiver;
    if (receiver instanceof P.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  };
  J.$add$ins = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver + a0;
    return J.getInterceptor$ins(receiver).$add(receiver, a0);
  };
  J.$add$ns = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver + a0;
    return J.getInterceptor$ins(receiver).$add(receiver, a0);
  };
  J.$and$in = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver & a0) >>> 0;
    return J.getInterceptor$in(receiver).$and(receiver, a0);
  };
  J.$and$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver & a0) >>> 0;
    return J.getInterceptor$in(receiver).$and(receiver, a0);
  };
  J.$div$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver / a0;
    return J.getInterceptor$n(receiver).$div(receiver, a0);
  };
  J.$eq = function(receiver, a0) {
    if (receiver == null)
      return a0 == null;
    if (typeof receiver != "object")
      return a0 != null && receiver === a0;
    return J.getInterceptor(receiver).$eq(receiver, a0);
  };
  J.$ge$in = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver >= a0;
    return J.getInterceptor$in(receiver).$ge(receiver, a0);
  };
  J.$ge$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver >= a0;
    return J.getInterceptor$in(receiver).$ge(receiver, a0);
  };
  J.$gt$in = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver > a0;
    return J.getInterceptor$in(receiver).$gt(receiver, a0);
  };
  J.$gt$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver > a0;
    return J.getInterceptor$in(receiver).$gt(receiver, a0);
  };
  J.$index$asx = function(receiver, a0) {
    if (receiver.constructor == Array || typeof receiver == "string" || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
      if (a0 >>> 0 === a0 && a0 < receiver.length)
        return receiver[a0];
    return J.getInterceptor$asx(receiver).$index(receiver, a0);
  };
  J.$indexSet$ax = function(receiver, a0, a1) {
    if ((receiver.constructor == Array || H.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
      return receiver[a0] = a1;
    return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
  };
  J.$le$in = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver <= a0;
    return J.getInterceptor$in(receiver).$le(receiver, a0);
  };
  J.$le$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver <= a0;
    return J.getInterceptor$in(receiver).$le(receiver, a0);
  };
  J.$lt$in = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver < a0;
    return J.getInterceptor$in(receiver).$lt(receiver, a0);
  };
  J.$lt$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver < a0;
    return J.getInterceptor$in(receiver).$lt(receiver, a0);
  };
  J.$mod$n = function(receiver, a0) {
    return J.getInterceptor$n(receiver).$mod(receiver, a0);
  };
  J.$mul$ins = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver * a0;
    return J.getInterceptor$ins(receiver).$mul(receiver, a0);
  };
  J.$mul$ns = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver * a0;
    return J.getInterceptor$ins(receiver).$mul(receiver, a0);
  };
  J.$negate$n = function(receiver) {
    if (typeof receiver == "number")
      return -receiver;
    return J.getInterceptor$n(receiver).$negate(receiver);
  };
  J.$not$i = function(receiver) {
    if (typeof receiver == "number" && Math.floor(receiver) == receiver)
      return ~receiver >>> 0;
    return J.getInterceptor$i(receiver).$not(receiver);
  };
  J.$or$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver | a0) >>> 0;
    return J.getInterceptor$n(receiver).$or(receiver, a0);
  };
  J.$shl$in = function(receiver, a0) {
    return J.getInterceptor$in(receiver).$shl(receiver, a0);
  };
  J.$shl$n = function(receiver, a0) {
    return J.getInterceptor$in(receiver).$shl(receiver, a0);
  };
  J.$shr$in = function(receiver, a0) {
    return J.getInterceptor$in(receiver).$shr(receiver, a0);
  };
  J.$shr$n = function(receiver, a0) {
    return J.getInterceptor$in(receiver).$shr(receiver, a0);
  };
  J.$sub$in = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver - a0;
    return J.getInterceptor$in(receiver).$sub(receiver, a0);
  };
  J.$sub$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return receiver - a0;
    return J.getInterceptor$in(receiver).$sub(receiver, a0);
  };
  J.$tdiv$n = function(receiver, a0) {
    return J.getInterceptor$n(receiver).$tdiv(receiver, a0);
  };
  J.$xor$n = function(receiver, a0) {
    if (typeof receiver == "number" && typeof a0 == "number")
      return (receiver ^ a0) >>> 0;
    return J.getInterceptor$n(receiver).$xor(receiver, a0);
  };
  J._clearChildren$0$x = function(receiver) {
    return J.getInterceptor$x(receiver)._clearChildren$0(receiver);
  };
  J._replaceChild$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver)._replaceChild$2(receiver, a0, a1);
  };
  J.abs$0$n = function(receiver) {
    return J.getInterceptor$n(receiver).abs$0(receiver);
  };
  J.add$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).add$1(receiver, a0);
  };
  J.add$4$ax = function(receiver, a0, a1, a2, a3) {
    return J.getInterceptor$ax(receiver).add$4(receiver, a0, a1, a2, a3);
  };
  J.addAll$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).addAll$1(receiver, a0);
  };
  J.addEventListener$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver).addEventListener$3(receiver, a0, a1, a2);
  };
  J.asByteData$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).asByteData$2(receiver, a0, a1);
  };
  J.bitLength$0$i = function(receiver) {
    return J.getInterceptor$i(receiver).bitLength$0(receiver);
  };
  J.clamp$0$n = function(receiver) {
    return J.getInterceptor$n(receiver).clamp$0(receiver);
  };
  J.clear$0$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).clear$0(receiver);
  };
  J.close$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).close$0(receiver);
  };
  J.close$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).close$1(receiver, a0);
  };
  J.codeUnitAt$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
  };
  J.compareTo$1$ns = function(receiver, a0) {
    return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
  };
  J.complete$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).complete$0(receiver);
  };
  J.complete$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).complete$1(receiver, a0);
  };
  J.contains$1$asx = function(receiver, a0) {
    return J.getInterceptor$asx(receiver).contains$1(receiver, a0);
  };
  J.contains$2$asx = function(receiver, a0, a1) {
    return J.getInterceptor$asx(receiver).contains$2(receiver, a0, a1);
  };
  J.elementAt$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
  };
  J.endsWith$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).endsWith$1(receiver, a0);
  };
  J.floor$0$n = function(receiver) {
    return J.getInterceptor$n(receiver).floor$0(receiver);
  };
  J.fold$2$ax = function(receiver, a0, a1) {
    return J.getInterceptor$ax(receiver).fold$2(receiver, a0, a1);
  };
  J.forEach$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
  };
  J.get$_children$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$_children(receiver);
  };
  J.get$attributes$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$attributes(receiver);
  };
  J.get$bitLength$i = function(receiver) {
    return J.getInterceptor$i(receiver).get$bitLength(receiver);
  };
  J.get$buffer$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$buffer(receiver);
  };
  J.get$children$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$children(receiver);
  };
  J.get$complete$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$complete(receiver);
  };
  J.get$connection$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$connection(receiver);
  };
  J.get$data$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$data(receiver);
  };
  J.get$defaultValue$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$defaultValue(receiver);
  };
  J.get$error$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$error(receiver);
  };
  J.get$first$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).get$first(receiver);
  };
  J.get$hashCode$ = function(receiver) {
    return J.getInterceptor(receiver).get$hashCode(receiver);
  };
  J.get$isEmpty$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
  };
  J.get$isEven$i = function(receiver) {
    return J.getInterceptor$i(receiver).get$isEven(receiver);
  };
  J.get$isFinite$n = function(receiver) {
    return J.getInterceptor$n(receiver).get$isFinite(receiver);
  };
  J.get$isNaN$n = function(receiver) {
    return J.getInterceptor$n(receiver).get$isNaN(receiver);
  };
  J.get$isNotEmpty$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
  };
  J.get$iterator$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).get$iterator(receiver);
  };
  J.get$last$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).get$last(receiver);
  };
  J.get$length$asx = function(receiver) {
    return J.getInterceptor$asx(receiver).get$length(receiver);
  };
  J.get$lengthInBytes$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$lengthInBytes(receiver);
  };
  J.get$list$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$list(receiver);
  };
  J.get$name$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$name(receiver);
  };
  J.get$nodes$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$nodes(receiver);
  };
  J.get$nonce$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$nonce(receiver);
  };
  J.get$options$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$options(receiver);
  };
  J.get$parent$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$parent(receiver);
  };
  J.get$path$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$path(receiver);
  };
  J.get$print$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$print(receiver);
  };
  J.get$result$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$result(receiver);
  };
  J.get$rows$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$rows(receiver);
  };
  J.get$sign$n = function(receiver) {
    return J.getInterceptor$n(receiver).get$sign(receiver);
  };
  J.get$status$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$status(receiver);
  };
  J.get$stream$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$stream(receiver);
  };
  J.get$value$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$value(receiver);
  };
  J.get$x$x = function(receiver) {
    return J.getInterceptor$x(receiver).get$x(receiver);
  };
  J.indexOf$1$asx = function(receiver, a0) {
    return J.getInterceptor$asx(receiver).indexOf$1(receiver, a0);
  };
  J.indexOf$2$asx = function(receiver, a0, a1) {
    return J.getInterceptor$asx(receiver).indexOf$2(receiver, a0, a1);
  };
  J.insertBefore$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).insertBefore$1(receiver, a0);
  };
  J.isEven$0$i = function(receiver) {
    return J.getInterceptor$i(receiver).isEven$0(receiver);
  };
  J.join$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).join$1(receiver, a0);
  };
  J.lastIndexOf$1$asx = function(receiver, a0) {
    return J.getInterceptor$asx(receiver).lastIndexOf$1(receiver, a0);
  };
  J.lastIndexOf$2$asx = function(receiver, a0, a1) {
    return J.getInterceptor$asx(receiver).lastIndexOf$2(receiver, a0, a1);
  };
  J.list$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).list$1(receiver, a0);
  };
  J.load$2$x = function(receiver, a0, a1) {
    return J.getInterceptor$x(receiver).load$2(receiver, a0, a1);
  };
  J.map$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).map$1(receiver, a0);
  };
  J.matchAsPrefix$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).matchAsPrefix$2(receiver, a0, a1);
  };
  J.modInverse$1$i = function(receiver, a0) {
    return J.getInterceptor$i(receiver).modInverse$1(receiver, a0);
  };
  J.modPow$2$i = function(receiver, a0, a1) {
    return J.getInterceptor$i(receiver).modPow$2(receiver, a0, a1);
  };
  J.noSuchMethod$1 = function(receiver, a0) {
    return J.getInterceptor(receiver).noSuchMethod$1(receiver, a0);
  };
  J.onDisconnect$0$x = function(receiver) {
    return J.getInterceptor$x(receiver).onDisconnect$0(receiver);
  };
  J.print$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).print$1(receiver, a0);
  };
  J.remove$0$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).remove$0(receiver);
  };
  J.remove$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).remove$1(receiver, a0);
  };
  J.removeAt$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).removeAt$1(receiver, a0);
  };
  J.removeEventListener$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver).removeEventListener$3(receiver, a0, a1, a2);
  };
  J.removeRange$2$ax = function(receiver, a0, a1) {
    return J.getInterceptor$ax(receiver).removeRange$2(receiver, a0, a1);
  };
  J.replaceWith$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).replaceWith$1(receiver, a0);
  };
  J.send$1$x = function(receiver, a0) {
    return J.getInterceptor$x(receiver).send$1(receiver, a0);
  };
  J.send$3$x = function(receiver, a0, a1, a2) {
    return J.getInterceptor$x(receiver).send$3(receiver, a0, a1, a2);
  };
  J.set$connection$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$connection(receiver, value);
  };
  J.set$data$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$data(receiver, value);
  };
  J.set$detail$x = function(receiver, value) {
    return J.getInterceptor$x(receiver).set$detail(receiver, value);
  };
  J.set$length$asx = function(receiver, value) {
    return J.getInterceptor$asx(receiver).set$length(receiver, value);
  };
  J.setRange$4$ax = function(receiver, a0, a1, a2, a3) {
    return J.getInterceptor$ax(receiver).setRange$4(receiver, a0, a1, a2, a3);
  };
  J.split$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).split$1(receiver, a0);
  };
  J.startsWith$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).startsWith$1(receiver, a0);
  };
  J.substring$1$s = function(receiver, a0) {
    return J.getInterceptor$s(receiver).substring$1(receiver, a0);
  };
  J.substring$2$s = function(receiver, a0, a1) {
    return J.getInterceptor$s(receiver).substring$2(receiver, a0, a1);
  };
  J.toInt$0$n = function(receiver) {
    return J.getInterceptor$n(receiver).toInt$0(receiver);
  };
  J.toList$0$ax = function(receiver) {
    return J.getInterceptor$ax(receiver).toList$0(receiver);
  };
  J.toLowerCase$0$s = function(receiver) {
    return J.getInterceptor$s(receiver).toLowerCase$0(receiver);
  };
  J.toRadixString$1$n = function(receiver, a0) {
    return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
  };
  J.toString$0 = function(receiver) {
    return J.getInterceptor(receiver).toString$0(receiver);
  };
  J.trim$0$s = function(receiver) {
    return J.getInterceptor$s(receiver).trim$0(receiver);
  };
  J.where$1$ax = function(receiver, a0) {
    return J.getInterceptor$ax(receiver).where$1(receiver, a0);
  };
  Isolate.makeConstantList = function(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  };
  var $ = Isolate.$isolateProperties;
  C.JSArray_methods = J.JSArray0.prototype;
  C.JSInt_methods = J.JSInt.prototype;
  C.JSNull_methods = J.JSNull.prototype;
  C.JSNumber_methods = J.JSNumber.prototype;
  C.JSString_methods = J.JSString.prototype;
  C.NativeByteBuffer_methods = H.NativeByteBuffer.prototype;
  C.NativeUint8List_methods = H.NativeUint8List.prototype;
  C.NodeList_methods = W.NodeList.prototype;
  C.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
  C.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
  C.C_DynamicRuntimeType = new H.DynamicRuntimeType();
  C.C_OutOfMemoryError = new P.OutOfMemoryError();
  C.C_Unspecified = new O.Unspecified();
  C.C__DelayedDone = new P._DelayedDone();
  C.C__JSRandom = new P._JSRandom();
  C.C__Override = new P._Override();
  C.C__RootZone = new P._RootZone();
  C.Duration_0 = new P.Duration(0);
  C.Duration_5000000 = new P.Duration(5000000);
  C.Endianness_false = new P.Endianness(false);
  C.Endianness_true = new P.Endianness(true);
  C.FileSystemEntityType_WRITE = new G.FileSystemEntityType("WRITE");
  C.JS_CONST_0 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
  C.JS_CONST_4hp = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
  C.JS_CONST_8ZY = function getTagFallback(o) {
  var constructor = o.constructor;
  if (typeof constructor == "function") {
    var name = constructor.name;
    if (typeof name == "string" &&
        name.length > 2 &&
        name !== "Object" &&
        name !== "Function.prototype") {
      return name;
    }
  }
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
  C.JS_CONST_Fs4 = function(hooks) { return hooks; }
;
  C.JS_CONST_QJm = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var ua = navigator.userAgent;
    if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
    if (ua.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
  C.JS_CONST_gkc = function() {
  function typeNameInChrome(o) {
    var constructor = o.constructor;
    if (constructor) {
      var name = constructor.name;
      if (name) return name;
    }
    var s = Object.prototype.toString.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = Object.prototype.toString.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof navigator == "object";
  return {
    getTag: typeNameInChrome,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
  C.JS_CONST_gkc0 = function(hooks) {
  var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
  C.JS_CONST_rr7 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
  C.JsonCodec_null_null = new P.JsonCodec(null, null);
  C.JsonEncoder_null_null = new P.JsonEncoder(null, null);
  C.Level_FINEST_300 = new N.Level("FINEST", 300);
  C.Level_FINE_500 = new N.Level("FINE", 500);
  C.Level_INFO_800 = new N.Level("INFO", 800);
  C.Level_OFF_2000 = new N.Level("OFF", 2000);
  C.Level_SEVERE_1000 = new N.Level("SEVERE", 1000);
  C.Level_WARNING_900 = new N.Level("WARNING", 900);
  C.List_$is_$permission_$settings = Isolate.makeConstantList(["$is", "$permission", "$settings"]);
  C.List_127_2047_65535_1114111 = H.setRuntimeTypeInfo(Isolate.makeConstantList([127, 2047, 65535, 1114111]), [P.$int]);
  C.List_2Vk = Isolate.makeConstantList([0, 0, 32776, 33792, 1, 10240, 0, 0]);
  C.List_504 = Isolate.makeConstantList(["none", "read", "write", "config", "never"]);
  C.List_CVk = Isolate.makeConstantList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]);
  C.List_ECn = Isolate.makeConstantList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]);
  C.List_JYB = Isolate.makeConstantList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]);
  C.Level_ALL_0 = new N.Level("ALL", 0);
  C.Level_FINER_400 = new N.Level("FINER", 400);
  C.Level_CONFIG_700 = new N.Level("CONFIG", 700);
  C.Level_SHOUT_1200 = new N.Level("SHOUT", 1200);
  C.List_O1R = Isolate.makeConstantList([C.Level_ALL_0, C.Level_FINEST_300, C.Level_FINER_400, C.Level_FINE_500, C.Level_CONFIG_700, C.Level_INFO_800, C.Level_WARNING_900, C.Level_SEVERE_1000, C.Level_SHOUT_1200, C.Level_OFF_2000]);
  C.List_empty = Isolate.makeConstantList([]);
  C.List_empty0 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.$int]);
  C.List_empty1 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.TypeMirror]);
  C.List_empty2 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.TypeVariableMirror]);
  C.List_empty3 = H.setRuntimeTypeInfo(Isolate.makeConstantList([]), [P.String]);
  C.List_gRj = Isolate.makeConstantList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]);
  C.List_h8w = Isolate.makeConstantList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]);
  C.List_nxB = Isolate.makeConstantList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]);
  C.List_qNA = Isolate.makeConstantList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]);
  C.List_qg4 = Isolate.makeConstantList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]);
  C.List_qg40 = Isolate.makeConstantList([0, 0, 32722, 12287, 65535, 34815, 65534, 18431]);
  C.Map_50eJC = new H.ConstantStringMap(5, {none: 0, read: 1, write: 2, config: 3, never: 4}, C.List_504);
  C.List_QoX = Isolate.makeConstantList(["$is", "$interface", "$permissions", "$name", "$type", "$invokable", "$writable", "$settings", "$params", "$columns", "$streamMeta"]);
  C.List_type = Isolate.makeConstantList(["type"]);
  C.Map_P3wDc = new H.ConstantStringMap(1, {type: "profile"}, C.List_type);
  C.Map_P3KlV = new H.ConstantStringMap(1, {type: "interface"}, C.List_type);
  C.List_type_require_writable = Isolate.makeConstantList(["type", "require", "writable"]);
  C.Map_yuSoH = new H.ConstantStringMap(3, {type: "list", require: 3, writable: 3}, C.List_type_require_writable);
  C.Map_P3Gh9 = new H.ConstantStringMap(1, {type: "string"}, C.List_type);
  C.Map_P3R1M = new H.ConstantStringMap(1, {type: "type"}, C.List_type);
  C.List_type_default = Isolate.makeConstantList(["type", "default"]);
  C.Map_c0Q8F = new H.ConstantStringMap(2, {type: "permission", default: "read"}, C.List_type_default);
  C.Map_c02Xj = new H.ConstantStringMap(2, {type: "permission", default: "never"}, C.List_type_default);
  C.Map_P37BY = new H.ConstantStringMap(1, {type: "map"}, C.List_type);
  C.Map_P3P1M = new H.ConstantStringMap(1, {type: "list"}, C.List_type);
  C.Map_QoUOt = new H.ConstantStringMap(11, {$is: C.Map_P3wDc, $interface: C.Map_P3KlV, $permissions: C.Map_yuSoH, $name: C.Map_P3Gh9, $type: C.Map_P3R1M, $invokable: C.Map_c0Q8F, $writable: C.Map_c02Xj, $settings: C.Map_P37BY, $params: C.Map_P3P1M, $columns: C.Map_P3P1M, $streamMeta: C.Map_P3P1M}, C.List_QoX);
  C.Map_empty = new H.ConstantStringMap(0, {}, C.List_empty);
  C.List_salt_saltS_saltL = Isolate.makeConstantList(["salt", "saltS", "saltL"]);
  C.Map_gVGBQ = new H.ConstantStringMap(3, {salt: 0, saltS: 1, saltL: 2}, C.List_salt_saltS_saltL);
  C.OptionType_F9d = new E.OptionType("OptionType.SINGLE");
  C.OptionType_Icb = new E.OptionType("OptionType.MULTIPLE");
  C.OptionType_woc = new E.OptionType("OptionType.FLAG");
  C.Symbol_call = new H.Symbol("call");
  C.Symbol_dynamic = new H.Symbol("dynamic");
  C.Symbol_void = new H.Symbol("void");
  C.Type_aJW = H.createRuntimeType('Future');
  C.TypeVariable_IF2 = new H.TypeVariable(C.Type_aJW, "T", 0);
  C.Type_81T = H.createRuntimeType('Completer');
  C.TypeVariable_oyn = new H.TypeVariable(C.Type_81T, "T", 0);
  C.Type_6L0 = H.createRuntimeType('Uint8List');
  C.Type_AGr = H.createRuntimeType('JsTypeVariableMirror');
  C.Type_Art = H.createRuntimeType('Float32List');
  C.Type_CAk = H.createRuntimeType('Uint16List');
  C.Type_EjN = H.createRuntimeType('Function');
  C.Type_Ejg = H.createRuntimeType('String');
  C.Type_EsU = H.createRuntimeType('bool');
  C.Type_QuW = H.createRuntimeType('Uint8ClampedList');
  C.Type_SnA = H.createRuntimeType('$int');
  C.Type_UoK = H.createRuntimeType('Int16List');
  C.Type_XXD = H.createRuntimeType('JSObject');
  C.Type_ckn = H.createRuntimeType('Float64List');
  C.Type_dTZ = H.createRuntimeType('Int32List');
  C.Type_dynamic = H.createRuntimeType('dynamic');
  C.Type_eZO = H.createRuntimeType('Null');
  C.Type_irB = H.createRuntimeType('Uint32List');
  C.Type_mp3 = H.createRuntimeType('Int8List');
  C.Type_oGP = H.createRuntimeType('ByteData');
  C.Type_qq1 = H.createRuntimeType('$double');
  C.Type_wAg = H.createRuntimeType('ByteBuffer');
  C.Type_xM7 = H.createRuntimeType('num');
  C.Utf8Codec_false = new P.Utf8Codec(false);
  C._ZoneFunction_3bB = new P._ZoneFunction(C.C__RootZone, P._rootCreatePeriodicTimer$closure());
  C._ZoneFunction_7G2 = new P._ZoneFunction(C.C__RootZone, P._rootRegisterBinaryCallback$closure());
  C._ZoneFunction_Eeh = new P._ZoneFunction(C.C__RootZone, P._rootRegisterUnaryCallback$closure());
  C._ZoneFunction_NMc = new P._ZoneFunction(C.C__RootZone, P._rootHandleUncaughtError$closure());
  C._ZoneFunction__RootZone__rootCreateTimer = new P._ZoneFunction(C.C__RootZone, P._rootCreateTimer$closure());
  C._ZoneFunction__RootZone__rootErrorCallback = new P._ZoneFunction(C.C__RootZone, P._rootErrorCallback$closure());
  C._ZoneFunction__RootZone__rootFork = new P._ZoneFunction(C.C__RootZone, P._rootFork$closure());
  C._ZoneFunction__RootZone__rootPrint = new P._ZoneFunction(C.C__RootZone, P._rootPrint$closure());
  C._ZoneFunction__RootZone__rootRegisterCallback = new P._ZoneFunction(C.C__RootZone, P._rootRegisterCallback$closure());
  C._ZoneFunction__RootZone__rootRun = new P._ZoneFunction(C.C__RootZone, P._rootRun$closure());
  C._ZoneFunction__RootZone__rootRunBinary = new P._ZoneFunction(C.C__RootZone, P._rootRunBinary$closure());
  C._ZoneFunction__RootZone__rootRunUnary = new P._ZoneFunction(C.C__RootZone, P._rootRunUnary$closure());
  C._ZoneFunction__RootZone__rootScheduleMicrotask = new P._ZoneFunction(C.C__RootZone, P._rootScheduleMicrotask$closure());
  C._ZoneSpecification_ALf = new P._ZoneSpecification(null, null, null, null, null, null, null, null, null, null, null, null, null);
  $.Primitives_mirrorFunctionCacheName = "$cachedFunction";
  $.Primitives_mirrorInvokeCacheName = "$cachedInvocation";
  $.Closure_functionCounter = 0;
  $.BoundClosure_selfFieldNameCache = null;
  $.BoundClosure_receiverFieldNameCache = null;
  $.deferredLoadHook = null;
  $.getTagFunction = null;
  $.alternateTagFunction = null;
  $.prototypeForTagFunction = null;
  $.dispatchRecordsForInstanceTags = null;
  $.interceptorsForUncacheableTags = null;
  $.initNativeDispatchFlag = null;
  $.BigIntegerV8_dbits = null;
  $.BigIntegerV8_BI_DB = null;
  $.BigIntegerV8_BI_DM = null;
  $.BigIntegerV8_BI_DV = null;
  $.BigIntegerV8_BI_FP = null;
  $.BigIntegerV8_BI_FV = null;
  $.BigIntegerV8_BI_F1 = null;
  $.BigIntegerV8_BI_F2 = null;
  $.BigIntegerV8__lplim = null;
  $.BigIntegerV8_canary = 244837814094590;
  $.BigIntegerV8__j_lm = null;
  $.BigIntegerV8_BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  $.BigIntegerV8_BI_RC = null;
  $.printToZone = null;
  $.JsMirrorSystem__librariesByName = null;
  $.JsMirrorSystem__hasInstalledDeferredLoadHook = false;
  $.classMirrors = null;
  $._nextCallback = null;
  $._lastCallback = null;
  $._lastPriorityCallback = null;
  $._isInCallbackLoop = false;
  $.Zone__current = C.C__RootZone;
  $._RootZone__rootDelegate = null;
  $.Expando__keyCount = 0;
  $.DsTimer__lastTimeRun = -1;
  $.DsTimer__pending = false;
  $.DsTimer__looping = false;
  $.DsTimer__mergeCycle = false;
  $.DsTimer_timerTs50 = -1;
  $.DsTimer_timerTimer = null;
  $._logger = null;
  $._DEBUG_MODE = null;
  $.Device__isOpera = null;
  $.Device__isWebKit = null;
  $.hierarchicalLoggingEnabled = false;
  $.recordStackTraceAtLevel = C.Level_OFF_2000;
  $._rootLevel = C.Level_INFO_800;
  $.LogRecord__nextNumber = 0;
  $ = null;
  init.isHunkLoaded = function(hunkHash) {
    return !!$dart_deferred_initializers$[hunkHash];
  };
  init.deferredInitialized = new Object(null);
  init.isHunkInitialized = function(hunkHash) {
    return init.deferredInitialized[hunkHash];
  };
  init.initializeLoadedHunk = function(hunkHash) {
    $dart_deferred_initializers$[hunkHash](globalsHolder, $);
    init.deferredInitialized[hunkHash] = true;
  };
  init.deferredLibraryUris = {};
  init.deferredLibraryHashes = {};
  // Empty type-to-interceptor map.
  (function(lazies) {
    var descriptorLength = 4;
    for (var i = 0; i < lazies.length; i += descriptorLength) {
      var fieldName = lazies[i];
      var getterName = lazies[i + 1];
      var lazyValue = lazies[i + 2];
      var staticName = lazies[i + 3];
      Isolate.$lazy(fieldName, getterName, lazyValue, staticName);
    }
  })(["IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
    return H.IsolateNatives_computeThisScript();
  }, "thisScript", "IsolateNatives_workerIds", "get$IsolateNatives_workerIds", function() {
    var t1 = new P.Expando(null);
    t1.$builtinTypeInfo = [P.$int];
    return t1;
  }, "workerIds", "TypeErrorDecoder_noSuchMethodPattern", "get$TypeErrorDecoder_noSuchMethodPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({toString: function() {
        return "$receiver$";
      }}));
  }, "noSuchMethodPattern", "TypeErrorDecoder_notClosurePattern", "get$TypeErrorDecoder_notClosurePattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn({$method$: null, toString: function() {
        return "$receiver$";
      }}));
  }, "notClosurePattern", "TypeErrorDecoder_nullCallPattern", "get$TypeErrorDecoder_nullCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(null));
  }, "nullCallPattern", "TypeErrorDecoder_nullLiteralCallPattern", "get$TypeErrorDecoder_nullLiteralCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = '$arguments$';
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }());
  }, "nullLiteralCallPattern", "TypeErrorDecoder_undefinedCallPattern", "get$TypeErrorDecoder_undefinedCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokeCallErrorOn(void 0));
  }, "undefinedCallPattern", "TypeErrorDecoder_undefinedLiteralCallPattern", "get$TypeErrorDecoder_undefinedLiteralCallPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = '$arguments$';
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }());
  }, "undefinedLiteralCallPattern", "TypeErrorDecoder_nullPropertyPattern", "get$TypeErrorDecoder_nullPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(null));
  }, "nullPropertyPattern", "TypeErrorDecoder_nullLiteralPropertyPattern", "get$TypeErrorDecoder_nullLiteralPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }());
  }, "nullLiteralPropertyPattern", "TypeErrorDecoder_undefinedPropertyPattern", "get$TypeErrorDecoder_undefinedPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(H.TypeErrorDecoder_provokePropertyErrorOn(void 0));
  }, "undefinedPropertyPattern", "TypeErrorDecoder_undefinedLiteralPropertyPattern", "get$TypeErrorDecoder_undefinedLiteralPropertyPattern", function() {
    return H.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }());
  }, "undefinedLiteralPropertyPattern", "Option__invalidChars", "get$Option__invalidChars", function() {
    return P.RegExp_RegExp("[ \\t\\r\\n\"'\\\\/]", true, false);
  }, "_invalidChars", "_SOLO_OPT", "get$_SOLO_OPT", function() {
    return P.RegExp_RegExp("^-([a-zA-Z0-9])$", true, false);
  }, "_SOLO_OPT", "_ABBR_OPT", "get$_ABBR_OPT", function() {
    return P.RegExp_RegExp("^-([a-zA-Z0-9]+)(.*)$", true, false);
  }, "_ABBR_OPT", "_LONG_OPT", "get$_LONG_OPT", function() {
    return P.RegExp_RegExp("^--([a-zA-Z\\-_0-9]+)(=(.*))?$", true, false);
  }, "_LONG_OPT", "BigInteger_useJsBigint", "get$BigInteger_useJsBigint", function() {
    return new Z.closure0().call$0();
  }, "useJsBigint", "SecureRandom_registry", "get$SecureRandom_registry", function() {
    var t1, t2;
    t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, P.Function);
    t2 = [];
    t2.$builtinTypeInfo = [P.Function];
    t1 = new F.Registry(t1, t2);
    t1.$builtinTypeInfo = [S.SecureRandom];
    return t1;
  }, "registry", "_S", "get$_S", function() {
    return [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22];
  }, "_S", "_Si", "get$_Si", function() {
    return [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125];
  }, "_Si", "_rcon", "get$_rcon", function() {
    return [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145];
  }, "_rcon", "_T0", "get$_T0", function() {
    return [2774754246, 2222750968, 2574743534, 2373680118, 234025727, 3177933782, 2976870366, 1422247313, 1345335392, 50397442, 2842126286, 2099981142, 436141799, 1658312629, 3870010189, 2591454956, 1170918031, 2642575903, 1086966153, 2273148410, 368769775, 3948501426, 3376891790, 200339707, 3970805057, 1742001331, 4255294047, 3937382213, 3214711843, 4154762323, 2524082916, 1539358875, 3266819957, 486407649, 2928907069, 1780885068, 1513502316, 1094664062, 49805301, 1338821763, 1546925160, 4104496465, 887481809, 150073849, 2473685474, 1943591083, 1395732834, 1058346282, 201589768, 1388824469, 1696801606, 1589887901, 672667696, 2711000631, 251987210, 3046808111, 151455502, 907153956, 2608889883, 1038279391, 652995533, 1764173646, 3451040383, 2675275242, 453576978, 2659418909, 1949051992, 773462580, 756751158, 2993581788, 3998898868, 4221608027, 4132590244, 1295727478, 1641469623, 3467883389, 2066295122, 1055122397, 1898917726, 2542044179, 4115878822, 1758581177, 0, 753790401, 1612718144, 536673507, 3367088505, 3982187446, 3194645204, 1187761037, 3653156455, 1262041458, 3729410708, 3561770136, 3898103984, 1255133061, 1808847035, 720367557, 3853167183, 385612781, 3309519750, 3612167578, 1429418854, 2491778321, 3477423498, 284817897, 100794884, 2172616702, 4031795360, 1144798328, 3131023141, 3819481163, 4082192802, 4272137053, 3225436288, 2324664069, 2912064063, 3164445985, 1211644016, 83228145, 3753688163, 3249976951, 1977277103, 1663115586, 806359072, 452984805, 250868733, 1842533055, 1288555905, 336333848, 890442534, 804056259, 3781124030, 2727843637, 3427026056, 957814574, 1472513171, 4071073621, 2189328124, 1195195770, 2892260552, 3881655738, 723065138, 2507371494, 2690670784, 2558624025, 3511635870, 2145180835, 1713513028, 2116692564, 2878378043, 2206763019, 3393603212, 703524551, 3552098411, 1007948840, 2044649127, 3797835452, 487262998, 1994120109, 1004593371, 1446130276, 1312438900, 503974420, 3679013266, 168166924, 1814307912, 3831258296, 1573044895, 1859376061, 4021070915, 2791465668, 2828112185, 2761266481, 937747667, 2339994098, 854058965, 1137232011, 1496790894, 3077402074, 2358086913, 1691735473, 3528347292, 3769215305, 3027004632, 4199962284, 133494003, 636152527, 2942657994, 2390391540, 3920539207, 403179536, 3585784431, 2289596656, 1864705354, 1915629148, 605822008, 4054230615, 3350508659, 1371981463, 602466507, 2094914977, 2624877800, 555687742, 3712699286, 3703422305, 2257292045, 2240449039, 2423288032, 1111375484, 3300242801, 2858837708, 3628615824, 84083462, 32962295, 302911004, 2741068226, 1597322602, 4183250862, 3501832553, 2441512471, 1489093017, 656219450, 3114180135, 954327513, 335083755, 3013122091, 856756514, 3144247762, 1893325225, 2307821063, 2811532339, 3063651117, 572399164, 2458355477, 552200649, 1238290055, 4283782570, 2015897680, 2061492133, 2408352771, 4171342169, 2156497161, 386731290, 3669999461, 837215959, 3326231172, 3093850320, 3275833730, 2962856233, 1999449434, 286199582, 3417354363, 4233385128, 3602627437, 974525996];
  }, "_T0", "_T1", "get$_T1", function() {
    return [1667483301, 2088564868, 2004348569, 2071721613, 4076011277, 1802229437, 1869602481, 3318059348, 808476752, 16843267, 1734856361, 724260477, 4278118169, 3621238114, 2880130534, 1987505306, 3402272581, 2189565853, 3385428288, 2105408135, 4210749205, 1499050731, 1195871945, 4042324747, 2913812972, 3570709351, 2728550397, 2947499498, 2627478463, 2762232823, 1920132246, 3233848155, 3082253762, 4261273884, 2475900334, 640044138, 909536346, 1061125697, 4160222466, 3435955023, 875849820, 2779075060, 3857043764, 4059166984, 1903288979, 3638078323, 825320019, 353708607, 67373068, 3351745874, 589514341, 3284376926, 404238376, 2526427041, 84216335, 2593796021, 117902857, 303178806, 2155879323, 3806519101, 3958099238, 656887401, 2998042573, 1970662047, 151589403, 2206408094, 741103732, 437924910, 454768173, 1852759218, 1515893998, 2694863867, 1381147894, 993752653, 3604395873, 3014884814, 690573947, 3823361342, 791633521, 2223248279, 1397991157, 3520182632, 0, 3991781676, 538984544, 4244431647, 2981198280, 1532737261, 1785386174, 3419114822, 3200149465, 960066123, 1246401758, 1280088276, 1482207464, 3486483786, 3503340395, 4025468202, 2863288293, 4227591446, 1128498885, 1296931543, 859006549, 2240090516, 1162185423, 4193904912, 33686534, 2139094657, 1347461360, 1010595908, 2678007226, 2829601763, 1364304627, 2745392638, 1077969088, 2408514954, 2459058093, 2644320700, 943222856, 4126535940, 3166462943, 3065411521, 3671764853, 555827811, 269492272, 4294960410, 4092853518, 3537026925, 3452797260, 202119188, 320022069, 3974939439, 1600110305, 2543269282, 1145342156, 387395129, 3301217111, 2812761586, 2122251394, 1027439175, 1684326572, 1566423783, 421081643, 1936975509, 1616953504, 2172721560, 1330618065, 3705447295, 572671078, 707417214, 2425371563, 2290617219, 1179028682, 4008625961, 3099093971, 336865340, 3739133817, 1583267042, 185275933, 3688607094, 3772832571, 842163286, 976909390, 168432670, 1229558491, 101059594, 606357612, 1549580516, 3267534685, 3553869166, 2896970735, 1650640038, 2442213800, 2509582756, 3840201527, 2038035083, 3890730290, 3368586051, 926379609, 1835915959, 2374828428, 3587551588, 1313774802, 2846444000, 1819072692, 1448520954, 4109693703, 3941256997, 1701169839, 2054878350, 2930657257, 134746136, 3132780501, 2021191816, 623200879, 774790258, 471611428, 2795919345, 3031724999, 3334903633, 3907570467, 3722289532, 1953818780, 522141217, 1263245021, 3183305180, 2341145990, 2324303749, 1886445712, 1044282434, 3048567236, 1718013098, 1212715224, 50529797, 4143380225, 235805714, 1633796771, 892693087, 1465364217, 3115936208, 2256934801, 3250690392, 488454695, 2661164985, 3789674808, 4177062675, 2560109491, 286335539, 1768542907, 3654920560, 2391672713, 2492740519, 2610638262, 505297954, 2273777042, 3924412704, 3469641545, 1431677695, 673730680, 3755976058, 2357986191, 2711706104, 2307459456, 218962455, 3216991706, 3873888049, 1111655622, 1751699640, 1094812355, 2576951728, 757946999, 252648977, 2964356043, 1414834428, 3149622742, 370551866];
  }, "_T1", "_T2", "get$_T2", function() {
    return [1673962851, 2096661628, 2012125559, 2079755643, 4076801522, 1809235307, 1876865391, 3314635973, 811618352, 16909057, 1741597031, 727088427, 4276558334, 3618988759, 2874009259, 1995217526, 3398387146, 2183110018, 3381215433, 2113570685, 4209972730, 1504897881, 1200539975, 4042984432, 2906778797, 3568527316, 2724199842, 2940594863, 2619588508, 2756966308, 1927583346, 3231407040, 3077948087, 4259388669, 2470293139, 642542118, 913070646, 1065238847, 4160029431, 3431157708, 879254580, 2773611685, 3855693029, 4059629809, 1910674289, 3635114968, 828527409, 355090197, 67636228, 3348452039, 591815971, 3281870531, 405809176, 2520228246, 84545285, 2586817946, 118360327, 304363026, 2149292928, 3806281186, 3956090603, 659450151, 2994720178, 1978310517, 152181513, 2199756419, 743994412, 439627290, 456535323, 1859957358, 1521806938, 2690382752, 1386542674, 997608763, 3602342358, 3011366579, 693271337, 3822927587, 794718511, 2215876484, 1403450707, 3518589137, 0, 3988860141, 541089824, 4242743292, 2977548465, 1538714971, 1792327274, 3415033547, 3194476990, 963791673, 1251270218, 1285084236, 1487988824, 3481619151, 3501943760, 4022676207, 2857362858, 4226619131, 1132905795, 1301993293, 862344499, 2232521861, 1166724933, 4192801017, 33818114, 2147385727, 1352724560, 1014514748, 2670049951, 2823545768, 1369633617, 2740846243, 1082179648, 2399505039, 2453646738, 2636233885, 946882616, 4126213365, 3160661948, 3061301686, 3668932058, 557998881, 270544912, 4293204735, 4093447923, 3535760850, 3447803085, 202904588, 321271059, 3972214764, 1606345055, 2536874647, 1149815876, 388905239, 3297990596, 2807427751, 2130477694, 1031423805, 1690872932, 1572530013, 422718233, 1944491379, 1623236704, 2165938305, 1335808335, 3701702620, 574907938, 710180394, 2419829648, 2282455944, 1183631942, 4006029806, 3094074296, 338181140, 3735517662, 1589437022, 185998603, 3685578459, 3772464096, 845436466, 980700730, 169090570, 1234361161, 101452294, 608726052, 1555620956, 3265224130, 3552407251, 2890133420, 1657054818, 2436475025, 2503058581, 3839047652, 2045938553, 3889509095, 3364570056, 929978679, 1843050349, 2365688973, 3585172693, 1318900302, 2840191145, 1826141292, 1454176854, 4109567988, 3939444202, 1707781989, 2062847610, 2923948462, 135272456, 3127891386, 2029029496, 625635109, 777810478, 473441308, 2790781350, 3027486644, 3331805638, 3905627112, 3718347997, 1961401460, 524165407, 1268178251, 3177307325, 2332919435, 2316273034, 1893765232, 1048330814, 3044132021, 1724688998, 1217452104, 50726147, 4143383030, 236720654, 1640145761, 896163637, 1471084887, 3110719673, 2249691526, 3248052417, 490350365, 2653403550, 3789109473, 4176155640, 2553000856, 287453969, 1775418217, 3651760345, 2382858638, 2486413204, 2603464347, 507257374, 2266337927, 3922272489, 3464972750, 1437269845, 676362280, 3752164063, 2349043596, 2707028129, 2299101321, 219813645, 3211123391, 3872862694, 1115997762, 1758509160, 1099088705, 2569646233, 760903469, 253628687, 2960903088, 1420360788, 3144537787, 371997206];
  }, "_T2", "_T3", "get$_T3", function() {
    return [3332727651, 4169432188, 4003034999, 4136467323, 4279104242, 3602738027, 3736170351, 2438251973, 1615867952, 33751297, 3467208551, 1451043627, 3877240574, 3043153879, 1306962859, 3969545846, 2403715786, 530416258, 2302724553, 4203183485, 4011195130, 3001768281, 2395555655, 4211863792, 1106029997, 3009926356, 1610457762, 1173008303, 599760028, 1408738468, 3835064946, 2606481600, 1975695287, 3776773629, 1034851219, 1282024998, 1817851446, 2118205247, 4110612471, 2203045068, 1750873140, 1374987685, 3509904869, 4178113009, 3801313649, 2876496088, 1649619249, 708777237, 135005188, 2505230279, 1181033251, 2640233411, 807933976, 933336726, 168756485, 800430746, 235472647, 607523346, 463175808, 3745374946, 3441880043, 1315514151, 2144187058, 3936318837, 303761673, 496927619, 1484008492, 875436570, 908925723, 3702681198, 3035519578, 1543217312, 2767606354, 1984772923, 3076642518, 2110698419, 1383803177, 3711886307, 1584475951, 328696964, 2801095507, 3110654417, 0, 3240947181, 1080041504, 3810524412, 2043195825, 3069008731, 3569248874, 2370227147, 1742323390, 1917532473, 2497595978, 2564049996, 2968016984, 2236272591, 3144405200, 3307925487, 1340451498, 3977706491, 2261074755, 2597801293, 1716859699, 294946181, 2328839493, 3910203897, 67502594, 4269899647, 2700103760, 2017737788, 632987551, 1273211048, 2733855057, 1576969123, 2160083008, 92966799, 1068339858, 566009245, 1883781176, 4043634165, 1675607228, 2009183926, 2943736538, 1113792801, 540020752, 3843751935, 4245615603, 3211645650, 2169294285, 403966988, 641012499, 3274697964, 3202441055, 899848087, 2295088196, 775493399, 2472002756, 1441965991, 4236410494, 2051489085, 3366741092, 3135724893, 841685273, 3868554099, 3231735904, 429425025, 2664517455, 2743065820, 1147544098, 1417554474, 1001099408, 193169544, 2362066502, 3341414126, 1809037496, 675025940, 2809781982, 3168951902, 371002123, 2910247899, 3678134496, 1683370546, 1951283770, 337512970, 2463844681, 201983494, 1215046692, 3101973596, 2673722050, 3178157011, 1139780780, 3299238498, 967348625, 832869781, 3543655652, 4069226873, 3576883175, 2336475336, 1851340599, 3669454189, 25988493, 2976175573, 2631028302, 1239460265, 3635702892, 2902087254, 4077384948, 3475368682, 3400492389, 4102978170, 1206496942, 270010376, 1876277946, 4035475576, 1248797989, 1550986798, 941890588, 1475454630, 1942467764, 2538718918, 3408128232, 2709315037, 3902567540, 1042358047, 2531085131, 1641856445, 226921355, 260409994, 3767562352, 2084716094, 1908716981, 3433719398, 2430093384, 100991747, 4144101110, 470945294, 3265487201, 1784624437, 2935576407, 1775286713, 395413126, 2572730817, 975641885, 666476190, 3644383713, 3943954680, 733190296, 573772049, 3535497577, 2842745305, 126455438, 866620564, 766942107, 1008868894, 361924487, 3374377449, 2269761230, 2868860245, 1350051880, 2776293343, 59739276, 1509466529, 159418761, 437718285, 1708834751, 3610371814, 2227585602, 3501746280, 2193834305, 699439513, 1517759789, 504434447, 2076946608, 2835108948, 1842789307, 742004246];
  }, "_T3", "_Tinv0", "get$_Tinv0", function() {
    return [1353184337, 1399144830, 3282310938, 2522752826, 3412831035, 4047871263, 2874735276, 2466505547, 1442459680, 4134368941, 2440481928, 625738485, 4242007375, 3620416197, 2151953702, 2409849525, 1230680542, 1729870373, 2551114309, 3787521629, 41234371, 317738113, 2744600205, 3338261355, 3881799427, 2510066197, 3950669247, 3663286933, 763608788, 3542185048, 694804553, 1154009486, 1787413109, 2021232372, 1799248025, 3715217703, 3058688446, 397248752, 1722556617, 3023752829, 407560035, 2184256229, 1613975959, 1165972322, 3765920945, 2226023355, 480281086, 2485848313, 1483229296, 436028815, 2272059028, 3086515026, 601060267, 3791801202, 1468997603, 715871590, 120122290, 63092015, 2591802758, 2768779219, 4068943920, 2997206819, 3127509762, 1552029421, 723308426, 2461301159, 4042393587, 2715969870, 3455375973, 3586000134, 526529745, 2331944644, 2639474228, 2689987490, 853641733, 1978398372, 971801355, 2867814464, 111112542, 1360031421, 4186579262, 1023860118, 2919579357, 1186850381, 3045938321, 90031217, 1876166148, 4279586912, 620468249, 2548678102, 3426959497, 2006899047, 3175278768, 2290845959, 945494503, 3689859193, 1191869601, 3910091388, 3374220536, 0, 2206629897, 1223502642, 2893025566, 1316117100, 4227796733, 1446544655, 517320253, 658058550, 1691946762, 564550760, 3511966619, 976107044, 2976320012, 266819475, 3533106868, 2660342555, 1338359936, 2720062561, 1766553434, 370807324, 179999714, 3844776128, 1138762300, 488053522, 185403662, 2915535858, 3114841645, 3366526484, 2233069911, 1275557295, 3151862254, 4250959779, 2670068215, 3170202204, 3309004356, 880737115, 1982415755, 3703972811, 1761406390, 1676797112, 3403428311, 277177154, 1076008723, 538035844, 2099530373, 4164795346, 288553390, 1839278535, 1261411869, 4080055004, 3964831245, 3504587127, 1813426987, 2579067049, 4199060497, 577038663, 3297574056, 440397984, 3626794326, 4019204898, 3343796615, 3251714265, 4272081548, 906744984, 3481400742, 685669029, 646887386, 2764025151, 3835509292, 227702864, 2613862250, 1648787028, 3256061430, 3904428176, 1593260334, 4121936770, 3196083615, 2090061929, 2838353263, 3004310991, 999926984, 2809993232, 1852021992, 2075868123, 158869197, 4095236462, 28809964, 2828685187, 1701746150, 2129067946, 147831841, 3873969647, 3650873274, 3459673930, 3557400554, 3598495785, 2947720241, 824393514, 815048134, 3227951669, 935087732, 2798289660, 2966458592, 366520115, 1251476721, 4158319681, 240176511, 804688151, 2379631990, 1303441219, 1414376140, 3741619940, 3820343710, 461924940, 3089050817, 2136040774, 82468509, 1563790337, 1937016826, 776014843, 1511876531, 1389550482, 861278441, 323475053, 2355222426, 2047648055, 2383738969, 2302415851, 3995576782, 902390199, 3991215329, 1018251130, 1507840668, 1064563285, 2043548696, 3208103795, 3939366739, 1537932639, 342834655, 2262516856, 2180231114, 1053059257, 741614648, 1598071746, 1925389590, 203809468, 2336832552, 1100287487, 1895934009, 3736275976, 2632234200, 2428589668, 1636092795, 1890988757, 1952214088, 1113045200];
  }, "_Tinv0", "_Tinv1", "get$_Tinv1", function() {
    return [2817806672, 1698790995, 2752977603, 1579629206, 1806384075, 1167925233, 1492823211, 65227667, 4197458005, 1836494326, 1993115793, 1275262245, 3622129660, 3408578007, 1144333952, 2741155215, 1521606217, 465184103, 250234264, 3237895649, 1966064386, 4031545618, 2537983395, 4191382470, 1603208167, 2626819477, 2054012907, 1498584538, 2210321453, 561273043, 1776306473, 3368652356, 2311222634, 2039411832, 1045993835, 1907959773, 1340194486, 2911432727, 2887829862, 986611124, 1256153880, 823846274, 860985184, 2136171077, 2003087840, 2926295940, 2692873756, 722008468, 1749577816, 4249194265, 1826526343, 4168831671, 3547573027, 38499042, 2401231703, 2874500650, 686535175, 3266653955, 2076542618, 137876389, 2267558130, 2780767154, 1778582202, 2182540636, 483363371, 3027871634, 4060607472, 3798552225, 4107953613, 3188000469, 1647628575, 4272342154, 1395537053, 1442030240, 3783918898, 3958809717, 3968011065, 4016062634, 2675006982, 275692881, 2317434617, 115185213, 88006062, 3185986886, 2371129781, 1573155077, 3557164143, 357589247, 4221049124, 3921532567, 1128303052, 2665047927, 1122545853, 2341013384, 1528424248, 4006115803, 175939911, 256015593, 512030921, 0, 2256537987, 3979031112, 1880170156, 1918528590, 4279172603, 948244310, 3584965918, 959264295, 3641641572, 2791073825, 1415289809, 775300154, 1728711857, 3881276175, 2532226258, 2442861470, 3317727311, 551313826, 1266113129, 437394454, 3130253834, 715178213, 3760340035, 387650077, 218697227, 3347837613, 2830511545, 2837320904, 435246981, 125153100, 3717852859, 1618977789, 637663135, 4117912764, 996558021, 2130402100, 692292470, 3324234716, 4243437160, 4058298467, 3694254026, 2237874704, 580326208, 298222624, 608863613, 1035719416, 855223825, 2703869805, 798891339, 817028339, 1384517100, 3821107152, 380840812, 3111168409, 1217663482, 1693009698, 2365368516, 1072734234, 746411736, 2419270383, 1313441735, 3510163905, 2731183358, 198481974, 2180359887, 3732579624, 2394413606, 3215802276, 2637835492, 2457358349, 3428805275, 1182684258, 328070850, 3101200616, 4147719774, 2948825845, 2153619390, 2479909244, 768962473, 304467891, 2578237499, 2098729127, 1671227502, 3141262203, 2015808777, 408514292, 3080383489, 2588902312, 1855317605, 3875515006, 3485212936, 3893751782, 2615655129, 913263310, 161475284, 2091919830, 2997105071, 591342129, 2493892144, 1721906624, 3159258167, 3397581990, 3499155632, 3634836245, 2550460746, 3672916471, 1355644686, 4136703791, 3595400845, 2968470349, 1303039060, 76997855, 3050413795, 2288667675, 523026872, 1365591679, 3932069124, 898367837, 1955068531, 1091304238, 493335386, 3537605202, 1443948851, 1205234963, 1641519756, 211892090, 351820174, 1007938441, 665439982, 3378624309, 3843875309, 2974251580, 3755121753, 1945261375, 3457423481, 935818175, 3455538154, 2868731739, 1866325780, 3678697606, 4088384129, 3295197502, 874788908, 1084473951, 3273463410, 635616268, 1228679307, 2500722497, 27801969, 3003910366, 3837057180, 3243664528, 2227927905, 3056784752, 1550600308, 1471729730];
  }, "_Tinv1", "_Tinv2", "get$_Tinv2", function() {
    return [4098969767, 1098797925, 387629988, 658151006, 2872822635, 2636116293, 4205620056, 3813380867, 807425530, 1991112301, 3431502198, 49620300, 3847224535, 717608907, 891715652, 1656065955, 2984135002, 3123013403, 3930429454, 4267565504, 801309301, 1283527408, 1183687575, 3547055865, 2399397727, 2450888092, 1841294202, 1385552473, 3201576323, 1951978273, 3762891113, 3381544136, 3262474889, 2398386297, 1486449470, 3106397553, 3787372111, 2297436077, 550069932, 3464344634, 3747813450, 451248689, 1368875059, 1398949247, 1689378935, 1807451310, 2180914336, 150574123, 1215322216, 1167006205, 3734275948, 2069018616, 1940595667, 1265820162, 534992783, 1432758955, 3954313000, 3039757250, 3313932923, 936617224, 674296455, 3206787749, 50510442, 384654466, 3481938716, 2041025204, 133427442, 1766760930, 3664104948, 84334014, 886120290, 2797898494, 775200083, 4087521365, 2315596513, 4137973227, 2198551020, 1614850799, 1901987487, 1857900816, 557775242, 3717610758, 1054715397, 3863824061, 1418835341, 3295741277, 100954068, 1348534037, 2551784699, 3184957417, 1082772547, 3647436702, 3903896898, 2298972299, 434583643, 3363429358, 2090944266, 1115482383, 2230896926, 0, 2148107142, 724715757, 287222896, 1517047410, 251526143, 2232374840, 2923241173, 758523705, 252339417, 1550328230, 1536938324, 908343854, 168604007, 1469255655, 4004827798, 2602278545, 3229634501, 3697386016, 2002413899, 303830554, 2481064634, 2696996138, 574374880, 454171927, 151915277, 2347937223, 3056449960, 504678569, 4049044761, 1974422535, 2582559709, 2141453664, 33005350, 1918680309, 1715782971, 4217058430, 1133213225, 600562886, 3988154620, 3837289457, 836225756, 1665273989, 2534621218, 3330547729, 1250262308, 3151165501, 4188934450, 700935585, 2652719919, 3000824624, 2249059410, 3245854947, 3005967382, 1890163129, 2484206152, 3913753188, 4238918796, 4037024319, 2102843436, 857927568, 1233635150, 953795025, 3398237858, 3566745099, 4121350017, 2057644254, 3084527246, 2906629311, 976020637, 2018512274, 1600822220, 2119459398, 2381758995, 3633375416, 959340279, 3280139695, 1570750080, 3496574099, 3580864813, 634368786, 2898803609, 403744637, 2632478307, 1004239803, 650971512, 1500443672, 2599158199, 1334028442, 2514904430, 4289363686, 3156281551, 368043752, 3887782299, 1867173430, 2682967049, 2955531900, 2754719666, 1059729699, 2781229204, 2721431654, 1316239292, 2197595850, 2430644432, 2805143000, 82922136, 3963746266, 3447656016, 2434215926, 1299615190, 4014165424, 2865517645, 2531581700, 3516851125, 1783372680, 750893087, 1699118929, 1587348714, 2348899637, 2281337716, 201010753, 1739807261, 3683799762, 283718486, 3597472583, 3617229921, 2704767500, 4166618644, 334203196, 2848910887, 1639396809, 484568549, 1199193265, 3533461983, 4065673075, 337148366, 3346251575, 4149471949, 4250885034, 1038029935, 1148749531, 2949284339, 1756970692, 607661108, 2747424576, 488010435, 3803974693, 1009290057, 234832277, 2822336769, 201907891, 3034094820, 1449431233, 3413860740, 852848822, 1816687708, 3100656215];
  }, "_Tinv2", "_Tinv3", "get$_Tinv3", function() {
    return [1364240372, 2119394625, 449029143, 982933031, 1003187115, 535905693, 2896910586, 1267925987, 542505520, 2918608246, 2291234508, 4112862210, 1341970405, 3319253802, 645940277, 3046089570, 3729349297, 627514298, 1167593194, 1575076094, 3271718191, 2165502028, 2376308550, 1808202195, 65494927, 362126482, 3219880557, 2514114898, 3559752638, 1490231668, 1227450848, 2386872521, 1969916354, 4101536142, 2573942360, 668823993, 3199619041, 4028083592, 3378949152, 2108963534, 1662536415, 3850514714, 2539664209, 1648721747, 2984277860, 3146034795, 4263288961, 4187237128, 1884842056, 2400845125, 2491903198, 1387788411, 2871251827, 1927414347, 3814166303, 1714072405, 2986813675, 788775605, 2258271173, 3550808119, 821200680, 598910399, 45771267, 3982262806, 2318081231, 2811409529, 4092654087, 1319232105, 1707996378, 114671109, 3508494900, 3297443494, 882725678, 2728416755, 87220618, 2759191542, 188345475, 1084944224, 1577492337, 3176206446, 1056541217, 2520581853, 3719169342, 1296481766, 2444594516, 1896177092, 74437638, 1627329872, 421854104, 3600279997, 2311865152, 1735892697, 2965193448, 126389129, 3879230233, 2044456648, 2705787516, 2095648578, 4173930116, 0, 159614592, 843640107, 514617361, 1817080410, 4261150478, 257308805, 1025430958, 908540205, 174381327, 1747035740, 2614187099, 607792694, 212952842, 2467293015, 3033700078, 463376795, 2152711616, 1638015196, 1516850039, 471210514, 3792353939, 3236244128, 1011081250, 303896347, 235605257, 4071475083, 767142070, 348694814, 1468340721, 2940995445, 4005289369, 2751291519, 4154402305, 1555887474, 1153776486, 1530167035, 2339776835, 3420243491, 3060333805, 3093557732, 3620396081, 1108378979, 322970263, 2216694214, 2239571018, 3539484091, 2920362745, 3345850665, 491466654, 3706925234, 233591430, 2010178497, 728503987, 2845423984, 301615252, 1193436393, 2831453436, 2686074864, 1457007741, 586125363, 2277985865, 3653357880, 2365498058, 2553678804, 2798617077, 2770919034, 3659959991, 1067761581, 753179962, 1343066744, 1788595295, 1415726718, 4139914125, 2431170776, 777975609, 2197139395, 2680062045, 1769771984, 1873358293, 3484619301, 3359349164, 279411992, 3899548572, 3682319163, 3439949862, 1861490777, 3959535514, 2208864847, 3865407125, 2860443391, 554225596, 4024887317, 3134823399, 1255028335, 3939764639, 701922480, 833598116, 707863359, 3325072549, 901801634, 1949809742, 4238789250, 3769684112, 857069735, 4048197636, 1106762476, 2131644621, 389019281, 1989006925, 1129165039, 3428076970, 3839820950, 2665723345, 1276872810, 3250069292, 1182749029, 2634345054, 22885772, 4201870471, 4214112523, 3009027431, 2454901467, 3912455696, 1829980118, 2592891351, 930745505, 1502483704, 3951639571, 3471714217, 3073755489, 3790464284, 2050797895, 2623135698, 1430221810, 410635796, 1941911495, 1407897079, 1599843069, 3742658365, 2022103876, 3397514159, 3107898472, 942421028, 3261022371, 376619805, 3154912738, 680216892, 4282488077, 963707304, 148812556, 3634160820, 1687208278, 2069988555, 3580933682, 1215585388, 3494008760];
  }, "_Tinv3", "SHA256Digest__K", "get$SHA256Digest__K", function() {
    return [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];
  }, "_K", "_MASK32_HI_BITS", "get$_MASK32_HI_BITS", function() {
    return [4294967295, 2147483647, 1073741823, 536870911, 268435455, 134217727, 67108863, 33554431, 16777215, 8388607, 4194303, 2097151, 1048575, 524287, 262143, 131071, 65535, 32767, 16383, 8191, 4095, 2047, 1023, 511, 255, 127, 63, 31, 15, 7, 3, 1, 0];
  }, "_MASK32_HI_BITS", "JsMirrorSystem__dynamicType", "get$JsMirrorSystem__dynamicType", function() {
    return H.JsTypeMirror$(C.Symbol_dynamic);
  }, "_dynamicType", "JsMirrorSystem__voidType", "get$JsMirrorSystem__voidType", function() {
    return H.JsTypeMirror$(C.Symbol_void);
  }, "_voidType", "currentJsMirrorSystem", "get$currentJsMirrorSystem", function() {
    return new H.JsMirrorSystem(null, new H.JsIsolateMirror(H._globalState().currentContext));
  }, "currentJsMirrorSystem", "mangledNames", "get$mangledNames", function() {
    return new H._LazyMangledInstanceNamesMap(init.mangledNames);
  }, "mangledNames", "reflectiveNames", "get$reflectiveNames", function() {
    return new H._LazyReflectiveNamesMap(init.mangledNames, true, 0, null);
  }, "reflectiveNames", "mangledGlobalNames", "get$mangledGlobalNames", function() {
    return new H._LazyMangledNamesMap(init.mangledGlobalNames);
  }, "mangledGlobalNames", "_AsyncRun_scheduleImmediateClosure", "get$_AsyncRun_scheduleImmediateClosure", function() {
    return P._AsyncRun__initializeScheduleImmediate();
  }, "scheduleImmediateClosure", "Future__nullFuture", "get$Future__nullFuture", function() {
    return P.Future_Future$value(null, null);
  }, "_nullFuture", "_RootZone__rootMap", "get$_RootZone__rootMap", function() {
    return P.HashMap_HashMap(null, null, null, null, null);
  }, "_rootMap", "_toStringVisiting", "get$_toStringVisiting", function() {
    return [];
  }, "_toStringVisiting", "context", "get$context", function() {
    return P._wrapToDart(self);
  }, "context", "_DART_OBJECT_PROPERTY_NAME", "get$_DART_OBJECT_PROPERTY_NAME", function() {
    return H.getIsolateAffinityTag("_$dart_dartObject");
  }, "_DART_OBJECT_PROPERTY_NAME", "_DART_CLOSURE_PROPERTY_NAME", "get$_DART_CLOSURE_PROPERTY_NAME", function() {
    return H.getIsolateAffinityTag("_$dart_dartClosure");
  }, "_DART_CLOSURE_PROPERTY_NAME", "_dartProxyCtor", "get$_dartProxyCtor", function() {
    return function DartObject(o) {
      this.o = o;
    };
  }, "_dartProxyCtor", "HttpClientConnection__fixedLongPollData", "get$HttpClientConnection__fixedLongPollData", function() {
    return C.Utf8Codec_false.encode$1(Q.DsJson_encode(P.LinkedHashMap__makeEmpty(), false));
  }, "_fixedLongPollData", "fixedBlankData", "get$fixedBlankData", function() {
    return C.Utf8Codec_false.encode$1(Q.DsJson_encode(P.LinkedHashMap__makeEmpty(), false));
  }, "fixedBlankData", "DSError_PERMISSION_DENIED", "get$DSError_PERMISSION_DENIED", function() {
    return new O.DSError("permissionDenied", null, null, null, "response");
  }, "PERMISSION_DENIED", "DSError_INVALID_METHOD", "get$DSError_INVALID_METHOD", function() {
    return new O.DSError("invalidMethod", null, null, null, "response");
  }, "INVALID_METHOD", "DSError_INVALID_PATH", "get$DSError_INVALID_PATH", function() {
    return new O.DSError("invalidPath", null, null, null, "response");
  }, "INVALID_PATH", "DSError_INVALID_PATHS", "get$DSError_INVALID_PATHS", function() {
    return new O.DSError("invalidPaths", null, null, null, "response");
  }, "INVALID_PATHS", "DSError_INVALID_VALUE", "get$DSError_INVALID_VALUE", function() {
    return new O.DSError("invalidValue", null, null, null, "response");
  }, "INVALID_VALUE", "DSError_DISCONNECTED", "get$DSError_DISCONNECTED", function() {
    return new O.DSError("disconnected", null, null, null, "request");
  }, "DISCONNECTED", "Path_invalidChar", "get$Path_invalidChar", function() {
    return P.RegExp_RegExp("[\\.\\\\\\?\\*:|\"<>]", true, false);
  }, "invalidChar", "ValueUpdate_TIME_ZONE", "get$ValueUpdate_TIME_ZONE", function() {
    return new O.closure3().call$0();
  }, "TIME_ZONE", "_secp256r1", "get$_secp256r1", function() {
    return new K.closure().call$0();
  }, "_secp256r1", "DSRandom_instance", "get$DSRandom_instance", function() {
    var t1 = new K.DSRandom(null, null);
    t1.DSRandom$1(-1);
    return t1;
  }, "instance", "DefaultDefNodes__defaultDefs", "get$DefaultDefNodes__defaultDefs", function() {
    return P.LinkedHashMap__makeLiteral(["node", P.LinkedHashMap__makeEmpty(), "static", P.LinkedHashMap__makeEmpty(), "getHistory", P.LinkedHashMap__makeLiteral(["$invokable", "read", "$result", "table", "$params", [P.LinkedHashMap__makeLiteral(["name", "Timerange", "type", "string", "editor", "daterange"]), P.LinkedHashMap__makeLiteral(["name", "Interval", "type", Q.buildEnumType(["default", "none", "1Y", "3N", "1N", "1W", "1D", "12H", "6H", "4H", "3H", "2H", "1H", "30M", "15M", "10M", "5M", "1M", "30S", "15S", "10S", "5S", "1S"])]), P.LinkedHashMap__makeLiteral(["name", "Rollup", "type", Q.buildEnumType(["avg", "min", "max", "sum", "first", "last", "count"])])], "$columns", [P.LinkedHashMap__makeLiteral(["name", "ts", "type", "time"]), P.LinkedHashMap__makeLiteral(["name", "value", "type", "dynamic"])]])]);
  }, "_defaultDefs", "DefaultDefNodes_nameMap", "get$DefaultDefNodes_nameMap", function() {
    return new L.closure2().call$0();
  }, "nameMap", "DefaultDefNodes_pathMap", "get$DefaultDefNodes_pathMap", function() {
    return new L.closure4().call$0();
  }, "pathMap", "Configs_global", "get$Configs_global", function() {
    var t1 = new T.Configs(P.LinkedHashMap__makeEmpty());
    t1.load$1(0, C.Map_QoUOt);
    return t1;
  }, "global", "Configs_defaultConfig", "get$Configs_defaultConfig", function() {
    return T.ConfigSetting$fromMap("", C.Map_empty);
  }, "defaultConfig", "Base64__decodeTable", "get$Base64__decodeTable", function() {
    return new Q.closure1().call$0();
  }, "_decodeTable", "DsJson_instance", "get$DsJson_instance", function() {
    return new Q.DsJsonCodecImpl(P.JsonEncoder$(Q.DsJsonCodecImpl__safeEncoder$closure()), P.JsonDecoder$(null), null);
  }, "instance", "DsTimer__callbacks", "get$DsTimer__callbacks", function() {
    return [];
  }, "_callbacks", "DsTimer__pendingTimer", "get$DsTimer__pendingTimer", function() {
    var t1, t2;
    t1 = Q.TimerFunctions;
    t2 = new P.LinkedList(0, 0, null, null);
    t2.$builtinTypeInfo = [t1];
    t2.LinkedList$0(t1);
    return t2;
  }, "_pendingTimer", "DsTimer__pendingTimerMap", "get$DsTimer__pendingTimerMap", function() {
    return P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, Q.TimerFunctions);
  }, "_pendingTimerMap", "DsTimer__functionsMap", "get$DsTimer__functionsMap", function() {
    return P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, Q.TimerFunctions);
  }, "_functionsMap", "Interval_ONE_MILLISECOND", "get$Interval_ONE_MILLISECOND", function() {
    return Q.Interval$forMilliseconds(1);
  }, "ONE_MILLISECOND", "Interval_TWO_MILLISECONDS", "get$Interval_TWO_MILLISECONDS", function() {
    return Q.Interval$forMilliseconds(2);
  }, "TWO_MILLISECONDS", "Interval_FOUR_MILLISECONDS", "get$Interval_FOUR_MILLISECONDS", function() {
    return Q.Interval$forMilliseconds(4);
  }, "FOUR_MILLISECONDS", "Interval_EIGHT_MILLISECONDS", "get$Interval_EIGHT_MILLISECONDS", function() {
    return Q.Interval$forMilliseconds(8);
  }, "EIGHT_MILLISECONDS", "Interval_SIXTEEN_MILLISECONDS", "get$Interval_SIXTEEN_MILLISECONDS", function() {
    return Q.Interval$forMilliseconds(16);
  }, "SIXTEEN_MILLISECONDS", "Interval_THIRTY_MILLISECONDS", "get$Interval_THIRTY_MILLISECONDS", function() {
    return Q.Interval$forMilliseconds(30);
  }, "THIRTY_MILLISECONDS", "Interval_FIFTY_MILLISECONDS", "get$Interval_FIFTY_MILLISECONDS", function() {
    return Q.Interval$forMilliseconds(50);
  }, "FIFTY_MILLISECONDS", "Interval_ONE_HUNDRED_MILLISECONDS", "get$Interval_ONE_HUNDRED_MILLISECONDS", function() {
    return Q.Interval$forMilliseconds(100);
  }, "ONE_HUNDRED_MILLISECONDS", "Interval_TWO_HUNDRED_MILLISECONDS", "get$Interval_TWO_HUNDRED_MILLISECONDS", function() {
    return Q.Interval$forMilliseconds(200);
  }, "TWO_HUNDRED_MILLISECONDS", "Interval_THREE_HUNDRED_MILLISECONDS", "get$Interval_THREE_HUNDRED_MILLISECONDS", function() {
    return Q.Interval$forMilliseconds(300);
  }, "THREE_HUNDRED_MILLISECONDS", "Interval_QUARTER_SECOND", "get$Interval_QUARTER_SECOND", function() {
    return Q.Interval$forMilliseconds(250);
  }, "QUARTER_SECOND", "Interval_HALF_SECOND", "get$Interval_HALF_SECOND", function() {
    return Q.Interval$forMilliseconds(500);
  }, "HALF_SECOND", "Interval_ONE_SECOND", "get$Interval_ONE_SECOND", function() {
    return Q.Interval$forSeconds(1);
  }, "ONE_SECOND", "Interval_TWO_SECONDS", "get$Interval_TWO_SECONDS", function() {
    return Q.Interval$forSeconds(2);
  }, "TWO_SECONDS", "Interval_THREE_SECONDS", "get$Interval_THREE_SECONDS", function() {
    return Q.Interval$forSeconds(3);
  }, "THREE_SECONDS", "Interval_FOUR_SECONDS", "get$Interval_FOUR_SECONDS", function() {
    return Q.Interval$forSeconds(4);
  }, "FOUR_SECONDS", "Interval_FIVE_SECONDS", "get$Interval_FIVE_SECONDS", function() {
    return Q.Interval$forSeconds(5);
  }, "FIVE_SECONDS", "Interval_ONE_MINUTE", "get$Interval_ONE_MINUTE", function() {
    return new Q.Interval(P.Duration$(0, 0, 0, 0, 1, 0));
  }, "ONE_MINUTE", "Logger__loggers", "get$Logger__loggers", function() {
    return P.LinkedHashMap_LinkedHashMap$_empty(P.String, N.Logger);
  }, "_loggers", "_process", "get$_process", function() {
    return J.$index$asx($.get$context(), "process");
  }, "_process", "_child", "get$_child", function() {
    return K.require("child_process");
  }, "_child", "_fs", "get$_fs", function() {
    return K.require("fs");
  }, "_fs", "_http", "get$_http", function() {
    return K.require("http");
  }, "_http", "_https", "get$_https", function() {
    return K.require("https");
  }, "_https", "_ws", "get$_ws", function() {
    return K.require("ws");
  }, "_ws"]);
  Isolate = Isolate.$finishIsolateConstructor(Isolate);
  $ = new Isolate();
  init.metadata = [C.TypeVariable_oyn, C.TypeVariable_IF2, "other", "invocation", "object", "sender", "e", "x", "index", "closure", "isolate", "numberOfArguments", "arg1", "arg2", "arg3", "arg4", "parameter", "error", "stackTrace", "result", "each", "key", "value", "a", "i", "w", "j", "c", "n", "p", "k", "preCompInfo", "y", "reflectee", "computation", null, "duration", false, "futures", "eagerError", "cleanUp", "input", "f", "self", "parent", "zone", "arg", "callback", "line", "specification", "zoneValues", "_", "data", "theError", "theStackTrace", "keepGoing", "Placeholder for type_variable(_Completer#T)", "onError", "test", "action", "timeLimit", "onTimeout", "ignored", "v", "s", "element", "st", "event", "entry", 0, "encodedComponent", "byteString", "captureThis", "arguments", "o", "length", "buffer", "offsetInBytes", C.Endianness_false, "byteOffset", "endian", "link", true, "INFO", "args", "prefix", "isRequester", "command", "isResponder", "defaultNodes", "profiles", "provider", "enableHttp", "encodePrettyJson", "autoInitialize", "strictOptions", "exitOnFailure", "loadNodesJson", "defaultLogLevel", "nodeProvider", "url", "clientLink", "saltL", "saltS", "_conn", "dsIdPrefix", "privateKey", "path", "argp", "optionsHandler", "brokers", 1, "cacheLevel", "m", C.C_Unspecified, "it", "update", "err", "response", "merged", "request", "salt", "saltId", "reconnect", "name", "idx", "channel", "connection", "authFailed", "b", "type", "msg", "detail", "phase", "conn", "connected", "basePath", 4, "obj", "defaultVal", "adapter", "enableTimeout", "defaultValue", "list", "columns", "rows", 0 / 0, "ts", "meta", "status", "count", "sum", "min", "max", "oldUpdate", "newUpdate", "getData", "val", "processor", "node", "str", "base", "force", "responder", "t", C.C__Override, "ecPrivateKey", "ecPublicKey", "remotePath", "requester", "rid", "updater", "updates", "rawColumns", "streamStatus", 3, "params", "maxPermission", "changes", "cache", "defName", "listUpdate", "futureValue", "handleData", "handleDone", "handleError", "resumeSignal", "controller", "level", "req", "profile", "sid", "_permitted", "inputs", "withChildren", "resp", "cachelevel", "parentNode", "id", "open", "stat", "stack", "map", "ms", "seconds", "minutes", "hours", "interval", "times", "values", "types", "subscription", "record", "timer", "res", "buf", "flags"];
  init.types = [P.Object, {func: 1, ret: P.bool, args: [,]}, {func: 1, ret: P.$int}, {func: 1, ret: P.String}, {func: 1, args: [P.Invocation]}, {func: 1}, {func: 1, void: true, args: [, P.StackTrace]}, {func: 1, void: true}, {func: 1, args: [,]}, {func: 1, ret: P.$int, args: [P.$int]}, {func: 1, args: [P.String,,]}, {func: 1, args: [, P.StackTrace]}, {func: 1, args: [, P.String]}, {func: 1, args: [P.String]}, {func: 1, ret: [P.List, P.String], args: [[P.List, P.$int]]}, {func: 1, args: [,,]}, {func: 1, ret: Z.BigIntegerDartvm, args: [Z.BigIntegerDartvm]}, {func: 1, args: [,,,,,,]}, {func: 1, ret: Z.BigIntegerV8, args: [Z.BigIntegerV8]}, {func: 1, args: [P.$int]}, {func: 1, void: true, args: [,]}, {func: 1, args: [P.Symbol0, P.Mirror]}, {func: 1, args: [P.Symbol0,,]}, {func: 1, ret: P.TypeMirror, args: [P.$int]}, {func: 1, ret: P.String, args: [P.$int]}, {func: 1, args: [{func: 1, void: true}]}, {func: 1, void: true, args: [P.Object], opt: [P.StackTrace]}, {func: 1, ret: P.Future}, {func: 1, void: true, args: [,,]}, {func: 1, args: [P.Object]}, {func: 1, args: [P.bool]}, {func: 1, ret: P.bool}, {func: 1, void: true, opt: [,]}, {func: 1, ret: P.Future, args: [P.Function], named: {test: {func: 1, ret: P.bool, args: [,]}}}, {func: 1, void: true, args: [,], opt: [P.StackTrace]}, {func: 1, ret: P.Future, args: [P.Duration], named: {onTimeout: {func: 1}}}, {func: 1, args: [,], opt: [,]}, {func: 1, args: [P.Zone,, P.StackTrace]}, {func: 1, args: [P.Zone, {func: 1}]}, {func: 1, args: [P.Zone, {func: 1, args: [,]},,]}, {func: 1, args: [P.Zone, {func: 1, args: [,,]},,,]}, {func: 1, ret: {func: 1}, args: [P.Zone, {func: 1}]}, {func: 1, ret: {func: 1, args: [,]}, args: [P.Zone, {func: 1, args: [,]}]}, {func: 1, ret: {func: 1, args: [,,]}, args: [P.Zone, {func: 1, args: [,,]}]}, {func: 1, ret: P.AsyncError, args: [P.Zone, P.Object, P.StackTrace]}, {func: 1, void: true, args: [P.Zone, {func: 1}]}, {func: 1, ret: P.Timer, args: [P.Zone, P.Duration, {func: 1, void: true}]}, {func: 1, ret: P.Timer, args: [P.Zone, P.Duration, {func: 1, void: true, args: [P.Timer]}]}, {func: 1, void: true, args: [P.Zone, P.String]}, {func: 1, ret: P.Zone, args: [P.Zone, P.ZoneSpecification, P.Map]}, {func: 1, ret: P.Zone, named: {specification: P.ZoneSpecification, zoneValues: P.Map}}, {func: 1, args: [{func: 1}]}, {func: 1, args: [{func: 1, args: [,]},,]}, {func: 1, args: [{func: 1, args: [,,]},,,]}, {func: 1, ret: {func: 1}, args: [{func: 1}]}, {func: 1, ret: {func: 1, args: [,]}, args: [{func: 1, args: [,]}]}, {func: 1, ret: {func: 1, args: [,,]}, args: [{func: 1, args: [,,]}]}, {func: 1, ret: P.AsyncError, args: [P.Object, P.StackTrace]}, {func: 1, void: true, args: [{func: 1, void: true}]}, {func: 1, ret: P.Timer, args: [P.Duration, {func: 1, void: true}]}, {func: 1, ret: P.Timer, args: [P.Duration, {func: 1, void: true, args: [P.Timer]}]}, {func: 1, void: true, args: [P.String]}, {func: 1, ret: P.$int, args: [, P.$int]}, {func: 1, void: true, args: [P.$int, P.$int]}, {func: 1, ret: P.Type}, {func: 1, ret: P.$int, args: [,,]}, {func: 1, void: true, args: [P.String], opt: [,]}, {func: 1, ret: P.$int, args: [P.$int, P.$int]}, {func: 1, ret: P.num, args: [P.$int], opt: [P.Endianness]}, {func: 1, ret: P.$int, args: [P.$int], opt: [P.Endianness]}, {func: 1, void: true, args: [P.$int, P.num], opt: [P.Endianness]}, {func: 1, void: true, args: [P.$int, P.$int], opt: [P.Endianness]}, {func: 1, ret: P.bool, named: {argp: S.ArgParser, optionsHandler: {func: 1, void: true, args: [G.ArgResults], typedef: X.OptionResultsHandler}}}, {func: 1, ret: [P.Future, P.String], args: [[P.Stream, P.String]]}, {func: 1, ret: [P.Stream, O.ValueUpdate], args: [P.String], named: {cacheLevel: P.$int}}, {func: 1, ret: P.Object, args: [P.String]}, {func: 1, ret: L.Requester}, {func: 1, ret: [P.Future, L.Requester]}, {func: 1, ret: T.LocalNode, args: [P.String]}, {func: 1, ret: T.LocalNode, args: [P.String, P.Map]}, {func: 1, void: true, args: [P.String,,]}, {func: 1, ret: T.LocalNode}, {func: 1, args: [P.String], opt: [,]}, {func: 1, args: [O.ValueUpdate]}, {func: 1, ret: O.ConnectionChannel}, {func: 1, ret: [P.Future, O.ConnectionChannel]}, {func: 1, ret: [P.Future, P.bool]}, {func: 1, void: true, args: [P.Object]}, {func: 1, void: true, args: [Z.HttpClientResponse]}, {func: 1, args: [[P.List, P.$int]]}, {func: 1, args: [Z.HttpClientRequest]}, {func: 1, ret: K.ECDH}, {func: 1, args: [P.String], opt: [P.$int]}, {func: 1, opt: [P.bool]}, {func: 1, ret: P.Map}, {func: 1, ret: [P.Stream, P.List]}, {func: 1, void: true, args: [{func: 1, ret: P.List}]}, {func: 1, void: true, args: [P.bool]}, {func: 1, args: [O.ConnectionChannel]}, {func: 1, void: true, args: [O.ConnectionChannel]}, {func: 1, void: true, args: [P.Map]}, {func: 1, ret: P.List}, {func: 1, void: true, args: [P.String, O.Node0]}, {func: 1, ret: P.String, args: [,]}, {func: 1, ret: O.Node0, args: [P.String]}, {func: 1, void: true, args: [{func: 1, void: true, args: [,,]}]}, {func: 1, args: [P.String, O.Node0]}, {func: 1, void: true, args: [P.String], opt: [P.bool]}, {func: 1, void: true, args: [P.List]}, {func: 1, ret: P.$int, args: [T.Responder]}, {func: 1, void: true, args: [P.Timer]}, {func: 1, void: true, args: [P.String, P.Object]}, {func: 1, ret: [P.Future, K.ECDHImpl], args: [P.String]}, {func: 1, args: [P.String, P.Map]}, {func: 1, args: [P.String, P.Object]}, {func: 1, ret: L.RemoteNode, args: [P.String]}, {func: 1, ret: O.Node0, args: [P.String, P.String]}, {func: 1, ret: L.RemoteNode, args: [L.RemoteNode, P.String, P.Map]}, {func: 1, ret: [P.Stream, L.RequesterListUpdate], args: [L.Requester]}, {func: 1, ret: L.ListController, args: [L.Requester]}, {func: 1, void: true, args: [L.Requester, {func: 1, args: [,]}, P.$int]}, {func: 1, void: true, args: [L.Requester, {func: 1, args: [,]}]}, {func: 1, ret: [P.Stream, L.RequesterInvokeUpdate], args: [P.Map, L.Requester], opt: [P.$int]}, {func: 1, void: true, args: [P.Map, L.RemoteNodeCache]}, {func: 1, void: true, opt: [O.DSError]}, {func: 1, ret: [P.List, P.List]}, {func: 1, void: true, args: [L.RequesterListUpdate]}, {func: 1, void: true, args: [P.String, P.List, P.List], opt: [O.DSError]}, {func: 1, args: [L.RequesterListUpdate]}, {func: 1, ret: [P.Stream, L.RequesterListUpdate]}, {func: 1, void: true, args: [{func: 1, args: [,]}]}, {func: 1, ret: [P.Future, L.RequesterUpdate]}, {func: 1, ret: P.Future, opt: [,]}, {func: 1, void: true, args: [{func: 1, void: true, args: [,]}]}, {func: 1, void: true, args: [P.Function]}, {func: 1, void: true, opt: [P.Future]}, {func: 1, void: true, args: [P.String, P.List, P.List, O.DSError]}, {func: 1, void: true, args: [L.ReqSubscribeController, P.$int]}, {func: 1, void: true, args: [L.ReqSubscribeController]}, {func: 1, args: [P.String, L.ReqSubscribeController]}, {func: 1, void: true, args: [{func: 1, args: [,]}, P.$int]}, {func: 1, void: true, args: [O.ValueUpdate]}, {func: 1, ret: L.Request, args: [P.Map, L.RequestUpdater]}, {func: 1, ret: L.ReqSubscribeListener, args: [P.String, {func: 1, args: [,]}], opt: [P.$int]}, {func: 1, void: true, args: [P.String, {func: 1, args: [,]}]}, {func: 1, ret: [P.Stream, L.RequesterListUpdate], args: [P.String]}, {func: 1, ret: [P.Stream, L.RequesterInvokeUpdate], args: [P.String, P.Map], opt: [P.$int]}, {func: 1, ret: [P.Future, L.RequesterUpdate], args: [P.String, P.Object], opt: [P.$int]}, {func: 1, ret: [P.Future, L.RequesterUpdate], args: [P.String]}, {func: 1, void: true, args: [L.Request]}, {func: 1, ret: O.DSError, args: [P.Object, T.LocalNodeImpl, T.Responder]}, {func: 1, ret: O.DSError, args: [T.LocalNodeImpl, T.Responder]}, {func: 1, void: true, args: [P.Map, T.NodeProviderImpl]}, {func: 1, ret: P.Map, args: [P.bool]}, {func: 1, ret: T.Response, args: [P.String, P.Object, T.Responder, T.Response]}, {func: 1, ret: T.Response, args: [P.String, T.Responder, T.Response]}, {func: 1, ret: T.Response, args: [P.Object, T.Responder, T.Response], opt: [P.$int]}, {func: 1, ret: P.$int, args: [P.String, T.Responder]}, {func: 1, ret: [Q.BroadcastStreamController, P.String]}, {func: 1, ret: [P.Stream, P.String]}, {func: 1, ret: T.RespSubscribeListener, args: [{func: 1, args: [,]}], opt: [P.$int]}, {func: 1, ret: O.ValueUpdate}, {func: 1, void: true, args: [P.Object], named: {force: P.bool}}, {func: 1, ret: T.InvokeResponse, args: [P.Map, T.Responder, T.InvokeResponse, O.Node0], opt: [P.$int]}, {func: 1, ret: T.Response, args: [T.Response]}, {func: 1, void: true, args: [P.$int], named: {error: O.DSError, response: T.Response}}, {func: 1, void: true, args: [T.Response, P.List], named: {columns: [P.List, O.TableColumn], streamStatus: P.String}}, {func: 1, void: true, args: [P.List], named: {columns: P.List, streamStatus: P.String}}, {func: 1, args: [, T.LocalNode]}, {func: 1, void: true, args: [P.String, T.LocalNode, P.$int, P.$int]}, {func: 1, void: true, args: [P.$int]}, {func: 1, void: true, args: [T.RespSubscribeController]}, {func: 1, void: true, args: [P.List], opt: [P.String]}, {func: 1, void: true, opt: [T.InvokeResponse]}, {func: 1, ret: T.SimpleNode}, {func: 1, void: true, opt: [P.Map, P.Map]}, {func: 1, void: true, args: [P.Map], opt: [T.NodeProviderImpl]}, {func: 1, ret: T.InvokeResponse, args: [P.Map, T.Responder, T.InvokeResponse, T.LocalNode], opt: [P.$int]}, {func: 1, args: [P.Map]}, {func: 1, ret: T.SimpleNode, args: [P.String, P.Map, T.SimpleNodeProvider]}, {func: 1, ret: T.SimpleNode, args: [P.String], opt: [P.Map]}, {func: 1, args: [, O.Node0]}, {func: 1, args: [P.$int, Q.BinaryData]}, {func: 1, args: [P.Function]}, {func: 1, ret: P.Future, args: [,]}, {func: 1, ret: P.$int, args: [,]}, {func: 1, args: [P.$int,,]}, {func: 1, ret: [P.Future, P.$int]}, {func: 1, ret: P.String, args: [P.String]}, {func: 1, args: [P.String, [P.List, P.String]]}, {func: 1, ret: E.ECPoint, args: [E.ECPoint, Z.BigInteger, S.PreCompInfo]}, {func: 1, ret: P.InstanceMirror, args: [P.Object]}, {func: 1, ret: [P.Future, P.List], args: [[P.Iterable, P.Future]], named: {cleanUp: {func: 1, void: true, args: [,]}, eagerError: P.bool}}, {func: 1, ret: P.Future, args: [P.Iterable, {func: 1, args: [,]}]}, {func: 1, ret: P.Future, args: [{func: 1}]}, {func: 1, void: true, args: [P.Zone, P.ZoneDelegate, P.Zone,, P.StackTrace]}, {func: 1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1}]}, {func: 1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, args: [,]},,]}, {func: 1, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, args: [,,]},,,]}, {func: 1, ret: {func: 1}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1}]}, {func: 1, ret: {func: 1, args: [,]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, args: [,]}]}, {func: 1, ret: {func: 1, args: [,,]}, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1, args: [,,]}]}, {func: 1, ret: P.AsyncError, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Object, P.StackTrace]}, {func: 1, void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, {func: 1}]}, {func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, void: true}]}, {func: 1, ret: P.Timer, args: [P.Zone, P.ZoneDelegate, P.Zone, P.Duration, {func: 1, void: true, args: [P.Timer]}]}, {func: 1, void: true, args: [P.Zone, P.ZoneDelegate, P.Zone, P.String]}, {func: 1, ret: P.Zone, args: [P.Zone, P.ZoneDelegate, P.Zone, P.ZoneSpecification, P.Map]}, {func: 1, ret: P.bool, args: [,,]}, {func: 1, ret: P.Object, args: [,]}, {func: 1, ret: P.$int, args: [P.Comparable, P.Comparable]}, {func: 1, ret: P.bool, args: [P.Object, P.Object]}, {func: 1, ret: P.$int, args: [P.Object]}, {func: 1, ret: P.ByteData, args: [P.$int]}, {func: 1, ret: P.ByteData, args: [P.ByteBuffer], opt: [P.$int, P.$int]}, {func: 1, args: [[P.List, P.String], P.String], named: {autoInitialize: P.bool, command: P.String, defaultLogLevel: P.String, defaultNodes: P.Map, enableHttp: P.bool, encodePrettyJson: P.bool, exitOnFailure: P.bool, isRequester: P.bool, isResponder: P.bool, loadNodesJson: P.bool, nodeProvider: T.NodeProvider, profiles: P.Map, provider: T.NodeProvider, strictOptions: P.bool}}, {func: 1, args: [P.String, O.ClientLink, P.String, P.String]}, {func: 1, args: [P.String, P.String, K.PrivateKey], named: {enableHttp: P.bool, isRequester: P.bool, isResponder: P.bool, nodeProvider: T.NodeProvider}}, {func: 1, ret: [P.Future, K.PrivateKey], args: [P.String]}, {func: 1, ret: P.List, args: [P.List, P.List]}, {func: 1, ret: O.Connection}, {func: 1, ret: O.ServerConnection}, {func: 1, ret: O.ClientConnection}, {func: 1, ret: O.Link}, {func: 1, ret: O.ServerLink}, {func: 1, ret: O.ClientLink}, {func: 1, ret: O.ServerLinkManager}, {func: 1, ret: O.StreamStatus}, {func: 1, ret: O.ErrorPhase}, {func: 1, args: [P.String], named: {detail: P.String, msg: P.String, path: P.String, phase: P.String}}, {func: 1, args: [O.Connection], opt: [P.bool]}, {func: 1, ret: O.ConnectionHandler}, {func: 1, ret: O.Path, args: [P.Object], opt: [P.String]}, {func: 1, ret: O.Permission}, {func: 1, ret: P.$int, args: [P.Object], opt: [P.$int]}, {func: 1, ret: O.PermissionList}, {func: 1, ret: O.StreamConnectionAdapter}, {func: 1, args: [O.StreamConnectionAdapter], named: {clientLink: O.ClientLink, enableTimeout: P.bool}}, {func: 1, args: [P.String, P.String], opt: [P.Object]}, {func: 1, ret: P.List, args: [P.List]}, {func: 1, ret: [P.List, O.TableColumn], args: [P.List]}, {func: 1, args: [[P.List, O.TableColumn], [P.List, P.List]]}, {func: 1, args: [,], named: {count: P.$int, max: P.num, meta: P.Map, min: P.num, status: P.String, sum: P.num, ts: P.String}}, {func: 1, args: [O.ValueUpdate, O.ValueUpdate]}, {func: 1, args: [Q.ECPrivateKey], opt: [Q.ECPublicKey]}, {func: 1, ret: [P.Future, K.PrivateKey]}, {func: 1, ret: K.PrivateKey}, {func: 1, ret: K.PrivateKey, args: [P.String]}, {func: 1, ret: L.DefaultDefNodes}, {func: 1, args: [L.Requester, P.$int, L.RequestUpdater, P.Map]}, {func: 1, args: [P.List, P.List, [P.List, O.TableColumn], P.String], opt: [O.DSError]}, {func: 1, ret: [P.List, O.TableColumn], args: [L.RemoteNode]}, {func: 1, args: [L.RemoteNode, L.Requester, P.Map], opt: [P.$int]}, {func: 1, args: [L.RemoteNode, [P.List, P.String], P.String]}, {func: 1, args: [L.RemoteNode, L.Requester, {func: 1, void: true, args: [,]}]}, {func: 1, args: [L.RemoteNode, L.Requester]}, {func: 1, args: [L.Requester, P.String]}, {func: 1, args: [L.Requester, P.String, P.Object], opt: [P.$int]}, {func: 1, args: [L.Requester, P.String, P.Function]}, {func: 1, args: [L.Requester, P.$int]}, {func: 1, ret: L.RequestUpdater}, {func: 1, opt: [L.RemoteNodeCache]}, {func: 1, args: [P.String, P.String], named: {defaultValue: P.Object}}, {func: 1, ret: T.Configs}, {func: 1, ret: T.ConfigSetting, args: [P.String, O.Node0]}, {func: 1, ret: T.NodeProviderImpl}, {func: 1, ret: T.IPermissionManager}, {func: 1, ret: T.DummyPermissionManager}, {func: 1, ret: T.NodeProvider}, {func: 1, args: [T.NodeProvider]}, {func: 1, args: [T.Responder, P.$int]}, {func: 1, args: [T.Responder, P.$int, T.LocalNode]}, {func: 1, args: [T.LocalNode, P.Function]}, {func: 1, args: [T.SubscribeResponse, T.LocalNode, P.$int, P.bool, P.$int]}, {func: 1, opt: [P.List, P.List]}, {func: 1, opt: [P.List]}, {func: 1, ret: T.SerializableNodeProvider}, {func: 1, ret: T.MutableNodeProvider}, {func: 1, opt: [P.Map, P.Map]}, {func: 1, args: [[P.List, P.String]]}, {func: 1, ret: Q.DSLinkJSON, args: [[P.Map, P.String,,]]}, {func: 1, args: [P.Duration]}, {func: 1, ret: Q.Scheduler}, {func: 1, ret: P.Timer}, {func: 1, ret: P.Timer, args: [, {func: 1}]}, {func: 1, ret: P.Future, args: [P.$int, {func: 1}]}, {func: 1, ret: P.Future, args: [P.$int, Q.Interval, {func: 1}]}, {func: 1, void: true, args: [{func: 1}]}, {func: 1, ret: P.Future, args: [P.Duration, {func: 1}]}, {func: 1, ret: P.Timer, args: [P.Duration, {func: 1}]}, {func: 1, ret: P.String, args: [[P.Iterable, P.String]]}, {func: 1, ret: [P.List, [P.Map, P.String,,]], args: [[P.Map, P.String, P.String]]}, P.Function, H.TearOffClosure, P._Future, [P._Future, 56], P.TypedData, X.HttpClientLink, T.NodeProvider, K.PrivateKey, P.String, G.File, [P.List, P.String], P.bool, P.Map, P.Completer, O.PassiveChannel, [P.Completer, O.ConnectionChannel], [P.Completer, P.bool], O.ClientLink, [P.List, P.$int], P.$int, O.ClientConnection, [P.Completer, L.Requester], L.Requester, T.Responder, K.ECDH, T.WebSocketConnection, X.HttpClientConnection, [P.Map, P.String, P.$int], O.Connection, O.Link, O.DSError, [P.StreamController, P.List], [P.List, P.Function], O.ConnectionChannel, P.StreamSubscription, P.List, O.Node0, [P.Map, P.String, P.Object], [P.Map, P.String, O.Node0], P.RegExp, O.StreamConnectionAdapter, P.Timer, O.ServerConnection, [P.List, O.TableColumn], [P.List, P.List], null, P.num, O.Unspecified, K.PublicKey, Q.ECPrivateKey, Q.ECPublicKey, [P.Map, P.String, L.RemoteNode], L.ListController, L.ReqSubscribeController, L.RemoteNode, L.RequestUpdater, L.RequesterUpdate, [P.StreamController, L.RequesterInvokeUpdate], [P.Stream, L.RequesterInvokeUpdate], L.Request, [Q.BroadcastStreamController, L.RequesterListUpdate], [P.LinkedHashSet, P.String], L.ListDefListener, [P.Completer, L.RequesterUpdate], L.SubscribeRequest, [P.Map, P.String, L.ReqSubscribeController], [P.Map, P.$int, L.ReqSubscribeController], [P.HashSet, P.String], [P.Map, P.Function, P.$int], O.ValueUpdate, [P.Map, P.$int, L.Request], L.RemoteNodeCache, O.ConnectionHandler, [P.Map, P.String, T.ConfigSetting], T.Configs, T.ConfigSetting, T.LocalNode, [Q.BroadcastStreamController, P.String], T.LocalNodeImpl, T.IPermissionManager, [P.Map, P.$int, T.Response], T.SubscribeResponse, {func: 1, void: true, args: [,], typedef: T.OnInvokeClosed}, T.Response, [P.Map, P.String, T.RespSubscribeController], [P.Map, P.$int, T.RespSubscribeController], [P.LinkedHashSet, T.RespSubscribeController], T.RespSubscribeListener, [P.ListQueue, O.ValueUpdate], T.InvokeResponse, [P.Map, P.String, T.LocalNode], [P.Map, P.String, {func: 1, ret: T.SimpleNode, args: [P.String], typedef: T._NodeFactory}], T.NodeProviderImpl, T.MutableNodeProvider, T.SerializableNodeProvider, T.SimpleNode, [P.Map, P.String,,], [P.Map, P.String, [P.Map, P.String,,]], P.Duration, Q.Interval, {func: 1, void: true, args: [G.ArgResults]}, {func: 1, ret: T.SimpleNode, args: [P.String]}];
  function convertToFastObject(properties) {
    function MyClass() {
    }
    MyClass.prototype = properties;
    new MyClass();
    return properties;
  }
  function convertToSlowObject(properties) {
    properties.__MAGIC_SLOW_PROPERTY = 1;
    delete properties.__MAGIC_SLOW_PROPERTY;
    return properties;
  }
  A = convertToFastObject(A);
  B = convertToFastObject(B);
  C = convertToFastObject(C);
  D = convertToFastObject(D);
  E = convertToFastObject(E);
  F = convertToFastObject(F);
  G = convertToFastObject(G);
  H = convertToFastObject(H);
  J = convertToFastObject(J);
  K = convertToFastObject(K);
  L = convertToFastObject(L);
  M = convertToFastObject(M);
  N = convertToFastObject(N);
  O = convertToFastObject(O);
  P = convertToFastObject(P);
  Q = convertToFastObject(Q);
  R = convertToFastObject(R);
  S = convertToFastObject(S);
  T = convertToFastObject(T);
  U = convertToFastObject(U);
  V = convertToFastObject(V);
  W = convertToFastObject(W);
  X = convertToFastObject(X);
  Y = convertToFastObject(Y);
  Z = convertToFastObject(Z);
  function init() {
    Isolate.$isolateProperties = Object.create(null);
    init.allClasses = Object.create(null);
    init.getTypeFromName = function(name) {
      return init.allClasses[name];
    };
    init.interceptorsByTag = Object.create(null);
    init.leafTags = Object.create(null);
    init.finishedClasses = Object.create(null);
    Isolate.$lazy = function(fieldName, getterName, lazyValue, staticName, prototype) {
      if (!init.lazies)
        init.lazies = Object.create(null);
      init.lazies[fieldName] = getterName;
      prototype = prototype || Isolate.$isolateProperties;
      var sentinelUndefined = {};
      var sentinelInProgress = {};
      prototype[fieldName] = sentinelUndefined;
      prototype[getterName] = function() {
        var result = this[fieldName];
        try {
          if (result === sentinelUndefined) {
            this[fieldName] = sentinelInProgress;
            try {
              result = this[fieldName] = lazyValue();
            } finally {
              if (result === sentinelUndefined)
                this[fieldName] = null;
            }
          } else
            if (result === sentinelInProgress)
              H.throwCyclicInit(staticName || fieldName);
          return result;
        } finally {
          this[getterName] = function() {
            return this[fieldName];
          };
        }
      };
    };
    Isolate.$finishIsolateConstructor = function(oldIsolate) {
      var isolateProperties = oldIsolate.$isolateProperties;
      function Isolate() {
        var staticNames = Object.keys(isolateProperties);
        for (var i = 0; i < staticNames.length; i++) {
          var staticName = staticNames[i];
          this[staticName] = isolateProperties[staticName];
        }
        var lazies = init.lazies;
        var lazyInitializers = lazies ? Object.keys(lazies) : [];
        for (var i = 0; i < lazyInitializers.length; i++)
          this[lazies[lazyInitializers[i]]] = null;
        function ForceEfficientMap() {
        }
        ForceEfficientMap.prototype = this;
        new ForceEfficientMap();
        for (var i = 0; i < lazyInitializers.length; i++) {
          var lazyInitName = lazies[lazyInitializers[i]];
          this[lazyInitName] = isolateProperties[lazyInitName];
        }
      }
      Isolate.prototype = oldIsolate.prototype;
      Isolate.prototype.constructor = Isolate;
      Isolate.$isolateProperties = isolateProperties;
      Isolate.makeConstantList = oldIsolate.makeConstantList;
      return Isolate;
    };
  }
  !function() {
    function intern(s) {
      var o = {};
      o[s] = 1;
      return Object.keys(convertToFastObject(o))[0];
    }
    init.getIsolateTag = function(name) {
      return intern("___dart_" + name + init.isolateTag);
    };
    var tableProperty = "___dart_isolate_tags_";
    var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
    var rootProperty = "_ZxYxX";
    for (var i = 0;; i++) {
      var property = intern(rootProperty + "_" + i + "_");
      if (!(property in usedProperties)) {
        usedProperties[property] = 1;
        init.isolateTag = property;
        break;
      }
    }
    init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
  }();
  // BEGIN invoke [main].
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (document.currentScript) {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i)
        scripts[i].removeEventListener("load", onLoad, false);
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].addEventListener("load", onLoad, false);
  })(function(currentScript) {
    init.currentScript = currentScript;
    if (typeof dartMainRunner === "function")
      dartMainRunner(function(a) {
        H.startRootIsolate(L.main$closure(), a);
      }, []);
    else
      (function(a) {
        H.startRootIsolate(L.main$closure(), a);
      })([]);
  });
var EventEmitter = require('events').EventEmitter;

// aiming for a node-like Stream API, but without the weight
// isn't really for data, but for just values elapsed over time
function Stream(dartStream) {
  dartStream._createSubscription$4({
    // onData
    call$1: function(data) {
      this.emit('data', dynamicFrom(data));
    }.bind(this)
  },
  {
    // onError
    call$1: function(error) {
      this.emit('error', error);
    }.bind(this)
  }, {
    // onDone
    call$0: function() {
      this.emit('done');
    }.bind(this)
  // cancel on error
  }, true);
}

Stream.prototype = new EventEmitter();

module.exports.Stream = Stream;
  function objEach(obj, cb, thisArg) {
    if(typeof thisArg !== 'undefined') {
      cb = cb.bind(thisArg);
    }

    var count = 0;
    var keys = Object.keys(obj);
    var length = keys.length;

    for(; count < length; count++) {
      var key = keys[count];
      cb(obj[key], key, obj);
    }
  }
var $Promise = typeof(Promise) !== 'undefined' ? Promise : require('es6-promises');function dynamicTo(obj) {if(typeof(obj) === 'undefined' || obj === null) { return obj; }if(obj.__isWrapped__) { return obj.__obj__; }      if(Array.isArray(obj)) {
        return obj.map(function(e) {
          return dynamicTo(e);
        });
      }
      if(obj.constructor.name === 'Object') {
        var elms = Object.keys(obj).reduce(function(arr, key) {
        arr.push(key); arr.push(dynamicTo(obj[key]));
          return arr;
        }, []);
        return new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);
      }
          if((typeof(obj) === 'object' || typeof(obj) === 'function') && typeof(obj.then) === 'function' && typeof(obj.catch) === 'function') {
        var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));
        obj.then(function(then) {
          completer.complete$1(null, dynamicTo(then));
        }).catch(function(err) {
          completer.completeError$1(err);
        });
        return completer.future;
      }
          if(typeof obj === 'function') {
        var argCount = (new RegExp(/function[^]*\(([^]*)\)/)).exec(obj.toString())[1].split(',').length;
        var returned = {};
        returned['call$' + argCount] = function() {
          var args = Array.prototype.slice.call(arguments);
          args.forEach(function(arg, index) {
            args[index] = dynamicFrom(arg);
          });
          return dynamicTo(obj.apply(this, args));
        };
        return returned;
      }
          if(obj instanceof Buffer) {
        function toArrayBuffer(buffer) {
          console.log(buffer.length);
          var ab = new ArrayBuffer(buffer.length);
          var view = new Uint8Array(ab);
          for (var i = 0; i < buffer.length; ++i) {
            view[i] = buffer[i];
          }
          console.log(view.length);
          return ab;
        }

        return new DataView(toArrayBuffer(obj));
      }
    return obj;}function dynamicFrom(obj) {if(typeof(obj) === 'undefined' || obj === null) { return obj; }      if(typeof(module.exports[obj.constructor.name]) !== 'undefined' && module.exports[obj.constructor.name]._) {
        return module.exports[obj.constructor.name]._(obj);
      }
          if(Array.isArray(obj)) {
        return obj.map(function(e) {
          return dynamicFrom(e);
        });
      }
      if(obj.constructor.name === '_JsonMap') {
        var a = obj._original;
        Object.keys(a).forEach(function(key) { a[key] = dynamicFrom(a[key]); });
        return a;
      }
      if(obj.constructor.name === 'JsLinkedHashMap') {
        var a = {};
        objEach(obj._strings, function(cell) {
          a[cell.hashMapCellKey] = dynamicFrom(cell.hashMapCellValue);
        });
        return a;
      }
          if(obj.constructor.name === "_Future") {
        var promise = new $Promise(function(then, error) {
          obj.then$2$onError({
            call$1:function(val) {
              then(dynamicFrom(val));
            }
          }, {
            call$1: function(err) {
              error(err);
            }
          });
        });
        return promise;
      }
          if(obj instanceof DataView) {
        function toBuffer(ab) {
          var buffer = new Buffer(ab.byteLength);
          var view = new Uint8Array(ab);
          console.log(view.length);
          for (var i = 0; i < buffer.length; ++i) {
            buffer[i] = view[i];
          }
          console.log(buffer.length);
          return buffer;
        }
        return toBuffer(obj.buffer);
      }
    if(typeof(obj._createSubscription$4) !== 'undefined') { return new module.exports.Stream(obj); }return obj;}module.exports.PermissionList = function PermissionList() {var __obj__ = (function(){return (([function() {
  return new O.PermissionList(P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeEmpty(), 0);
}, null, null, 0, 0, 235, "new PermissionList"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "idMatchs", {enumerable: true,get: function() { var returned = this.__obj__.idMatchs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.idMatchs = v;}});Object.defineProperty(this, "groupMatchs", {enumerable: true,get: function() { var returned = this.__obj__.groupMatchs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.groupMatchs = v;}});Object.defineProperty(this, "defaultPermission", {enumerable: true,get: function() { var returned = this.__obj__.defaultPermission;return returned;},set: function(v) {this.__obj__.defaultPermission = v;}});};    Object.defineProperty(module.exports.PermissionList, 'class', {
      get: function() {
        function PermissionList() {
          module.exports.PermissionList.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.updatePermissions) { this.__obj__.updatePermissions$1 = function($nn){$nn = [].concat($nn);$nn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nn);return (this.updatePermissions).call(this,$nn);}.bind(this);}if(proto.getPermission) { this.__obj__.getPermission$1 = function($nn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'Responder' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }return (this.getPermission).call(this,$nn);}.bind(this);}        }

        PermissionList.prototype = Object.create(module.exports.PermissionList.prototype);

        return PermissionList;
      }
    });
    Object.defineProperty(module.exports.PermissionList, "_", {enumerable: false,value:(function PermissionList(__obj__) {var returned = Object.create(module.exports.PermissionList.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "idMatchs", {enumerable: true,get: function() { var returned = this.__obj__.idMatchs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.idMatchs = v;}});Object.defineProperty(this, "groupMatchs", {enumerable: true,get: function() { var returned = this.__obj__.groupMatchs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.groupMatchs = v;}});Object.defineProperty(this, "defaultPermission", {enumerable: true,get: function() { var returned = this.__obj__.defaultPermission;return returned;},set: function(v) {this.__obj__.defaultPermission = v;}});}.bind(returned))();return returned;})});module.exports.PermissionList.prototype.updatePermissions = function($nn){$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);return (this.__obj__.updatePermissions$1).call(this.__obj__,$nn);};module.exports.PermissionList.prototype.getPermission = function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (this.__obj__.getPermission$1).call(this.__obj__,$nn);};module.exports.Permission = function Permission() {var __obj__ = (function(){return (([function() {
  return new O.Permission();
}, null, null, 0, 0, 233, "new Permission"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.Permission, 'class', {
      get: function() {
        function Permission() {
          module.exports.Permission.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        Permission.prototype = Object.create(module.exports.Permission.prototype);

        return Permission;
      }
    });
    Object.defineProperty(module.exports.Permission, "_", {enumerable: false,value:(function Permission(__obj__) {var returned = Object.create(module.exports.Permission.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.Permission.parse = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}return (init.allClasses.Permission.Permission_parse).call(this,$nn,$nnn);};module.exports.StreamConnection = function StreamConnection() {var __obj__ = (function($nn,_optObj_){_optObj_ = _optObj_ || {};if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }var clientLink = typeof(_optObj_.clientLink) === 'undefined' ? null : _optObj_.clientLink;if(clientLink !== null) {if(!clientLink.__isWrapped__) { clientLink = clientLink.__obj__; }}var enableTimeout = typeof(_optObj_.enableTimeout) === 'undefined' ? false : _optObj_.enableTimeout;if(enableTimeout !== null) {}return (([function(adapter, clientLink, enableTimeout) {
  var t1, t2;
  t1 = new P._Future(0, $.Zone__current, null);
  t1.$builtinTypeInfo = [O.ConnectionChannel];
  t1 = new P._AsyncCompleter(t1);
  t1.$builtinTypeInfo = [O.ConnectionChannel];
  t2 = new P._Future(0, $.Zone__current, null);
  t2.$builtinTypeInfo = [P.bool];
  t2 = new P._AsyncCompleter(t2);
  t2.$builtinTypeInfo = [P.bool];
  t1 = new O.StreamConnection(adapter, clientLink, null, null, t1, t2, null, 0, false, 0, null);
  t1.StreamConnection$3$clientLink$enableTimeout(adapter, clientLink, enableTimeout);
  return t1;
}, null, null, 2, 5, 237, 35, 37, 140, [], 101, [], 141, [], "new StreamConnection"]
[0])).call(this,$nn,clientLink,enableTimeout);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "adapter", {enumerable: true,get: function() { var returned = this.__obj__.adapter;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'StreamConnectionAdapter' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.adapter = v;}});Object.defineProperty(this, "clientLink", {enumerable: true,get: function() { var returned = this.__obj__.clientLink;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ClientLink' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.clientLink = v;}});Object.defineProperty(this, "onRequestReadyCompleter", {enumerable: true,get: function() { var returned = this.__obj__.onRequestReadyCompleter;return returned;},set: function(v) {this.__obj__.onRequestReadyCompleter = v;}});Object.defineProperty(this, "pingTimer", {enumerable: true,get: function() { var returned = this.__obj__.pingTimer;return returned;},set: function(v) {this.__obj__.pingTimer = v;}});Object.defineProperty(this, "pingCount", {enumerable: true,get: function() { var returned = this.__obj__.pingCount;return returned;},set: function(v) {this.__obj__.pingCount = v;}});Object.defineProperty(this, "responderChannel", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$responderChannel).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$responderChannel = function() { return v; };}});Object.defineProperty(this, "requesterChannel", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$requesterChannel).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$requesterChannel = function() { return v; };}});Object.defineProperty(this, "onRequesterReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onRequesterReady).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'ConnectionChannel' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onRequesterReady = function() { return v; };}});Object.defineProperty(this, "onDisconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onDisconnected).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onDisconnected = function() { return v; };}});};    Object.defineProperty(module.exports.StreamConnection, 'class', {
      get: function() {
        function StreamConnection() {
          module.exports.StreamConnection.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onPingTimer) { this.__obj__.onPingTimer$1 = function($nn){return (this.onPingTimer).call(this,$nn);}.bind(this);}if(proto.requireSend) { this.__obj__.requireSend$0 = function(){return (this.requireSend).call(this);}.bind(this);}if(proto.addServerCommand) { this.__obj__.addServerCommand$2 = function($nn,$nnn){return (this.addServerCommand).call(this,$nn,$nnn);}.bind(this);}if(proto.onData) { this.__obj__.onData$1 = function(dynamic){dynamic = dynamicFrom(dynamic);return (this.onData).call(this,dynamic);}.bind(this);}if(proto.addData) { this.__obj__.addData$1 = function($nn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}return (this.addData).call(this,$nn);}.bind(this);}if(proto.close) { this.__obj__.close$0 = function(){return (this.close).call(this);}.bind(this);}        }

        StreamConnection.prototype = Object.create(module.exports.StreamConnection.prototype);

        return StreamConnection;
      }
    });
    Object.defineProperty(module.exports.StreamConnection, "_", {enumerable: false,value:(function StreamConnection(__obj__) {var returned = Object.create(module.exports.StreamConnection.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "adapter", {enumerable: true,get: function() { var returned = this.__obj__.adapter;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'StreamConnectionAdapter' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.adapter = v;}});Object.defineProperty(this, "clientLink", {enumerable: true,get: function() { var returned = this.__obj__.clientLink;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ClientLink' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.clientLink = v;}});Object.defineProperty(this, "onRequestReadyCompleter", {enumerable: true,get: function() { var returned = this.__obj__.onRequestReadyCompleter;return returned;},set: function(v) {this.__obj__.onRequestReadyCompleter = v;}});Object.defineProperty(this, "pingTimer", {enumerable: true,get: function() { var returned = this.__obj__.pingTimer;return returned;},set: function(v) {this.__obj__.pingTimer = v;}});Object.defineProperty(this, "pingCount", {enumerable: true,get: function() { var returned = this.__obj__.pingCount;return returned;},set: function(v) {this.__obj__.pingCount = v;}});Object.defineProperty(this, "responderChannel", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$responderChannel).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$responderChannel = function() { return v; };}});Object.defineProperty(this, "requesterChannel", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$requesterChannel).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$requesterChannel = function() { return v; };}});Object.defineProperty(this, "onRequesterReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onRequesterReady).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'ConnectionChannel' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onRequesterReady = function() { return v; };}});Object.defineProperty(this, "onDisconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onDisconnected).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onDisconnected = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.StreamConnection.prototype.onPingTimer = function($nn){return (this.__obj__.onPingTimer$1).call(this.__obj__,$nn);};module.exports.StreamConnection.prototype.requireSend = function(){return (this.__obj__.requireSend$0).call(this.__obj__);};module.exports.StreamConnection.prototype.addServerCommand = function($nn,$nnn){return (this.__obj__.addServerCommand$2).call(this.__obj__,$nn,$nnn);};module.exports.StreamConnection.prototype.onData = function(dynamic){dynamic = dynamicTo(dynamic);return (this.__obj__.onData$1).call(this.__obj__,dynamic);};module.exports.StreamConnection.prototype.addData = function($nn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return (this.__obj__.addData$1).call(this.__obj__,$nn);};module.exports.StreamConnection.prototype.close = function(){return (this.__obj__.close$0).call(this.__obj__);};module.exports.StreamConnectionAdapter = function StreamConnectionAdapter() {var __obj__ = (function(){return (([function() {
  return new O.StreamConnectionAdapter();
}, null, null, 0, 0, 236, "new StreamConnectionAdapter"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.StreamConnectionAdapter, 'class', {
      get: function() {
        function StreamConnectionAdapter() {
          module.exports.StreamConnectionAdapter.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        StreamConnectionAdapter.prototype = Object.create(module.exports.StreamConnectionAdapter.prototype);

        return StreamConnectionAdapter;
      }
    });
    Object.defineProperty(module.exports.StreamConnectionAdapter, "_", {enumerable: false,value:(function StreamConnectionAdapter(__obj__) {var returned = Object.create(module.exports.StreamConnectionAdapter.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.ConnectionHandler = function ConnectionHandler() {var __obj__ = (function(){return (([function() {
  return new O.ConnectionHandler(null, null, null, [], [], false);
}, null, null, 0, 0, 231, "new ConnectionHandler"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "connection", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$connection).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$connection = function() { return v; };}});};    Object.defineProperty(module.exports.ConnectionHandler, 'class', {
      get: function() {
        function ConnectionHandler() {
          module.exports.ConnectionHandler.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onReconnected) { this.__obj__.onReconnected$0 = function(){return (this.onReconnected).call(this);}.bind(this);}if(proto.addToSendList) { this.__obj__.addToSendList$1 = function($nn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}return (this.addToSendList).call(this,$nn);}.bind(this);}if(proto.addProcessor) { this.__obj__.addProcessor$1 = function($nn){return (this.addProcessor).call(this,$nn);}.bind(this);}if(proto.doSend) { this.__obj__.doSend$0 = function(){var returned = (this.doSend).call(this);returned = [].concat(returned);returned.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, returned);return returned;}.bind(this);}        }

        ConnectionHandler.prototype = Object.create(module.exports.ConnectionHandler.prototype);

        return ConnectionHandler;
      }
    });
    Object.defineProperty(module.exports.ConnectionHandler, "_", {enumerable: false,value:(function ConnectionHandler(__obj__) {var returned = Object.create(module.exports.ConnectionHandler.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "connection", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$connection).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$connection = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.ConnectionHandler.prototype.onReconnected = function(){return (this.__obj__.onReconnected$0).call(this.__obj__);};module.exports.ConnectionHandler.prototype.addToSendList = function($nn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return (this.__obj__.addToSendList$1).call(this.__obj__,$nn);};module.exports.ConnectionHandler.prototype.addProcessor = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);return returned;}};return (this.__obj__.addProcessor$1).call(this.__obj__,$nn);};module.exports.ConnectionHandler.prototype.doSend = function(){var returned = (this.__obj__.doSend$0).call(this.__obj__);returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;};module.exports.PassiveChannel = function PassiveChannel() {var __obj__ = (function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}return (([function(conn, connected) {
  var t1, t2, t3;
  t1 = P.StreamController_StreamController(null, null, null, null, false, P.List);
  t2 = new P._Future(0, $.Zone__current, null);
  t2.$builtinTypeInfo = [O.ConnectionChannel];
  t2 = new P._AsyncCompleter(t2);
  t2.$builtinTypeInfo = [O.ConnectionChannel];
  t3 = new P._Future(0, $.Zone__current, null);
  t3.$builtinTypeInfo = [O.ConnectionChannel];
  t3 = new P._AsyncCompleter(t3);
  t3.$builtinTypeInfo = [O.ConnectionChannel];
  return new O.PassiveChannel(t1, [], conn, null, false, connected, t2, t3);
}, null, null, 2, 2, 230, 37, 134, [], 135, [], "new PassiveChannel"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "onReceiveController", {enumerable: true,get: function() { var returned = this.__obj__.onReceiveController;return returned;},set: function(v) {this.__obj__.onReceiveController = v;}});Object.defineProperty(this, "conn", {enumerable: true,get: function() { var returned = this.__obj__.conn;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Connection' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.conn = v;}});Object.defineProperty(this, "getData", {enumerable: true,get: function() { var returned = this.__obj__.getData;return returned;},set: function(v) {this.__obj__.getData = v;}});Object.defineProperty(this, "connected", {enumerable: true,get: function() { var returned = this.__obj__.connected;return returned;},set: function(v) {this.__obj__.connected = v;}});Object.defineProperty(this, "onDisconnectController", {enumerable: true,get: function() { var returned = this.__obj__.onDisconnectController;return returned;},set: function(v) {this.__obj__.onDisconnectController = v;}});Object.defineProperty(this, "onConnectController", {enumerable: true,get: function() { var returned = this.__obj__.onConnectController;return returned;},set: function(v) {this.__obj__.onConnectController = v;}});Object.defineProperty(this, "onReceive", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onReceive).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$onReceive = function() { return v; };}});Object.defineProperty(this, "isReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isReady = function() { return v; };}});Object.defineProperty(this, "onDisconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onDisconnected).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'ConnectionChannel' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onDisconnected = function() { return v; };}});Object.defineProperty(this, "onConnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onConnected).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'ConnectionChannel' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onConnected = function() { return v; };}});};    Object.defineProperty(module.exports.PassiveChannel, 'class', {
      get: function() {
        function PassiveChannel() {
          module.exports.PassiveChannel.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.sendWhenReady) { this.__obj__.sendWhenReady$1 = function($nn){return (this.sendWhenReady).call(this,$nn);}.bind(this);}if(proto.updateConnect) { this.__obj__.updateConnect$0 = function(){return (this.updateConnect).call(this);}.bind(this);}        }

        PassiveChannel.prototype = Object.create(module.exports.PassiveChannel.prototype);

        return PassiveChannel;
      }
    });
    Object.defineProperty(module.exports.PassiveChannel, "_", {enumerable: false,value:(function PassiveChannel(__obj__) {var returned = Object.create(module.exports.PassiveChannel.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "onReceiveController", {enumerable: true,get: function() { var returned = this.__obj__.onReceiveController;return returned;},set: function(v) {this.__obj__.onReceiveController = v;}});Object.defineProperty(this, "conn", {enumerable: true,get: function() { var returned = this.__obj__.conn;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Connection' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.conn = v;}});Object.defineProperty(this, "getData", {enumerable: true,get: function() { var returned = this.__obj__.getData;return returned;},set: function(v) {this.__obj__.getData = v;}});Object.defineProperty(this, "connected", {enumerable: true,get: function() { var returned = this.__obj__.connected;return returned;},set: function(v) {this.__obj__.connected = v;}});Object.defineProperty(this, "onDisconnectController", {enumerable: true,get: function() { var returned = this.__obj__.onDisconnectController;return returned;},set: function(v) {this.__obj__.onDisconnectController = v;}});Object.defineProperty(this, "onConnectController", {enumerable: true,get: function() { var returned = this.__obj__.onConnectController;return returned;},set: function(v) {this.__obj__.onConnectController = v;}});Object.defineProperty(this, "onReceive", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onReceive).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$onReceive = function() { return v; };}});Object.defineProperty(this, "isReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isReady = function() { return v; };}});Object.defineProperty(this, "onDisconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onDisconnected).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'ConnectionChannel' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onDisconnected = function() { return v; };}});Object.defineProperty(this, "onConnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onConnected).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'ConnectionChannel' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onConnected = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.PassiveChannel.prototype.sendWhenReady = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;}};return (this.__obj__.sendWhenReady$1).call(this.__obj__,$nn);};module.exports.PassiveChannel.prototype.updateConnect = function(){return (this.__obj__.updateConnect$0).call(this.__obj__);};module.exports.ValueUpdate = function ValueUpdate() {var __obj__ = (function(dynamic,_optObj_){_optObj_ = _optObj_ || {};dynamic = dynamicTo(dynamic);var count = typeof(_optObj_.count) === 'undefined' ? 1 : _optObj_.count;if(count !== null) {}var max = typeof(_optObj_.max) === 'undefined' ? null : _optObj_.max;if(max !== null) {}var meta = typeof(_optObj_.meta) === 'undefined' ? null : _optObj_.meta;if(meta !== null) {objEach(meta, function(a, i) {this[i] = dynamicTo(a);}, meta);var elms = Object.keys(meta).reduce(function(arr, key) { arr.push(key); arr.push(meta[key]); return arr; }, []);meta = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);}var min = typeof(_optObj_.min) === 'undefined' ? null : _optObj_.min;if(min !== null) {}var status = typeof(_optObj_.status) === 'undefined' ? null : _optObj_.status;if(status !== null) {}var sum = typeof(_optObj_.sum) === 'undefined' ? null : _optObj_.sum;if(sum !== null) {}var ts = typeof(_optObj_.ts) === 'undefined' ? null : _optObj_.ts;if(ts !== null) {}return (([function(value, count, max, meta, min, $status, sum, ts) {
  var t1 = new O.ValueUpdate(value, ts, $status, count, sum, min, max);
  t1.ValueUpdate$8$count$max$meta$min$status$sum$ts(value, count, max, meta, min, $status, sum, ts);
  return t1;
}, null, null, 2, 15, 242, 35, 35, 35, 111, 146, 146, 146, 22, [], 147, [], 148, [], 149, [], 150, [], 151, [], 152, [], 153, [], "new ValueUpdate"]
[0])).call(this,dynamic,count,max,meta,min,status,sum,ts);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "value", {enumerable: true,get: function() { var returned = this.__obj__.value;returned = dynamicFrom(returned);return returned;},set: function(v) {v = dynamicTo(v);this.__obj__.value = v;}});Object.defineProperty(this, "ts", {enumerable: true,get: function() { var returned = this.__obj__.ts;return returned;},set: function(v) {this.__obj__.ts = v;}});Object.defineProperty(this, "status", {enumerable: true,get: function() { var returned = this.__obj__.status;return returned;},set: function(v) {this.__obj__.status = v;}});Object.defineProperty(this, "count", {enumerable: true,get: function() { var returned = this.__obj__.count;return returned;},set: function(v) {this.__obj__.count = v;}});Object.defineProperty(this, "sum", {enumerable: true,get: function() { var returned = this.__obj__.sum;return returned;},set: function(v) {this.__obj__.sum = v;}});Object.defineProperty(this, "min", {enumerable: true,get: function() { var returned = this.__obj__.min;return returned;},set: function(v) {this.__obj__.min = v;}});Object.defineProperty(this, "max", {enumerable: true,get: function() { var returned = this.__obj__.max;return returned;},set: function(v) {this.__obj__.max = v;}});};    Object.defineProperty(module.exports.ValueUpdate, 'class', {
      get: function() {
        function ValueUpdate() {
          module.exports.ValueUpdate.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        ValueUpdate.prototype = Object.create(module.exports.ValueUpdate.prototype);

        return ValueUpdate;
      }
    });
    Object.defineProperty(module.exports.ValueUpdate, "_", {enumerable: false,value:(function ValueUpdate(__obj__) {var returned = Object.create(module.exports.ValueUpdate.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "value", {enumerable: true,get: function() { var returned = this.__obj__.value;returned = dynamicFrom(returned);return returned;},set: function(v) {v = dynamicTo(v);this.__obj__.value = v;}});Object.defineProperty(this, "ts", {enumerable: true,get: function() { var returned = this.__obj__.ts;return returned;},set: function(v) {this.__obj__.ts = v;}});Object.defineProperty(this, "status", {enumerable: true,get: function() { var returned = this.__obj__.status;return returned;},set: function(v) {this.__obj__.status = v;}});Object.defineProperty(this, "count", {enumerable: true,get: function() { var returned = this.__obj__.count;return returned;},set: function(v) {this.__obj__.count = v;}});Object.defineProperty(this, "sum", {enumerable: true,get: function() { var returned = this.__obj__.sum;return returned;},set: function(v) {this.__obj__.sum = v;}});Object.defineProperty(this, "min", {enumerable: true,get: function() { var returned = this.__obj__.min;return returned;},set: function(v) {this.__obj__.min = v;}});Object.defineProperty(this, "max", {enumerable: true,get: function() { var returned = this.__obj__.max;return returned;},set: function(v) {this.__obj__.max = v;}});}.bind(returned))();return returned;})});Object.defineProperty(module.exports.ValueUpdate, "TIME_ZONE", {enumerable: true,get: function() { var returned = this.__obj__.TIME_ZONE;return returned;},set: function(v) {this.__obj__.TIME_ZONE = v;}});module.exports.ValueUpdate.getTs = function(){return (init.allClasses.ValueUpdate.ValueUpdate_getTs).call(this);};module.exports.ValueUpdate.merge = function() {var __obj__ = (function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (([function(oldUpdate, newUpdate) {
  var t1 = new O.ValueUpdate(null, null, null, null, 0, null, null);
  t1.ValueUpdate$merge$2(oldUpdate, newUpdate);
  return t1;
}, null, null, 4, 0, 243, 154, [], 155, [], "new ValueUpdate$merge"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);return module.exports.ValueUpdate._(__obj__);};module.exports.Table = function Table() {var __obj__ = (function($nn,$nnn){$nn = [].concat($nn);$nn.forEach(function(a, i) {this[i] = a;}, $nn);$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {this[i] = [].concat(this[i]);this[i].forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, this[i]);this[i] = a;}, $nnn);return (([function(columns, rows) {
  return new O.Table(columns, rows);
}, null, null, 4, 0, 241, 144, [], 145, [], "new Table"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "columns", {enumerable: true,get: function() { var returned = this.__obj__.columns;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.columns = v;}});Object.defineProperty(this, "rows", {enumerable: true,get: function() { var returned = this.__obj__.rows;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = [].concat(this[i]);this[i].forEach(function(a, i) {this[i] = dynamicFrom(a);}, this[i]);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = [].concat(this[i]);this[i].forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, this[i]);this[i] = a;}, v);this.__obj__.rows = v;}});};    Object.defineProperty(module.exports.Table, 'class', {
      get: function() {
        function Table() {
          module.exports.Table.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        Table.prototype = Object.create(module.exports.Table.prototype);

        return Table;
      }
    });
    Object.defineProperty(module.exports.Table, "_", {enumerable: false,value:(function Table(__obj__) {var returned = Object.create(module.exports.Table.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "columns", {enumerable: true,get: function() { var returned = this.__obj__.columns;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.columns = v;}});Object.defineProperty(this, "rows", {enumerable: true,get: function() { var returned = this.__obj__.rows;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = [].concat(this[i]);this[i].forEach(function(a, i) {this[i] = dynamicFrom(a);}, this[i]);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = [].concat(this[i]);this[i].forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, this[i]);this[i] = a;}, v);this.__obj__.rows = v;}});}.bind(returned))();return returned;})});module.exports.TableColumn = function TableColumn() {var __obj__ = (function($nn,$nnn,$nnnn){$nnnn = typeof($nnnn) === 'undefined' ? null : $nnnn;if($nnnn !== null) {}return (([function($name, type, defaultValue) {
  return new O.TableColumn(type, $name, defaultValue);
}, null, null, 4, 2, 238, 35, 124, [], 130, [], 142, [], "new TableColumn"]
[0])).call(this,$nn,$nnn,$nnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "type", {enumerable: true,get: function() { var returned = this.__obj__.type;return returned;},set: function(v) {this.__obj__.type = v;}});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});Object.defineProperty(this, "defaultValue", {enumerable: true,get: function() { var returned = this.__obj__.defaultValue;return returned;},set: function(v) {this.__obj__.defaultValue = v;}});};    Object.defineProperty(module.exports.TableColumn, 'class', {
      get: function() {
        function TableColumn() {
          module.exports.TableColumn.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.getData) { this.__obj__.getData$0 = function(){var returned = (this.getData).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}        }

        TableColumn.prototype = Object.create(module.exports.TableColumn.prototype);

        return TableColumn;
      }
    });
    Object.defineProperty(module.exports.TableColumn, "_", {enumerable: false,value:(function TableColumn(__obj__) {var returned = Object.create(module.exports.TableColumn.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "type", {enumerable: true,get: function() { var returned = this.__obj__.type;return returned;},set: function(v) {this.__obj__.type = v;}});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});Object.defineProperty(this, "defaultValue", {enumerable: true,get: function() { var returned = this.__obj__.defaultValue;return returned;},set: function(v) {this.__obj__.defaultValue = v;}});}.bind(returned))();return returned;})});module.exports.TableColumn.prototype.getData = function(){var returned = (this.__obj__.getData$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.TableColumn.serializeColumns = function($nn){$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);var returned = (init.allClasses.TableColumn.TableColumn_serializeColumns).call(this,$nn);returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;};module.exports.TableColumn.parseColumns = function($nn){$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);var returned = (init.allClasses.TableColumn.TableColumn_parseColumns).call(this,$nn);returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;};module.exports.Path = function Path() {var __obj__ = (function($nn){return (([function(path) {
  var t1 = new O.Path(path, null, null, true);
  t1._parse$0();
  return t1;
}, null, null, 2, 0, 13, 107, [], "new Path"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "parentPath", {enumerable: true,get: function() { var returned = this.__obj__.parentPath;return returned;},set: function(v) {this.__obj__.parentPath = v;}});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});Object.defineProperty(this, "valid", {enumerable: true,get: function() { var returned = this.__obj__.valid;return returned;},set: function(v) {this.__obj__.valid = v;}});Object.defineProperty(this, "absolute", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$absolute).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$absolute = function() { return v; };}});Object.defineProperty(this, "isRoot", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isRoot).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isRoot = function() { return v; };}});Object.defineProperty(this, "isConfig", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isConfig).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isConfig = function() { return v; };}});Object.defineProperty(this, "isAttribute", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isAttribute).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isAttribute = function() { return v; };}});Object.defineProperty(this, "isNode", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isNode).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isNode = function() { return v; };}});};    Object.defineProperty(module.exports.Path, 'class', {
      get: function() {
        function Path() {
          module.exports.Path.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.mergeBasePath) { this.__obj__.mergeBasePath$2 = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}return (this.mergeBasePath).call(this,$nn,$nnn);}.bind(this);}        }

        Path.prototype = Object.create(module.exports.Path.prototype);

        return Path;
      }
    });
    Object.defineProperty(module.exports.Path, "_", {enumerable: false,value:(function Path(__obj__) {var returned = Object.create(module.exports.Path.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "parentPath", {enumerable: true,get: function() { var returned = this.__obj__.parentPath;return returned;},set: function(v) {this.__obj__.parentPath = v;}});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});Object.defineProperty(this, "valid", {enumerable: true,get: function() { var returned = this.__obj__.valid;return returned;},set: function(v) {this.__obj__.valid = v;}});Object.defineProperty(this, "absolute", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$absolute).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$absolute = function() { return v; };}});Object.defineProperty(this, "isRoot", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isRoot).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isRoot = function() { return v; };}});Object.defineProperty(this, "isConfig", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isConfig).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isConfig = function() { return v; };}});Object.defineProperty(this, "isAttribute", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isAttribute).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isAttribute = function() { return v; };}});Object.defineProperty(this, "isNode", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isNode).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isNode = function() { return v; };}});}.bind(returned))();return returned;})});Object.defineProperty(module.exports.Path, "invalidChar", {enumerable: true,get: function() { var returned = this.__obj__.invalidChar;return returned;},set: function(v) {this.__obj__.invalidChar = v;}});module.exports.Path.getValidPath = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (init.allClasses.Path.Path_getValidPath).call(this,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Path' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.Path.getValidNodePath = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (init.allClasses.Path.Path_getValidNodePath).call(this,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Path' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.Path.getValidAttributePath = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (init.allClasses.Path.Path_getValidAttributePath).call(this,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Path' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.Path.getValidConfigPath = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (init.allClasses.Path.Path_getValidConfigPath).call(this,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Path' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.Path.prototype.mergeBasePath = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}return (this.__obj__.mergeBasePath$2).call(this.__obj__,$nn,$nnn);};module.exports.Node = function Node() {var __obj__ = (function(){return (([function() {
  return new O.Node0(null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
}, null, null, 0, 0, 5, "new Node"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});};    Object.defineProperty(module.exports.Node, 'class', {
      get: function() {
        function Node() {
          module.exports.Node.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.getAttribute) { this.__obj__.getAttribute$1 = function($nn){return (this.getAttribute).call(this,$nn);}.bind(this);}if(proto.getConfig) { this.__obj__.getConfig$1 = function($nn){return (this.getConfig).call(this,$nn);}.bind(this);}if(proto.addChild) { this.__obj__.addChild$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Node' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.addChild).call(this,$nn,$nnn);}.bind(this);}if(proto.removeChild) { this.__obj__.removeChild$1 = function(dynamic){dynamic = dynamicFrom(dynamic);return (this.removeChild).call(this,dynamic);}.bind(this);}if(proto.getChild) { this.__obj__.getChild$1 = function($nn){var returned = (this.getChild).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.get) { this.__obj__.$get$1 = function($nn){return (this.get).call(this,$nn);}.bind(this);}if(proto.forEachChild) { this.__obj__.forEachChild$1 = function($nn){return (this.forEachChild).call(this,$nn);}.bind(this);}if(proto.getSimpleMap) { this.__obj__.getSimpleMap$0 = function(){var returned = (this.getSimpleMap).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}        }

        Node.prototype = Object.create(module.exports.Node.prototype);

        return Node;
      }
    });
    Object.defineProperty(module.exports.Node, "_", {enumerable: false,value:(function Node(__obj__) {var returned = Object.create(module.exports.Node.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});}.bind(returned))();return returned;})});module.exports.Node.prototype.getAttribute = function($nn){return (this.__obj__.getAttribute$1).call(this.__obj__,$nn);};module.exports.Node.prototype.getConfig = function($nn){return (this.__obj__.getConfig$1).call(this.__obj__,$nn);};module.exports.Node.prototype.addChild = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.addChild$2).call(this.__obj__,$nn,$nnn);};module.exports.Node.prototype.removeChild = function(dynamic){dynamic = dynamicTo(dynamic);return (this.__obj__.removeChild$1).call(this.__obj__,dynamic);};module.exports.Node.prototype.getChild = function($nn){var returned = (this.__obj__.getChild$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.Node.prototype.get = function($nn){return (this.__obj__.$get$1).call(this.__obj__,$nn);};module.exports.Node.prototype.forEachChild = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.forEachChild$1).call(this.__obj__,$nn);};module.exports.Node.prototype.getSimpleMap = function(){var returned = (this.__obj__.getSimpleMap$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.Unspecified = function Unspecified() {var __obj__ = (function(){return (([function() {
  return new O.Unspecified();
}, null, null, 0, 0, 5, "new Unspecified"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.Unspecified, 'class', {
      get: function() {
        function Unspecified() {
          module.exports.Unspecified.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        Unspecified.prototype = Object.create(module.exports.Unspecified.prototype);

        return Unspecified;
      }
    });
    Object.defineProperty(module.exports.Unspecified, "_", {enumerable: false,value:(function Unspecified(__obj__) {var returned = Object.create(module.exports.Unspecified.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.DSError = function DSError() {var __obj__ = (function($nn,_optObj_){_optObj_ = _optObj_ || {};var detail = typeof(_optObj_.detail) === 'undefined' ? null : _optObj_.detail;if(detail !== null) {}var msg = typeof(_optObj_.msg) === 'undefined' ? null : _optObj_.msg;if(msg !== null) {}var path = typeof(_optObj_.path) === 'undefined' ? null : _optObj_.path;if(path !== null) {}var phase = typeof(_optObj_.phase) === 'undefined' ? null : _optObj_.phase;if(phase !== null) {}return (([function(type, detail, msg, path, phase) {
  return new O.DSError(type, detail, msg, path, phase);
}, null, null, 2, 9, 229, 35, 35, 35, 118, 130, [], 131, [], 132, [], 107, [], 133, [], "new DSError"]
[0])).call(this,$nn,detail,msg,path,phase);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "type", {enumerable: true,get: function() { var returned = this.__obj__.type;return returned;},set: function(v) {this.__obj__.type = v;}});Object.defineProperty(this, "detail", {enumerable: true,get: function() { var returned = this.__obj__.detail;return returned;},set: function(v) {this.__obj__.detail = v;}});Object.defineProperty(this, "msg", {enumerable: true,get: function() { var returned = this.__obj__.msg;return returned;},set: function(v) {this.__obj__.msg = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "phase", {enumerable: true,get: function() { var returned = this.__obj__.phase;return returned;},set: function(v) {this.__obj__.phase = v;}});};    Object.defineProperty(module.exports.DSError, 'class', {
      get: function() {
        function DSError() {
          module.exports.DSError.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.getMessage) { this.__obj__.getMessage$0 = function(){return (this.getMessage).call(this);}.bind(this);}if(proto.serialize) { this.__obj__.serialize$0 = function(){var returned = (this.serialize).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}        }

        DSError.prototype = Object.create(module.exports.DSError.prototype);

        return DSError;
      }
    });
    Object.defineProperty(module.exports.DSError, "_", {enumerable: false,value:(function DSError(__obj__) {var returned = Object.create(module.exports.DSError.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "type", {enumerable: true,get: function() { var returned = this.__obj__.type;return returned;},set: function(v) {this.__obj__.type = v;}});Object.defineProperty(this, "detail", {enumerable: true,get: function() { var returned = this.__obj__.detail;return returned;},set: function(v) {this.__obj__.detail = v;}});Object.defineProperty(this, "msg", {enumerable: true,get: function() { var returned = this.__obj__.msg;return returned;},set: function(v) {this.__obj__.msg = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "phase", {enumerable: true,get: function() { var returned = this.__obj__.phase;return returned;},set: function(v) {this.__obj__.phase = v;}});}.bind(returned))();return returned;})});module.exports.DSError.fromMap = function() {var __obj__ = (function($nn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return (([function(m) {
  var t1, t2, t3;
  t1 = new O.DSError(null, null, null, null, null);
  t2 = J.getInterceptor$asx(m);
  t3 = t2.$index(m, "type");
  if (typeof t3 === "string")
    t1.type = t2.$index(m, "type");
  t3 = t2.$index(m, "msg");
  if (typeof t3 === "string")
    t1.msg = t2.$index(m, "msg");
  t3 = t2.$index(m, "path");
  if (typeof t3 === "string")
    t1.path = t2.$index(m, "path");
  t3 = t2.$index(m, "phase");
  if (typeof t3 === "string")
    t1.phase = t2.$index(m, "phase");
  t3 = t2.$index(m, "detail");
  if (typeof t3 === "string")
    t1.detail = t2.$index(m, "detail");
  return t1;
}, null, null, 2, 0, 178, 113, [], "new DSError$fromMap"]
[0])).call(this,$nn);}).apply(this, arguments);return module.exports.DSError._(__obj__);};module.exports.DSError.prototype.getMessage = function(){return (this.__obj__.getMessage$0).call(this.__obj__);};module.exports.DSError.prototype.serialize = function(){var returned = (this.__obj__.serialize$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};Object.defineProperty(module.exports.DSError, "PERMISSION_DENIED", {enumerable: true,get: function() { var returned = this.__obj__.PERMISSION_DENIED;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'DSError' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.PERMISSION_DENIED = v;}});Object.defineProperty(module.exports.DSError, "INVALID_METHOD", {enumerable: true,get: function() { var returned = this.__obj__.INVALID_METHOD;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'DSError' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.INVALID_METHOD = v;}});Object.defineProperty(module.exports.DSError, "INVALID_PATH", {enumerable: true,get: function() { var returned = this.__obj__.INVALID_PATH;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'DSError' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.INVALID_PATH = v;}});Object.defineProperty(module.exports.DSError, "INVALID_PATHS", {enumerable: true,get: function() { var returned = this.__obj__.INVALID_PATHS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'DSError' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.INVALID_PATHS = v;}});Object.defineProperty(module.exports.DSError, "INVALID_VALUE", {enumerable: true,get: function() { var returned = this.__obj__.INVALID_VALUE;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'DSError' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.INVALID_VALUE = v;}});Object.defineProperty(module.exports.DSError, "DISCONNECTED", {enumerable: true,get: function() { var returned = this.__obj__.DISCONNECTED;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'DSError' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.DISCONNECTED = v;}});module.exports.ErrorPhase = function ErrorPhase() {var __obj__ = (function(){return (([function() {
  return new O.ErrorPhase();
}, null, null, 0, 0, 228, "new ErrorPhase"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.ErrorPhase, 'class', {
      get: function() {
        function ErrorPhase() {
          module.exports.ErrorPhase.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        ErrorPhase.prototype = Object.create(module.exports.ErrorPhase.prototype);

        return ErrorPhase;
      }
    });
    Object.defineProperty(module.exports.ErrorPhase, "_", {enumerable: false,value:(function ErrorPhase(__obj__) {var returned = Object.create(module.exports.ErrorPhase.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.StreamStatus = function StreamStatus() {var __obj__ = (function(){return (([function() {
  return new O.StreamStatus();
}, null, null, 0, 0, 227, "new StreamStatus"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.StreamStatus, 'class', {
      get: function() {
        function StreamStatus() {
          module.exports.StreamStatus.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        StreamStatus.prototype = Object.create(module.exports.StreamStatus.prototype);

        return StreamStatus;
      }
    });
    Object.defineProperty(module.exports.StreamStatus, "_", {enumerable: false,value:(function StreamStatus(__obj__) {var returned = Object.create(module.exports.StreamStatus.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.ServerLinkManager = function ServerLinkManager() {var __obj__ = (function(){return (([function() {
  return new O.ServerLinkManager();
}, null, null, 0, 0, 226, "new ServerLinkManager"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.ServerLinkManager, 'class', {
      get: function() {
        function ServerLinkManager() {
          module.exports.ServerLinkManager.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        ServerLinkManager.prototype = Object.create(module.exports.ServerLinkManager.prototype);

        return ServerLinkManager;
      }
    });
    Object.defineProperty(module.exports.ServerLinkManager, "_", {enumerable: false,value:(function ServerLinkManager(__obj__) {var returned = Object.create(module.exports.ServerLinkManager.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.ClientLink = function ClientLink() {var __obj__ = (function(){return (([function() {
  return new O.ClientLink();
}, null, null, 0, 0, 225, "new ClientLink"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.ClientLink, 'class', {
      get: function() {
        function ClientLink() {
          module.exports.ClientLink.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        ClientLink.prototype = Object.create(module.exports.ClientLink.prototype);

        return ClientLink;
      }
    });
    Object.defineProperty(module.exports.ClientLink, "_", {enumerable: false,value:(function ClientLink(__obj__) {var returned = Object.create(module.exports.ClientLink.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.ServerLink = function ServerLink() {var __obj__ = (function(){return (([function() {
  return new O.ServerLink();
}, null, null, 0, 0, 224, "new ServerLink"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.ServerLink, 'class', {
      get: function() {
        function ServerLink() {
          module.exports.ServerLink.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        ServerLink.prototype = Object.create(module.exports.ServerLink.prototype);

        return ServerLink;
      }
    });
    Object.defineProperty(module.exports.ServerLink, "_", {enumerable: false,value:(function ServerLink(__obj__) {var returned = Object.create(module.exports.ServerLink.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.Link = function Link() {var __obj__ = (function(){return (([function() {
  return new O.Link();
}, null, null, 0, 0, 223, "new Link"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.Link, 'class', {
      get: function() {
        function Link() {
          module.exports.Link.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        Link.prototype = Object.create(module.exports.Link.prototype);

        return Link;
      }
    });
    Object.defineProperty(module.exports.Link, "_", {enumerable: false,value:(function Link(__obj__) {var returned = Object.create(module.exports.Link.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.ConnectionChannel = function ConnectionChannel() {var __obj__ = (function(){return (([function() {
  return new O.ConnectionChannel();
}, null, null, 0, 0, 84, "new ConnectionChannel"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.ConnectionChannel, 'class', {
      get: function() {
        function ConnectionChannel() {
          module.exports.ConnectionChannel.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.connected) { this.__obj__.connected$0 = function(){return (this.connected).call(this);}.bind(this);}if(proto.onDisconnected) { this.__obj__.onDisconnected$0 = function(){var returned = (this.onDisconnected).call(this);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}        }

        ConnectionChannel.prototype = Object.create(module.exports.ConnectionChannel.prototype);

        return ConnectionChannel;
      }
    });
    Object.defineProperty(module.exports.ConnectionChannel, "_", {enumerable: false,value:(function ConnectionChannel(__obj__) {var returned = Object.create(module.exports.ConnectionChannel.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.ConnectionChannel.prototype.connected = function(){return (this.__obj__.connected$0).call(this.__obj__);};module.exports.ConnectionChannel.prototype.onDisconnected = function(){var returned = (this.__obj__.onDisconnected$0).call(this.__obj__);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'ConnectionChannel' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.ClientConnection = function ClientConnection() {var __obj__ = (function(){return (([function() {
  return new O.ClientConnection();
}, null, null, 0, 0, 222, "new ClientConnection"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.ClientConnection, 'class', {
      get: function() {
        function ClientConnection() {
          module.exports.ClientConnection.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onDisconnected) { this.__obj__.onDisconnected$0 = function(){var returned = (this.onDisconnected).call(this);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}        }

        ClientConnection.prototype = Object.create(module.exports.ClientConnection.prototype);

        return ClientConnection;
      }
    });
    Object.defineProperty(module.exports.ClientConnection, "_", {enumerable: false,value:(function ClientConnection(__obj__) {var returned = Object.create(module.exports.ClientConnection.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.ClientConnection.prototype.onDisconnected = function(){var returned = (this.__obj__.onDisconnected$0).call(this.__obj__);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.ServerConnection = function ServerConnection() {var __obj__ = (function(){return (([function() {
  return new O.ServerConnection();
}, null, null, 0, 0, 221, "new ServerConnection"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.ServerConnection, 'class', {
      get: function() {
        function ServerConnection() {
          module.exports.ServerConnection.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onDisconnected) { this.__obj__.onDisconnected$0 = function(){var returned = (this.onDisconnected).call(this);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}        }

        ServerConnection.prototype = Object.create(module.exports.ServerConnection.prototype);

        return ServerConnection;
      }
    });
    Object.defineProperty(module.exports.ServerConnection, "_", {enumerable: false,value:(function ServerConnection(__obj__) {var returned = Object.create(module.exports.ServerConnection.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.ServerConnection.prototype.onDisconnected = function(){var returned = (this.__obj__.onDisconnected$0).call(this.__obj__);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.Connection = function Connection() {var __obj__ = (function(){return (([function() {
  return new O.Connection();
}, null, null, 0, 0, 220, "new Connection"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.Connection, 'class', {
      get: function() {
        function Connection() {
          module.exports.Connection.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onDisconnected) { this.__obj__.onDisconnected$0 = function(){var returned = (this.onDisconnected).call(this);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}        }

        Connection.prototype = Object.create(module.exports.Connection.prototype);

        return Connection;
      }
    });
    Object.defineProperty(module.exports.Connection, "_", {enumerable: false,value:(function Connection(__obj__) {var returned = Object.create(module.exports.Connection.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.Connection.prototype.onDisconnected = function(){var returned = (this.__obj__.onDisconnected$0).call(this.__obj__);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.foldList = function($nn,$nnn){$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnn);var returned = (init.globalFunctions.foldList).call(init.globalFunctions,$nn,$nnn);returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;};module.exports.DefaultDefNodes = function DefaultDefNodes() {var __obj__ = (function(){return (([function() {
  return new L.DefaultDefNodes();
}, null, null, 0, 0, 248, "new DefaultDefNodes"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.DefaultDefNodes, 'class', {
      get: function() {
        function DefaultDefNodes() {
          module.exports.DefaultDefNodes.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        DefaultDefNodes.prototype = Object.create(module.exports.DefaultDefNodes.prototype);

        return DefaultDefNodes;
      }
    });
    Object.defineProperty(module.exports.DefaultDefNodes, "_", {enumerable: false,value:(function DefaultDefNodes(__obj__) {var returned = Object.create(module.exports.DefaultDefNodes.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});Object.defineProperty(module.exports.DefaultDefNodes, "nameMap", {enumerable: true,get: function() { var returned = this.__obj__.nameMap;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.nameMap = v;}});Object.defineProperty(module.exports.DefaultDefNodes, "pathMap", {enumerable: true,get: function() { var returned = this.__obj__.pathMap;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.pathMap = v;}});module.exports.RemoveController = function RemoveController() {var __obj__ = (function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (([function(requester, path) {
  var t1 = new P._Future(0, $.Zone__current, null);
  t1.$builtinTypeInfo = [L.RequesterUpdate];
  t1 = new P._AsyncCompleter(t1);
  t1.$builtinTypeInfo = [L.RequesterUpdate];
  t1 = new L.RemoveController(t1, requester, path, null);
  t1._request = requester._sendRequest$2(P.LinkedHashMap__makeLiteral(["method", "remove", "path", path]), t1);
  return t1;
}, null, null, 4, 0, 256, 169, [], 107, [], "new RemoveController"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "completer", {enumerable: true,get: function() { var returned = this.__obj__.completer;return returned;},set: function(v) {this.__obj__.completer = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "future", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$future).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'RequesterUpdate' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$future = function() { return v; };}});};    Object.defineProperty(module.exports.RemoveController, 'class', {
      get: function() {
        function RemoveController() {
          module.exports.RemoveController.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onUpdate) { this.__obj__.onUpdate$4 = function($nn,$nnn,$nnnn,$nnnnn){$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnnn);$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'DSError' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }}return (this.onUpdate).call(this,$nn,$nnn,$nnnn,$nnnnn);}.bind(this);}if(proto.onDisconnect) { this.__obj__.onDisconnect$0 = function(){return (this.onDisconnect).call(this);}.bind(this);}if(proto.onReconnect) { this.__obj__.onReconnect$0 = function(){return (this.onReconnect).call(this);}.bind(this);}        }

        RemoveController.prototype = Object.create(module.exports.RemoveController.prototype);

        return RemoveController;
      }
    });
    Object.defineProperty(module.exports.RemoveController, "_", {enumerable: false,value:(function RemoveController(__obj__) {var returned = Object.create(module.exports.RemoveController.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "completer", {enumerable: true,get: function() { var returned = this.__obj__.completer;return returned;},set: function(v) {this.__obj__.completer = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "future", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$future).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'RequesterUpdate' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$future = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.RemoveController.prototype.onUpdate = function($nn,$nnn,$nnnn,$nnnnn){$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnnn);$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }}return (this.__obj__.onUpdate$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);};module.exports.RemoveController.prototype.onDisconnect = function(){return (this.__obj__.onDisconnect$0).call(this.__obj__);};module.exports.RemoveController.prototype.onReconnect = function(){return (this.__obj__.onReconnect$0).call(this.__obj__);};module.exports.SetController = function SetController() {var __obj__ = (function($nn,$nnn,$nnnn,$nnnnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}return (([function(requester, path, value, maxPermission) {
  var t1, reqMap;
  t1 = new P._Future(0, $.Zone__current, null);
  t1.$builtinTypeInfo = [L.RequesterUpdate];
  t1 = new P._AsyncCompleter(t1);
  t1.$builtinTypeInfo = [L.RequesterUpdate];
  t1 = new L.SetController(t1, requester, path, value, null);
  reqMap = P.LinkedHashMap__makeLiteral(["method", "set", "path", path, "value", value]);
  if (!J.$eq(maxPermission, 3)) {
    if (maxPermission >>> 0 !== maxPermission || maxPermission >= 5)
      return H.ioore(C.List_504, maxPermission);
    reqMap.$indexSet(0, "permit", C.List_504[maxPermission]);
  }
  t1._request = requester._sendRequest$2(reqMap, t1);
  return t1;
}, null, null, 6, 2, 257, 175, 169, [], 107, [], 22, [], 177, [], "new SetController"]
[0])).call(this,$nn,$nnn,$nnnn,$nnnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "completer", {enumerable: true,get: function() { var returned = this.__obj__.completer;return returned;},set: function(v) {this.__obj__.completer = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "value", {enumerable: true,get: function() { var returned = this.__obj__.value;return returned;},set: function(v) {this.__obj__.value = v;}});Object.defineProperty(this, "future", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$future).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'RequesterUpdate' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$future = function() { return v; };}});};    Object.defineProperty(module.exports.SetController, 'class', {
      get: function() {
        function SetController() {
          module.exports.SetController.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onUpdate) { this.__obj__.onUpdate$4 = function($nn,$nnn,$nnnn,$nnnnn){$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnnn);$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'DSError' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }}return (this.onUpdate).call(this,$nn,$nnn,$nnnn,$nnnnn);}.bind(this);}if(proto.onDisconnect) { this.__obj__.onDisconnect$0 = function(){return (this.onDisconnect).call(this);}.bind(this);}if(proto.onReconnect) { this.__obj__.onReconnect$0 = function(){return (this.onReconnect).call(this);}.bind(this);}        }

        SetController.prototype = Object.create(module.exports.SetController.prototype);

        return SetController;
      }
    });
    Object.defineProperty(module.exports.SetController, "_", {enumerable: false,value:(function SetController(__obj__) {var returned = Object.create(module.exports.SetController.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "completer", {enumerable: true,get: function() { var returned = this.__obj__.completer;return returned;},set: function(v) {this.__obj__.completer = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "value", {enumerable: true,get: function() { var returned = this.__obj__.value;return returned;},set: function(v) {this.__obj__.value = v;}});Object.defineProperty(this, "future", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$future).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'RequesterUpdate' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$future = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.SetController.prototype.onUpdate = function($nn,$nnn,$nnnn,$nnnnn){$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnnn);$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }}return (this.__obj__.onUpdate$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);};module.exports.SetController.prototype.onDisconnect = function(){return (this.__obj__.onDisconnect$0).call(this.__obj__);};module.exports.SetController.prototype.onReconnect = function(){return (this.__obj__.onReconnect$0).call(this.__obj__);};module.exports.InvokeController = function InvokeController() {var __obj__ = (function($nn,$nnn,$nnnn,$nnnnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }objEach($nnnn, function(a, i) {this[i] = dynamicTo(a);}, $nnnn);var elms = Object.keys($nnnn).reduce(function(arr, key) { arr.push(key); arr.push($nnnn[key]); return arr; }, []);$nnnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}return (([function(node, requester, params, maxPermission) {
  var t1, t2, reqMap;
  t1 = new L.InvokeController(node, requester, null, null, null, null);
  t2 = P.StreamController_StreamController(null, null, null, null, false, L.RequesterInvokeUpdate);
  t1._requester$_controller = t2;
  t2.get$done().then$1(t1.get$_onUnsubscribe());
  t1._requester$_stream = J.get$stream$x(t1._requester$_controller);
  reqMap = P.LinkedHashMap__makeLiteral(["method", "invoke", "path", node.get$remotePath(), "params", params]);
  if (!J.$eq(maxPermission, 3)) {
    if (maxPermission >>> 0 !== maxPermission || maxPermission >= 5)
      return H.ioore(C.List_504, maxPermission);
    reqMap.$indexSet(0, "permit", C.List_504[maxPermission]);
  }
  t1._cachedColumns = L.InvokeController_getNodeColumns(node);
  t1._request = requester._sendRequest$2(reqMap, t1);
  return t1;
}, null, null, 6, 2, 252, 175, 159, [], 169, [], 176, [], 177, [], "new InvokeController"]
[0])).call(this,$nn,$nnn,$nnnn,$nnnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});};    Object.defineProperty(module.exports.InvokeController, 'class', {
      get: function() {
        function InvokeController() {
          module.exports.InvokeController.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onUpdate) { this.__obj__.onUpdate$4 = function($nn,$nnn,$nnnn,$nnnnn){$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnnn);$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'DSError' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }}return (this.onUpdate).call(this,$nn,$nnn,$nnnn,$nnnnn);}.bind(this);}if(proto.onDisconnect) { this.__obj__.onDisconnect$0 = function(){return (this.onDisconnect).call(this);}.bind(this);}if(proto.onReconnect) { this.__obj__.onReconnect$0 = function(){return (this.onReconnect).call(this);}.bind(this);}        }

        InvokeController.prototype = Object.create(module.exports.InvokeController.prototype);

        return InvokeController;
      }
    });
    Object.defineProperty(module.exports.InvokeController, "_", {enumerable: false,value:(function InvokeController(__obj__) {var returned = Object.create(module.exports.InvokeController.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});}.bind(returned))();return returned;})});module.exports.InvokeController.getNodeColumns = function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }var returned = (init.allClasses.InvokeController.InvokeController_getNodeColumns).call(this,$nn);returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;};module.exports.InvokeController.prototype.onUpdate = function($nn,$nnn,$nnnn,$nnnnn){$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnnn);$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }}return (this.__obj__.onUpdate$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);};module.exports.InvokeController.prototype.onDisconnect = function(){return (this.__obj__.onDisconnect$0).call(this.__obj__);};module.exports.InvokeController.prototype.onReconnect = function(){return (this.__obj__.onReconnect$0).call(this.__obj__);};module.exports.RequesterInvokeUpdate = function RequesterInvokeUpdate() {var __obj__ = (function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {this[i] = a;}, $nnnn);$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {if(!$nnnnnn.__isWrapped__) { $nnnnnn = $nnnnnn.__obj__; }}return (([function(updates, rawColumns, columns, streamStatus, error) {
  return new L.RequesterInvokeUpdate(rawColumns, columns, updates, error, null, streamStatus);
}, null, null, 8, 2, 250, 35, 172, [], 173, [], 144, [], 174, [], 17, [], "new RequesterInvokeUpdate"]
[0])).call(this,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "rawColumns", {enumerable: true,get: function() { var returned = this.__obj__.rawColumns;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.rawColumns = v;}});Object.defineProperty(this, "columns", {enumerable: true,get: function() { var returned = this.__obj__.columns;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.columns = v;}});Object.defineProperty(this, "updates", {enumerable: true,get: function() { var returned = this.__obj__.updates;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.updates = v;}});Object.defineProperty(this, "error", {enumerable: true,get: function() { var returned = this.__obj__.error;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'DSError' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.error = v;}});Object.defineProperty(this, "rows", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$rows).call(this.__obj__);}).apply(this, arguments);returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = [].concat(this[i]);this[i].forEach(function(a, i) {this[i] = dynamicFrom(a);}, this[i]);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = [].concat(this[i]);this[i].forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, this[i]);this[i] = a;}, v);this.__obj__.get$rows = function() { return v; };}});Object.defineProperty(this, "streamStatus", {enumerable: true,get: function() { var returned = this.__obj__.streamStatus;return returned;},set: function(v) {this.__obj__.streamStatus = v;}});};    Object.defineProperty(module.exports.RequesterInvokeUpdate, 'class', {
      get: function() {
        function RequesterInvokeUpdate() {
          module.exports.RequesterInvokeUpdate.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        RequesterInvokeUpdate.prototype = Object.create(module.exports.RequesterInvokeUpdate.prototype);

        return RequesterInvokeUpdate;
      }
    });
    Object.defineProperty(module.exports.RequesterInvokeUpdate, "_", {enumerable: false,value:(function RequesterInvokeUpdate(__obj__) {var returned = Object.create(module.exports.RequesterInvokeUpdate.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "rawColumns", {enumerable: true,get: function() { var returned = this.__obj__.rawColumns;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.rawColumns = v;}});Object.defineProperty(this, "columns", {enumerable: true,get: function() { var returned = this.__obj__.columns;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.columns = v;}});Object.defineProperty(this, "updates", {enumerable: true,get: function() { var returned = this.__obj__.updates;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.updates = v;}});Object.defineProperty(this, "error", {enumerable: true,get: function() { var returned = this.__obj__.error;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'DSError' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.error = v;}});Object.defineProperty(this, "rows", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$rows).call(this.__obj__);}).apply(this, arguments);returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = [].concat(this[i]);this[i].forEach(function(a, i) {this[i] = dynamicFrom(a);}, this[i]);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = [].concat(this[i]);this[i].forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, this[i]);this[i] = a;}, v);this.__obj__.get$rows = function() { return v; };}});Object.defineProperty(this, "streamStatus", {enumerable: true,get: function() { var returned = this.__obj__.streamStatus;return returned;},set: function(v) {this.__obj__.streamStatus = v;}});}.bind(returned))();return returned;})});module.exports.ReqSubscribeController = function ReqSubscribeController() {var __obj__ = (function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (([function(node, requester) {
  var t1, t2;
  t1 = new L.ReqSubscribeController(node, requester, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), 0, null, null);
  t2 = requester.get$nextSid();
  requester.set$nextSid(J.$add$ins(t2, 1));
  t1.sid = t2;
  return t1;
}, null, null, 4, 0, 255, 159, [], 169, [], "new ReqSubscribeController"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "maxCache", {enumerable: true,get: function() { var returned = this.__obj__.maxCache;return returned;},set: function(v) {this.__obj__.maxCache = v;}});Object.defineProperty(this, "sid", {enumerable: true,get: function() { var returned = this.__obj__.sid;return returned;},set: function(v) {this.__obj__.sid = v;}});};    Object.defineProperty(module.exports.ReqSubscribeController, 'class', {
      get: function() {
        function ReqSubscribeController() {
          module.exports.ReqSubscribeController.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.listen) { this.__obj__.listen$2 = function($nn,$nnn){return (this.listen).call(this,$nn,$nnn);}.bind(this);}if(proto.unlisten) { this.__obj__.unlisten$1 = function($nn){return (this.unlisten).call(this,$nn);}.bind(this);}if(proto.updateCacheLevel) { this.__obj__.updateCacheLevel$0 = function(){return (this.updateCacheLevel).call(this);}.bind(this);}if(proto.addValue) { this.__obj__.addValue$1 = function($nn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'ValueUpdate' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }return (this.addValue).call(this,$nn);}.bind(this);}        }

        ReqSubscribeController.prototype = Object.create(module.exports.ReqSubscribeController.prototype);

        return ReqSubscribeController;
      }
    });
    Object.defineProperty(module.exports.ReqSubscribeController, "_", {enumerable: false,value:(function ReqSubscribeController(__obj__) {var returned = Object.create(module.exports.ReqSubscribeController.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "maxCache", {enumerable: true,get: function() { var returned = this.__obj__.maxCache;return returned;},set: function(v) {this.__obj__.maxCache = v;}});Object.defineProperty(this, "sid", {enumerable: true,get: function() { var returned = this.__obj__.sid;return returned;},set: function(v) {this.__obj__.sid = v;}});}.bind(returned))();return returned;})});module.exports.ReqSubscribeController.prototype.listen = function($nn,$nnn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.listen$2).call(this.__obj__,$nn,$nnn);};module.exports.ReqSubscribeController.prototype.unlisten = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.unlisten$1).call(this.__obj__,$nn);};module.exports.ReqSubscribeController.prototype.updateCacheLevel = function(){return (this.__obj__.updateCacheLevel$0).call(this.__obj__);};module.exports.ReqSubscribeController.prototype.addValue = function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (this.__obj__.addValue$1).call(this.__obj__,$nn);};module.exports.SubscribeRequest = function SubscribeRequest() {var __obj__ = (function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (([function(requester, rid) {
  var t1 = new L.SubscribeRequest(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, L.ReqSubscribeController), P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, L.ReqSubscribeController), P.HashSet_HashSet(null, null, null, P.String), [], requester, rid, null, new L.SubscribeController(null), false, "initialize");
  t1.SubscribeRequest$2(requester, rid);
  return t1;
}, null, null, 4, 0, 259, 169, [], 170, [], "new SubscribeRequest"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "subsriptions", {enumerable: true,get: function() { var returned = this.__obj__.subsriptions;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.subsriptions = v;}});Object.defineProperty(this, "subsriptionids", {enumerable: true,get: function() { var returned = this.__obj__.subsriptionids;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.subsriptionids = v;}});Object.defineProperty(this, "toRemove", {enumerable: true,get: function() { var returned = this.__obj__.toRemove;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.toRemove = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});Object.defineProperty(this, "data", {enumerable: true,get: function() { var returned = this.__obj__.data;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.data = v;}});Object.defineProperty(this, "updater", {enumerable: true,get: function() { var returned = this.__obj__.updater;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RequestUpdater' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.updater = v;}});Object.defineProperty(this, "streamStatus", {enumerable: true,get: function() { var returned = this.__obj__.streamStatus;return returned;},set: function(v) {this.__obj__.streamStatus = v;}});Object.defineProperty(this, "isClosed", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isClosed).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isClosed = function() { return v; };}});};    Object.defineProperty(module.exports.SubscribeRequest, 'class', {
      get: function() {
        function SubscribeRequest() {
          module.exports.SubscribeRequest.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.resend) { this.__obj__.resend$0 = function(){return (this.resend).call(this);}.bind(this);}if(proto.addSubscription) { this.__obj__.addSubscription$2 = function($nn,$nnn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'ReqSubscribeController' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }return (this.addSubscription).call(this,$nn,$nnn);}.bind(this);}if(proto.removeSubscription) { this.__obj__.removeSubscription$1 = function($nn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'ReqSubscribeController' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }return (this.removeSubscription).call(this,$nn);}.bind(this);}if(proto.close) { this.__obj__.close$0 = function(){return (this.close).call(this);}.bind(this);}        }

        SubscribeRequest.prototype = Object.create(module.exports.SubscribeRequest.prototype);

        return SubscribeRequest;
      }
    });
    Object.defineProperty(module.exports.SubscribeRequest, "_", {enumerable: false,value:(function SubscribeRequest(__obj__) {var returned = Object.create(module.exports.SubscribeRequest.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "subsriptions", {enumerable: true,get: function() { var returned = this.__obj__.subsriptions;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.subsriptions = v;}});Object.defineProperty(this, "subsriptionids", {enumerable: true,get: function() { var returned = this.__obj__.subsriptionids;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.subsriptionids = v;}});Object.defineProperty(this, "toRemove", {enumerable: true,get: function() { var returned = this.__obj__.toRemove;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.toRemove = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});Object.defineProperty(this, "data", {enumerable: true,get: function() { var returned = this.__obj__.data;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.data = v;}});Object.defineProperty(this, "updater", {enumerable: true,get: function() { var returned = this.__obj__.updater;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RequestUpdater' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.updater = v;}});Object.defineProperty(this, "streamStatus", {enumerable: true,get: function() { var returned = this.__obj__.streamStatus;return returned;},set: function(v) {this.__obj__.streamStatus = v;}});Object.defineProperty(this, "isClosed", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isClosed).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isClosed = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.SubscribeRequest.prototype.resend = function(){return (this.__obj__.resend$0).call(this.__obj__);};module.exports.SubscribeRequest.prototype.addSubscription = function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (this.__obj__.addSubscription$2).call(this.__obj__,$nn,$nnn);};module.exports.SubscribeRequest.prototype.removeSubscription = function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (this.__obj__.removeSubscription$1).call(this.__obj__,$nn);};module.exports.SubscribeRequest.prototype.close = function(){return (this.__obj__.close$0).call(this.__obj__);};module.exports.SubscribeController = function SubscribeController() {var __obj__ = (function(){return (([function() {
  return new L.SubscribeController(null);
}, null, null, 0, 0, 5, "new SubscribeController"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "request", {enumerable: true,get: function() { var returned = this.__obj__.request;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'SubscribeRequest' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.request = v;}});};    Object.defineProperty(module.exports.SubscribeController, 'class', {
      get: function() {
        function SubscribeController() {
          module.exports.SubscribeController.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onDisconnect) { this.__obj__.onDisconnect$0 = function(){return (this.onDisconnect).call(this);}.bind(this);}if(proto.onReconnect) { this.__obj__.onReconnect$0 = function(){return (this.onReconnect).call(this);}.bind(this);}if(proto.onUpdate) { this.__obj__.onUpdate$4 = function($nn,$nnn,$nnnn,$nnnnn){$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnnn);if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'DSError' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }return (this.onUpdate).call(this,$nn,$nnn,$nnnn,$nnnnn);}.bind(this);}        }

        SubscribeController.prototype = Object.create(module.exports.SubscribeController.prototype);

        return SubscribeController;
      }
    });
    Object.defineProperty(module.exports.SubscribeController, "_", {enumerable: false,value:(function SubscribeController(__obj__) {var returned = Object.create(module.exports.SubscribeController.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "request", {enumerable: true,get: function() { var returned = this.__obj__.request;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'SubscribeRequest' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.request = v;}});}.bind(returned))();return returned;})});module.exports.SubscribeController.prototype.onDisconnect = function(){return (this.__obj__.onDisconnect$0).call(this.__obj__);};module.exports.SubscribeController.prototype.onReconnect = function(){return (this.__obj__.onReconnect$0).call(this.__obj__);};module.exports.SubscribeController.prototype.onUpdate = function($nn,$nnn,$nnnn,$nnnnn){$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnnn);if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }return (this.__obj__.onUpdate$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);};module.exports.ReqSubscribeListener = function ReqSubscribeListener() {var __obj__ = (function($nn,$nnn,$nnnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (([function(requester, path, callback) {
  return new L.ReqSubscribeListener(callback, requester, path);
}, null, null, 6, 0, 258, 169, [], 107, [], 47, [], "new ReqSubscribeListener"]
[0])).call(this,$nn,$nnn,$nnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "callback", {enumerable: true,get: function() { var returned = this.__obj__.callback;return returned;},set: function(v) {this.__obj__.callback = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "isPaused", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isPaused).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isPaused = function() { return v; };}});};    Object.defineProperty(module.exports.ReqSubscribeListener, 'class', {
      get: function() {
        function ReqSubscribeListener() {
          module.exports.ReqSubscribeListener.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.cancel) { this.__obj__.cancel$0 = function(){var returned = (this.cancel).call(this);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}if(proto.asFuture) { this.__obj__.asFuture$1 = function(dynamic){dynamic = typeof(dynamic) === 'undefined' ? null : dynamic;if(dynamic !== null) {dynamic = dynamicFrom(dynamic);}var returned = (this.asFuture).call(this,dynamic);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}if(proto.onData) { this.__obj__.onData$1 = function($nn){return (this.onData).call(this,$nn);}.bind(this);}if(proto.onDone) { this.__obj__.onDone$1 = function($nn){return (this.onDone).call(this,$nn);}.bind(this);}if(proto.onError) { this.__obj__.onError$1 = function($nn){return (this.onError).call(this,$nn);}.bind(this);}if(proto.pause) { this.__obj__.pause$1 = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {var promise = new $Promise(function(then, error) {$nn.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});$nn = promise;}return (this.pause).call(this,$nn);}.bind(this);}if(proto.resume) { this.__obj__.resume$0 = function(){return (this.resume).call(this);}.bind(this);}        }

        ReqSubscribeListener.prototype = Object.create(module.exports.ReqSubscribeListener.prototype);

        return ReqSubscribeListener;
      }
    });
    Object.defineProperty(module.exports.ReqSubscribeListener, "_", {enumerable: false,value:(function ReqSubscribeListener(__obj__) {var returned = Object.create(module.exports.ReqSubscribeListener.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "callback", {enumerable: true,get: function() { var returned = this.__obj__.callback;return returned;},set: function(v) {this.__obj__.callback = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "isPaused", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isPaused).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isPaused = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.ReqSubscribeListener.prototype.cancel = function(){var returned = (this.__obj__.cancel$0).call(this.__obj__);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.ReqSubscribeListener.prototype.asFuture = function(dynamic){dynamic = typeof(dynamic) === 'undefined' ? null : dynamic;if(dynamic !== null) {dynamic = dynamicTo(dynamic);}var returned = (this.__obj__.asFuture$1).call(this.__obj__,dynamic);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.ReqSubscribeListener.prototype.onData = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.onData$1).call(this.__obj__,$nn);};module.exports.ReqSubscribeListener.prototype.onDone = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);return returned;}};return (this.__obj__.onDone$1).call(this.__obj__,$nn);};module.exports.ReqSubscribeListener.prototype.onError = function($nn){return (this.__obj__.onError$1).call(this.__obj__,$nn);};module.exports.ReqSubscribeListener.prototype.pause = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));$nn.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});$nn = completer.future;}return (this.__obj__.pause$1).call(this.__obj__,$nn);};module.exports.ReqSubscribeListener.prototype.resume = function(){return (this.__obj__.resume$0).call(this.__obj__);};module.exports.ListController = function ListController() {var __obj__ = (function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (([function(node, requester) {
  var t1 = new L.ListController(node, requester, null, null, null, P.LinkedHashSet_LinkedHashSet(null, null, null, P.String), null, true, false);
  t1._requester$_controller = Q.BroadcastStreamController$(t1.get$onStartListen(), t1.get$_onAllCancel(), t1.get$_requester$_onListen(), L.RequesterListUpdate);
  return t1;
}, null, null, 4, 0, 255, 159, [], 169, [], "new ListController"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "request", {enumerable: true,get: function() { var returned = this.__obj__.request;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Request' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.request = v;}});Object.defineProperty(this, "disconnectTs", {enumerable: true,get: function() { var returned = this.__obj__.disconnectTs;return returned;},set: function(v) {this.__obj__.disconnectTs = v;}});Object.defineProperty(this, "changes", {enumerable: true,get: function() { var returned = this.__obj__.changes;return returned;},set: function(v) {this.__obj__.changes = v;}});Object.defineProperty(this, "stream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$stream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$stream = function() { return v; };}});Object.defineProperty(this, "initialized", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$initialized).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$initialized = function() { return v; };}});};    Object.defineProperty(module.exports.ListController, 'class', {
      get: function() {
        function ListController() {
          module.exports.ListController.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onDisconnect) { this.__obj__.onDisconnect$0 = function(){return (this.onDisconnect).call(this);}.bind(this);}if(proto.onReconnect) { this.__obj__.onReconnect$0 = function(){return (this.onReconnect).call(this);}.bind(this);}if(proto.onUpdate) { this.__obj__.onUpdate$4 = function($nn,$nnn,$nnnn,$nnnnn){$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnnn);$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'DSError' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }}return (this.onUpdate).call(this,$nn,$nnn,$nnnn,$nnnnn);}.bind(this);}if(proto.loadProfile) { this.__obj__.loadProfile$1 = function($nn){return (this.loadProfile).call(this,$nn);}.bind(this);}if(proto.onProfileUpdated) { this.__obj__.onProfileUpdated$0 = function(){return (this.onProfileUpdated).call(this);}.bind(this);}if(proto.onStartListen) { this.__obj__.onStartListen$0 = function(){return (this.onStartListen).call(this);}.bind(this);}        }

        ListController.prototype = Object.create(module.exports.ListController.prototype);

        return ListController;
      }
    });
    Object.defineProperty(module.exports.ListController, "_", {enumerable: false,value:(function ListController(__obj__) {var returned = Object.create(module.exports.ListController.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "request", {enumerable: true,get: function() { var returned = this.__obj__.request;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Request' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.request = v;}});Object.defineProperty(this, "disconnectTs", {enumerable: true,get: function() { var returned = this.__obj__.disconnectTs;return returned;},set: function(v) {this.__obj__.disconnectTs = v;}});Object.defineProperty(this, "changes", {enumerable: true,get: function() { var returned = this.__obj__.changes;return returned;},set: function(v) {this.__obj__.changes = v;}});Object.defineProperty(this, "stream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$stream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$stream = function() { return v; };}});Object.defineProperty(this, "initialized", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$initialized).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$initialized = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.ListController.prototype.onDisconnect = function(){return (this.__obj__.onDisconnect$0).call(this.__obj__);};module.exports.ListController.prototype.onReconnect = function(){return (this.__obj__.onReconnect$0).call(this.__obj__);};module.exports.ListController.prototype.onUpdate = function($nn,$nnn,$nnnn,$nnnnn){$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnn);$nnnn = [].concat($nnnn);$nnnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnnn);$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }}return (this.__obj__.onUpdate$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);};module.exports.ListController.prototype.loadProfile = function($nn){return (this.__obj__.loadProfile$1).call(this.__obj__,$nn);};module.exports.ListController.prototype.onProfileUpdated = function(){return (this.__obj__.onProfileUpdated$0).call(this.__obj__);};module.exports.ListController.prototype.onStartListen = function(){return (this.__obj__.onStartListen$0).call(this.__obj__);};module.exports.ListDefListener = function ListDefListener() {var __obj__ = (function($nn,$nnn,$nnnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }$nnnn = {call$0: function() {var returned = $nnnn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (([function(node, requester, callback) {
  var t1 = new L.ListDefListener(node, requester, null, false);
  t1.ListDefListener$3(node, requester, callback);
  return t1;
}, null, null, 6, 0, 254, 159, [], 169, [], 47, [], "new ListDefListener"]
[0])).call(this,$nn,$nnn,$nnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "listener", {enumerable: true,get: function() { var returned = this.__obj__.listener;return returned;},set: function(v) {this.__obj__.listener = v;}});Object.defineProperty(this, "ready", {enumerable: true,get: function() { var returned = this.__obj__.ready;return returned;},set: function(v) {this.__obj__.ready = v;}});};    Object.defineProperty(module.exports.ListDefListener, 'class', {
      get: function() {
        function ListDefListener() {
          module.exports.ListDefListener.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.cancel) { this.__obj__.cancel$0 = function(){return (this.cancel).call(this);}.bind(this);}        }

        ListDefListener.prototype = Object.create(module.exports.ListDefListener.prototype);

        return ListDefListener;
      }
    });
    Object.defineProperty(module.exports.ListDefListener, "_", {enumerable: false,value:(function ListDefListener(__obj__) {var returned = Object.create(module.exports.ListDefListener.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "listener", {enumerable: true,get: function() { var returned = this.__obj__.listener;return returned;},set: function(v) {this.__obj__.listener = v;}});Object.defineProperty(this, "ready", {enumerable: true,get: function() { var returned = this.__obj__.ready;return returned;},set: function(v) {this.__obj__.ready = v;}});}.bind(returned))();return returned;})});module.exports.ListDefListener.prototype.cancel = function(){return (this.__obj__.cancel$0).call(this.__obj__);};module.exports.RequesterListUpdate = function RequesterListUpdate() {var __obj__ = (function($nn,$nnn,$nnnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {this[i] = a;}, $nnn);return (([function(node, changes, streamStatus) {
  return new L.RequesterListUpdate(changes, node, streamStatus);
}, null, null, 6, 0, 253, 159, [], 178, [], 174, [], "new RequesterListUpdate"]
[0])).call(this,$nn,$nnn,$nnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "changes", {enumerable: true,get: function() { var returned = this.__obj__.changes;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.changes = v;}});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "streamStatus", {enumerable: true,get: function() { var returned = this.__obj__.streamStatus;return returned;},set: function(v) {this.__obj__.streamStatus = v;}});};    Object.defineProperty(module.exports.RequesterListUpdate, 'class', {
      get: function() {
        function RequesterListUpdate() {
          module.exports.RequesterListUpdate.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        RequesterListUpdate.prototype = Object.create(module.exports.RequesterListUpdate.prototype);

        return RequesterListUpdate;
      }
    });
    Object.defineProperty(module.exports.RequesterListUpdate, "_", {enumerable: false,value:(function RequesterListUpdate(__obj__) {var returned = Object.create(module.exports.RequesterListUpdate.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "changes", {enumerable: true,get: function() { var returned = this.__obj__.changes;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.changes = v;}});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "streamStatus", {enumerable: true,get: function() { var returned = this.__obj__.streamStatus;return returned;},set: function(v) {this.__obj__.streamStatus = v;}});}.bind(returned))();return returned;})});module.exports.RemoteDefNode = function RemoteDefNode() {var __obj__ = (function($nn){return (([function(path) {
  var t1 = new L.RemoteDefNode(path, false, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
  t1._getRawName$0();
  return t1;
}, null, null, 2, 0, 13, 107, [], "new RemoteDefNode"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});Object.defineProperty(this, "remotePath", {enumerable: true,get: function() { var returned = this.__obj__.remotePath;return returned;},set: function(v) {this.__obj__.remotePath = v;}});Object.defineProperty(this, "listed", {enumerable: true,get: function() { var returned = this.__obj__.listed;return returned;},set: function(v) {this.__obj__.listed = v;}});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});};    Object.defineProperty(module.exports.RemoteDefNode, 'class', {
      get: function() {
        function RemoteDefNode() {
          module.exports.RemoteDefNode.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.getAttribute) { this.__obj__.getAttribute$1 = function($nn){return (this.getAttribute).call(this,$nn);}.bind(this);}if(proto.getConfig) { this.__obj__.getConfig$1 = function($nn){return (this.getConfig).call(this,$nn);}.bind(this);}if(proto.addChild) { this.__obj__.addChild$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Node' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.addChild).call(this,$nn,$nnn);}.bind(this);}if(proto.removeChild) { this.__obj__.removeChild$1 = function(dynamic){dynamic = dynamicFrom(dynamic);return (this.removeChild).call(this,dynamic);}.bind(this);}if(proto.getChild) { this.__obj__.getChild$1 = function($nn){var returned = (this.getChild).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.get) { this.__obj__.$get$1 = function($nn){return (this.get).call(this,$nn);}.bind(this);}if(proto.forEachChild) { this.__obj__.forEachChild$1 = function($nn){return (this.forEachChild).call(this,$nn);}.bind(this);}if(proto.getSimpleMap) { this.__obj__.getSimpleMap$0 = function(){var returned = (this.getSimpleMap).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.isUpdated) { this.__obj__.isUpdated$0 = function(){return (this.isUpdated).call(this);}.bind(this);}if(proto.isSelfUpdated) { this.__obj__.isSelfUpdated$0 = function(){return (this.isSelfUpdated).call(this);}.bind(this);}if(proto.createListController) { this.__obj__.createListController$1 = function($nn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'Requester' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }var returned = (this.createListController).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.updateRemoteChildData) { this.__obj__.updateRemoteChildData$2 = function($nn,$nnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'RemoteNodeCache' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.updateRemoteChildData).call(this,$nn,$nnn);}.bind(this);}if(proto.resetNodeCache) { this.__obj__.resetNodeCache$0 = function(){return (this.resetNodeCache).call(this);}.bind(this);}        }

        RemoteDefNode.prototype = Object.create(module.exports.RemoteDefNode.prototype);

        return RemoteDefNode;
      }
    });
    Object.defineProperty(module.exports.RemoteDefNode, "_", {enumerable: false,value:(function RemoteDefNode(__obj__) {var returned = Object.create(module.exports.RemoteDefNode.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});Object.defineProperty(this, "remotePath", {enumerable: true,get: function() { var returned = this.__obj__.remotePath;return returned;},set: function(v) {this.__obj__.remotePath = v;}});Object.defineProperty(this, "listed", {enumerable: true,get: function() { var returned = this.__obj__.listed;return returned;},set: function(v) {this.__obj__.listed = v;}});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});}.bind(returned))();return returned;})});module.exports.RemoteDefNode.prototype.getAttribute = function($nn){return (this.__obj__.getAttribute$1).call(this.__obj__,$nn);};module.exports.RemoteDefNode.prototype.getConfig = function($nn){return (this.__obj__.getConfig$1).call(this.__obj__,$nn);};module.exports.RemoteDefNode.prototype.addChild = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.addChild$2).call(this.__obj__,$nn,$nnn);};module.exports.RemoteDefNode.prototype.removeChild = function(dynamic){dynamic = dynamicTo(dynamic);return (this.__obj__.removeChild$1).call(this.__obj__,dynamic);};module.exports.RemoteDefNode.prototype.getChild = function($nn){var returned = (this.__obj__.getChild$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RemoteDefNode.prototype.get = function($nn){return (this.__obj__.$get$1).call(this.__obj__,$nn);};module.exports.RemoteDefNode.prototype.forEachChild = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.forEachChild$1).call(this.__obj__,$nn);};module.exports.RemoteDefNode.prototype.getSimpleMap = function(){var returned = (this.__obj__.getSimpleMap$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.RemoteDefNode.prototype.isUpdated = function(){return (this.__obj__.isUpdated$0).call(this.__obj__);};module.exports.RemoteDefNode.prototype.isSelfUpdated = function(){return (this.__obj__.isSelfUpdated$0).call(this.__obj__);};module.exports.RemoteDefNode.prototype.createListController = function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }var returned = (this.__obj__.createListController$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ListController' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RemoteDefNode.prototype.updateRemoteChildData = function($nn,$nnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.updateRemoteChildData$2).call(this.__obj__,$nn,$nnn);};module.exports.RemoteDefNode.prototype.resetNodeCache = function(){return (this.__obj__.resetNodeCache$0).call(this.__obj__);};module.exports.RemoteNode = function RemoteNode() {var __obj__ = (function($nn){return (([function(remotePath) {
  var t1 = new L.RemoteNode(remotePath, false, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
  t1._getRawName$0();
  return t1;
}, null, null, 2, 0, 13, 168, [], "new RemoteNode"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "remotePath", {enumerable: true,get: function() { var returned = this.__obj__.remotePath;return returned;},set: function(v) {this.__obj__.remotePath = v;}});Object.defineProperty(this, "listed", {enumerable: true,get: function() { var returned = this.__obj__.listed;return returned;},set: function(v) {this.__obj__.listed = v;}});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});};    Object.defineProperty(module.exports.RemoteNode, 'class', {
      get: function() {
        function RemoteNode() {
          module.exports.RemoteNode.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.isUpdated) { this.__obj__.isUpdated$0 = function(){return (this.isUpdated).call(this);}.bind(this);}if(proto.isSelfUpdated) { this.__obj__.isSelfUpdated$0 = function(){return (this.isSelfUpdated).call(this);}.bind(this);}if(proto.createListController) { this.__obj__.createListController$1 = function($nn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'Requester' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }var returned = (this.createListController).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.updateRemoteChildData) { this.__obj__.updateRemoteChildData$2 = function($nn,$nnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'RemoteNodeCache' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.updateRemoteChildData).call(this,$nn,$nnn);}.bind(this);}if(proto.resetNodeCache) { this.__obj__.resetNodeCache$0 = function(){return (this.resetNodeCache).call(this);}.bind(this);}if(proto.getAttribute) { this.__obj__.getAttribute$1 = function($nn){return (this.getAttribute).call(this,$nn);}.bind(this);}if(proto.getConfig) { this.__obj__.getConfig$1 = function($nn){return (this.getConfig).call(this,$nn);}.bind(this);}if(proto.addChild) { this.__obj__.addChild$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Node' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.addChild).call(this,$nn,$nnn);}.bind(this);}if(proto.removeChild) { this.__obj__.removeChild$1 = function(dynamic){dynamic = dynamicFrom(dynamic);return (this.removeChild).call(this,dynamic);}.bind(this);}if(proto.getChild) { this.__obj__.getChild$1 = function($nn){var returned = (this.getChild).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.get) { this.__obj__.$get$1 = function($nn){return (this.get).call(this,$nn);}.bind(this);}if(proto.forEachChild) { this.__obj__.forEachChild$1 = function($nn){return (this.forEachChild).call(this,$nn);}.bind(this);}if(proto.getSimpleMap) { this.__obj__.getSimpleMap$0 = function(){var returned = (this.getSimpleMap).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}        }

        RemoteNode.prototype = Object.create(module.exports.RemoteNode.prototype);

        return RemoteNode;
      }
    });
    Object.defineProperty(module.exports.RemoteNode, "_", {enumerable: false,value:(function RemoteNode(__obj__) {var returned = Object.create(module.exports.RemoteNode.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "remotePath", {enumerable: true,get: function() { var returned = this.__obj__.remotePath;return returned;},set: function(v) {this.__obj__.remotePath = v;}});Object.defineProperty(this, "listed", {enumerable: true,get: function() { var returned = this.__obj__.listed;return returned;},set: function(v) {this.__obj__.listed = v;}});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});}.bind(returned))();return returned;})});module.exports.RemoteNode.prototype.isUpdated = function(){return (this.__obj__.isUpdated$0).call(this.__obj__);};module.exports.RemoteNode.prototype.isSelfUpdated = function(){return (this.__obj__.isSelfUpdated$0).call(this.__obj__);};module.exports.RemoteNode.prototype.createListController = function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }var returned = (this.__obj__.createListController$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ListController' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RemoteNode.prototype.updateRemoteChildData = function($nn,$nnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.updateRemoteChildData$2).call(this.__obj__,$nn,$nnn);};module.exports.RemoteNode.prototype.resetNodeCache = function(){return (this.__obj__.resetNodeCache$0).call(this.__obj__);};module.exports.RemoteNode.prototype.getAttribute = function($nn){return (this.__obj__.getAttribute$1).call(this.__obj__,$nn);};module.exports.RemoteNode.prototype.getConfig = function($nn){return (this.__obj__.getConfig$1).call(this.__obj__,$nn);};module.exports.RemoteNode.prototype.addChild = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.addChild$2).call(this.__obj__,$nn,$nnn);};module.exports.RemoteNode.prototype.removeChild = function(dynamic){dynamic = dynamicTo(dynamic);return (this.__obj__.removeChild$1).call(this.__obj__,dynamic);};module.exports.RemoteNode.prototype.getChild = function($nn){var returned = (this.__obj__.getChild$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RemoteNode.prototype.get = function($nn){return (this.__obj__.$get$1).call(this.__obj__,$nn);};module.exports.RemoteNode.prototype.forEachChild = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.forEachChild$1).call(this.__obj__,$nn);};module.exports.RemoteNode.prototype.getSimpleMap = function(){var returned = (this.__obj__.getSimpleMap$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.RemoteNodeCache = function RemoteNodeCache() {var __obj__ = (function(){return (([function() {
  return new L.RemoteNodeCache(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, L.RemoteNode));
}, null, null, 0, 0, 5, "new RemoteNodeCache"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.RemoteNodeCache, 'class', {
      get: function() {
        function RemoteNodeCache() {
          module.exports.RemoteNodeCache.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.getRemoteNode) { this.__obj__.getRemoteNode$1 = function($nn){var returned = (this.getRemoteNode).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.getDefNode) { this.__obj__.getDefNode$2 = function($nn,$nnn){var returned = (this.getDefNode).call(this,$nn,$nnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.updateRemoteChildNode) { this.__obj__.updateRemoteChildNode$3 = function($nn,$nnn,$nnnn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'RemoteNode' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }          if($nnnn.constructor.name === '_JsonMap') {
            $nnnn = $nnnn._original;
            Object.keys($nnnn).forEach(function(key) { $nnnn[key] = dynamicFrom($nnnn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nnnn._strings) {
              objEach($nnnn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nnnn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nnnn[key] = values[index]; });}var returned = (this.updateRemoteChildNode).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}        }

        RemoteNodeCache.prototype = Object.create(module.exports.RemoteNodeCache.prototype);

        return RemoteNodeCache;
      }
    });
    Object.defineProperty(module.exports.RemoteNodeCache, "_", {enumerable: false,value:(function RemoteNodeCache(__obj__) {var returned = Object.create(module.exports.RemoteNodeCache.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.RemoteNodeCache.prototype.getRemoteNode = function($nn){var returned = (this.__obj__.getRemoteNode$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RemoteNodeCache.prototype.getDefNode = function($nn,$nnn){var returned = (this.__obj__.getDefNode$2).call(this.__obj__,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RemoteNodeCache.prototype.updateRemoteChildNode = function($nn,$nnn,$nnnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }objEach($nnnn, function(a, i) {this[i] = dynamicTo(a);}, $nnnn);var elms = Object.keys($nnnn).reduce(function(arr, key) { arr.push(key); arr.push($nnnn[key]); return arr; }, []);$nnnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);var returned = (this.__obj__.updateRemoteChildNode$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.Request = function Request() {var __obj__ = (function($nn,$nnn,$nnnn,$nnnnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }objEach($nnnnn, function(a, i) {this[i] = dynamicTo(a);}, $nnnnn);var elms = Object.keys($nnnnn).reduce(function(arr, key) { arr.push(key); arr.push($nnnnn[key]); return arr; }, []);$nnnnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return (([function(requester, rid, updater, data) {
  return new L.Request(requester, rid, data, updater, false, "initialize");
}, null, null, 8, 0, 249, 169, [], 170, [], 171, [], 52, [], "new Request"]
[0])).call(this,$nn,$nnn,$nnnn,$nnnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});Object.defineProperty(this, "data", {enumerable: true,get: function() { var returned = this.__obj__.data;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.data = v;}});Object.defineProperty(this, "updater", {enumerable: true,get: function() { var returned = this.__obj__.updater;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RequestUpdater' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.updater = v;}});Object.defineProperty(this, "streamStatus", {enumerable: true,get: function() { var returned = this.__obj__.streamStatus;return returned;},set: function(v) {this.__obj__.streamStatus = v;}});Object.defineProperty(this, "isClosed", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isClosed).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isClosed = function() { return v; };}});};    Object.defineProperty(module.exports.Request, 'class', {
      get: function() {
        function Request() {
          module.exports.Request.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.resend) { this.__obj__.resend$0 = function(){return (this.resend).call(this);}.bind(this);}if(proto.close) { this.__obj__.close$0 = function(){return (this.close).call(this);}.bind(this);}        }

        Request.prototype = Object.create(module.exports.Request.prototype);

        return Request;
      }
    });
    Object.defineProperty(module.exports.Request, "_", {enumerable: false,value:(function Request(__obj__) {var returned = Object.create(module.exports.Request.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});Object.defineProperty(this, "data", {enumerable: true,get: function() { var returned = this.__obj__.data;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.data = v;}});Object.defineProperty(this, "updater", {enumerable: true,get: function() { var returned = this.__obj__.updater;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RequestUpdater' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.updater = v;}});Object.defineProperty(this, "streamStatus", {enumerable: true,get: function() { var returned = this.__obj__.streamStatus;return returned;},set: function(v) {this.__obj__.streamStatus = v;}});Object.defineProperty(this, "isClosed", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isClosed).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isClosed = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.Request.prototype.resend = function(){return (this.__obj__.resend$0).call(this.__obj__);};module.exports.Request.prototype.close = function(){return (this.__obj__.close$0).call(this.__obj__);};module.exports.Requester = function Requester() {var __obj__ = (function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }}return (([function(cache) {
  var t1, t2;
  t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, L.Request);
  t2 = cache != null ? cache : new L.RemoteNodeCache(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, L.RemoteNode));
  t2 = new L.Requester(t1, t2, null, 1, 1, 0, false, null, null, null, [], [], false);
  t1 = L.SubscribeRequest$(t2, 0);
  t2._subsciption = t1;
  J.$indexSet$ax(t2._requests, 0, t1);
  return t2;
}, null, null, 0, 2, 261, 35, 179, [], "new Requester"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "nodeCache", {enumerable: true,get: function() { var returned = this.__obj__.nodeCache;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNodeCache' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.nodeCache = v;}});Object.defineProperty(this, "nextRid", {enumerable: true,get: function() { var returned = this.__obj__.nextRid;return returned;},set: function(v) {this.__obj__.nextRid = v;}});Object.defineProperty(this, "nextSid", {enumerable: true,get: function() { var returned = this.__obj__.nextSid;return returned;},set: function(v) {this.__obj__.nextSid = v;}});Object.defineProperty(this, "lastSentId", {enumerable: true,get: function() { var returned = this.__obj__.lastSentId;return returned;},set: function(v) {this.__obj__.lastSentId = v;}});Object.defineProperty(this, "connection", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$connection).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$connection = function() { return v; };}});};    Object.defineProperty(module.exports.Requester, 'class', {
      get: function() {
        function Requester() {
          module.exports.Requester.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onData) { this.__obj__.onData$1 = function($nn){$nn = [].concat($nn);$nn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nn);return (this.onData).call(this,$nn);}.bind(this);}if(proto.doSend) { this.__obj__.doSend$0 = function(){var returned = (this.doSend).call(this);returned = [].concat(returned);returned.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, returned);return returned;}.bind(this);}if(proto.subscribe) { this.__obj__.subscribe$3 = function($nn,$nnn,$nnnn){$nnnn = typeof($nnnn) === 'undefined' ? null : $nnnn;if($nnnn !== null) {}var returned = (this.subscribe).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.unsubscribe) { this.__obj__.unsubscribe$2 = function($nn,$nnn){return (this.unsubscribe).call(this,$nn,$nnn);}.bind(this);}if(proto.list) { this.__obj__.list$1 = function($nn){return (this.list).call(this,$nn);}.bind(this);}if(proto.invoke) { this.__obj__.invoke$3 = function($nn,$nnn,$nnnn){          if($nnn.constructor.name === '_JsonMap') {
            $nnn = $nnn._original;
            Object.keys($nnn).forEach(function(key) { $nnn[key] = dynamicFrom($nnn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nnn._strings) {
              objEach($nnn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nnn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nnn[key] = values[index]; });}$nnnn = typeof($nnnn) === 'undefined' ? null : $nnnn;if($nnnn !== null) {}return (this.invoke).call(this,$nn,$nnn,$nnnn);}.bind(this);}if(proto.set) { this.__obj__.$set$3 = function($nn,$nnn,$nnnn){$nnnn = typeof($nnnn) === 'undefined' ? null : $nnnn;if($nnnn !== null) {}var returned = (this.set).call(this,$nn,$nnn,$nnnn);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}if(proto.remove) { this.__obj__.remove$1 = function($nn){var returned = (this.remove).call(this,$nn);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}if(proto.closeRequest) { this.__obj__.closeRequest$1 = function($nn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'Request' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }return (this.closeRequest).call(this,$nn);}.bind(this);}if(proto.onDisconnected) { this.__obj__.onDisconnected$0 = function(){return (this.onDisconnected).call(this);}.bind(this);}if(proto.onReconnected) { this.__obj__.onReconnected$0 = function(){return (this.onReconnected).call(this);}.bind(this);}if(proto.addToSendList) { this.__obj__.addToSendList$1 = function($nn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}return (this.addToSendList).call(this,$nn);}.bind(this);}if(proto.addProcessor) { this.__obj__.addProcessor$1 = function($nn){return (this.addProcessor).call(this,$nn);}.bind(this);}        }

        Requester.prototype = Object.create(module.exports.Requester.prototype);

        return Requester;
      }
    });
    Object.defineProperty(module.exports.Requester, "_", {enumerable: false,value:(function Requester(__obj__) {var returned = Object.create(module.exports.Requester.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "nodeCache", {enumerable: true,get: function() { var returned = this.__obj__.nodeCache;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RemoteNodeCache' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.nodeCache = v;}});Object.defineProperty(this, "nextRid", {enumerable: true,get: function() { var returned = this.__obj__.nextRid;return returned;},set: function(v) {this.__obj__.nextRid = v;}});Object.defineProperty(this, "nextSid", {enumerable: true,get: function() { var returned = this.__obj__.nextSid;return returned;},set: function(v) {this.__obj__.nextSid = v;}});Object.defineProperty(this, "lastSentId", {enumerable: true,get: function() { var returned = this.__obj__.lastSentId;return returned;},set: function(v) {this.__obj__.lastSentId = v;}});Object.defineProperty(this, "connection", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$connection).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$connection = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.Requester.prototype.onData = function($nn){$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);return (this.__obj__.onData$1).call(this.__obj__,$nn);};module.exports.Requester.prototype.doSend = function(){var returned = (this.__obj__.doSend$0).call(this.__obj__);returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;};module.exports.Requester.prototype.subscribe = function($nn,$nnn,$nnnn){$nnn = {call$0: function() {var returned = $nnn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};$nnnn = typeof($nnnn) === 'undefined' ? null : $nnnn;if($nnnn !== null) {}var returned = (this.__obj__.subscribe$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ReqSubscribeListener' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.Requester.prototype.unsubscribe = function($nn,$nnn){$nnn = {call$0: function() {var returned = $nnn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.unsubscribe$2).call(this.__obj__,$nn,$nnn);};module.exports.Requester.prototype.list = function($nn){var returned = (this.__obj__.list$1).call(this.__obj__,$nn);returned = new module.exports.Stream(returned);return returned;};module.exports.Requester.prototype.invoke = function($nn,$nnn,$nnnn){objEach($nnn, function(a, i) {this[i] = dynamicTo(a);}, $nnn);var elms = Object.keys($nnn).reduce(function(arr, key) { arr.push(key); arr.push($nnn[key]); return arr; }, []);$nnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);$nnnn = typeof($nnnn) === 'undefined' ? null : $nnnn;if($nnnn !== null) {}var returned = (this.__obj__.invoke$3).call(this.__obj__,$nn,$nnn,$nnnn);returned = new module.exports.Stream(returned);return returned;};module.exports.Requester.prototype.set = function($nn,$nnn,$nnnn){$nnnn = typeof($nnnn) === 'undefined' ? null : $nnnn;if($nnnn !== null) {}var returned = (this.__obj__.$set$3).call(this.__obj__,$nn,$nnn,$nnnn);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'RequesterUpdate' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.Requester.prototype.remove = function($nn){var returned = (this.__obj__.remove$1).call(this.__obj__,$nn);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'RequesterUpdate' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.Requester.prototype.closeRequest = function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (this.__obj__.closeRequest$1).call(this.__obj__,$nn);};module.exports.Requester.prototype.onDisconnected = function(){return (this.__obj__.onDisconnected$0).call(this.__obj__);};module.exports.Requester.prototype.onReconnected = function(){return (this.__obj__.onReconnected$0).call(this.__obj__);};module.exports.Requester.prototype.addToSendList = function($nn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return (this.__obj__.addToSendList$1).call(this.__obj__,$nn);};module.exports.Requester.prototype.addProcessor = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);return returned;}};return (this.__obj__.addProcessor$1).call(this.__obj__,$nn);};module.exports.RequesterUpdate = function RequesterUpdate() {var __obj__ = (function($nn){return (([function(streamStatus) {
  return new L.RequesterUpdate(streamStatus);
}, null, null, 2, 0, 13, 174, [], "new RequesterUpdate"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "streamStatus", {enumerable: true,get: function() { var returned = this.__obj__.streamStatus;return returned;},set: function(v) {this.__obj__.streamStatus = v;}});};    Object.defineProperty(module.exports.RequesterUpdate, 'class', {
      get: function() {
        function RequesterUpdate() {
          module.exports.RequesterUpdate.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        RequesterUpdate.prototype = Object.create(module.exports.RequesterUpdate.prototype);

        return RequesterUpdate;
      }
    });
    Object.defineProperty(module.exports.RequesterUpdate, "_", {enumerable: false,value:(function RequesterUpdate(__obj__) {var returned = Object.create(module.exports.RequesterUpdate.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "streamStatus", {enumerable: true,get: function() { var returned = this.__obj__.streamStatus;return returned;},set: function(v) {this.__obj__.streamStatus = v;}});}.bind(returned))();return returned;})});module.exports.RequestUpdater = function RequestUpdater() {var __obj__ = (function(){return (([function() {
  return new L.RequestUpdater();
}, null, null, 0, 0, 260, "new RequestUpdater"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.RequestUpdater, 'class', {
      get: function() {
        function RequestUpdater() {
          module.exports.RequestUpdater.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        RequestUpdater.prototype = Object.create(module.exports.RequestUpdater.prototype);

        return RequestUpdater;
      }
    });
    Object.defineProperty(module.exports.RequestUpdater, "_", {enumerable: false,value:(function RequestUpdater(__obj__) {var returned = Object.create(module.exports.RequestUpdater.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.DSLinkJSON = function DSLinkJSON() {var __obj__ = (function(){return (([function() {
  return new Q.DSLinkJSON(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeEmpty(), []);
}, null, null, 0, 0, 5, "new DSLinkJSON"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});Object.defineProperty(this, "version", {enumerable: true,get: function() { var returned = this.__obj__.version;return returned;},set: function(v) {this.__obj__.version = v;}});Object.defineProperty(this, "description", {enumerable: true,get: function() { var returned = this.__obj__.description;return returned;},set: function(v) {this.__obj__.description = v;}});Object.defineProperty(this, "main", {enumerable: true,get: function() { var returned = this.__obj__.main;return returned;},set: function(v) {this.__obj__.main = v;}});Object.defineProperty(this, "engines", {enumerable: true,get: function() { var returned = this.__obj__.engines;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.engines = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "getDependencies", {enumerable: true,get: function() { var returned = this.__obj__.getDependencies;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.getDependencies = v;}});};    Object.defineProperty(module.exports.DSLinkJSON, 'class', {
      get: function() {
        function DSLinkJSON() {
          module.exports.DSLinkJSON.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.verify) { this.__obj__.verify$0 = function(){return (this.verify).call(this);}.bind(this);}if(proto.save) { this.__obj__.save$0 = function(){var returned = (this.save).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}        }

        DSLinkJSON.prototype = Object.create(module.exports.DSLinkJSON.prototype);

        return DSLinkJSON;
      }
    });
    Object.defineProperty(module.exports.DSLinkJSON, "_", {enumerable: false,value:(function DSLinkJSON(__obj__) {var returned = Object.create(module.exports.DSLinkJSON.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});Object.defineProperty(this, "version", {enumerable: true,get: function() { var returned = this.__obj__.version;return returned;},set: function(v) {this.__obj__.version = v;}});Object.defineProperty(this, "description", {enumerable: true,get: function() { var returned = this.__obj__.description;return returned;},set: function(v) {this.__obj__.description = v;}});Object.defineProperty(this, "main", {enumerable: true,get: function() { var returned = this.__obj__.main;return returned;},set: function(v) {this.__obj__.main = v;}});Object.defineProperty(this, "engines", {enumerable: true,get: function() { var returned = this.__obj__.engines;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.engines = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "getDependencies", {enumerable: true,get: function() { var returned = this.__obj__.getDependencies;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.getDependencies = v;}});}.bind(returned))();return returned;})});module.exports.DSLinkJSON.from = function() {var __obj__ = (function($nn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return (([function(map) {
  var j, t1;
  j = new Q.DSLinkJSON(null, null, null, null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeEmpty(), []);
  j._json = map;
  t1 = J.getInterceptor$asx(map);
  j.name = t1.$index(map, "name");
  j.version = t1.$index(map, "version");
  j.description = t1.$index(map, "description");
  j.main = t1.$index(map, "main");
  j.engines = t1.$index(map, "engines");
  j.configs = t1.$index(map, "configs");
  j.getDependencies = t1.$index(map, "getDependencies");
  return j;
}, null, null, 2, 0, 280, 202, [], "new DSLinkJSON$from"]
[0])).call(this,$nn);}).apply(this, arguments);return module.exports.DSLinkJSON._(__obj__);};module.exports.DSLinkJSON.prototype.verify = function(){return (this.__obj__.verify$0).call(this.__obj__);};module.exports.DSLinkJSON.prototype.save = function(){var returned = (this.__obj__.save$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.buildActionIO = function($nn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);var returned = (init.globalFunctions.buildActionIO).call(init.globalFunctions,$nn);returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;};module.exports.buildEnumType = function($nn){return (init.globalFunctions.buildEnumType).call(init.globalFunctions,$nn);};module.exports.Scheduler = function Scheduler() {var __obj__ = (function(){return (([function() {
  return new Q.Scheduler();
}, null, null, 0, 0, 282, "new Scheduler"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.Scheduler, 'class', {
      get: function() {
        function Scheduler() {
          module.exports.Scheduler.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        Scheduler.prototype = Object.create(module.exports.Scheduler.prototype);

        return Scheduler;
      }
    });
    Object.defineProperty(module.exports.Scheduler, "_", {enumerable: false,value:(function Scheduler(__obj__) {var returned = Object.create(module.exports.Scheduler.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.Scheduler.currentTimer = function(){return (init.allClasses.Scheduler.Scheduler_currentTimer).call(this);};module.exports.Scheduler.cancelCurrentTimer = function(){return (init.allClasses.Scheduler.Scheduler_cancelCurrentTimer).call(this);};module.exports.Scheduler.every = function(dynamic,$nn){dynamic = dynamicTo(dynamic);$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (init.allClasses.Scheduler.Scheduler_every).call(this,dynamic,$nn);};module.exports.Scheduler.repeat = function($nn,$nnn){$nnn = {call$0: function() {var returned = $nnn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};var returned = (init.allClasses.Scheduler.Scheduler_repeat).call(this,$nn,$nnn);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.Scheduler.tick = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }$nnnn = {call$0: function() {var returned = $nnnn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};var returned = (init.allClasses.Scheduler.Scheduler_tick).call(this,$nn,$nnn,$nnnn);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.Scheduler.runLater = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (init.allClasses.Scheduler.Scheduler_runLater).call(this,$nn);};module.exports.Scheduler.later = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};var returned = (init.allClasses.Scheduler.Scheduler_later).call(this,$nn);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.Scheduler.after = function($nn,$nnn){$nnn = {call$0: function() {var returned = $nnn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};var returned = (init.allClasses.Scheduler.Scheduler_after).call(this,$nn,$nnn);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.Scheduler.runAfter = function($nn,$nnn){$nnn = {call$0: function() {var returned = $nnn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (init.allClasses.Scheduler.Scheduler_runAfter).call(this,$nn,$nnn);};module.exports.Interval = function Interval() {var __obj__ = (function($nn){return (([function(duration) {
  return new Q.Interval(duration);
}, null, null, 2, 0, 281, 36, [], "new Interval"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "duration", {enumerable: true,get: function() { var returned = this.__obj__.duration;return returned;},set: function(v) {this.__obj__.duration = v;}});Object.defineProperty(this, "inMilliseconds", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$inMilliseconds).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$inMilliseconds = function() { return v; };}});};    Object.defineProperty(module.exports.Interval, 'class', {
      get: function() {
        function Interval() {
          module.exports.Interval.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        Interval.prototype = Object.create(module.exports.Interval.prototype);

        return Interval;
      }
    });
    Object.defineProperty(module.exports.Interval, "_", {enumerable: false,value:(function Interval(__obj__) {var returned = Object.create(module.exports.Interval.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "duration", {enumerable: true,get: function() { var returned = this.__obj__.duration;return returned;},set: function(v) {this.__obj__.duration = v;}});Object.defineProperty(this, "inMilliseconds", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$inMilliseconds).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$inMilliseconds = function() { return v; };}});}.bind(returned))();return returned;})});Object.defineProperty(module.exports.Interval, "ONE_MILLISECOND", {enumerable: true,get: function() { var returned = this.__obj__.ONE_MILLISECOND;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.ONE_MILLISECOND = v;}});Object.defineProperty(module.exports.Interval, "TWO_MILLISECONDS", {enumerable: true,get: function() { var returned = this.__obj__.TWO_MILLISECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.TWO_MILLISECONDS = v;}});Object.defineProperty(module.exports.Interval, "FOUR_MILLISECONDS", {enumerable: true,get: function() { var returned = this.__obj__.FOUR_MILLISECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.FOUR_MILLISECONDS = v;}});Object.defineProperty(module.exports.Interval, "EIGHT_MILLISECONDS", {enumerable: true,get: function() { var returned = this.__obj__.EIGHT_MILLISECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.EIGHT_MILLISECONDS = v;}});Object.defineProperty(module.exports.Interval, "SIXTEEN_MILLISECONDS", {enumerable: true,get: function() { var returned = this.__obj__.SIXTEEN_MILLISECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.SIXTEEN_MILLISECONDS = v;}});Object.defineProperty(module.exports.Interval, "THIRTY_MILLISECONDS", {enumerable: true,get: function() { var returned = this.__obj__.THIRTY_MILLISECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.THIRTY_MILLISECONDS = v;}});Object.defineProperty(module.exports.Interval, "FIFTY_MILLISECONDS", {enumerable: true,get: function() { var returned = this.__obj__.FIFTY_MILLISECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.FIFTY_MILLISECONDS = v;}});Object.defineProperty(module.exports.Interval, "ONE_HUNDRED_MILLISECONDS", {enumerable: true,get: function() { var returned = this.__obj__.ONE_HUNDRED_MILLISECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.ONE_HUNDRED_MILLISECONDS = v;}});Object.defineProperty(module.exports.Interval, "TWO_HUNDRED_MILLISECONDS", {enumerable: true,get: function() { var returned = this.__obj__.TWO_HUNDRED_MILLISECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.TWO_HUNDRED_MILLISECONDS = v;}});Object.defineProperty(module.exports.Interval, "THREE_HUNDRED_MILLISECONDS", {enumerable: true,get: function() { var returned = this.__obj__.THREE_HUNDRED_MILLISECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.THREE_HUNDRED_MILLISECONDS = v;}});Object.defineProperty(module.exports.Interval, "QUARTER_SECOND", {enumerable: true,get: function() { var returned = this.__obj__.QUARTER_SECOND;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.QUARTER_SECOND = v;}});Object.defineProperty(module.exports.Interval, "HALF_SECOND", {enumerable: true,get: function() { var returned = this.__obj__.HALF_SECOND;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.HALF_SECOND = v;}});Object.defineProperty(module.exports.Interval, "ONE_SECOND", {enumerable: true,get: function() { var returned = this.__obj__.ONE_SECOND;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.ONE_SECOND = v;}});Object.defineProperty(module.exports.Interval, "TWO_SECONDS", {enumerable: true,get: function() { var returned = this.__obj__.TWO_SECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.TWO_SECONDS = v;}});Object.defineProperty(module.exports.Interval, "THREE_SECONDS", {enumerable: true,get: function() { var returned = this.__obj__.THREE_SECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.THREE_SECONDS = v;}});Object.defineProperty(module.exports.Interval, "FOUR_SECONDS", {enumerable: true,get: function() { var returned = this.__obj__.FOUR_SECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.FOUR_SECONDS = v;}});Object.defineProperty(module.exports.Interval, "FIVE_SECONDS", {enumerable: true,get: function() { var returned = this.__obj__.FIVE_SECONDS;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.FIVE_SECONDS = v;}});Object.defineProperty(module.exports.Interval, "ONE_MINUTE", {enumerable: true,get: function() { var returned = this.__obj__.ONE_MINUTE;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Interval' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.ONE_MINUTE = v;}});module.exports.Interval.forMilliseconds = function() {var __obj__ = (function($nn){return (([function(ms) {
  return new Q.Interval(P.Duration$(0, 0, 0, ms, 0, 0));
}, null, null, 2, 0, 19, 203, [], "new Interval$forMilliseconds"]
[0])).call(this,$nn);}).apply(this, arguments);return module.exports.Interval._(__obj__);};module.exports.Interval.forSeconds = function() {var __obj__ = (function($nn){return (([function(seconds) {
  return new Q.Interval(P.Duration$(0, 0, 0, 0, 0, seconds));
}, null, null, 2, 0, 19, 204, [], "new Interval$forSeconds"]
[0])).call(this,$nn);}).apply(this, arguments);return module.exports.Interval._(__obj__);};module.exports.Interval.forMinutes = function() {var __obj__ = (function($nn){return (([function(minutes) {
  return new Q.Interval(P.Duration$(0, 0, 0, 0, minutes, 0));
}, null, null, 2, 0, 19, 205, [], "new Interval$forMinutes"]
[0])).call(this,$nn);}).apply(this, arguments);return module.exports.Interval._(__obj__);};module.exports.Interval.forHours = function() {var __obj__ = (function($nn){return (([function(hours) {
  return new Q.Interval(P.Duration$(0, hours, 0, 0, 0, 0));
}, null, null, 2, 0, 19, 206, [], "new Interval$forHours"]
[0])).call(this,$nn);}).apply(this, arguments);return module.exports.Interval._(__obj__);};module.exports.updateLogLevel = function($nn){return (init.globalFunctions.updateLogLevel).call(init.globalFunctions,$nn);};module.exports.DummyPermissionManager = function DummyPermissionManager() {var __obj__ = (function(){return (([function() {
  return new T.DummyPermissionManager();
}, null, null, 0, 0, 267, "new DummyPermissionManager"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.DummyPermissionManager, 'class', {
      get: function() {
        function DummyPermissionManager() {
          module.exports.DummyPermissionManager.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.getPermission) { this.__obj__.getPermission$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.getPermission).call(this,$nn,$nnn);}.bind(this);}        }

        DummyPermissionManager.prototype = Object.create(module.exports.DummyPermissionManager.prototype);

        return DummyPermissionManager;
      }
    });
    Object.defineProperty(module.exports.DummyPermissionManager, "_", {enumerable: false,value:(function DummyPermissionManager(__obj__) {var returned = Object.create(module.exports.DummyPermissionManager.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.DummyPermissionManager.prototype.getPermission = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.getPermission$2).call(this.__obj__,$nn,$nnn);};module.exports.IPermissionManager = function IPermissionManager() {var __obj__ = (function(){return (([function() {
  return new T.IPermissionManager();
}, null, null, 0, 0, 266, "new IPermissionManager"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.IPermissionManager, 'class', {
      get: function() {
        function IPermissionManager() {
          module.exports.IPermissionManager.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        IPermissionManager.prototype = Object.create(module.exports.IPermissionManager.prototype);

        return IPermissionManager;
      }
    });
    Object.defineProperty(module.exports.IPermissionManager, "_", {enumerable: false,value:(function IPermissionManager(__obj__) {var returned = Object.create(module.exports.IPermissionManager.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.SimpleNode = function SimpleNode() {var __obj__ = (function($nn){return (([function(path) {
  return new T.SimpleNode(false, null, false, null, null, path, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
}, null, null, 2, 0, 13, 107, [], "new SimpleNode"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "removed", {enumerable: true,get: function() { var returned = this.__obj__.removed;return returned;},set: function(v) {this.__obj__.removed = v;}});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "listChangeController", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listChangeController).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listChangeController = function() { return v; };}});Object.defineProperty(this, "listStream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listStream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$listStream = function() { return v; };}});Object.defineProperty(this, "lastValueUpdate", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$lastValueUpdate).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ValueUpdate' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$lastValueUpdate = function() { return v; };}});Object.defineProperty(this, "exists", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$exists).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$exists = function() { return v; };}});Object.defineProperty(this, "listReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listReady = function() { return v; };}});Object.defineProperty(this, "disconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$disconnected).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$disconnected = function() { return v; };}});Object.defineProperty(this, "valueReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$valueReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$valueReady = function() { return v; };}});Object.defineProperty(this, "hasSubscriber", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$hasSubscriber).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$hasSubscriber = function() { return v; };}});Object.defineProperty(this, "parentNode", {enumerable: true,get: function() { var returned = this.__obj__.parentNode;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.parentNode = v;}});Object.defineProperty(this, "loaded", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$loaded).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$loaded = function() { return v; };}});};    Object.defineProperty(module.exports.SimpleNode, 'class', {
      get: function() {
        function SimpleNode() {
          module.exports.SimpleNode.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.load) { this.__obj__.load$2 = function($nn,$nnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'NodeProviderImpl' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }}return (this.load).call(this,$nn,$nnn);}.bind(this);}if(proto.save) { this.__obj__.save$0 = function(){var returned = (this.save).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.invoke) { this.__obj__.invoke$5 = function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'InvokeResponse' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'LocalNode' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {}var returned = (this.invoke).call(this,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.onInvoke) { this.__obj__.onInvoke$1 = function($nn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}var returned = (this.onInvoke).call(this,$nn);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.onSubscribe) { this.__obj__.onSubscribe$0 = function(){return (this.onSubscribe).call(this);}.bind(this);}if(proto.onCreated) { this.__obj__.onCreated$0 = function(){return (this.onCreated).call(this);}.bind(this);}if(proto.onRemoving) { this.__obj__.onRemoving$0 = function(){return (this.onRemoving).call(this);}.bind(this);}if(proto.onChildRemoved) { this.__obj__.onChildRemoved$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Node' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.onChildRemoved).call(this,$nn,$nnn);}.bind(this);}if(proto.onChildAdded) { this.__obj__.onChildAdded$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Node' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.onChildAdded).call(this,$nn,$nnn);}.bind(this);}if(proto.subscribe) { this.__obj__.subscribe$2 = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.subscribe).call(this,$nn,$nnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.onLoadChild) { this.__obj__.onLoadChild$3 = function($nn,$nnn,$nnnn){          if($nnn.constructor.name === '_JsonMap') {
            $nnn = $nnn._original;
            Object.keys($nnn).forEach(function(key) { $nnn[key] = dynamicFrom($nnn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nnn._strings) {
              objEach($nnn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nnn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nnn[key] = values[index]; });}if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'SimpleNodeProvider' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.onLoadChild).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.createChild) { this.__obj__.createChild$2 = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {          if($nnn.constructor.name === '_JsonMap') {
            $nnn = $nnn._original;
            Object.keys($nnn).forEach(function(key) { $nnn[key] = dynamicFrom($nnn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nnn._strings) {
              objEach($nnn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nnn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nnn[key] = values[index]; });}}var returned = (this.createChild).call(this,$nn,$nnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.addChild) { this.__obj__.addChild$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Node' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.addChild).call(this,$nn,$nnn);}.bind(this);}if(proto.removeChild) { this.__obj__.removeChild$1 = function(dynamic){dynamic = dynamicFrom(dynamic);return (this.removeChild).call(this,dynamic);}.bind(this);}if(proto.set) { this.__obj__.$indexSet = function($nn,dynamic){dynamic = dynamicFrom(dynamic);var returned = (this.set).call(this,$nn,dynamic);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.getAttribute) { this.__obj__.getAttribute$1 = function($nn){return (this.getAttribute).call(this,$nn);}.bind(this);}if(proto.getConfig) { this.__obj__.getConfig$1 = function($nn){return (this.getConfig).call(this,$nn);}.bind(this);}if(proto.getChild) { this.__obj__.getChild$1 = function($nn){var returned = (this.getChild).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.get) { this.__obj__.$get$1 = function($nn){return (this.get).call(this,$nn);}.bind(this);}if(proto.forEachChild) { this.__obj__.forEachChild$1 = function($nn){return (this.forEachChild).call(this,$nn);}.bind(this);}if(proto.getSimpleMap) { this.__obj__.getSimpleMap$0 = function(){var returned = (this.getSimpleMap).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.onStartListListen) { this.__obj__.onStartListListen$0 = function(){return (this.onStartListListen).call(this);}.bind(this);}if(proto.onAllListCancel) { this.__obj__.onAllListCancel$0 = function(){return (this.onAllListCancel).call(this);}.bind(this);}if(proto.unsubscribe) { this.__obj__.unsubscribe$1 = function($nn){return (this.unsubscribe).call(this,$nn);}.bind(this);}if(proto.updateValue) { this.__obj__.updateValue$2$force = function($nn,_optObj_){_optObj_ = _optObj_ || {};var force = typeof(_optObj_.force) === 'undefined' ? null : _optObj_.force;if(force !== null) {}return (this.updateValue).call(this,$nn,force);}.bind(this);}if(proto.getInvokePermission) { this.__obj__.getInvokePermission$0 = function(){return (this.getInvokePermission).call(this);}.bind(this);}if(proto.getSetPermission) { this.__obj__.getSetPermission$0 = function(){return (this.getSetPermission).call(this);}.bind(this);}if(proto.setAttribute) { this.__obj__.setAttribute$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }var returned = (this.setAttribute).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeAttribute) { this.__obj__.removeAttribute$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.removeAttribute).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setConfig) { this.__obj__.setConfig$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }var returned = (this.setConfig).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeConfig) { this.__obj__.removeConfig$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.removeConfig).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setValue) { this.__obj__.setValue$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}var returned = (this.setValue).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.get) { this.__obj__.$index = function($nn){var returned = (this.get).call(this,$nn);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.serialize) { this.__obj__.serialize$1 = function($nn){var returned = (this.serialize).call(this,$nn);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.updateList) { this.__obj__.updateList$1 = function($nn){return (this.updateList).call(this,$nn);}.bind(this);}        }

        SimpleNode.prototype = Object.create(module.exports.SimpleNode.prototype);

        return SimpleNode;
      }
    });
    Object.defineProperty(module.exports.SimpleNode, "_", {enumerable: false,value:(function SimpleNode(__obj__) {var returned = Object.create(module.exports.SimpleNode.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "removed", {enumerable: true,get: function() { var returned = this.__obj__.removed;return returned;},set: function(v) {this.__obj__.removed = v;}});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "listChangeController", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listChangeController).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listChangeController = function() { return v; };}});Object.defineProperty(this, "listStream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listStream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$listStream = function() { return v; };}});Object.defineProperty(this, "lastValueUpdate", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$lastValueUpdate).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ValueUpdate' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$lastValueUpdate = function() { return v; };}});Object.defineProperty(this, "exists", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$exists).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$exists = function() { return v; };}});Object.defineProperty(this, "listReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listReady = function() { return v; };}});Object.defineProperty(this, "disconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$disconnected).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$disconnected = function() { return v; };}});Object.defineProperty(this, "valueReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$valueReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$valueReady = function() { return v; };}});Object.defineProperty(this, "hasSubscriber", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$hasSubscriber).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$hasSubscriber = function() { return v; };}});Object.defineProperty(this, "parentNode", {enumerable: true,get: function() { var returned = this.__obj__.parentNode;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.parentNode = v;}});Object.defineProperty(this, "loaded", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$loaded).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$loaded = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.SimpleNode.prototype.load = function($nn,$nnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }}return (this.__obj__.load$2).call(this.__obj__,$nn,$nnn);};module.exports.SimpleNode.prototype.save = function(){var returned = (this.__obj__.save$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.SimpleNode.prototype.invoke = function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {}var returned = (this.__obj__.invoke$5).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'InvokeResponse' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNode.prototype.onInvoke = function($nn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);var returned = (this.__obj__.onInvoke$1).call(this.__obj__,$nn);returned = dynamicFrom(returned);return returned;};module.exports.SimpleNode.prototype.onSubscribe = function(){return (this.__obj__.onSubscribe$0).call(this.__obj__);};module.exports.SimpleNode.prototype.onCreated = function(){return (this.__obj__.onCreated$0).call(this.__obj__);};module.exports.SimpleNode.prototype.onRemoving = function(){return (this.__obj__.onRemoving$0).call(this.__obj__);};module.exports.SimpleNode.prototype.onChildRemoved = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.onChildRemoved$2).call(this.__obj__,$nn,$nnn);};module.exports.SimpleNode.prototype.onChildAdded = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.onChildAdded$2).call(this.__obj__,$nn,$nnn);};module.exports.SimpleNode.prototype.subscribe = function($nn,$nnn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.__obj__.subscribe$2).call(this.__obj__,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RespSubscribeListener' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNode.prototype.onLoadChild = function($nn,$nnn,$nnnn){objEach($nnn, function(a, i) {this[i] = dynamicTo(a);}, $nnn);var elms = Object.keys($nnn).reduce(function(arr, key) { arr.push(key); arr.push($nnn[key]); return arr; }, []);$nnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.onLoadChild$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'SimpleNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNode.prototype.createChild = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {objEach($nnn, function(a, i) {this[i] = dynamicTo(a);}, $nnn);var elms = Object.keys($nnn).reduce(function(arr, key) { arr.push(key); arr.push($nnn[key]); return arr; }, []);$nnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);}var returned = (this.__obj__.createChild$2).call(this.__obj__,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'SimpleNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNode.prototype.addChild = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.addChild$2).call(this.__obj__,$nn,$nnn);};module.exports.SimpleNode.prototype.removeChild = function(dynamic){dynamic = dynamicTo(dynamic);return (this.__obj__.removeChild$1).call(this.__obj__,dynamic);};module.exports.SimpleNode.prototype.set = function($nn,dynamic){dynamic = dynamicTo(dynamic);var returned = (this.__obj__.$indexSet).call(this.__obj__,$nn,dynamic);returned = dynamicFrom(returned);return returned;};module.exports.SimpleNode.prototype.getAttribute = function($nn){return (this.__obj__.getAttribute$1).call(this.__obj__,$nn);};module.exports.SimpleNode.prototype.getConfig = function($nn){return (this.__obj__.getConfig$1).call(this.__obj__,$nn);};module.exports.SimpleNode.prototype.getChild = function($nn){var returned = (this.__obj__.getChild$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNode.prototype.get = function($nn){return (this.__obj__.$get$1).call(this.__obj__,$nn);};module.exports.SimpleNode.prototype.forEachChild = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.forEachChild$1).call(this.__obj__,$nn);};module.exports.SimpleNode.prototype.getSimpleMap = function(){var returned = (this.__obj__.getSimpleMap$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.SimpleNode.prototype.onStartListListen = function(){return (this.__obj__.onStartListListen$0).call(this.__obj__);};module.exports.SimpleNode.prototype.onAllListCancel = function(){return (this.__obj__.onAllListCancel$0).call(this.__obj__);};module.exports.SimpleNode.prototype.unsubscribe = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.unsubscribe$1).call(this.__obj__,$nn);};module.exports.SimpleNode.prototype.updateValue = function($nn,_optObj_){_optObj_ = _optObj_ || {};var force = typeof(_optObj_.force) === 'undefined' ? null : _optObj_.force;if(force !== null) {}return (this.__obj__.updateValue$2$force).call(this.__obj__,$nn,force);};module.exports.SimpleNode.prototype.getInvokePermission = function(){return (this.__obj__.getInvokePermission$0).call(this.__obj__);};module.exports.SimpleNode.prototype.getSetPermission = function(){return (this.__obj__.getSetPermission$0).call(this.__obj__);};module.exports.SimpleNode.prototype.setAttribute = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }var returned = (this.__obj__.setAttribute$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNode.prototype.removeAttribute = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.removeAttribute$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNode.prototype.setConfig = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }var returned = (this.__obj__.setConfig$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNode.prototype.removeConfig = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.removeConfig$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNode.prototype.setValue = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}var returned = (this.__obj__.setValue$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNode.prototype.get = function($nn){var returned = (this.__obj__.$index).call(this.__obj__,$nn);returned = dynamicFrom(returned);return returned;};module.exports.SimpleNode.prototype.serialize = function($nn){var returned = (this.__obj__.serialize$1).call(this.__obj__,$nn);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.SimpleNode.prototype.updateList = function($nn){return (this.__obj__.updateList$1).call(this.__obj__,$nn);};module.exports.SimpleNodeProvider = function SimpleNodeProvider() {var __obj__ = (function($nn,$nnn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);}$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {objEach($nnn, function(a, i) {this[i] = dynamicTo(a);}, $nnn);var elms = Object.keys($nnn).reduce(function(arr, key) { arr.push(key); arr.push($nnn[key]); return arr; }, []);$nnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);}return (([function(m, profiles) {
  var t1 = new T.SimpleNodeProvider(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, T.LocalNode), P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, {func: 1, ret: T.SimpleNode, args: [P.String]}), new T.DummyPermissionManager());
  t1.init$2(m, profiles);
  return t1;
}, null, null, 0, 4, 278, 35, 35, 113, [], 90, [], "new SimpleNodeProvider"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "nodes", {enumerable: true,get: function() { var returned = this.__obj__.nodes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.nodes = v;}});Object.defineProperty(this, "permissions", {enumerable: true,get: function() { var returned = this.__obj__.permissions;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'IPermissionManager' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.permissions = v;}});Object.defineProperty(this, "root", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$root).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'SimpleNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$root = function() { return v; };}});};    Object.defineProperty(module.exports.SimpleNodeProvider, 'class', {
      get: function() {
        function SimpleNodeProvider() {
          module.exports.SimpleNodeProvider.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.getNode) { this.__obj__.getNode$1 = function($nn){var returned = (this.getNode).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.init) { this.__obj__.init$2 = function($nn,$nnn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}}$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {          if($nnn.constructor.name === '_JsonMap') {
            $nnn = $nnn._original;
            Object.keys($nnn).forEach(function(key) { $nnn[key] = dynamicFrom($nnn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nnn._strings) {
              objEach($nnn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nnn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nnn[key] = values[index]; });}}return (this.init).call(this,$nn,$nnn);}.bind(this);}if(proto.save) { this.__obj__.save$0 = function(){var returned = (this.save).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.updateValue) { this.__obj__.updateValue$2 = function($nn,$nnn){return (this.updateValue).call(this,$nn,$nnn);}.bind(this);}if(proto.addNode) { this.__obj__.addNode$2 = function($nn,$nnn){          if($nnn.constructor.name === '_JsonMap') {
            $nnn = $nnn._original;
            Object.keys($nnn).forEach(function(key) { $nnn[key] = dynamicFrom($nnn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nnn._strings) {
              objEach($nnn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nnn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nnn[key] = values[index]; });}var returned = (this.addNode).call(this,$nn,$nnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeNode) { this.__obj__.removeNode$1 = function($nn){return (this.removeNode).call(this,$nn);}.bind(this);}if(proto.get) { this.__obj__.$index = function($nn){var returned = (this.get).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.bitwiseNegate) { this.__obj__.$not = function(){var returned = (this.bitwiseNegate).call(this);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}        }

        SimpleNodeProvider.prototype = Object.create(module.exports.SimpleNodeProvider.prototype);

        return SimpleNodeProvider;
      }
    });
    Object.defineProperty(module.exports.SimpleNodeProvider, "_", {enumerable: false,value:(function SimpleNodeProvider(__obj__) {var returned = Object.create(module.exports.SimpleNodeProvider.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "nodes", {enumerable: true,get: function() { var returned = this.__obj__.nodes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.nodes = v;}});Object.defineProperty(this, "permissions", {enumerable: true,get: function() { var returned = this.__obj__.permissions;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'IPermissionManager' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.permissions = v;}});Object.defineProperty(this, "root", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$root).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'SimpleNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$root = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.SimpleNodeProvider.prototype.getNode = function($nn){var returned = (this.__obj__.getNode$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNodeProvider.prototype.init = function($nn,$nnn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);}$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {objEach($nnn, function(a, i) {this[i] = dynamicTo(a);}, $nnn);var elms = Object.keys($nnn).reduce(function(arr, key) { arr.push(key); arr.push($nnn[key]); return arr; }, []);$nnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);}return (this.__obj__.init$2).call(this.__obj__,$nn,$nnn);};module.exports.SimpleNodeProvider.prototype.save = function(){var returned = (this.__obj__.save$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.SimpleNodeProvider.prototype.updateValue = function($nn,$nnn){return (this.__obj__.updateValue$2).call(this.__obj__,$nn,$nnn);};module.exports.SimpleNodeProvider.prototype.addNode = function($nn,$nnn){objEach($nnn, function(a, i) {this[i] = dynamicTo(a);}, $nnn);var elms = Object.keys($nnn).reduce(function(arr, key) { arr.push(key); arr.push($nnn[key]); return arr; }, []);$nnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);var returned = (this.__obj__.addNode$2).call(this.__obj__,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNodeProvider.prototype.removeNode = function($nn){return (this.__obj__.removeNode$1).call(this.__obj__,$nn);};module.exports.SimpleNodeProvider.prototype.get = function($nn){var returned = (this.__obj__.$index).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.SimpleNodeProvider.prototype.bitwiseNegate = function(){var returned = (this.__obj__.$not).call(this.__obj__);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.MutableNodeProvider = function MutableNodeProvider() {var __obj__ = (function(){return (([function() {
  return new T.MutableNodeProvider();
}, null, null, 0, 0, 277, "new MutableNodeProvider"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.MutableNodeProvider, 'class', {
      get: function() {
        function MutableNodeProvider() {
          module.exports.MutableNodeProvider.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        MutableNodeProvider.prototype = Object.create(module.exports.MutableNodeProvider.prototype);

        return MutableNodeProvider;
      }
    });
    Object.defineProperty(module.exports.MutableNodeProvider, "_", {enumerable: false,value:(function MutableNodeProvider(__obj__) {var returned = Object.create(module.exports.MutableNodeProvider.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.SerializableNodeProvider = function SerializableNodeProvider() {var __obj__ = (function(){return (([function() {
  return new T.SerializableNodeProvider();
}, null, null, 0, 0, 276, "new SerializableNodeProvider"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.SerializableNodeProvider, 'class', {
      get: function() {
        function SerializableNodeProvider() {
          module.exports.SerializableNodeProvider.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        SerializableNodeProvider.prototype = Object.create(module.exports.SerializableNodeProvider.prototype);

        return SerializableNodeProvider;
      }
    });
    Object.defineProperty(module.exports.SerializableNodeProvider, "_", {enumerable: false,value:(function SerializableNodeProvider(__obj__) {var returned = Object.create(module.exports.SerializableNodeProvider.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.AsyncTableResult = function AsyncTableResult() {var __obj__ = (function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);}return (([function(columns) {
  return new T.AsyncTableResult(null, columns, null, "initialize");
}, null, null, 0, 2, 275, 35, 144, [], "new AsyncTableResult"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "response", {enumerable: true,get: function() { var returned = this.__obj__.response;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'InvokeResponse' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.response = v;}});Object.defineProperty(this, "columns", {enumerable: true,get: function() { var returned = this.__obj__.columns;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.columns = v;}});Object.defineProperty(this, "rows", {enumerable: true,get: function() { var returned = this.__obj__.rows;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.rows = v;}});Object.defineProperty(this, "status", {enumerable: true,get: function() { var returned = this.__obj__.status;return returned;},set: function(v) {this.__obj__.status = v;}});};    Object.defineProperty(module.exports.AsyncTableResult, 'class', {
      get: function() {
        function AsyncTableResult() {
          module.exports.AsyncTableResult.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.update) { this.__obj__.update$2 = function($nn,$nnn){$nn = [].concat($nn);$nn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nn);$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}return (this.update).call(this,$nn,$nnn);}.bind(this);}if(proto.write) { this.__obj__.write$1 = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'InvokeResponse' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }}return (this.write).call(this,$nn);}.bind(this);}if(proto.close) { this.__obj__.close$0 = function(){return (this.close).call(this);}.bind(this);}        }

        AsyncTableResult.prototype = Object.create(module.exports.AsyncTableResult.prototype);

        return AsyncTableResult;
      }
    });
    Object.defineProperty(module.exports.AsyncTableResult, "_", {enumerable: false,value:(function AsyncTableResult(__obj__) {var returned = Object.create(module.exports.AsyncTableResult.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "response", {enumerable: true,get: function() { var returned = this.__obj__.response;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'InvokeResponse' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.response = v;}});Object.defineProperty(this, "columns", {enumerable: true,get: function() { var returned = this.__obj__.columns;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.columns = v;}});Object.defineProperty(this, "rows", {enumerable: true,get: function() { var returned = this.__obj__.rows;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.rows = v;}});Object.defineProperty(this, "status", {enumerable: true,get: function() { var returned = this.__obj__.status;return returned;},set: function(v) {this.__obj__.status = v;}});}.bind(returned))();return returned;})});module.exports.AsyncTableResult.prototype.update = function($nn,$nnn){$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}return (this.__obj__.update$2).call(this.__obj__,$nn,$nnn);};module.exports.AsyncTableResult.prototype.write = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }}return (this.__obj__.write$1).call(this.__obj__,$nn);};module.exports.AsyncTableResult.prototype.close = function(){return (this.__obj__.close$0).call(this.__obj__);};module.exports.SimpleTableResult = function SimpleTableResult() {var __obj__ = (function($nn,$nnn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);}$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnn);}return (([function(rows, columns) {
  return new T.SimpleTableResult(columns, rows);
}, null, null, 0, 4, 274, 35, 35, 145, [], 144, [], "new SimpleTableResult"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "columns", {enumerable: true,get: function() { var returned = this.__obj__.columns;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.columns = v;}});Object.defineProperty(this, "rows", {enumerable: true,get: function() { var returned = this.__obj__.rows;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.rows = v;}});};    Object.defineProperty(module.exports.SimpleTableResult, 'class', {
      get: function() {
        function SimpleTableResult() {
          module.exports.SimpleTableResult.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
            }

        SimpleTableResult.prototype = Object.create(module.exports.SimpleTableResult.prototype);

        return SimpleTableResult;
      }
    });
    Object.defineProperty(module.exports.SimpleTableResult, "_", {enumerable: false,value:(function SimpleTableResult(__obj__) {var returned = Object.create(module.exports.SimpleTableResult.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "columns", {enumerable: true,get: function() { var returned = this.__obj__.columns;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.columns = v;}});Object.defineProperty(this, "rows", {enumerable: true,get: function() { var returned = this.__obj__.rows;returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, v);this.__obj__.rows = v;}});}.bind(returned))();return returned;})});module.exports.RootNode = function RootNode() {var __obj__ = (function($nn){return (([function(path) {
  return new T.RootNode(false, null, false, null, null, path, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
}, null, null, 2, 0, 13, 107, [], "new RootNode"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "listChangeController", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listChangeController).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listChangeController = function() { return v; };}});Object.defineProperty(this, "listStream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listStream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$listStream = function() { return v; };}});Object.defineProperty(this, "lastValueUpdate", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$lastValueUpdate).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ValueUpdate' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$lastValueUpdate = function() { return v; };}});Object.defineProperty(this, "exists", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$exists).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$exists = function() { return v; };}});Object.defineProperty(this, "listReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listReady = function() { return v; };}});Object.defineProperty(this, "disconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$disconnected).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$disconnected = function() { return v; };}});Object.defineProperty(this, "valueReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$valueReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$valueReady = function() { return v; };}});Object.defineProperty(this, "hasSubscriber", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$hasSubscriber).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$hasSubscriber = function() { return v; };}});Object.defineProperty(this, "parentNode", {enumerable: true,get: function() { var returned = this.__obj__.parentNode;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.parentNode = v;}});Object.defineProperty(this, "loaded", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$loaded).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$loaded = function() { return v; };}});};    Object.defineProperty(module.exports.RootNode, 'class', {
      get: function() {
        function RootNode() {
          module.exports.RootNode.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.load) { this.__obj__.load$2 = function($nn,$nnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'NodeProviderImpl' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.load).call(this,$nn,$nnn);}.bind(this);}if(proto.getAttribute) { this.__obj__.getAttribute$1 = function($nn){return (this.getAttribute).call(this,$nn);}.bind(this);}if(proto.getConfig) { this.__obj__.getConfig$1 = function($nn){return (this.getConfig).call(this,$nn);}.bind(this);}if(proto.addChild) { this.__obj__.addChild$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Node' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.addChild).call(this,$nn,$nnn);}.bind(this);}if(proto.removeChild) { this.__obj__.removeChild$1 = function(dynamic){dynamic = dynamicFrom(dynamic);return (this.removeChild).call(this,dynamic);}.bind(this);}if(proto.getChild) { this.__obj__.getChild$1 = function($nn){var returned = (this.getChild).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.get) { this.__obj__.$get$1 = function($nn){return (this.get).call(this,$nn);}.bind(this);}if(proto.forEachChild) { this.__obj__.forEachChild$1 = function($nn){return (this.forEachChild).call(this,$nn);}.bind(this);}if(proto.getSimpleMap) { this.__obj__.getSimpleMap$0 = function(){var returned = (this.getSimpleMap).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.onStartListListen) { this.__obj__.onStartListListen$0 = function(){return (this.onStartListListen).call(this);}.bind(this);}if(proto.onAllListCancel) { this.__obj__.onAllListCancel$0 = function(){return (this.onAllListCancel).call(this);}.bind(this);}if(proto.subscribe) { this.__obj__.subscribe$2 = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.subscribe).call(this,$nn,$nnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.unsubscribe) { this.__obj__.unsubscribe$1 = function($nn){return (this.unsubscribe).call(this,$nn);}.bind(this);}if(proto.updateValue) { this.__obj__.updateValue$2$force = function($nn,_optObj_){_optObj_ = _optObj_ || {};var force = typeof(_optObj_.force) === 'undefined' ? null : _optObj_.force;if(force !== null) {}return (this.updateValue).call(this,$nn,force);}.bind(this);}if(proto.getInvokePermission) { this.__obj__.getInvokePermission$0 = function(){return (this.getInvokePermission).call(this);}.bind(this);}if(proto.getSetPermission) { this.__obj__.getSetPermission$0 = function(){return (this.getSetPermission).call(this);}.bind(this);}if(proto.invoke) { this.__obj__.invoke$5 = function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'InvokeResponse' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Node' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {}var returned = (this.invoke).call(this,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setAttribute) { this.__obj__.setAttribute$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }var returned = (this.setAttribute).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeAttribute) { this.__obj__.removeAttribute$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.removeAttribute).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setConfig) { this.__obj__.setConfig$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }var returned = (this.setConfig).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeConfig) { this.__obj__.removeConfig$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.removeConfig).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setValue) { this.__obj__.setValue$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}var returned = (this.setValue).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.set) { this.__obj__.$indexSet = function($nn,$nnn){var returned = (this.set).call(this,$nn,$nnn);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.serialize) { this.__obj__.serialize$1 = function($nn){var returned = (this.serialize).call(this,$nn);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.updateList) { this.__obj__.updateList$1 = function($nn){return (this.updateList).call(this,$nn);}.bind(this);}        }

        RootNode.prototype = Object.create(module.exports.RootNode.prototype);

        return RootNode;
      }
    });
    Object.defineProperty(module.exports.RootNode, "_", {enumerable: false,value:(function RootNode(__obj__) {var returned = Object.create(module.exports.RootNode.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "listChangeController", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listChangeController).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listChangeController = function() { return v; };}});Object.defineProperty(this, "listStream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listStream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$listStream = function() { return v; };}});Object.defineProperty(this, "lastValueUpdate", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$lastValueUpdate).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ValueUpdate' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$lastValueUpdate = function() { return v; };}});Object.defineProperty(this, "exists", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$exists).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$exists = function() { return v; };}});Object.defineProperty(this, "listReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listReady = function() { return v; };}});Object.defineProperty(this, "disconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$disconnected).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$disconnected = function() { return v; };}});Object.defineProperty(this, "valueReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$valueReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$valueReady = function() { return v; };}});Object.defineProperty(this, "hasSubscriber", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$hasSubscriber).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$hasSubscriber = function() { return v; };}});Object.defineProperty(this, "parentNode", {enumerable: true,get: function() { var returned = this.__obj__.parentNode;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.parentNode = v;}});Object.defineProperty(this, "loaded", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$loaded).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$loaded = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.RootNode.prototype.load = function($nn,$nnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.load$2).call(this.__obj__,$nn,$nnn);};module.exports.RootNode.prototype.getAttribute = function($nn){return (this.__obj__.getAttribute$1).call(this.__obj__,$nn);};module.exports.RootNode.prototype.getConfig = function($nn){return (this.__obj__.getConfig$1).call(this.__obj__,$nn);};module.exports.RootNode.prototype.addChild = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.addChild$2).call(this.__obj__,$nn,$nnn);};module.exports.RootNode.prototype.removeChild = function(dynamic){dynamic = dynamicTo(dynamic);return (this.__obj__.removeChild$1).call(this.__obj__,dynamic);};module.exports.RootNode.prototype.getChild = function($nn){var returned = (this.__obj__.getChild$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RootNode.prototype.get = function($nn){return (this.__obj__.$get$1).call(this.__obj__,$nn);};module.exports.RootNode.prototype.forEachChild = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.forEachChild$1).call(this.__obj__,$nn);};module.exports.RootNode.prototype.getSimpleMap = function(){var returned = (this.__obj__.getSimpleMap$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.RootNode.prototype.onStartListListen = function(){return (this.__obj__.onStartListListen$0).call(this.__obj__);};module.exports.RootNode.prototype.onAllListCancel = function(){return (this.__obj__.onAllListCancel$0).call(this.__obj__);};module.exports.RootNode.prototype.subscribe = function($nn,$nnn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.__obj__.subscribe$2).call(this.__obj__,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RespSubscribeListener' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RootNode.prototype.unsubscribe = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.unsubscribe$1).call(this.__obj__,$nn);};module.exports.RootNode.prototype.updateValue = function($nn,_optObj_){_optObj_ = _optObj_ || {};var force = typeof(_optObj_.force) === 'undefined' ? null : _optObj_.force;if(force !== null) {}return (this.__obj__.updateValue$2$force).call(this.__obj__,$nn,force);};module.exports.RootNode.prototype.getInvokePermission = function(){return (this.__obj__.getInvokePermission$0).call(this.__obj__);};module.exports.RootNode.prototype.getSetPermission = function(){return (this.__obj__.getSetPermission$0).call(this.__obj__);};module.exports.RootNode.prototype.invoke = function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {}var returned = (this.__obj__.invoke$5).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'InvokeResponse' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RootNode.prototype.setAttribute = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }var returned = (this.__obj__.setAttribute$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RootNode.prototype.removeAttribute = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.removeAttribute$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RootNode.prototype.setConfig = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }var returned = (this.__obj__.setConfig$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RootNode.prototype.removeConfig = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.removeConfig$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RootNode.prototype.setValue = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}var returned = (this.__obj__.setValue$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.RootNode.prototype.set = function($nn,$nnn){var returned = (this.__obj__.$indexSet).call(this.__obj__,$nn,$nnn);returned = dynamicFrom(returned);return returned;};module.exports.RootNode.prototype.serialize = function($nn){var returned = (this.__obj__.serialize$1).call(this.__obj__,$nn);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.RootNode.prototype.updateList = function($nn){return (this.__obj__.updateList$1).call(this.__obj__,$nn);};module.exports.DefinitionNode = function DefinitionNode() {var __obj__ = (function($nn){return (([function(path) {
  var t1, t2, t3, t4;
  t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int);
  t2 = P.LinkedHashMap__makeEmpty();
  t3 = P.LinkedHashMap__makeLiteral(["$is", "node"]);
  t4 = P.LinkedHashMap__makeEmpty();
  t3.$indexSet(0, "$is", "static");
  return new T.DefinitionNode(null, false, null, null, path, t1, null, null, t2, t3, t4);
}, null, null, 2, 0, 13, 107, [], "new DefinitionNode"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "listChangeController", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listChangeController).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listChangeController = function() { return v; };}});Object.defineProperty(this, "listStream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listStream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$listStream = function() { return v; };}});Object.defineProperty(this, "lastValueUpdate", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$lastValueUpdate).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ValueUpdate' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$lastValueUpdate = function() { return v; };}});Object.defineProperty(this, "exists", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$exists).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$exists = function() { return v; };}});Object.defineProperty(this, "listReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listReady = function() { return v; };}});Object.defineProperty(this, "disconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$disconnected).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$disconnected = function() { return v; };}});Object.defineProperty(this, "valueReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$valueReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$valueReady = function() { return v; };}});Object.defineProperty(this, "hasSubscriber", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$hasSubscriber).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$hasSubscriber = function() { return v; };}});Object.defineProperty(this, "parentNode", {enumerable: true,get: function() { var returned = this.__obj__.parentNode;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.parentNode = v;}});Object.defineProperty(this, "loaded", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$loaded).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$loaded = function() { return v; };}});};    Object.defineProperty(module.exports.DefinitionNode, 'class', {
      get: function() {
        function DefinitionNode() {
          module.exports.DefinitionNode.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.getAttribute) { this.__obj__.getAttribute$1 = function($nn){return (this.getAttribute).call(this,$nn);}.bind(this);}if(proto.getConfig) { this.__obj__.getConfig$1 = function($nn){return (this.getConfig).call(this,$nn);}.bind(this);}if(proto.addChild) { this.__obj__.addChild$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Node' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.addChild).call(this,$nn,$nnn);}.bind(this);}if(proto.removeChild) { this.__obj__.removeChild$1 = function(dynamic){dynamic = dynamicFrom(dynamic);return (this.removeChild).call(this,dynamic);}.bind(this);}if(proto.getChild) { this.__obj__.getChild$1 = function($nn){var returned = (this.getChild).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.get) { this.__obj__.$get$1 = function($nn){return (this.get).call(this,$nn);}.bind(this);}if(proto.forEachChild) { this.__obj__.forEachChild$1 = function($nn){return (this.forEachChild).call(this,$nn);}.bind(this);}if(proto.getSimpleMap) { this.__obj__.getSimpleMap$0 = function(){var returned = (this.getSimpleMap).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.onStartListListen) { this.__obj__.onStartListListen$0 = function(){return (this.onStartListListen).call(this);}.bind(this);}if(proto.onAllListCancel) { this.__obj__.onAllListCancel$0 = function(){return (this.onAllListCancel).call(this);}.bind(this);}if(proto.subscribe) { this.__obj__.subscribe$2 = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.subscribe).call(this,$nn,$nnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.unsubscribe) { this.__obj__.unsubscribe$1 = function($nn){return (this.unsubscribe).call(this,$nn);}.bind(this);}if(proto.updateValue) { this.__obj__.updateValue$2$force = function($nn,_optObj_){_optObj_ = _optObj_ || {};var force = typeof(_optObj_.force) === 'undefined' ? null : _optObj_.force;if(force !== null) {}return (this.updateValue).call(this,$nn,force);}.bind(this);}if(proto.getInvokePermission) { this.__obj__.getInvokePermission$0 = function(){return (this.getInvokePermission).call(this);}.bind(this);}if(proto.getSetPermission) { this.__obj__.getSetPermission$0 = function(){return (this.getSetPermission).call(this);}.bind(this);}if(proto.invoke) { this.__obj__.invoke$5 = function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'InvokeResponse' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Node' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {}var returned = (this.invoke).call(this,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setAttribute) { this.__obj__.setAttribute$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }var returned = (this.setAttribute).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeAttribute) { this.__obj__.removeAttribute$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.removeAttribute).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setConfig) { this.__obj__.setConfig$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }var returned = (this.setConfig).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeConfig) { this.__obj__.removeConfig$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.removeConfig).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setValue) { this.__obj__.setValue$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}var returned = (this.setValue).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.set) { this.__obj__.$indexSet = function($nn,$nnn){var returned = (this.set).call(this,$nn,$nnn);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.serialize) { this.__obj__.serialize$1 = function($nn){var returned = (this.serialize).call(this,$nn);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.load) { this.__obj__.load$2 = function($nn,$nnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'NodeProviderImpl' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.load).call(this,$nn,$nnn);}.bind(this);}if(proto.updateList) { this.__obj__.updateList$1 = function($nn){return (this.updateList).call(this,$nn);}.bind(this);}        }

        DefinitionNode.prototype = Object.create(module.exports.DefinitionNode.prototype);

        return DefinitionNode;
      }
    });
    Object.defineProperty(module.exports.DefinitionNode, "_", {enumerable: false,value:(function DefinitionNode(__obj__) {var returned = Object.create(module.exports.DefinitionNode.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "listChangeController", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listChangeController).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listChangeController = function() { return v; };}});Object.defineProperty(this, "listStream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listStream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$listStream = function() { return v; };}});Object.defineProperty(this, "lastValueUpdate", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$lastValueUpdate).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ValueUpdate' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$lastValueUpdate = function() { return v; };}});Object.defineProperty(this, "exists", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$exists).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$exists = function() { return v; };}});Object.defineProperty(this, "listReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listReady = function() { return v; };}});Object.defineProperty(this, "disconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$disconnected).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$disconnected = function() { return v; };}});Object.defineProperty(this, "valueReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$valueReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$valueReady = function() { return v; };}});Object.defineProperty(this, "hasSubscriber", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$hasSubscriber).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$hasSubscriber = function() { return v; };}});Object.defineProperty(this, "parentNode", {enumerable: true,get: function() { var returned = this.__obj__.parentNode;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.parentNode = v;}});Object.defineProperty(this, "loaded", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$loaded).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$loaded = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.DefinitionNode.prototype.getAttribute = function($nn){return (this.__obj__.getAttribute$1).call(this.__obj__,$nn);};module.exports.DefinitionNode.prototype.getConfig = function($nn){return (this.__obj__.getConfig$1).call(this.__obj__,$nn);};module.exports.DefinitionNode.prototype.addChild = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.addChild$2).call(this.__obj__,$nn,$nnn);};module.exports.DefinitionNode.prototype.removeChild = function(dynamic){dynamic = dynamicTo(dynamic);return (this.__obj__.removeChild$1).call(this.__obj__,dynamic);};module.exports.DefinitionNode.prototype.getChild = function($nn){var returned = (this.__obj__.getChild$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.DefinitionNode.prototype.get = function($nn){return (this.__obj__.$get$1).call(this.__obj__,$nn);};module.exports.DefinitionNode.prototype.forEachChild = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.forEachChild$1).call(this.__obj__,$nn);};module.exports.DefinitionNode.prototype.getSimpleMap = function(){var returned = (this.__obj__.getSimpleMap$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.DefinitionNode.prototype.onStartListListen = function(){return (this.__obj__.onStartListListen$0).call(this.__obj__);};module.exports.DefinitionNode.prototype.onAllListCancel = function(){return (this.__obj__.onAllListCancel$0).call(this.__obj__);};module.exports.DefinitionNode.prototype.subscribe = function($nn,$nnn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.__obj__.subscribe$2).call(this.__obj__,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RespSubscribeListener' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.DefinitionNode.prototype.unsubscribe = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.unsubscribe$1).call(this.__obj__,$nn);};module.exports.DefinitionNode.prototype.updateValue = function($nn,_optObj_){_optObj_ = _optObj_ || {};var force = typeof(_optObj_.force) === 'undefined' ? null : _optObj_.force;if(force !== null) {}return (this.__obj__.updateValue$2$force).call(this.__obj__,$nn,force);};module.exports.DefinitionNode.prototype.getInvokePermission = function(){return (this.__obj__.getInvokePermission$0).call(this.__obj__);};module.exports.DefinitionNode.prototype.getSetPermission = function(){return (this.__obj__.getSetPermission$0).call(this.__obj__);};module.exports.DefinitionNode.prototype.invoke = function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {}var returned = (this.__obj__.invoke$5).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'InvokeResponse' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.DefinitionNode.prototype.setAttribute = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }var returned = (this.__obj__.setAttribute$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.DefinitionNode.prototype.removeAttribute = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.removeAttribute$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.DefinitionNode.prototype.setConfig = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }var returned = (this.__obj__.setConfig$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.DefinitionNode.prototype.removeConfig = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.removeConfig$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.DefinitionNode.prototype.setValue = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}var returned = (this.__obj__.setValue$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.DefinitionNode.prototype.set = function($nn,$nnn){var returned = (this.__obj__.$indexSet).call(this.__obj__,$nn,$nnn);returned = dynamicFrom(returned);return returned;};module.exports.DefinitionNode.prototype.serialize = function($nn){var returned = (this.__obj__.serialize$1).call(this.__obj__,$nn);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.DefinitionNode.prototype.load = function($nn,$nnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.load$2).call(this.__obj__,$nn,$nnn);};module.exports.DefinitionNode.prototype.updateList = function($nn){return (this.__obj__.updateList$1).call(this.__obj__,$nn);};module.exports.Configs = function Configs() {var __obj__ = (function(){return (([function() {
  return new T.Configs(P.LinkedHashMap__makeEmpty());
}, null, null, 0, 0, 263, "new Configs"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});};    Object.defineProperty(module.exports.Configs, 'class', {
      get: function() {
        function Configs() {
          module.exports.Configs.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.load) { this.__obj__.load$1 = function($nn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}return (this.load).call(this,$nn);}.bind(this);}        }

        Configs.prototype = Object.create(module.exports.Configs.prototype);

        return Configs;
      }
    });
    Object.defineProperty(module.exports.Configs, "_", {enumerable: false,value:(function Configs(__obj__) {var returned = Object.create(module.exports.Configs.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});}.bind(returned))();return returned;})});Object.defineProperty(module.exports.Configs, "global", {enumerable: true,get: function() { var returned = this.__obj__.global;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Configs' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.global = v;}});Object.defineProperty(module.exports.Configs, "defaultConfig", {enumerable: true,get: function() { var returned = this.__obj__.defaultConfig;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConfigSetting' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.defaultConfig = v;}});module.exports.Configs.getConfig = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }var returned = (init.allClasses.Configs.Configs_getConfig).call(this,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConfigSetting' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.Configs.prototype.load = function($nn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return (this.__obj__.load$1).call(this.__obj__,$nn);};module.exports.ConfigSetting = function ConfigSetting() {var __obj__ = (function($nn,$nnn,_optObj_){_optObj_ = _optObj_ || {};var defaultValue = typeof(_optObj_.defaultValue) === 'undefined' ? null : _optObj_.defaultValue;if(defaultValue !== null) {}return (([function($name, type, defaultValue) {
  return new T.ConfigSetting($name, type, defaultValue);
}, null, null, 4, 3, 262, 35, 124, [], 130, [], 142, [], "new ConfigSetting"]
[0])).call(this,$nn,$nnn,defaultValue);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});Object.defineProperty(this, "type", {enumerable: true,get: function() { var returned = this.__obj__.type;return returned;},set: function(v) {this.__obj__.type = v;}});Object.defineProperty(this, "defaultValue", {enumerable: true,get: function() { var returned = this.__obj__.defaultValue;return returned;},set: function(v) {this.__obj__.defaultValue = v;}});};    Object.defineProperty(module.exports.ConfigSetting, 'class', {
      get: function() {
        function ConfigSetting() {
          module.exports.ConfigSetting.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.setConfig) { this.__obj__.setConfig$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'LocalNodeImpl' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.setConfig).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeConfig) { this.__obj__.removeConfig$2 = function($nn,$nnn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'LocalNodeImpl' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }var returned = (this.removeConfig).call(this,$nn,$nnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}        }

        ConfigSetting.prototype = Object.create(module.exports.ConfigSetting.prototype);

        return ConfigSetting;
      }
    });
    Object.defineProperty(module.exports.ConfigSetting, "_", {enumerable: false,value:(function ConfigSetting(__obj__) {var returned = Object.create(module.exports.ConfigSetting.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "name", {enumerable: true,get: function() { var returned = this.__obj__.name;return returned;},set: function(v) {this.__obj__.name = v;}});Object.defineProperty(this, "type", {enumerable: true,get: function() { var returned = this.__obj__.type;return returned;},set: function(v) {this.__obj__.type = v;}});Object.defineProperty(this, "defaultValue", {enumerable: true,get: function() { var returned = this.__obj__.defaultValue;return returned;},set: function(v) {this.__obj__.defaultValue = v;}});}.bind(returned))();return returned;})});module.exports.ConfigSetting.fromMap = function() {var __obj__ = (function($nn,$nnn){objEach($nnn, function(a, i) {this[i] = dynamicTo(a);}, $nnn);var elms = Object.keys($nnn).reduce(function(arr, key) { arr.push(key); arr.push($nnn[key]); return arr; }, []);$nnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return (([function($name, m) {
  var t1 = m.containsKey$1("type") === true ? J.$index$asx(m, "type") : "string";
  return new T.ConfigSetting($name, t1, m.containsKey$1("default") === true ? J.$index$asx(m, "default") : null);
}, null, null, 4, 0, 113, 124, [], 113, [], "new ConfigSetting$fromMap"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);return module.exports.ConfigSetting._(__obj__);};module.exports.ConfigSetting.prototype.setConfig = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.setConfig$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'DSError' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.ConfigSetting.prototype.removeConfig = function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }var returned = (this.__obj__.removeConfig$2).call(this.__obj__,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'DSError' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNodeImpl = function LocalNodeImpl() {var __obj__ = (function($nn){return (([function(path) {
  return new T.LocalNodeImpl(null, false, null, null, path, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
}, null, null, 2, 0, 13, 107, [], "new LocalNodeImpl"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "parentNode", {enumerable: true,get: function() { var returned = this.__obj__.parentNode;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.parentNode = v;}});Object.defineProperty(this, "loaded", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$loaded).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$loaded = function() { return v; };}});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "listChangeController", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listChangeController).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listChangeController = function() { return v; };}});Object.defineProperty(this, "listStream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listStream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$listStream = function() { return v; };}});Object.defineProperty(this, "lastValueUpdate", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$lastValueUpdate).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ValueUpdate' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$lastValueUpdate = function() { return v; };}});Object.defineProperty(this, "exists", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$exists).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$exists = function() { return v; };}});Object.defineProperty(this, "listReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listReady = function() { return v; };}});Object.defineProperty(this, "disconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$disconnected).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$disconnected = function() { return v; };}});Object.defineProperty(this, "valueReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$valueReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$valueReady = function() { return v; };}});Object.defineProperty(this, "hasSubscriber", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$hasSubscriber).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$hasSubscriber = function() { return v; };}});};    Object.defineProperty(module.exports.LocalNodeImpl, 'class', {
      get: function() {
        function LocalNodeImpl() {
          module.exports.LocalNodeImpl.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.serialize) { this.__obj__.serialize$1 = function($nn){var returned = (this.serialize).call(this,$nn);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.load) { this.__obj__.load$2 = function($nn,$nnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'NodeProviderImpl' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.load).call(this,$nn,$nnn);}.bind(this);}if(proto.updateList) { this.__obj__.updateList$1 = function($nn){return (this.updateList).call(this,$nn);}.bind(this);}if(proto.setAttribute) { this.__obj__.setAttribute$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }var returned = (this.setAttribute).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeAttribute) { this.__obj__.removeAttribute$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.removeAttribute).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setConfig) { this.__obj__.setConfig$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }var returned = (this.setConfig).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeConfig) { this.__obj__.removeConfig$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.removeConfig).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setValue) { this.__obj__.setValue$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}var returned = (this.setValue).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.getAttribute) { this.__obj__.getAttribute$1 = function($nn){return (this.getAttribute).call(this,$nn);}.bind(this);}if(proto.getConfig) { this.__obj__.getConfig$1 = function($nn){return (this.getConfig).call(this,$nn);}.bind(this);}if(proto.addChild) { this.__obj__.addChild$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Node' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.addChild).call(this,$nn,$nnn);}.bind(this);}if(proto.removeChild) { this.__obj__.removeChild$1 = function(dynamic){dynamic = dynamicFrom(dynamic);return (this.removeChild).call(this,dynamic);}.bind(this);}if(proto.getChild) { this.__obj__.getChild$1 = function($nn){var returned = (this.getChild).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.get) { this.__obj__.$get$1 = function($nn){return (this.get).call(this,$nn);}.bind(this);}if(proto.forEachChild) { this.__obj__.forEachChild$1 = function($nn){return (this.forEachChild).call(this,$nn);}.bind(this);}if(proto.getSimpleMap) { this.__obj__.getSimpleMap$0 = function(){var returned = (this.getSimpleMap).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}if(proto.onStartListListen) { this.__obj__.onStartListListen$0 = function(){return (this.onStartListListen).call(this);}.bind(this);}if(proto.onAllListCancel) { this.__obj__.onAllListCancel$0 = function(){return (this.onAllListCancel).call(this);}.bind(this);}if(proto.subscribe) { this.__obj__.subscribe$2 = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.subscribe).call(this,$nn,$nnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.unsubscribe) { this.__obj__.unsubscribe$1 = function($nn){return (this.unsubscribe).call(this,$nn);}.bind(this);}if(proto.updateValue) { this.__obj__.updateValue$2$force = function($nn,_optObj_){_optObj_ = _optObj_ || {};var force = typeof(_optObj_.force) === 'undefined' ? null : _optObj_.force;if(force !== null) {}return (this.updateValue).call(this,$nn,force);}.bind(this);}if(proto.getInvokePermission) { this.__obj__.getInvokePermission$0 = function(){return (this.getInvokePermission).call(this);}.bind(this);}if(proto.getSetPermission) { this.__obj__.getSetPermission$0 = function(){return (this.getSetPermission).call(this);}.bind(this);}if(proto.invoke) { this.__obj__.invoke$5 = function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'InvokeResponse' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Node' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {}var returned = (this.invoke).call(this,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.set) { this.__obj__.$indexSet = function($nn,$nnn){var returned = (this.set).call(this,$nn,$nnn);returned = dynamicTo(returned);return returned;}.bind(this);}        }

        LocalNodeImpl.prototype = Object.create(module.exports.LocalNodeImpl.prototype);

        return LocalNodeImpl;
      }
    });
    Object.defineProperty(module.exports.LocalNodeImpl, "_", {enumerable: false,value:(function LocalNodeImpl(__obj__) {var returned = Object.create(module.exports.LocalNodeImpl.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "parentNode", {enumerable: true,get: function() { var returned = this.__obj__.parentNode;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.parentNode = v;}});Object.defineProperty(this, "loaded", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$loaded).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$loaded = function() { return v; };}});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "listChangeController", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listChangeController).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listChangeController = function() { return v; };}});Object.defineProperty(this, "listStream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listStream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$listStream = function() { return v; };}});Object.defineProperty(this, "lastValueUpdate", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$lastValueUpdate).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ValueUpdate' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$lastValueUpdate = function() { return v; };}});Object.defineProperty(this, "exists", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$exists).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$exists = function() { return v; };}});Object.defineProperty(this, "listReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listReady = function() { return v; };}});Object.defineProperty(this, "disconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$disconnected).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$disconnected = function() { return v; };}});Object.defineProperty(this, "valueReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$valueReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$valueReady = function() { return v; };}});Object.defineProperty(this, "hasSubscriber", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$hasSubscriber).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$hasSubscriber = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.LocalNodeImpl.prototype.serialize = function($nn){var returned = (this.__obj__.serialize$1).call(this.__obj__,$nn);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.LocalNodeImpl.prototype.load = function($nn,$nnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.load$2).call(this.__obj__,$nn,$nnn);};module.exports.LocalNodeImpl.prototype.updateList = function($nn){return (this.__obj__.updateList$1).call(this.__obj__,$nn);};module.exports.LocalNodeImpl.prototype.setAttribute = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }var returned = (this.__obj__.setAttribute$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNodeImpl.prototype.removeAttribute = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.removeAttribute$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNodeImpl.prototype.setConfig = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }var returned = (this.__obj__.setConfig$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNodeImpl.prototype.removeConfig = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.removeConfig$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNodeImpl.prototype.setValue = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}var returned = (this.__obj__.setValue$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNodeImpl.prototype.getAttribute = function($nn){return (this.__obj__.getAttribute$1).call(this.__obj__,$nn);};module.exports.LocalNodeImpl.prototype.getConfig = function($nn){return (this.__obj__.getConfig$1).call(this.__obj__,$nn);};module.exports.LocalNodeImpl.prototype.addChild = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.addChild$2).call(this.__obj__,$nn,$nnn);};module.exports.LocalNodeImpl.prototype.removeChild = function(dynamic){dynamic = dynamicTo(dynamic);return (this.__obj__.removeChild$1).call(this.__obj__,dynamic);};module.exports.LocalNodeImpl.prototype.getChild = function($nn){var returned = (this.__obj__.getChild$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNodeImpl.prototype.get = function($nn){return (this.__obj__.$get$1).call(this.__obj__,$nn);};module.exports.LocalNodeImpl.prototype.forEachChild = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.forEachChild$1).call(this.__obj__,$nn);};module.exports.LocalNodeImpl.prototype.getSimpleMap = function(){var returned = (this.__obj__.getSimpleMap$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.LocalNodeImpl.prototype.onStartListListen = function(){return (this.__obj__.onStartListListen$0).call(this.__obj__);};module.exports.LocalNodeImpl.prototype.onAllListCancel = function(){return (this.__obj__.onAllListCancel$0).call(this.__obj__);};module.exports.LocalNodeImpl.prototype.subscribe = function($nn,$nnn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.__obj__.subscribe$2).call(this.__obj__,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RespSubscribeListener' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNodeImpl.prototype.unsubscribe = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.unsubscribe$1).call(this.__obj__,$nn);};module.exports.LocalNodeImpl.prototype.updateValue = function($nn,_optObj_){_optObj_ = _optObj_ || {};var force = typeof(_optObj_.force) === 'undefined' ? null : _optObj_.force;if(force !== null) {}return (this.__obj__.updateValue$2$force).call(this.__obj__,$nn,force);};module.exports.LocalNodeImpl.prototype.getInvokePermission = function(){return (this.__obj__.getInvokePermission$0).call(this.__obj__);};module.exports.LocalNodeImpl.prototype.getSetPermission = function(){return (this.__obj__.getSetPermission$0).call(this.__obj__);};module.exports.LocalNodeImpl.prototype.invoke = function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {}var returned = (this.__obj__.invoke$5).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'InvokeResponse' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNodeImpl.prototype.set = function($nn,$nnn){var returned = (this.__obj__.$indexSet).call(this.__obj__,$nn,$nnn);returned = dynamicFrom(returned);return returned;};module.exports.NodeProviderImpl = function NodeProviderImpl() {var __obj__ = (function(){return (([function() {
  return new T.NodeProviderImpl();
}, null, null, 0, 0, 265, "new NodeProviderImpl"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.NodeProviderImpl, 'class', {
      get: function() {
        function NodeProviderImpl() {
          module.exports.NodeProviderImpl.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.get) { this.__obj__.$index = function($nn){var returned = (this.get).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.bitwiseNegate) { this.__obj__.$not = function(){var returned = (this.bitwiseNegate).call(this);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}        }

        NodeProviderImpl.prototype = Object.create(module.exports.NodeProviderImpl.prototype);

        return NodeProviderImpl;
      }
    });
    Object.defineProperty(module.exports.NodeProviderImpl, "_", {enumerable: false,value:(function NodeProviderImpl(__obj__) {var returned = Object.create(module.exports.NodeProviderImpl.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.NodeProviderImpl.prototype.get = function($nn){var returned = (this.__obj__.$index).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.NodeProviderImpl.prototype.bitwiseNegate = function(){var returned = (this.__obj__.$not).call(this.__obj__);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.InvokeResponse = function InvokeResponse() {var __obj__ = (function($nn,$nnn,$nnnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }return (([function(responder, rid, node) {
  return new T.InvokeResponse(node, 0, null, null, "initialize", null, null, responder, rid, "initialize");
}, null, null, 6, 0, 271, 163, [], 170, [], 159, [], "new InvokeResponse"]
[0])).call(this,$nn,$nnn,$nnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "onClose", {enumerable: true,get: function() { var returned = this.__obj__.onClose;return returned;},set: function(v) {this.__obj__.onClose = v;}});Object.defineProperty(this, "responder", {enumerable: true,get: function() { var returned = this.__obj__.responder;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Responder' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.responder = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});};    Object.defineProperty(module.exports.InvokeResponse, 'class', {
      get: function() {
        function InvokeResponse() {
          module.exports.InvokeResponse.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.updateStream) { this.__obj__.updateStream$3$columns$streamStatus = function($nn,_optObj_){_optObj_ = _optObj_ || {};$nn = [].concat($nn);$nn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nn);var columns = typeof(_optObj_.columns) === 'undefined' ? null : _optObj_.columns;if(columns !== null) {columns = [].concat(columns);columns.forEach(function(a, i) {this[i] = dynamicFrom(a);}, columns);}var streamStatus = typeof(_optObj_.streamStatus) === 'undefined' ? null : _optObj_.streamStatus;if(streamStatus !== null) {}return (this.updateStream).call(this,$nn,columns,streamStatus);}.bind(this);}if(proto.processor) { this.__obj__.processor$0 = function(){return (this.processor).call(this);}.bind(this);}if(proto.close) { this.__obj__.close$1 = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'DSError' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }}return (this.close).call(this,$nn);}.bind(this);}        }

        InvokeResponse.prototype = Object.create(module.exports.InvokeResponse.prototype);

        return InvokeResponse;
      }
    });
    Object.defineProperty(module.exports.InvokeResponse, "_", {enumerable: false,value:(function InvokeResponse(__obj__) {var returned = Object.create(module.exports.InvokeResponse.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "onClose", {enumerable: true,get: function() { var returned = this.__obj__.onClose;return returned;},set: function(v) {this.__obj__.onClose = v;}});Object.defineProperty(this, "responder", {enumerable: true,get: function() { var returned = this.__obj__.responder;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Responder' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.responder = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});}.bind(returned))();return returned;})});module.exports.InvokeResponse.prototype.updateStream = function($nn,_optObj_){_optObj_ = _optObj_ || {};$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);var columns = typeof(_optObj_.columns) === 'undefined' ? null : _optObj_.columns;if(columns !== null) {columns = [].concat(columns);columns.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, columns);}var streamStatus = typeof(_optObj_.streamStatus) === 'undefined' ? null : _optObj_.streamStatus;if(streamStatus !== null) {}return (this.__obj__.updateStream$3$columns$streamStatus).call(this.__obj__,$nn,columns,streamStatus);};module.exports.InvokeResponse.prototype.processor = function(){return (this.__obj__.processor$0).call(this.__obj__);};module.exports.InvokeResponse.prototype.close = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }}return (this.__obj__.close$1).call(this.__obj__,$nn);};module.exports.ListResponse = function ListResponse() {var __obj__ = (function($nn,$nnn,$nnnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }return (([function(responder, rid, node) {
  var t1 = new T.ListResponse(node, null, null, P.LinkedHashSet_LinkedHashSet(null, null, null, P.String), true, false, responder, rid, "initialize");
  t1._permission = responder.get$nodeProvider().get$permissions().getPermission$2(J.get$path$x(node), responder);
  t1._nodeChangeListener = node.get$listStream().listen$1(t1.get$changed());
  if (node.get$listReady())
    responder.addProcessor$1(t1.get$processor());
  else
    node.get$disconnected();
  return t1;
}, null, null, 6, 0, 271, 163, [], 170, [], 159, [], "new ListResponse"]
[0])).call(this,$nn,$nnn,$nnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "changes", {enumerable: true,get: function() { var returned = this.__obj__.changes;return returned;},set: function(v) {this.__obj__.changes = v;}});Object.defineProperty(this, "initialResponse", {enumerable: true,get: function() { var returned = this.__obj__.initialResponse;return returned;},set: function(v) {this.__obj__.initialResponse = v;}});Object.defineProperty(this, "responder", {enumerable: true,get: function() { var returned = this.__obj__.responder;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Responder' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.responder = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});};    Object.defineProperty(module.exports.ListResponse, 'class', {
      get: function() {
        function ListResponse() {
          module.exports.ListResponse.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.changed) { this.__obj__.changed$1 = function($nn){return (this.changed).call(this,$nn);}.bind(this);}if(proto.processor) { this.__obj__.processor$0 = function(){return (this.processor).call(this);}.bind(this);}if(proto.close) { this.__obj__.close$1 = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'DSError' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }}return (this.close).call(this,$nn);}.bind(this);}        }

        ListResponse.prototype = Object.create(module.exports.ListResponse.prototype);

        return ListResponse;
      }
    });
    Object.defineProperty(module.exports.ListResponse, "_", {enumerable: false,value:(function ListResponse(__obj__) {var returned = Object.create(module.exports.ListResponse.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "changes", {enumerable: true,get: function() { var returned = this.__obj__.changes;return returned;},set: function(v) {this.__obj__.changes = v;}});Object.defineProperty(this, "initialResponse", {enumerable: true,get: function() { var returned = this.__obj__.initialResponse;return returned;},set: function(v) {this.__obj__.initialResponse = v;}});Object.defineProperty(this, "responder", {enumerable: true,get: function() { var returned = this.__obj__.responder;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Responder' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.responder = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});}.bind(returned))();return returned;})});module.exports.ListResponse.prototype.changed = function($nn){return (this.__obj__.changed$1).call(this.__obj__,$nn);};module.exports.ListResponse.prototype.processor = function(){return (this.__obj__.processor$0).call(this.__obj__);};module.exports.ListResponse.prototype.close = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }}return (this.__obj__.close$1).call(this.__obj__,$nn);};module.exports.RespSubscribeController = function RespSubscribeController() {var __obj__ = (function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (([function(response, node, sid, _permitted, cacheLevel) {
  var t1 = new T.RespSubscribeController(node, response, null, sid, _permitted, P.ListQueue$(null, O.ValueUpdate), null);
  t1.set$cacheLevel(cacheLevel);
  t1._listener = node.subscribe$2(t1.get$addValue(), t1._cachedLevel);
  if (node.get$valueReady() && node.get$lastValueUpdate() != null)
    t1.addValue$1(node.get$lastValueUpdate());
  return t1;
}, null, null, 10, 0, 273, 118, [], 159, [], 191, [], 192, [], 112, [], "new RespSubscribeController"]
[0])).call(this,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "response", {enumerable: true,get: function() { var returned = this.__obj__.response;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'SubscribeResponse' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.response = v;}});Object.defineProperty(this, "sid", {enumerable: true,get: function() { var returned = this.__obj__.sid;return returned;},set: function(v) {this.__obj__.sid = v;}});Object.defineProperty(this, "lastValues", {enumerable: true,get: function() { var returned = this.__obj__.lastValues;return returned;},set: function(v) {this.__obj__.lastValues = v;}});Object.defineProperty(this, "permitted", {enumerable: true,set: function(v) {(function($nn){return (this.__obj__.set$permitted).call(this.__obj__,$nn);}).call(this, v);}});Object.defineProperty(this, "cacheLevel", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$cacheLevel).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$cacheLevel = function() { return v; };}});};    Object.defineProperty(module.exports.RespSubscribeController, 'class', {
      get: function() {
        function RespSubscribeController() {
          module.exports.RespSubscribeController.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.addValue) { this.__obj__.addValue$1 = function($nn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'ValueUpdate' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }return (this.addValue).call(this,$nn);}.bind(this);}if(proto.mergeValues) { this.__obj__.mergeValues$0 = function(){return (this.mergeValues).call(this);}.bind(this);}if(proto.process) { this.__obj__.process$0 = function(){var returned = (this.process).call(this);returned = [].concat(returned);returned.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, returned);return returned;}.bind(this);}if(proto.destroy) { this.__obj__.destroy$0 = function(){return (this.destroy).call(this);}.bind(this);}        }

        RespSubscribeController.prototype = Object.create(module.exports.RespSubscribeController.prototype);

        return RespSubscribeController;
      }
    });
    Object.defineProperty(module.exports.RespSubscribeController, "_", {enumerable: false,value:(function RespSubscribeController(__obj__) {var returned = Object.create(module.exports.RespSubscribeController.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});Object.defineProperty(this, "response", {enumerable: true,get: function() { var returned = this.__obj__.response;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'SubscribeResponse' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.response = v;}});Object.defineProperty(this, "sid", {enumerable: true,get: function() { var returned = this.__obj__.sid;return returned;},set: function(v) {this.__obj__.sid = v;}});Object.defineProperty(this, "lastValues", {enumerable: true,get: function() { var returned = this.__obj__.lastValues;return returned;},set: function(v) {this.__obj__.lastValues = v;}});Object.defineProperty(this, "permitted", {enumerable: true,set: function(v) {(function($nn){return (this.__obj__.set$permitted).call(this.__obj__,$nn);}).call(this, v);}});Object.defineProperty(this, "cacheLevel", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$cacheLevel).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$cacheLevel = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.RespSubscribeController.prototype.addValue = function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (this.__obj__.addValue$1).call(this.__obj__,$nn);};module.exports.RespSubscribeController.prototype.mergeValues = function(){return (this.__obj__.mergeValues$0).call(this.__obj__);};module.exports.RespSubscribeController.prototype.process = function(){var returned = (this.__obj__.process$0).call(this.__obj__);returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;};module.exports.RespSubscribeController.prototype.destroy = function(){return (this.__obj__.destroy$0).call(this.__obj__);};module.exports.SubscribeResponse = function SubscribeResponse() {var __obj__ = (function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (([function(responder, rid) {
  return new T.SubscribeResponse(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, T.RespSubscribeController), P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.RespSubscribeController), P.LinkedHashSet_LinkedHashSet(null, null, null, T.RespSubscribeController), responder, rid, "initialize");
}, null, null, 4, 0, 270, 163, [], 170, [], "new SubscribeResponse"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "subsriptions", {enumerable: true,get: function() { var returned = this.__obj__.subsriptions;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.subsriptions = v;}});Object.defineProperty(this, "subsriptionids", {enumerable: true,get: function() { var returned = this.__obj__.subsriptionids;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.subsriptionids = v;}});Object.defineProperty(this, "changed", {enumerable: true,get: function() { var returned = this.__obj__.changed;return returned;},set: function(v) {this.__obj__.changed = v;}});Object.defineProperty(this, "responder", {enumerable: true,get: function() { var returned = this.__obj__.responder;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Responder' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.responder = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});};    Object.defineProperty(module.exports.SubscribeResponse, 'class', {
      get: function() {
        function SubscribeResponse() {
          module.exports.SubscribeResponse.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.add) { this.__obj__.add$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'LocalNode' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.add).call(this,$nn,$nnn,$nnnn,$nnnnn);}.bind(this);}if(proto.remove) { this.__obj__.remove$1 = function($nn){return (this.remove).call(this,$nn);}.bind(this);}if(proto.subscriptionChanged) { this.__obj__.subscriptionChanged$1 = function($nn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'RespSubscribeController' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }return (this.subscriptionChanged).call(this,$nn);}.bind(this);}if(proto.processor) { this.__obj__.processor$0 = function(){return (this.processor).call(this);}.bind(this);}if(proto.close) { this.__obj__.close$1 = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'DSError' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }}return (this.close).call(this,$nn);}.bind(this);}        }

        SubscribeResponse.prototype = Object.create(module.exports.SubscribeResponse.prototype);

        return SubscribeResponse;
      }
    });
    Object.defineProperty(module.exports.SubscribeResponse, "_", {enumerable: false,value:(function SubscribeResponse(__obj__) {var returned = Object.create(module.exports.SubscribeResponse.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "subsriptions", {enumerable: true,get: function() { var returned = this.__obj__.subsriptions;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.subsriptions = v;}});Object.defineProperty(this, "subsriptionids", {enumerable: true,get: function() { var returned = this.__obj__.subsriptionids;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.subsriptionids = v;}});Object.defineProperty(this, "changed", {enumerable: true,get: function() { var returned = this.__obj__.changed;return returned;},set: function(v) {this.__obj__.changed = v;}});Object.defineProperty(this, "responder", {enumerable: true,get: function() { var returned = this.__obj__.responder;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Responder' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.responder = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});}.bind(returned))();return returned;})});module.exports.SubscribeResponse.prototype.add = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.add$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);};module.exports.SubscribeResponse.prototype.remove = function($nn){return (this.__obj__.remove$1).call(this.__obj__,$nn);};module.exports.SubscribeResponse.prototype.subscriptionChanged = function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (this.__obj__.subscriptionChanged$1).call(this.__obj__,$nn);};module.exports.SubscribeResponse.prototype.processor = function(){return (this.__obj__.processor$0).call(this.__obj__);};module.exports.SubscribeResponse.prototype.close = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }}return (this.__obj__.close$1).call(this.__obj__,$nn);};module.exports.RespSubscribeListener = function RespSubscribeListener() {var __obj__ = (function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (([function(node, callback) {
  return new T.RespSubscribeListener(callback, node);
}, null, null, 4, 0, 272, 159, [], 47, [], "new RespSubscribeListener"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "callback", {enumerable: true,get: function() { var returned = this.__obj__.callback;return returned;},set: function(v) {this.__obj__.callback = v;}});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});};    Object.defineProperty(module.exports.RespSubscribeListener, 'class', {
      get: function() {
        function RespSubscribeListener() {
          module.exports.RespSubscribeListener.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.cancel) { this.__obj__.cancel$0 = function(){return (this.cancel).call(this);}.bind(this);}        }

        RespSubscribeListener.prototype = Object.create(module.exports.RespSubscribeListener.prototype);

        return RespSubscribeListener;
      }
    });
    Object.defineProperty(module.exports.RespSubscribeListener, "_", {enumerable: false,value:(function RespSubscribeListener(__obj__) {var returned = Object.create(module.exports.RespSubscribeListener.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "callback", {enumerable: true,get: function() { var returned = this.__obj__.callback;return returned;},set: function(v) {this.__obj__.callback = v;}});Object.defineProperty(this, "node", {enumerable: true,get: function() { var returned = this.__obj__.node;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.node = v;}});}.bind(returned))();return returned;})});module.exports.RespSubscribeListener.prototype.cancel = function(){return (this.__obj__.cancel$0).call(this.__obj__);};module.exports.NodeProvider = function NodeProvider() {var __obj__ = (function(){return (([function() {
  return new T.NodeProvider();
}, null, null, 0, 0, 268, "new NodeProvider"]
[0])).call(this);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});};    Object.defineProperty(module.exports.NodeProvider, 'class', {
      get: function() {
        function NodeProvider() {
          module.exports.NodeProvider.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.get) { this.__obj__.$index = function($nn){var returned = (this.get).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.bitwiseNegate) { this.__obj__.$not = function(){var returned = (this.bitwiseNegate).call(this);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}        }

        NodeProvider.prototype = Object.create(module.exports.NodeProvider.prototype);

        return NodeProvider;
      }
    });
    Object.defineProperty(module.exports.NodeProvider, "_", {enumerable: false,value:(function NodeProvider(__obj__) {var returned = Object.create(module.exports.NodeProvider.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});}.bind(returned))();return returned;})});module.exports.NodeProvider.prototype.get = function($nn){var returned = (this.__obj__.$index).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.NodeProvider.prototype.bitwiseNegate = function(){var returned = (this.__obj__.$not).call(this.__obj__);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNode = function LocalNode() {var __obj__ = (function($nn){return (([function(path) {
  return new T.LocalNode(null, null, path, P.LinkedHashMap_LinkedHashMap(null, null, null, P.Function, P.$int), null, null, P.LinkedHashMap__makeEmpty(), P.LinkedHashMap__makeLiteral(["$is", "node"]), P.LinkedHashMap__makeEmpty());
}, null, null, 2, 0, 13, 107, [], "new LocalNode"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "listChangeController", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listChangeController).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listChangeController = function() { return v; };}});Object.defineProperty(this, "listStream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listStream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$listStream = function() { return v; };}});Object.defineProperty(this, "lastValueUpdate", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$lastValueUpdate).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ValueUpdate' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$lastValueUpdate = function() { return v; };}});Object.defineProperty(this, "exists", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$exists).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$exists = function() { return v; };}});Object.defineProperty(this, "listReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listReady = function() { return v; };}});Object.defineProperty(this, "disconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$disconnected).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$disconnected = function() { return v; };}});Object.defineProperty(this, "valueReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$valueReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$valueReady = function() { return v; };}});Object.defineProperty(this, "hasSubscriber", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$hasSubscriber).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$hasSubscriber = function() { return v; };}});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});};    Object.defineProperty(module.exports.LocalNode, 'class', {
      get: function() {
        function LocalNode() {
          module.exports.LocalNode.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.onStartListListen) { this.__obj__.onStartListListen$0 = function(){return (this.onStartListListen).call(this);}.bind(this);}if(proto.onAllListCancel) { this.__obj__.onAllListCancel$0 = function(){return (this.onAllListCancel).call(this);}.bind(this);}if(proto.subscribe) { this.__obj__.subscribe$2 = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.subscribe).call(this,$nn,$nnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.unsubscribe) { this.__obj__.unsubscribe$1 = function($nn){return (this.unsubscribe).call(this,$nn);}.bind(this);}if(proto.updateValue) { this.__obj__.updateValue$2$force = function($nn,_optObj_){_optObj_ = _optObj_ || {};var force = typeof(_optObj_.force) === 'undefined' ? null : _optObj_.force;if(force !== null) {}return (this.updateValue).call(this,$nn,force);}.bind(this);}if(proto.getInvokePermission) { this.__obj__.getInvokePermission$0 = function(){return (this.getInvokePermission).call(this);}.bind(this);}if(proto.getSetPermission) { this.__obj__.getSetPermission$0 = function(){return (this.getSetPermission).call(this);}.bind(this);}if(proto.invoke) { this.__obj__.invoke$5 = function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'InvokeResponse' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Node' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {}var returned = (this.invoke).call(this,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setAttribute) { this.__obj__.setAttribute$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }var returned = (this.setAttribute).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeAttribute) { this.__obj__.removeAttribute$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.removeAttribute).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setConfig) { this.__obj__.setConfig$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Responder' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }if(!$nnnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnnn.constructor.name;$nnnnn = module.exports[_type]._($nnnnn); }var returned = (this.setConfig).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeConfig) { this.__obj__.removeConfig$3 = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }var returned = (this.removeConfig).call(this,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.setValue) { this.__obj__.setValue$4 = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Responder' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }if(!$nnnn.__isWrapped__) {var _type = typeof(module.exports[$nnnn.constructor.name]) === 'undefined' ? 'Response' : $nnnn.constructor.name;$nnnn = module.exports[_type]._($nnnn); }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}var returned = (this.setValue).call(this,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.get) { this.__obj__.$index = function($nn){var returned = (this.get).call(this,$nn);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.set) { this.__obj__.$indexSet = function($nn,$nnn){var returned = (this.set).call(this,$nn,$nnn);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.getAttribute) { this.__obj__.getAttribute$1 = function($nn){return (this.getAttribute).call(this,$nn);}.bind(this);}if(proto.getConfig) { this.__obj__.getConfig$1 = function($nn){return (this.getConfig).call(this,$nn);}.bind(this);}if(proto.addChild) { this.__obj__.addChild$2 = function($nn,$nnn){if(!$nnn.__isWrapped__) {var _type = typeof(module.exports[$nnn.constructor.name]) === 'undefined' ? 'Node' : $nnn.constructor.name;$nnn = module.exports[_type]._($nnn); }return (this.addChild).call(this,$nn,$nnn);}.bind(this);}if(proto.removeChild) { this.__obj__.removeChild$1 = function(dynamic){dynamic = dynamicFrom(dynamic);return (this.removeChild).call(this,dynamic);}.bind(this);}if(proto.getChild) { this.__obj__.getChild$1 = function($nn){var returned = (this.getChild).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.forEachChild) { this.__obj__.forEachChild$1 = function($nn){return (this.forEachChild).call(this,$nn);}.bind(this);}if(proto.getSimpleMap) { this.__obj__.getSimpleMap$0 = function(){var returned = (this.getSimpleMap).call(this);objEach(returned, function(a, i) {this[i] = dynamicTo(a);}, returned);var elms = Object.keys(returned).reduce(function(arr, key) { arr.push(key); arr.push(returned[key]); return arr; }, []);returned = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return returned;}.bind(this);}        }

        LocalNode.prototype = Object.create(module.exports.LocalNode.prototype);

        return LocalNode;
      }
    });
    Object.defineProperty(module.exports.LocalNode, "_", {enumerable: false,value:(function LocalNode(__obj__) {var returned = Object.create(module.exports.LocalNode.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "path", {enumerable: true,get: function() { var returned = this.__obj__.path;return returned;},set: function(v) {this.__obj__.path = v;}});Object.defineProperty(this, "callbacks", {enumerable: true,get: function() { var returned = this.__obj__.callbacks;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.callbacks = v;}});Object.defineProperty(this, "listChangeController", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listChangeController).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listChangeController = function() { return v; };}});Object.defineProperty(this, "listStream", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listStream).call(this.__obj__);}).apply(this, arguments);returned = new module.exports.Stream(returned);return returned;},set: function(v) {this.__obj__.get$listStream = function() { return v; };}});Object.defineProperty(this, "lastValueUpdate", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$lastValueUpdate).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ValueUpdate' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$lastValueUpdate = function() { return v; };}});Object.defineProperty(this, "exists", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$exists).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$exists = function() { return v; };}});Object.defineProperty(this, "listReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$listReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$listReady = function() { return v; };}});Object.defineProperty(this, "disconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$disconnected).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$disconnected = function() { return v; };}});Object.defineProperty(this, "valueReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$valueReady).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$valueReady = function() { return v; };}});Object.defineProperty(this, "hasSubscriber", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$hasSubscriber).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$hasSubscriber = function() { return v; };}});Object.defineProperty(this, "profile", {enumerable: true,get: function() { var returned = this.__obj__.profile;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.profile = v;}});Object.defineProperty(this, "attributes", {enumerable: true,get: function() { var returned = this.__obj__.attributes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.attributes = v;}});Object.defineProperty(this, "configs", {enumerable: true,get: function() { var returned = this.__obj__.configs;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.configs = v;}});Object.defineProperty(this, "children", {enumerable: true,get: function() { var returned = this.__obj__.children;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.children = v;}});}.bind(returned))();return returned;})});module.exports.LocalNode.prototype.onStartListListen = function(){return (this.__obj__.onStartListListen$0).call(this.__obj__);};module.exports.LocalNode.prototype.onAllListCancel = function(){return (this.__obj__.onAllListCancel$0).call(this.__obj__);};module.exports.LocalNode.prototype.subscribe = function($nn,$nnn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.__obj__.subscribe$2).call(this.__obj__,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'RespSubscribeListener' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNode.prototype.unsubscribe = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.unsubscribe$1).call(this.__obj__,$nn);};module.exports.LocalNode.prototype.updateValue = function($nn,_optObj_){_optObj_ = _optObj_ || {};var force = typeof(_optObj_.force) === 'undefined' ? false : _optObj_.force;if(force !== null) {}return (this.__obj__.updateValue$2$force).call(this.__obj__,$nn,force);};module.exports.LocalNode.prototype.getInvokePermission = function(){return (this.__obj__.getInvokePermission$0).call(this.__obj__);};module.exports.LocalNode.prototype.getSetPermission = function(){return (this.__obj__.getSetPermission$0).call(this.__obj__);};module.exports.LocalNode.prototype.invoke = function($nn,$nnn,$nnnn,$nnnnn,$nnnnnn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }$nnnnnn = typeof($nnnnnn) === 'undefined' ? null : $nnnnnn;if($nnnnnn !== null) {}var returned = (this.__obj__.invoke$5).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn,$nnnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'InvokeResponse' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNode.prototype.setAttribute = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }var returned = (this.__obj__.setAttribute$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNode.prototype.removeAttribute = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.removeAttribute$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNode.prototype.setConfig = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }if(!$nnnnn.__isWrapped__) { $nnnnn = $nnnnn.__obj__; }var returned = (this.__obj__.setConfig$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNode.prototype.removeConfig = function($nn,$nnn,$nnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var returned = (this.__obj__.removeConfig$3).call(this.__obj__,$nn,$nnn,$nnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNode.prototype.setValue = function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }$nnnnn = typeof($nnnnn) === 'undefined' ? null : $nnnnn;if($nnnnn !== null) {}var returned = (this.__obj__.setValue$4).call(this.__obj__,$nn,$nnn,$nnnn,$nnnnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNode.prototype.get = function($nn){var returned = (this.__obj__.$index).call(this.__obj__,$nn);returned = dynamicFrom(returned);return returned;};module.exports.LocalNode.prototype.set = function($nn,$nnn){var returned = (this.__obj__.$indexSet).call(this.__obj__,$nn,$nnn);returned = dynamicFrom(returned);return returned;};module.exports.LocalNode.prototype.getAttribute = function($nn){return (this.__obj__.getAttribute$1).call(this.__obj__,$nn);};module.exports.LocalNode.prototype.getConfig = function($nn){return (this.__obj__.getConfig$1).call(this.__obj__,$nn);};module.exports.LocalNode.prototype.addChild = function($nn,$nnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (this.__obj__.addChild$2).call(this.__obj__,$nn,$nnn);};module.exports.LocalNode.prototype.removeChild = function(dynamic){dynamic = dynamicTo(dynamic);return (this.__obj__.removeChild$1).call(this.__obj__,dynamic);};module.exports.LocalNode.prototype.getChild = function($nn){var returned = (this.__obj__.getChild$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Node' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LocalNode.prototype.forEachChild = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);returned = dynamicFrom(returned);return returned;}};return (this.__obj__.forEachChild$1).call(this.__obj__,$nn);};module.exports.LocalNode.prototype.getSimpleMap = function(){var returned = (this.__obj__.getSimpleMap$0).call(this.__obj__);          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;};module.exports.Response = function Response() {var __obj__ = (function($nn,$nnn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (([function(responder, rid) {
  return new T.Response(responder, rid, "initialize");
}, null, null, 4, 0, 270, 163, [], 170, [], "new Response"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "responder", {enumerable: true,get: function() { var returned = this.__obj__.responder;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Responder' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.responder = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});};    Object.defineProperty(module.exports.Response, 'class', {
      get: function() {
        function Response() {
          module.exports.Response.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.close) { this.__obj__.close$1 = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'DSError' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }}return (this.close).call(this,$nn);}.bind(this);}        }

        Response.prototype = Object.create(module.exports.Response.prototype);

        return Response;
      }
    });
    Object.defineProperty(module.exports.Response, "_", {enumerable: false,value:(function Response(__obj__) {var returned = Object.create(module.exports.Response.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "responder", {enumerable: true,get: function() { var returned = this.__obj__.responder;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Responder' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.responder = v;}});Object.defineProperty(this, "rid", {enumerable: true,get: function() { var returned = this.__obj__.rid;return returned;},set: function(v) {this.__obj__.rid = v;}});}.bind(returned))();return returned;})});module.exports.Response.prototype.close = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }}return (this.__obj__.close$1).call(this.__obj__,$nn);};module.exports.Responder = function Responder() {var __obj__ = (function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }return (([function(nodeProvider) {
  var t1, t2, t3;
  t1 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.Response);
  t2 = new T.Responder(null, [], t1, null, nodeProvider, null, null, null, [], [], false);
  t3 = new T.SubscribeResponse(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, T.RespSubscribeController), P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.RespSubscribeController), P.LinkedHashSet_LinkedHashSet(null, null, null, T.RespSubscribeController), t2, 0, "initialize");
  t2._responder$_subscription = t3;
  t1.$indexSet(0, 0, t3);
  return t2;
}, null, null, 2, 0, 269, 99, [], "new Responder"]
[0])).call(this,$nn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "reqId", {enumerable: true,get: function() { var returned = this.__obj__.reqId;return returned;},set: function(v) {this.__obj__.reqId = v;}});Object.defineProperty(this, "groups", {enumerable: true,get: function() { var returned = this.__obj__.groups;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.groups = v;}});Object.defineProperty(this, "nodeProvider", {enumerable: true,get: function() { var returned = this.__obj__.nodeProvider;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'NodeProvider' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.nodeProvider = v;}});Object.defineProperty(this, "connection", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$connection).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$connection = function() { return v; };}});};    Object.defineProperty(module.exports.Responder, 'class', {
      get: function() {
        function Responder() {
          module.exports.Responder.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.addResponse) { this.__obj__.addResponse$1 = function($nn){if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'Response' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }var returned = (this.addResponse).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.onData) { this.__obj__.onData$1 = function($nn){$nn = [].concat($nn);$nn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nn);return (this.onData).call(this,$nn);}.bind(this);}if(proto.updateResponse) { this.__obj__.updateResponse$4$columns$streamStatus = function($nn,$nnn,_optObj_){_optObj_ = _optObj_ || {};if(!$nn.__isWrapped__) {var _type = typeof(module.exports[$nn.constructor.name]) === 'undefined' ? 'Response' : $nn.constructor.name;$nn = module.exports[_type]._($nn); }$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {this[i] = dynamicFrom(a);}, $nnn);var columns = typeof(_optObj_.columns) === 'undefined' ? null : _optObj_.columns;if(columns !== null) {columns = [].concat(columns);columns.forEach(function(a, i) {}, columns);}var streamStatus = typeof(_optObj_.streamStatus) === 'undefined' ? null : _optObj_.streamStatus;if(streamStatus !== null) {}return (this.updateResponse).call(this,$nn,$nnn,columns,streamStatus);}.bind(this);}if(proto.onDisconnected) { this.__obj__.onDisconnected$0 = function(){return (this.onDisconnected).call(this);}.bind(this);}if(proto.onReconnected) { this.__obj__.onReconnected$0 = function(){return (this.onReconnected).call(this);}.bind(this);}if(proto.addToSendList) { this.__obj__.addToSendList$1 = function($nn){          if($nn.constructor.name === '_JsonMap') {
            $nn = $nn._original;
            Object.keys($nn).forEach(function(key) { $nn[key] = dynamicFrom($nn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nn._strings) {
              objEach($nn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nn[key] = values[index]; });}return (this.addToSendList).call(this,$nn);}.bind(this);}if(proto.addProcessor) { this.__obj__.addProcessor$1 = function($nn){return (this.addProcessor).call(this,$nn);}.bind(this);}if(proto.doSend) { this.__obj__.doSend$0 = function(){var returned = (this.doSend).call(this);returned = [].concat(returned);returned.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, returned);return returned;}.bind(this);}        }

        Responder.prototype = Object.create(module.exports.Responder.prototype);

        return Responder;
      }
    });
    Object.defineProperty(module.exports.Responder, "_", {enumerable: false,value:(function Responder(__obj__) {var returned = Object.create(module.exports.Responder.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "reqId", {enumerable: true,get: function() { var returned = this.__obj__.reqId;return returned;},set: function(v) {this.__obj__.reqId = v;}});Object.defineProperty(this, "groups", {enumerable: true,get: function() { var returned = this.__obj__.groups;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.groups = v;}});Object.defineProperty(this, "nodeProvider", {enumerable: true,get: function() { var returned = this.__obj__.nodeProvider;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'NodeProvider' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.nodeProvider = v;}});Object.defineProperty(this, "connection", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$connection).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$connection = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.Responder.prototype.addResponse = function($nn){if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }var returned = (this.__obj__.addResponse$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Response' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.Responder.prototype.onData = function($nn){$nn = [].concat($nn);$nn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nn);return (this.__obj__.onData$1).call(this.__obj__,$nn);};module.exports.Responder.prototype.updateResponse = function($nn,$nnn,_optObj_){_optObj_ = _optObj_ || {};if(!$nn.__isWrapped__) { $nn = $nn.__obj__; }$nnn = [].concat($nnn);$nnn.forEach(function(a, i) {a = dynamicTo(a);this[i] = a;}, $nnn);var columns = typeof(_optObj_.columns) === 'undefined' ? null : _optObj_.columns;if(columns !== null) {columns = [].concat(columns);columns.forEach(function(a, i) {this[i] = a;}, columns);}var streamStatus = typeof(_optObj_.streamStatus) === 'undefined' ? null : _optObj_.streamStatus;if(streamStatus !== null) {}return (this.__obj__.updateResponse$4$columns$streamStatus).call(this.__obj__,$nn,$nnn,columns,streamStatus);};module.exports.Responder.prototype.onDisconnected = function(){return (this.__obj__.onDisconnected$0).call(this.__obj__);};module.exports.Responder.prototype.onReconnected = function(){return (this.__obj__.onReconnected$0).call(this.__obj__);};module.exports.Responder.prototype.addToSendList = function($nn){objEach($nn, function(a, i) {this[i] = dynamicTo(a);}, $nn);var elms = Object.keys($nn).reduce(function(arr, key) { arr.push(key); arr.push($nn[key]); return arr; }, []);$nn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);return (this.__obj__.addToSendList$1).call(this.__obj__,$nn);};module.exports.Responder.prototype.addProcessor = function($nn){$nn = {call$0: function() {var returned = $nn.apply(this, arguments);return returned;}};return (this.__obj__.addProcessor$1).call(this.__obj__,$nn);};module.exports.Responder.prototype.doSend = function(){var returned = (this.__obj__.doSend$0).call(this.__obj__);returned = [].concat(returned);returned.forEach(function(a, i) {this[i] = dynamicFrom(a);}, returned);return returned;};module.exports.PrivateKey = function PrivateKey() {var __obj__ = (function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}return (([function(ecPrivateKey, ecPublicKey) {
  var t1 = new K.PrivateKey(null, ecPrivateKey, ecPublicKey);
  t1.PrivateKey$2(ecPrivateKey, ecPublicKey);
  return t1;
}, null, null, 2, 2, 244, 35, 166, [], 167, [], "new PrivateKey"]
[0])).call(this,$nn,$nnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "publicKey", {enumerable: true,get: function() { var returned = this.__obj__.publicKey;return returned;},set: function(v) {this.__obj__.publicKey = v;}});Object.defineProperty(this, "ecPrivateKey", {enumerable: true,get: function() { var returned = this.__obj__.ecPrivateKey;return returned;},set: function(v) {this.__obj__.ecPrivateKey = v;}});Object.defineProperty(this, "ecPublicKey", {enumerable: true,get: function() { var returned = this.__obj__.ecPublicKey;return returned;},set: function(v) {this.__obj__.ecPublicKey = v;}});};    Object.defineProperty(module.exports.PrivateKey, 'class', {
      get: function() {
        function PrivateKey() {
          module.exports.PrivateKey.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.saveToString) { this.__obj__.saveToString$0 = function(){return (this.saveToString).call(this);}.bind(this);}if(proto.decodeECDH) { this.__obj__.decodeECDH$1 = function($nn){var returned = (this.decodeECDH).call(this,$nn);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}        }

        PrivateKey.prototype = Object.create(module.exports.PrivateKey.prototype);

        return PrivateKey;
      }
    });
    Object.defineProperty(module.exports.PrivateKey, "_", {enumerable: false,value:(function PrivateKey(__obj__) {var returned = Object.create(module.exports.PrivateKey.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "publicKey", {enumerable: true,get: function() { var returned = this.__obj__.publicKey;return returned;},set: function(v) {this.__obj__.publicKey = v;}});Object.defineProperty(this, "ecPrivateKey", {enumerable: true,get: function() { var returned = this.__obj__.ecPrivateKey;return returned;},set: function(v) {this.__obj__.ecPrivateKey = v;}});Object.defineProperty(this, "ecPublicKey", {enumerable: true,get: function() { var returned = this.__obj__.ecPublicKey;return returned;},set: function(v) {this.__obj__.ecPublicKey = v;}});}.bind(returned))();return returned;})});module.exports.PrivateKey.generate = function(){var returned = (init.allClasses.PrivateKey.PrivateKey_generate).call(this);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'PrivateKey' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.PrivateKey.generateSync = function() {var __obj__ = (function(){return (([function() {
  var gen, t1, rsapars, params, pair;
  gen = new S.ECKeyGenerator(null, null);
  t1 = $.get$_secp256r1();
  rsapars = new Z.ECKeyGeneratorParameters(null, t1.get$n().bitLength$0(0));
  rsapars._domainParameters = t1;
  params = new A.ParametersWithRandom(rsapars, $.get$DSRandom_instance());
  params.$builtinTypeInfo = [null];
  gen.init$1(params);
  pair = gen.generateKeyPair$0();
  return K.PrivateKey$(pair.privateKey, pair.publicKey);
}, null, null, 0, 0, 246, "new PrivateKey$generateSync"]
[0])).call(this);}).apply(this, arguments);return module.exports.PrivateKey._(__obj__);};module.exports.PrivateKey.loadFromString = function() {var __obj__ = (function($nn){return (([function(str) {
  var t1, ss, d, t2;
  t1 = J.getInterceptor$asx(str);
  if (t1.contains$1(str, " ") === true) {
    ss = t1.split$1(str, " ");
    if (0 >= ss.length)
      return H.ioore(ss, 0);
    d = Z.BigInteger_BigInteger$fromBytes(1, Q.Base64_decode(ss[0]));
    t1 = $.get$_secp256r1();
    t2 = t1.get$curve();
    if (1 >= ss.length)
      return H.ioore(ss, 1);
    return K.PrivateKey$(new Q.ECPrivateKey(d, t1), new Q.ECPublicKey(t2.decodePoint$1(Q.Base64_decode(ss[1])), $.get$_secp256r1()));
  } else
    return K.PrivateKey$(new Q.ECPrivateKey(Z.BigInteger_BigInteger$fromBytes(1, Q.Base64_decode(str)), $.get$_secp256r1()), null);
}, null, null, 2, 0, 247, 160, [], "new PrivateKey$loadFromString"]
[0])).call(this,$nn);}).apply(this, arguments);return module.exports.PrivateKey._(__obj__);};module.exports.PrivateKey.prototype.saveToString = function(){return (this.__obj__.saveToString$0).call(this.__obj__);};module.exports.PrivateKey.prototype.decodeECDH = function($nn){var returned = (this.__obj__.decodeECDH$1).call(this.__obj__,$nn);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.HttpClientConnection = function HttpClientConnection() {var __obj__ = (function($nn,$nnn,$nnnn,$nnnnn){if(!$nnn.__isWrapped__) { $nnn = $nnn.__obj__; }return (([function(url, clientLink, saltL, saltS) {
  var t1, t2, t3, t4;
  t1 = new P._Future(0, $.Zone__current, null);
  t1.$builtinTypeInfo = [O.ConnectionChannel];
  t1 = new P._AsyncCompleter(t1);
  t1.$builtinTypeInfo = [O.ConnectionChannel];
  t2 = new P._Future(0, $.Zone__current, null);
  t2.$builtinTypeInfo = [P.bool];
  t2 = new P._AsyncCompleter(t2);
  t2.$builtinTypeInfo = [P.bool];
  t1 = new X.HttpClientConnection(null, null, t1, t2, false, url, clientLink, saltL, saltS, false, false, false, false, false, null, false, false, 1, false);
  t2 = P.StreamController_StreamController(null, null, null, null, false, P.List);
  t3 = new P._Future(0, $.Zone__current, null);
  t3.$builtinTypeInfo = [O.ConnectionChannel];
  t3 = new P._AsyncCompleter(t3);
  t3.$builtinTypeInfo = [O.ConnectionChannel];
  t4 = new P._Future(0, $.Zone__current, null);
  t4.$builtinTypeInfo = [O.ConnectionChannel];
  t4 = new P._AsyncCompleter(t4);
  t4.$builtinTypeInfo = [O.ConnectionChannel];
  t1._client$_responderChannel = new O.PassiveChannel(t2, [], t1, null, false, false, t3, t4);
  t2 = P.StreamController_StreamController(null, null, null, null, false, P.List);
  t3 = new P._Future(0, $.Zone__current, null);
  t3.$builtinTypeInfo = [O.ConnectionChannel];
  t3 = new P._AsyncCompleter(t3);
  t3.$builtinTypeInfo = [O.ConnectionChannel];
  t4 = new P._Future(0, $.Zone__current, null);
  t4.$builtinTypeInfo = [O.ConnectionChannel];
  t4 = new P._AsyncCompleter(t4);
  t4.$builtinTypeInfo = [O.ConnectionChannel];
  t2 = new O.PassiveChannel(t2, [], t1, null, false, false, t3, t4);
  t1._client$_requesterChannel = t2;
  t3 = t1._onRequestReadyCompleter;
  t4 = new P._Future(0, $.Zone__current, null);
  t4.$builtinTypeInfo = [null];
  t4._asyncComplete$1(t2);
  J.complete$1$x(t3, t4);
  t1._sendL$0();
  return t1;
}, null, null, 8, 0, 216, 100, [], 101, [], 102, [], 103, [], "new HttpClientConnection"]
[0])).call(this,$nn,$nnn,$nnnn,$nnnnn);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "url", {enumerable: true,get: function() { var returned = this.__obj__.url;return returned;},set: function(v) {this.__obj__.url = v;}});Object.defineProperty(this, "clientLink", {enumerable: true,get: function() { var returned = this.__obj__.clientLink;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ClientLink' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.clientLink = v;}});Object.defineProperty(this, "saltL", {enumerable: true,get: function() { var returned = this.__obj__.saltL;return returned;},set: function(v) {this.__obj__.saltL = v;}});Object.defineProperty(this, "saltS", {enumerable: true,get: function() { var returned = this.__obj__.saltS;return returned;},set: function(v) {this.__obj__.saltS = v;}});Object.defineProperty(this, "retryDelay", {enumerable: true,get: function() { var returned = this.__obj__.retryDelay;return returned;},set: function(v) {this.__obj__.retryDelay = v;}});Object.defineProperty(this, "responderChannel", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$responderChannel).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$responderChannel = function() { return v; };}});Object.defineProperty(this, "requesterChannel", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$requesterChannel).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$requesterChannel = function() { return v; };}});Object.defineProperty(this, "onRequesterReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onRequesterReady).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'ConnectionChannel' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onRequesterReady = function() { return v; };}});Object.defineProperty(this, "onDisconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onDisconnected).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onDisconnected = function() { return v; };}});};    Object.defineProperty(module.exports.HttpClientConnection, 'class', {
      get: function() {
        function HttpClientConnection() {
          module.exports.HttpClientConnection.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.connected) { this.__obj__.connected$0 = function(){return (this.connected).call(this);}.bind(this);}if(proto.requireSend) { this.__obj__.requireSend$0 = function(){return (this.requireSend).call(this);}.bind(this);}if(proto.close) { this.__obj__.close$0 = function(){return (this.close).call(this);}.bind(this);}if(proto.retryL) { this.__obj__.retryL$0 = function(){return (this.retryL).call(this);}.bind(this);}if(proto.retryS) { this.__obj__.retryS$0 = function(){return (this.retryS).call(this);}.bind(this);}if(proto.retry) { this.__obj__.retry$0 = function(){return (this.retry).call(this);}.bind(this);}        }

        HttpClientConnection.prototype = Object.create(module.exports.HttpClientConnection.prototype);

        return HttpClientConnection;
      }
    });
    Object.defineProperty(module.exports.HttpClientConnection, "_", {enumerable: false,value:(function HttpClientConnection(__obj__) {var returned = Object.create(module.exports.HttpClientConnection.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "url", {enumerable: true,get: function() { var returned = this.__obj__.url;return returned;},set: function(v) {this.__obj__.url = v;}});Object.defineProperty(this, "clientLink", {enumerable: true,get: function() { var returned = this.__obj__.clientLink;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ClientLink' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.clientLink = v;}});Object.defineProperty(this, "saltL", {enumerable: true,get: function() { var returned = this.__obj__.saltL;return returned;},set: function(v) {this.__obj__.saltL = v;}});Object.defineProperty(this, "saltS", {enumerable: true,get: function() { var returned = this.__obj__.saltS;return returned;},set: function(v) {this.__obj__.saltS = v;}});Object.defineProperty(this, "retryDelay", {enumerable: true,get: function() { var returned = this.__obj__.retryDelay;return returned;},set: function(v) {this.__obj__.retryDelay = v;}});Object.defineProperty(this, "responderChannel", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$responderChannel).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$responderChannel = function() { return v; };}});Object.defineProperty(this, "requesterChannel", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$requesterChannel).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'ConnectionChannel' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$requesterChannel = function() { return v; };}});Object.defineProperty(this, "onRequesterReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onRequesterReady).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'ConnectionChannel' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onRequesterReady = function() { return v; };}});Object.defineProperty(this, "onDisconnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onDisconnected).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onDisconnected = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.HttpClientConnection.prototype.connected = function(){return (this.__obj__.connected$0).call(this.__obj__);};module.exports.HttpClientConnection.prototype.requireSend = function(){return (this.__obj__.requireSend$0).call(this.__obj__);};module.exports.HttpClientConnection.prototype.close = function(){return (this.__obj__.close$0).call(this.__obj__);};module.exports.HttpClientConnection.prototype.retryL = function(){return (this.__obj__.retryL$0).call(this.__obj__);};module.exports.HttpClientConnection.prototype.retryS = function(){return (this.__obj__.retryS$0).call(this.__obj__);};module.exports.HttpClientConnection.prototype.retry = function(){return (this.__obj__.retry$0).call(this.__obj__);};module.exports.getKeyFromFile = function($nn){var returned = (init.globalFunctions.getKeyFromFile).call(init.globalFunctions,$nn);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'PrivateKey' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.HttpClientLink = function HttpClientLink() {var __obj__ = (function($nn,$nnn,$nnnn,_optObj_){_optObj_ = _optObj_ || {};if(!$nnnn.__isWrapped__) { $nnnn = $nnnn.__obj__; }var enableHttp = typeof(_optObj_.enableHttp) === 'undefined' ? false : _optObj_.enableHttp;if(enableHttp !== null) {}var isRequester = typeof(_optObj_.isRequester) === 'undefined' ? true : _optObj_.isRequester;if(isRequester !== null) {}var isResponder = typeof(_optObj_.isResponder) === 'undefined' ? true : _optObj_.isResponder;if(isResponder !== null) {}var nodeProvider = typeof(_optObj_.nodeProvider) === 'undefined' ? null : _optObj_.nodeProvider;if(nodeProvider !== null) {if(!nodeProvider.__isWrapped__) { nodeProvider = nodeProvider.__obj__; }}return (([function(_conn, dsIdPrefix, privateKey, enableHttp, isRequester, isResponder, nodeProvider) {
  var t1, t2, t3, t4, t5, t6, t7, t8;
  t1 = new P._Future(0, $.Zone__current, null);
  t1.$builtinTypeInfo = [L.Requester];
  t1 = new P._AsyncCompleter(t1);
  t1.$builtinTypeInfo = [L.Requester];
  t2 = new P._Future(0, $.Zone__current, null);
  t2.$builtinTypeInfo = [null];
  t2 = new P._AsyncCompleter(t2);
  t2.$builtinTypeInfo = [null];
  t3 = Array(3);
  t3.fixed$length = Array;
  t3.$builtinTypeInfo = [P.String];
  t4 = H.S(dsIdPrefix) + privateKey.get$publicKey().get$qHash64();
  if (isRequester === true) {
    t5 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, L.Request);
    t6 = new L.RemoteNodeCache(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, L.RemoteNode));
    t6 = new L.Requester(t5, t6, null, 1, 1, 0, false, null, null, null, [], [], false);
    t5 = L.SubscribeRequest$(t6, 0);
    t6._subsciption = t5;
    J.$indexSet$ax(t6._requests, 0, t5);
    t5 = t6;
  } else
    t5 = null;
  if (isResponder === true && nodeProvider != null) {
    t6 = P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.Response);
    t7 = new T.Responder(null, [], t6, null, nodeProvider, null, null, null, [], [], false);
    t8 = new T.SubscribeResponse(P.LinkedHashMap_LinkedHashMap(null, null, null, P.String, T.RespSubscribeController), P.LinkedHashMap_LinkedHashMap(null, null, null, P.$int, T.RespSubscribeController), P.LinkedHashSet_LinkedHashSet(null, null, null, T.RespSubscribeController), t7, 0, "initialize");
    t7._responder$_subscription = t8;
    t6.$indexSet(0, 0, t8);
    t6 = t7;
  } else
    t6 = null;
  return new X.HttpClientLink(t1, t2, t4, t5, t6, privateKey, null, null, null, t3, null, null, _conn, enableHttp, 1, 1, false);
}, null, null, 6, 9, 217, 35, 82, 82, 37, 104, [], 105, [], 106, [], 99, [], 86, [], 88, [], 92, [], "new HttpClientLink"]
[0])).call(this,$nn,$nnn,$nnnn,enableHttp,isRequester,isResponder,nodeProvider);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "dsId", {enumerable: true,get: function() { var returned = this.__obj__.dsId;return returned;},set: function(v) {this.__obj__.dsId = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "responder", {enumerable: true,get: function() { var returned = this.__obj__.responder;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Responder' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.responder = v;}});Object.defineProperty(this, "privateKey", {enumerable: true,get: function() { var returned = this.__obj__.privateKey;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'PrivateKey' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.privateKey = v;}});Object.defineProperty(this, "salts", {enumerable: true,get: function() { var returned = this.__obj__.salts;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.salts = v;}});Object.defineProperty(this, "enableHttp", {enumerable: true,get: function() { var returned = this.__obj__.enableHttp;return returned;},set: function(v) {this.__obj__.enableHttp = v;}});Object.defineProperty(this, "onRequesterReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onRequesterReady).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'Requester' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onRequesterReady = function() { return v; };}});Object.defineProperty(this, "onConnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onConnected).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onConnected = function() { return v; };}});Object.defineProperty(this, "nonce", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$nonce).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$nonce = function() { return v; };}});};    Object.defineProperty(module.exports.HttpClientLink, 'class', {
      get: function() {
        function HttpClientLink() {
          module.exports.HttpClientLink.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.updateSalt) { this.__obj__.updateSalt$2 = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.updateSalt).call(this,$nn,$nnn);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.connect) { this.__obj__.connect$0 = function(){var returned = (this.connect).call(this);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.initWebsocket) { this.__obj__.initWebsocket$1 = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {}var returned = (this.initWebsocket).call(this,$nn);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.initHttp) { this.__obj__.initHttp$0 = function(){var returned = (this.initHttp).call(this);returned = dynamicTo(returned);return returned;}.bind(this);}if(proto.close) { this.__obj__.close$0 = function(){return (this.close).call(this);}.bind(this);}        }

        HttpClientLink.prototype = Object.create(module.exports.HttpClientLink.prototype);

        return HttpClientLink;
      }
    });
    Object.defineProperty(module.exports.HttpClientLink, "_", {enumerable: false,value:(function HttpClientLink(__obj__) {var returned = Object.create(module.exports.HttpClientLink.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "dsId", {enumerable: true,get: function() { var returned = this.__obj__.dsId;return returned;},set: function(v) {this.__obj__.dsId = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = this.__obj__.requester;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.requester = v;}});Object.defineProperty(this, "responder", {enumerable: true,get: function() { var returned = this.__obj__.responder;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Responder' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.responder = v;}});Object.defineProperty(this, "privateKey", {enumerable: true,get: function() { var returned = this.__obj__.privateKey;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'PrivateKey' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.privateKey = v;}});Object.defineProperty(this, "salts", {enumerable: true,get: function() { var returned = this.__obj__.salts;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.salts = v;}});Object.defineProperty(this, "enableHttp", {enumerable: true,get: function() { var returned = this.__obj__.enableHttp;return returned;},set: function(v) {this.__obj__.enableHttp = v;}});Object.defineProperty(this, "onRequesterReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onRequesterReady).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'Requester' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onRequesterReady = function() { return v; };}});Object.defineProperty(this, "onConnected", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onConnected).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onConnected = function() { return v; };}});Object.defineProperty(this, "nonce", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$nonce).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$nonce = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.HttpClientLink.prototype.updateSalt = function($nn,$nnn){$nnn = typeof($nnn) === 'undefined' ? null : $nnn;if($nnn !== null) {}var returned = (this.__obj__.updateSalt$2).call(this.__obj__,$nn,$nnn);returned = dynamicFrom(returned);return returned;};module.exports.HttpClientLink.prototype.connect = function(){var returned = (this.__obj__.connect$0).call(this.__obj__);returned = dynamicFrom(returned);return returned;};module.exports.HttpClientLink.prototype.initWebsocket = function($nn){$nn = typeof($nn) === 'undefined' ? null : $nn;if($nn !== null) {}var returned = (this.__obj__.initWebsocket$1).call(this.__obj__,$nn);returned = dynamicFrom(returned);return returned;};module.exports.HttpClientLink.prototype.initHttp = function(){var returned = (this.__obj__.initHttp$0).call(this.__obj__);returned = dynamicFrom(returned);return returned;};module.exports.HttpClientLink.prototype.close = function(){return (this.__obj__.close$0).call(this.__obj__);};module.exports.LinkProvider = function LinkProvider() {var __obj__ = (function($nn,$nnn,_optObj_){_optObj_ = _optObj_ || {};$nn = [].concat($nn);$nn.forEach(function(a, i) {this[i] = a;}, $nn);var autoInitialize = typeof(_optObj_.autoInitialize) === 'undefined' ? true : _optObj_.autoInitialize;if(autoInitialize !== null) {}var command = typeof(_optObj_.command) === 'undefined' ? 'link' : _optObj_.command;if(command !== null) {}var defaultLogLevel = typeof(_optObj_.defaultLogLevel) === 'undefined' ? "INFO" : _optObj_.defaultLogLevel;if(defaultLogLevel !== null) {}var defaultNodes = typeof(_optObj_.defaultNodes) === 'undefined' ? null : _optObj_.defaultNodes;if(defaultNodes !== null) {objEach(defaultNodes, function(a, i) {this[i] = dynamicTo(a);}, defaultNodes);var elms = Object.keys(defaultNodes).reduce(function(arr, key) { arr.push(key); arr.push(defaultNodes[key]); return arr; }, []);defaultNodes = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);}var enableHttp = typeof(_optObj_.enableHttp) === 'undefined' ? true : _optObj_.enableHttp;if(enableHttp !== null) {}var encodePrettyJson = typeof(_optObj_.encodePrettyJson) === 'undefined' ? false : _optObj_.encodePrettyJson;if(encodePrettyJson !== null) {}var exitOnFailure = typeof(_optObj_.exitOnFailure) === 'undefined' ? true : _optObj_.exitOnFailure;if(exitOnFailure !== null) {}var isRequester = typeof(_optObj_.isRequester) === 'undefined' ? false : _optObj_.isRequester;if(isRequester !== null) {}var isResponder = typeof(_optObj_.isResponder) === 'undefined' ? true : _optObj_.isResponder;if(isResponder !== null) {}var loadNodesJson = typeof(_optObj_.loadNodesJson) === 'undefined' ? true : _optObj_.loadNodesJson;if(loadNodesJson !== null) {}var nodeProvider = typeof(_optObj_.nodeProvider) === 'undefined' ? null : _optObj_.nodeProvider;if(nodeProvider !== null) {if(!nodeProvider.__isWrapped__) { nodeProvider = nodeProvider.__obj__; }}var profiles = typeof(_optObj_.profiles) === 'undefined' ? null : _optObj_.profiles;if(profiles !== null) {objEach(profiles, function(a, i) {this[i] = dynamicTo(a);}, profiles);var elms = Object.keys(profiles).reduce(function(arr, key) { arr.push(key); arr.push(profiles[key]); return arr; }, []);profiles = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);}var provider = typeof(_optObj_.provider) === 'undefined' ? null : _optObj_.provider;if(provider !== null) {if(!provider.__isWrapped__) { provider = provider.__obj__; }}var strictOptions = typeof(_optObj_.strictOptions) === 'undefined' ? false : _optObj_.strictOptions;if(strictOptions !== null) {}return (([function(args, prefix, autoInitialize, command, defaultLogLevel, defaultNodes, enableHttp, encodePrettyJson, exitOnFailure, isRequester, isResponder, loadNodesJson, nodeProvider, profiles, provider, strictOptions) {
  var t1 = new X.LinkProvider(null, provider, null, null, null, prefix, args, isRequester, command, isResponder, defaultNodes, profiles, enableHttp, encodePrettyJson, strictOptions, exitOnFailure, loadNodesJson, defaultLogLevel, ".", false, false, false, null, false, false, false, null);
  if (nodeProvider != null)
    t1.provider = nodeProvider;
  if (autoInitialize === true)
    t1.init$0();
  return t1;
}, null, null, 4, 29, 215, 37, 81, 82, 35, 35, 35, 82, 37, 82, 37, 82, 82, 83, 35, 84, [], 85, [], 86, [], 87, [], 88, [], 89, [], 90, [], 91, [], 92, [], 93, [], 94, [], 95, [], 96, [], 97, [], 98, [], 99, [], "new LinkProvider"]
[0])).call(this,$nn,$nnn,autoInitialize,command,defaultLogLevel,defaultNodes,enableHttp,encodePrettyJson,exitOnFailure,isRequester,isResponder,loadNodesJson,nodeProvider,profiles,provider,strictOptions);}).apply(this, arguments);Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "link", {enumerable: true,get: function() { var returned = this.__obj__.link;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'HttpClientLink' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.link = v;}});Object.defineProperty(this, "provider", {enumerable: true,get: function() { var returned = this.__obj__.provider;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'NodeProvider' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.provider = v;}});Object.defineProperty(this, "privateKey", {enumerable: true,get: function() { var returned = this.__obj__.privateKey;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'PrivateKey' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.privateKey = v;}});Object.defineProperty(this, "brokerUrl", {enumerable: true,get: function() { var returned = this.__obj__.brokerUrl;return returned;},set: function(v) {this.__obj__.brokerUrl = v;}});Object.defineProperty(this, "prefix", {enumerable: true,get: function() { var returned = this.__obj__.prefix;return returned;},set: function(v) {this.__obj__.prefix = v;}});Object.defineProperty(this, "args", {enumerable: true,get: function() { var returned = this.__obj__.args;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.args = v;}});Object.defineProperty(this, "isRequester", {enumerable: true,get: function() { var returned = this.__obj__.isRequester;return returned;},set: function(v) {this.__obj__.isRequester = v;}});Object.defineProperty(this, "command", {enumerable: true,get: function() { var returned = this.__obj__.command;return returned;},set: function(v) {this.__obj__.command = v;}});Object.defineProperty(this, "isResponder", {enumerable: true,get: function() { var returned = this.__obj__.isResponder;return returned;},set: function(v) {this.__obj__.isResponder = v;}});Object.defineProperty(this, "defaultNodes", {enumerable: true,get: function() { var returned = this.__obj__.defaultNodes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.defaultNodes = v;}});Object.defineProperty(this, "profiles", {enumerable: true,get: function() { var returned = this.__obj__.profiles;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.profiles = v;}});Object.defineProperty(this, "enableHttp", {enumerable: true,get: function() { var returned = this.__obj__.enableHttp;return returned;},set: function(v) {this.__obj__.enableHttp = v;}});Object.defineProperty(this, "encodePrettyJson", {enumerable: true,get: function() { var returned = this.__obj__.encodePrettyJson;return returned;},set: function(v) {this.__obj__.encodePrettyJson = v;}});Object.defineProperty(this, "strictOptions", {enumerable: true,get: function() { var returned = this.__obj__.strictOptions;return returned;},set: function(v) {this.__obj__.strictOptions = v;}});Object.defineProperty(this, "exitOnFailure", {enumerable: true,get: function() { var returned = this.__obj__.exitOnFailure;return returned;},set: function(v) {this.__obj__.exitOnFailure = v;}});Object.defineProperty(this, "loadNodesJson", {enumerable: true,get: function() { var returned = this.__obj__.loadNodesJson;return returned;},set: function(v) {this.__obj__.loadNodesJson = v;}});Object.defineProperty(this, "defaultLogLevel", {enumerable: true,get: function() { var returned = this.__obj__.defaultLogLevel;return returned;},set: function(v) {this.__obj__.defaultLogLevel = v;}});Object.defineProperty(this, "dslinkJson", {enumerable: true,get: function() { var returned = this.__obj__.dslinkJson;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.dslinkJson = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$requester).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$requester = function() { return v; };}});Object.defineProperty(this, "onRequesterReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onRequesterReady).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'Requester' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onRequesterReady = function() { return v; };}});Object.defineProperty(this, "didInitializationFail", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$didInitializationFail).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$didInitializationFail = function() { return v; };}});Object.defineProperty(this, "isInitialized", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isInitialized).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isInitialized = function() { return v; };}});};    Object.defineProperty(module.exports.LinkProvider, 'class', {
      get: function() {
        function LinkProvider() {
          module.exports.LinkProvider.apply(this, arguments);
          var proto = Object.getPrototypeOf(this);
    if(proto.configure) { this.__obj__.configure$2$argp$optionsHandler = function(_optObj_){_optObj_ = _optObj_ || {};var argp = typeof(_optObj_.argp) === 'undefined' ? null : _optObj_.argp;if(argp !== null) {}var optionsHandler = typeof(_optObj_.optionsHandler) === 'undefined' ? null : _optObj_.optionsHandler;if(optionsHandler !== null) {}return (this.configure).call(thisargp,optionsHandler);}.bind(this);}if(proto.chooseBroker) { this.__obj__.chooseBroker$1 = function($nn){$nn = new module.exports.Stream($nn);var returned = (this.chooseBroker).call(this,$nn);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}if(proto.onValueChange) { this.__obj__.onValueChange$2$cacheLevel = function($nn,_optObj_){_optObj_ = _optObj_ || {};var cacheLevel = typeof(_optObj_.cacheLevel) === 'undefined' ? null : _optObj_.cacheLevel;if(cacheLevel !== null) {}return (this.onValueChange).call(this,$nn,cacheLevel);}.bind(this);}if(proto.syncValue) { this.__obj__.syncValue$1 = function($nn){return (this.syncValue).call(this,$nn);}.bind(this);}if(proto.init) { this.__obj__.init$0 = function(){return (this.init).call(this);}.bind(this);}if(proto.getConfig) { this.__obj__.getConfig$1 = function($nn){return (this.getConfig).call(this,$nn);}.bind(this);}if(proto.connect) { this.__obj__.connect$0 = function(){var returned = (this.connect).call(this);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}if(proto.close) { this.__obj__.close$0 = function(){return (this.close).call(this);}.bind(this);}if(proto.stop) { this.__obj__.stop$0 = function(){return (this.stop).call(this);}.bind(this);}if(proto.save) { this.__obj__.save$0 = function(){return (this.save).call(this);}.bind(this);}if(proto.saveAsync) { this.__obj__.saveAsync$0 = function(){var returned = (this.saveAsync).call(this);var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));returned.then(function(then) {completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});returned = completer.future;return returned;}.bind(this);}if(proto.getNode) { this.__obj__.getNode$1 = function($nn){var returned = (this.getNode).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.addNode) { this.__obj__.addNode$2 = function($nn,$nnn){          if($nnn.constructor.name === '_JsonMap') {
            $nnn = $nnn._original;
            Object.keys($nnn).forEach(function(key) { $nnn[key] = dynamicFrom($nnn[key]); });
          } else {
            var keys = [];
            var values = [];
            if($nnn._strings) {
              objEach($nnn._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        $nnn = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { $nnn[key] = values[index]; });}var returned = (this.addNode).call(this,$nn,$nnn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.removeNode) { this.__obj__.removeNode$1 = function($nn){return (this.removeNode).call(this,$nn);}.bind(this);}if(proto.updateValue) { this.__obj__.updateValue$2 = function($nn,dynamic){dynamic = dynamicFrom(dynamic);return (this.updateValue).call(this,$nn,dynamic);}.bind(this);}if(proto.get) { this.__obj__.$index = function($nn){var returned = (this.get).call(this,$nn);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.bitwiseNegate) { this.__obj__.$not = function(){var returned = (this.bitwiseNegate).call(this);if(!returned.__isWrapped__) { returned = returned.__obj__; }return returned;}.bind(this);}if(proto.val) { this.__obj__.val$2 = function($nn,dynamic){dynamic = typeof(dynamic) === 'undefined' ? null : dynamic;if(dynamic !== null) {dynamic = dynamicFrom(dynamic);}var returned = (this.val).call(this,$nn,dynamic);returned = dynamicTo(returned);return returned;}.bind(this);}        }

        LinkProvider.prototype = Object.create(module.exports.LinkProvider.prototype);

        return LinkProvider;
      }
    });
    Object.defineProperty(module.exports.LinkProvider, "_", {enumerable: false,value:(function LinkProvider(__obj__) {var returned = Object.create(module.exports.LinkProvider.prototype);(function() {Object.defineProperty(this, "__isWrapped__", {enumerable: false,value: true});Object.defineProperty(this, "__obj__", {enumerable: false,value: __obj__});Object.defineProperty(this, "link", {enumerable: true,get: function() { var returned = this.__obj__.link;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'HttpClientLink' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.link = v;}});Object.defineProperty(this, "provider", {enumerable: true,get: function() { var returned = this.__obj__.provider;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'NodeProvider' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.provider = v;}});Object.defineProperty(this, "privateKey", {enumerable: true,get: function() { var returned = this.__obj__.privateKey;if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'PrivateKey' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.privateKey = v;}});Object.defineProperty(this, "brokerUrl", {enumerable: true,get: function() { var returned = this.__obj__.brokerUrl;return returned;},set: function(v) {this.__obj__.brokerUrl = v;}});Object.defineProperty(this, "prefix", {enumerable: true,get: function() { var returned = this.__obj__.prefix;return returned;},set: function(v) {this.__obj__.prefix = v;}});Object.defineProperty(this, "args", {enumerable: true,get: function() { var returned = this.__obj__.args;returned = [].concat(returned);returned.forEach(function(a, i) {}, returned);return returned;},set: function(v) {v = [].concat(v);v.forEach(function(a, i) {this[i] = a;}, v);this.__obj__.args = v;}});Object.defineProperty(this, "isRequester", {enumerable: true,get: function() { var returned = this.__obj__.isRequester;return returned;},set: function(v) {this.__obj__.isRequester = v;}});Object.defineProperty(this, "command", {enumerable: true,get: function() { var returned = this.__obj__.command;return returned;},set: function(v) {this.__obj__.command = v;}});Object.defineProperty(this, "isResponder", {enumerable: true,get: function() { var returned = this.__obj__.isResponder;return returned;},set: function(v) {this.__obj__.isResponder = v;}});Object.defineProperty(this, "defaultNodes", {enumerable: true,get: function() { var returned = this.__obj__.defaultNodes;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.defaultNodes = v;}});Object.defineProperty(this, "profiles", {enumerable: true,get: function() { var returned = this.__obj__.profiles;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.profiles = v;}});Object.defineProperty(this, "enableHttp", {enumerable: true,get: function() { var returned = this.__obj__.enableHttp;return returned;},set: function(v) {this.__obj__.enableHttp = v;}});Object.defineProperty(this, "encodePrettyJson", {enumerable: true,get: function() { var returned = this.__obj__.encodePrettyJson;return returned;},set: function(v) {this.__obj__.encodePrettyJson = v;}});Object.defineProperty(this, "strictOptions", {enumerable: true,get: function() { var returned = this.__obj__.strictOptions;return returned;},set: function(v) {this.__obj__.strictOptions = v;}});Object.defineProperty(this, "exitOnFailure", {enumerable: true,get: function() { var returned = this.__obj__.exitOnFailure;return returned;},set: function(v) {this.__obj__.exitOnFailure = v;}});Object.defineProperty(this, "loadNodesJson", {enumerable: true,get: function() { var returned = this.__obj__.loadNodesJson;return returned;},set: function(v) {this.__obj__.loadNodesJson = v;}});Object.defineProperty(this, "defaultLogLevel", {enumerable: true,get: function() { var returned = this.__obj__.defaultLogLevel;return returned;},set: function(v) {this.__obj__.defaultLogLevel = v;}});Object.defineProperty(this, "dslinkJson", {enumerable: true,get: function() { var returned = this.__obj__.dslinkJson;          if(returned.constructor.name === '_JsonMap') {
            returned = returned._original;
            Object.keys(returned).forEach(function(key) { returned[key] = dynamicFrom(returned[key]); });
          } else {
            var keys = [];
            var values = [];
            if(returned._strings) {
              objEach(returned._strings, function(cell) {
                keys.push(cell.hashMapCellKey);
                values.push(cell.hashMapCellValue);
              });
            }
        returned = {};values.forEach(function(key, i) { values[i] = dynamicFrom(key); });keys.forEach(function(key, index) { returned[key] = values[index]; });}return returned;},set: function(v) {objEach(v, function(a, i) {this[i] = dynamicTo(a);}, v);var elms = Object.keys(v).reduce(function(arr, key) { arr.push(key); arr.push(v[key]); return arr; }, []);v = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);this.__obj__.dslinkJson = v;}});Object.defineProperty(this, "requester", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$requester).call(this.__obj__);}).apply(this, arguments);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'Requester' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;},set: function(v) {if(!v.__isWrapped__) { v = v.__obj__; }this.__obj__.get$requester = function() { return v; };}});Object.defineProperty(this, "onRequesterReady", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$onRequesterReady).call(this.__obj__);}).apply(this, arguments);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {if(!val.__isWrapped__) {var _type = typeof(module.exports[val.constructor.name]) === 'undefined' ? 'Requester' : val.constructor.name;val = module.exports[_type]._(val); }then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;},set: function(v) {var completer = new P._SyncCompleter(new P._Future(0, $.Zone__current, null));v.then(function(then) {if(!then.__isWrapped__) { then = then.__obj__; }completer.complete$1(null, then);}).catch(function(err) {completer.completeError$1(err);});v = completer.future;this.__obj__.get$onRequesterReady = function() { return v; };}});Object.defineProperty(this, "didInitializationFail", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$didInitializationFail).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$didInitializationFail = function() { return v; };}});Object.defineProperty(this, "isInitialized", {enumerable: true,get: function() { var returned = (function(){return (this.__obj__.get$isInitialized).call(this.__obj__);}).apply(this, arguments);return returned;},set: function(v) {this.__obj__.get$isInitialized = function() { return v; };}});}.bind(returned))();return returned;})});module.exports.LinkProvider.prototype.configure = function(_optObj_){_optObj_ = _optObj_ || {};var argp = typeof(_optObj_.argp) === 'undefined' ? null : _optObj_.argp;if(argp !== null) {}var optionsHandler = typeof(_optObj_.optionsHandler) === 'undefined' ? null : _optObj_.optionsHandler;if(optionsHandler !== null) {}return (this.__obj__.configure$2$argp$optionsHandler).call(this.__obj__argp,optionsHandler);};module.exports.LinkProvider.prototype.chooseBroker = function($nn){var returned = (this.__obj__.chooseBroker$1).call(this.__obj__,$nn);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.LinkProvider.prototype.onValueChange = function($nn,_optObj_){_optObj_ = _optObj_ || {};var cacheLevel = typeof(_optObj_.cacheLevel) === 'undefined' ? 1 : _optObj_.cacheLevel;if(cacheLevel !== null) {}var returned = (this.__obj__.onValueChange$2$cacheLevel).call(this.__obj__,$nn,cacheLevel);returned = new module.exports.Stream(returned);return returned;};module.exports.LinkProvider.prototype.syncValue = function($nn){return (this.__obj__.syncValue$1).call(this.__obj__,$nn);};module.exports.LinkProvider.prototype.init = function(){return (this.__obj__.init$0).call(this.__obj__);};module.exports.LinkProvider.prototype.getConfig = function($nn){return (this.__obj__.getConfig$1).call(this.__obj__,$nn);};module.exports.LinkProvider.prototype.connect = function(){var returned = (this.__obj__.connect$0).call(this.__obj__);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.LinkProvider.prototype.close = function(){return (this.__obj__.close$0).call(this.__obj__);};module.exports.LinkProvider.prototype.stop = function(){return (this.__obj__.stop$0).call(this.__obj__);};module.exports.LinkProvider.prototype.save = function(){return (this.__obj__.save$0).call(this.__obj__);};module.exports.LinkProvider.prototype.saveAsync = function(){var returned = (this.__obj__.saveAsync$0).call(this.__obj__);var promise = new $Promise(function(then, error) {returned.then$2$onError({call$1:function(val) {val = dynamicFrom(val);then(val); }}, {call$1: function(err) {error(err);}});});returned = promise;return returned;};module.exports.LinkProvider.prototype.getNode = function($nn){var returned = (this.__obj__.getNode$1).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LinkProvider.prototype.addNode = function($nn,$nnn){objEach($nnn, function(a, i) {this[i] = dynamicTo(a);}, $nnn);var elms = Object.keys($nnn).reduce(function(arr, key) { arr.push(key); arr.push($nnn[key]); return arr; }, []);$nnn = new P.LinkedHashMap_LinkedHashMap$_literal(elms,P.String,null);var returned = (this.__obj__.addNode$2).call(this.__obj__,$nn,$nnn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LinkProvider.prototype.removeNode = function($nn){return (this.__obj__.removeNode$1).call(this.__obj__,$nn);};module.exports.LinkProvider.prototype.updateValue = function($nn,dynamic){dynamic = dynamicTo(dynamic);return (this.__obj__.updateValue$2).call(this.__obj__,$nn,dynamic);};module.exports.LinkProvider.prototype.get = function($nn){var returned = (this.__obj__.$index).call(this.__obj__,$nn);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LinkProvider.prototype.bitwiseNegate = function(){var returned = (this.__obj__.$not).call(this.__obj__);if(!returned.__isWrapped__) {var _type = typeof(module.exports[returned.constructor.name]) === 'undefined' ? 'LocalNode' : returned.constructor.name;returned = module.exports[_type]._(returned); }return returned;};module.exports.LinkProvider.prototype.val = function($nn,dynamic){dynamic = typeof(dynamic) === 'undefined' ? null : dynamic;if(dynamic !== null) {dynamic = dynamicTo(dynamic);}var returned = (this.__obj__.val$2).call(this.__obj__,$nn,dynamic);returned = dynamicFrom(returned);return returned;};
function mixin(dest) {
  var count = 1;
  var length = arguments.length;

  for(; count < length; count++) {
    var arg = arguments[count];

    for(var prop in arg) {
      if(arg.hasOwnProperty(prop)) {
        dest[prop] = arg[prop];
      }
    }
  }
  return dest;
}

module.exports.createNode = function(opt) {
  var extend = module.exports.SimpleNode.class;

  function Node(path) {
    extend.call(this, path);
  }

  Node.prototype = Object.create(extend);

  mixin(Node.prototype, opt);
  return Node;
};

  // END invoke [main].
})();

//# sourceMappingURL=dslink.js.map
